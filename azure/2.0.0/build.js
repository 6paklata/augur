(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.augurReactComponents=e()}}(function(){var e;return function e(t,n,i){function r(a,s){if(!n[a]){if(!t[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[a]={exports:{}};t[a][0].call(u.exports,function(e){var n=t[a][1][e];return r(n?n:e)},u,u.exports,e,t,n,i)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(e,t,n){function i(){function e(e,n){Object.keys(n).forEach(function(i){~t.indexOf(i)||(e[i]=n[i])})}var t=[].slice.call(arguments);return function(){for(var t=[].slice.call(arguments),n=0,i={};n<t.length;n++)e(i,t[n]);return i}}function r(e,t,n){var r=i("name","message","stack","constructor","toJSON"),o=r(t||{});this.message=e||"Unspecified AssertionError",this.showDiff=!1;for(var a in o)this[a]=o[a];if(n=n||arguments.callee,n&&Error.captureStackTrace)Error.captureStackTrace(this,n);else try{throw new Error}catch(e){this.stack=e.stack}}t.exports=r,r.prototype=Object.create(Error.prototype),r.prototype.name="AssertionError",r.prototype.constructor=r,r.prototype.toJSON=function(e){var t=i("constructor","toJSON","stack"),n=t({name:this.name},this);return!1!==e&&this.stack&&(n.stack=this.stack),n}},{}],2:[function(e,t,n){"use strict";function i(){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)l[t]=e[t],c[e.charCodeAt(t)]=t;c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63}function r(e){var t,n,i,r,o,a,s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");o="="===e[s-2]?2:"="===e[s-1]?1:0,a=new u(3*s/4-o),i=o>0?s-4:s;var l=0;for(t=0,n=0;t<i;t+=4,n+=3)r=c[e.charCodeAt(t)]<<18|c[e.charCodeAt(t+1)]<<12|c[e.charCodeAt(t+2)]<<6|c[e.charCodeAt(t+3)],a[l++]=r>>16&255,a[l++]=r>>8&255,a[l++]=255&r;return 2===o?(r=c[e.charCodeAt(t)]<<2|c[e.charCodeAt(t+1)]>>4,a[l++]=255&r):1===o&&(r=c[e.charCodeAt(t)]<<10|c[e.charCodeAt(t+1)]<<4|c[e.charCodeAt(t+2)]>>2,a[l++]=r>>8&255,a[l++]=255&r),a}function o(e){return l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]}function a(e,t,n){for(var i,r=[],a=t;a<n;a+=3)i=(e[a]<<16)+(e[a+1]<<8)+e[a+2],r.push(o(i));return r.join("")}function s(e){for(var t,n=e.length,i=n%3,r="",o=[],s=16383,c=0,u=n-i;c<u;c+=s)o.push(a(e,c,c+s>u?u:c+s));return 1===i?(t=e[n-1],r+=l[t>>2],r+=l[t<<4&63],r+="=="):2===i&&(t=(e[n-2]<<8)+e[n-1],r+=l[t>>10],r+=l[t>>4&63],r+=l[t<<2&63],r+="="),o.push(r),o.join("")}n.toByteArray=r,n.fromByteArray=s;var l=[],c=[],u="undefined"!=typeof Uint8Array?Uint8Array:Array;i()},{}],3:[function(e,t,n){"use strict";function i(){try{var e=new Uint8Array(1);return e.foo=function(){return 42},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}function r(){return a.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,t){if(r()<t)throw new RangeError("Invalid typed array length");return a.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=a.prototype):(null===e&&(e=new a(t)),e.length=t),e}function a(e,t,n){if(!(a.TYPED_ARRAY_SUPPORT||this instanceof a))return new a(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return u(this,e)}return s(this,e,t,n)}function s(e,t,n,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?h(e,t,n,i):"string"==typeof t?d(e,t,n):f(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number')}function c(e,t,n,i){return l(t),t<=0?o(e,t):void 0!==n?"string"==typeof i?o(e,t).fill(n,i):o(e,t).fill(n):o(e,t)}function u(e,t){if(l(t),e=o(e,t<0?0:0|m(t)),!a.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;n++)e[n]=0;return e}function d(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!a.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var i=0|v(t,n);return e=o(e,i),e.write(t,n),e}function p(e,t){var n=0|m(t.length);e=o(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function h(e,t,n,i){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(i||0))throw new RangeError("'length' is out of bounds");return t=void 0===i?new Uint8Array(t,n):new Uint8Array(t,n,i),a.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=a.prototype):e=p(e,t),e}function f(e,t){if(a.isBuffer(t)){var n=0|m(t.length);return e=o(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||K(t.length)?o(e,0):p(e,t);if("Buffer"===t.type&&$(t.data))return p(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function m(e){if(e>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|e}function g(e){return+e!=e&&(e=0),a.alloc(+e)}function v(e,t){if(a.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var i=!1;;)switch(t){case"ascii":case"binary":case"raw":case"raws":return n;case"utf8":case"utf-8":case void 0:return H(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return X(e).length;default:if(i)return H(e).length;t=(""+t).toLowerCase(),i=!0}}function y(e,t,n){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";for(e||(e="utf8");;)switch(e){case"hex":return N(this,t,n);case"utf8":case"utf-8":return _(this,t,n);case"ascii":return O(this,t,n);case"binary":return D(this,t,n);case"base64":return S(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,n);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function b(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function k(e,t,n,i){function r(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}var o=1,a=e.length,s=t.length;if(void 0!==i&&(i=String(i).toLowerCase(),"ucs2"===i||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;o=2,a/=2,s/=2,n/=2}for(var l=-1,c=0;n+c<a;c++)if(r(e,n+c)===r(t,l===-1?0:c-l)){if(l===-1&&(l=c),c-l+1===s)return(n+l)*o}else l!==-1&&(c-=c-l),l=-1;return-1}function x(e,t,n,i){n=Number(n)||0;var r=e.length-n;i?(i=Number(i),i>r&&(i=r)):i=r;var o=t.length;if(o%2!==0)throw new Error("Invalid hex string");i>o/2&&(i=o/2);for(var a=0;a<i;a++){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[n+a]=s}return a}function w(e,t,n,i){return q(H(t,e.length-n),e,n,i)}function E(e,t,n,i){return q(z(t),e,n,i)}function C(e,t,n,i){return E(e,t,n,i)}function P(e,t,n,i){return q(X(t),e,n,i)}function T(e,t,n,i){return q(G(t,e.length-n),e,n,i)}function S(e,t,n){return 0===t&&n===e.length?Q.fromByteArray(e):Q.fromByteArray(e.slice(t,n))}function _(e,t,n){n=Math.min(e.length,n);for(var i=[],r=t;r<n;){var o=e[r],a=null,s=o>239?4:o>223?3:o>191?2:1;if(r+s<=n){var l,c,u,d;switch(s){case 1:o<128&&(a=o);break;case 2:l=e[r+1],128===(192&l)&&(d=(31&o)<<6|63&l,d>127&&(a=d));break;case 3:l=e[r+1],c=e[r+2],128===(192&l)&&128===(192&c)&&(d=(15&o)<<12|(63&l)<<6|63&c,d>2047&&(d<55296||d>57343)&&(a=d));break;case 4:l=e[r+1],c=e[r+2],u=e[r+3],128===(192&l)&&128===(192&c)&&128===(192&u)&&(d=(15&o)<<18|(63&l)<<12|(63&c)<<6|63&u,d>65535&&d<1114112&&(a=d))}}null===a?(a=65533,s=1):a>65535&&(a-=65536,i.push(a>>>10&1023|55296),a=56320|1023&a),i.push(a),r+=s}return M(i)}function M(e){var t=e.length;if(t<=J)return String.fromCharCode.apply(String,e);for(var n="",i=0;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=J));return n}function O(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;r++)i+=String.fromCharCode(127&e[r]);return i}function D(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;r++)i+=String.fromCharCode(e[r]);return i}function N(e,t,n){var i=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>i)&&(n=i);for(var r="",o=t;o<n;o++)r+=W(e[o]);return r}function R(e,t,n){for(var i=e.slice(t,n),r="",o=0;o<i.length;o+=2)r+=String.fromCharCode(i[o]+256*i[o+1]);return r}function A(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function j(e,t,n,i,r,o){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<o)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function L(e,t,n,i){t<0&&(t=65535+t+1);for(var r=0,o=Math.min(e.length-n,2);r<o;r++)e[n+r]=(t&255<<8*(i?r:1-r))>>>8*(i?r:1-r)}function I(e,t,n,i){t<0&&(t=4294967295+t+1);for(var r=0,o=Math.min(e.length-n,4);r<o;r++)e[n+r]=t>>>8*(i?r:3-r)&255}function F(e,t,n,i,r,o){if(n+i>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,t,n,i,r){return r||F(e,t,n,4,3.4028234663852886e38,-3.4028234663852886e38),Z.write(e,t,n,i,23,4),n+4}function B(e,t,n,i,r){return r||F(e,t,n,8,1.7976931348623157e308,-1.7976931348623157e308),Z.write(e,t,n,i,52,8),n+8}function Y(e){if(e=V(e).replace(ee,""),e.length<2)return"";for(;e.length%4!==0;)e+="=";return e}function V(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function W(e){return e<16?"0"+e.toString(16):e.toString(16)}function H(e,t){t=t||1/0;for(var n,i=e.length,r=null,o=[],a=0;a<i;a++){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===i){(t-=3)>-1&&o.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),r=n;continue}n=(r-55296<<10|n-56320)+65536}else r&&(t-=3)>-1&&o.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function z(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}function G(e,t){for(var n,i,r,o=[],a=0;a<e.length&&!((t-=2)<0);a++)n=e.charCodeAt(a),i=n>>8,r=n%256,o.push(r),o.push(i);return o}function X(e){return Q.toByteArray(Y(e))}function q(e,t,n,i){for(var r=0;r<i&&!(r+n>=t.length||r>=e.length);r++)t[r+n]=e[r];return r}function K(e){return e!==e}var Q=e("base64-js"),Z=e("ieee754"),$=e("isarray");n.Buffer=a,n.SlowBuffer=g,n.INSPECT_MAX_BYTES=50,a.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:i(),n.kMaxLength=r(),a.poolSize=8192,a._augment=function(e){return e.__proto__=a.prototype,e},a.from=function(e,t,n){return s(null,e,t,n)},a.TYPED_ARRAY_SUPPORT&&(a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&a[Symbol.species]===a&&Object.defineProperty(a,Symbol.species,{value:null,configurable:!0})),a.alloc=function(e,t,n){return c(null,e,t,n)},a.allocUnsafe=function(e){return u(null,e)},a.allocUnsafeSlow=function(e){return u(null,e)},a.isBuffer=function(e){return!(null==e||!e._isBuffer)},a.compare=function(e,t){if(!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,i=t.length,r=0,o=Math.min(n,i);r<o;++r)if(e[r]!==t[r]){n=e[r],i=t[r];break}return n<i?-1:i<n?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!$(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;n++)t+=e[n].length;var i=a.allocUnsafe(t),r=0;for(n=0;n<e.length;n++){var o=e[n];if(!a.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(i,r),r+=o.length}return i},a.byteLength=v,a.prototype._isBuffer=!0,a.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},a.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},a.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?_(this,0,e):y.apply(this,arguments)},a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){var e="",t=n.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,t).match(/.{2}/g).join(" "),this.length>t&&(e+=" ... ")),"<Buffer "+e+">"},a.prototype.compare=function(e,t,n,i,r){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===r&&(r=this.length),t<0||n>e.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&t>=n)return 0;if(i>=r)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,r>>>=0,this===e)return 0;for(var o=r-i,s=n-t,l=Math.min(o,s),c=this.slice(i,r),u=e.slice(t,n),d=0;d<l;++d)if(c[d]!==u[d]){o=c[d],s=u[d];break}return o<s?-1:s<o?1:0},a.prototype.indexOf=function(e,t,n){if("string"==typeof t?(n=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t>>=0,0===this.length)return-1;if(t>=this.length)return-1;if(t<0&&(t=Math.max(this.length+t,0)),"string"==typeof e&&(e=a.from(e,n)),a.isBuffer(e))return 0===e.length?-1:k(this,e,t,n);if("number"==typeof e)return a.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,e,t):k(this,[e],t,n);throw new TypeError("val must be string, number or Buffer")},a.prototype.includes=function(e,t,n){return this.indexOf(e,t,n)!==-1},a.prototype.write=function(e,t,n,i){if(void 0===t)i="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)i=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t=0|t,isFinite(n)?(n=0|n,void 0===i&&(i="utf8")):(i=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var o=!1;;)switch(i){case"hex":return x(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":return E(this,e,t,n);case"binary":return C(this,e,t,n);case"base64":return P(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),o=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var J=4096;a.prototype.slice=function(e,t){var n=this.length;e=~~e,t=void 0===t?n:~~t,e<0?(e+=n,e<0&&(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<e&&(t=e);var i;if(a.TYPED_ARRAY_SUPPORT)i=this.subarray(e,t),i.__proto__=a.prototype;else{var r=t-e;i=new a(r,(void 0));for(var o=0;o<r;o++)i[o]=this[o+e]}return i},a.prototype.readUIntLE=function(e,t,n){e=0|e,t=0|t,n||A(e,t,this.length);for(var i=this[e],r=1,o=0;++o<t&&(r*=256);)i+=this[e+o]*r;return i},a.prototype.readUIntBE=function(e,t,n){e=0|e,t=0|t,n||A(e,t,this.length);for(var i=this[e+--t],r=1;t>0&&(r*=256);)i+=this[e+--t]*r;return i},a.prototype.readUInt8=function(e,t){return t||A(e,1,this.length),this[e]},a.prototype.readUInt16LE=function(e,t){return t||A(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUInt16BE=function(e,t){return t||A(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUInt32LE=function(e,t){return t||A(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUInt32BE=function(e,t){return t||A(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readIntLE=function(e,t,n){e=0|e,t=0|t,n||A(e,t,this.length);for(var i=this[e],r=1,o=0;++o<t&&(r*=256);)i+=this[e+o]*r;return r*=128,i>=r&&(i-=Math.pow(2,8*t)),i},a.prototype.readIntBE=function(e,t,n){e=0|e,t=0|t,n||A(e,t,this.length);for(var i=t,r=1,o=this[e+--i];i>0&&(r*=256);)o+=this[e+--i]*r;return r*=128,o>=r&&(o-=Math.pow(2,8*t)),o},a.prototype.readInt8=function(e,t){return t||A(e,1,this.length),128&this[e]?(255-this[e]+1)*-1:this[e]},a.prototype.readInt16LE=function(e,t){t||A(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt16BE=function(e,t){t||A(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt32LE=function(e,t){return t||A(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return t||A(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readFloatLE=function(e,t){return t||A(e,4,this.length),Z.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return t||A(e,4,this.length),Z.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return t||A(e,8,this.length),Z.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return t||A(e,8,this.length),Z.read(this,e,!1,52,8)},a.prototype.writeUIntLE=function(e,t,n,i){if(e=+e,t=0|t,n=0|n,!i){var r=Math.pow(2,8*n)-1;j(this,e,t,n,r,0)}var o=1,a=0;for(this[t]=255&e;++a<n&&(o*=256);)this[t+a]=e/o&255;return t+n},a.prototype.writeUIntBE=function(e,t,n,i){if(e=+e,t=0|t,n=0|n,!i){var r=Math.pow(2,8*n)-1;j(this,e,t,n,r,0)}var o=n-1,a=1;for(this[t+o]=255&e;--o>=0&&(a*=256);)this[t+o]=e/a&255;return t+n},a.prototype.writeUInt8=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,1,255,0),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},a.prototype.writeUInt16LE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},a.prototype.writeUInt16BE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},a.prototype.writeUInt32LE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):I(this,e,t,!0),t+4},a.prototype.writeUInt32BE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):I(this,e,t,!1),t+4},a.prototype.writeIntLE=function(e,t,n,i){if(e=+e,t=0|t,!i){var r=Math.pow(2,8*n-1);j(this,e,t,n,r-1,-r)}var o=0,a=1,s=0;for(this[t]=255&e;++o<n&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},a.prototype.writeIntBE=function(e,t,n,i){if(e=+e,t=0|t,!i){var r=Math.pow(2,8*n-1);j(this,e,t,n,r-1,-r)}var o=n-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},a.prototype.writeInt8=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,1,127,-128),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},a.prototype.writeInt16BE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},a.prototype.writeInt32LE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,4,2147483647,-2147483648),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):I(this,e,t,!0),t+4},a.prototype.writeInt32BE=function(e,t,n){return e=+e,t=0|t,n||j(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):I(this,e,t,!1),t+4},a.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},a.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},a.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},a.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},a.prototype.copy=function(e,t,n,i){if(n||(n=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var r,o=i-n;if(this===e&&n<t&&t<i)for(r=o-1;r>=0;r--)e[r+t]=this[r+n];else if(o<1e3||!a.TYPED_ARRAY_SUPPORT)for(r=0;r<o;r++)e[r+t]=this[r+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},a.prototype.fill=function(e,t,n,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!a.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e=255&e);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0);var o;if("number"==typeof e)for(o=t;o<n;o++)this[o]=e;else{var s=a.isBuffer(e)?e:H(new a(e,i).toString()),l=s.length;for(o=0;o<n-t;o++)this[o+t]=s[o%l]}return this};var ee=/[^+\/0-9A-Za-z-_]/g},{"base64-js":2,ieee754:65,isarray:66}],4:[function(e,t,n){t.exports=e("./lib/chai")},{"./lib/chai":5}],5:[function(e,t,n){var i=[],n=t.exports={};n.version="3.5.0",n.AssertionError=e("assertion-error");var r=e("./chai/utils");n.use=function(e){return~i.indexOf(e)||(e(this,r),i.push(e)),this},n.util=r;var o=e("./chai/config");n.config=o;var a=e("./chai/assertion");n.use(a);var s=e("./chai/core/assertions");n.use(s);var l=e("./chai/interface/expect");n.use(l);var c=e("./chai/interface/should");n.use(c);var u=e("./chai/interface/assert");n.use(u)},{"./chai/assertion":6,"./chai/config":7,"./chai/core/assertions":8,"./chai/interface/assert":9,"./chai/interface/expect":10,"./chai/interface/should":11,"./chai/utils":25,"assertion-error":1}],6:[function(e,t,n){var i=e("./config");t.exports=function(e,t){function n(e,t,n){o(this,"ssfi",n||arguments.callee),o(this,"object",e),o(this,"message",t)}var r=e.AssertionError,o=t.flag;e.Assertion=n,Object.defineProperty(n,"includeStack",{get:function(){return i.includeStack},set:function(e){i.includeStack=e}}),Object.defineProperty(n,"showDiff",{get:function(){return i.showDiff},set:function(e){i.showDiff=e}}),n.addProperty=function(e,n){t.addProperty(this.prototype,e,n)},n.addMethod=function(e,n){t.addMethod(this.prototype,e,n)},n.addChainableMethod=function(e,n,i){t.addChainableMethod(this.prototype,e,n,i)},n.overwriteProperty=function(e,n){t.overwriteProperty(this.prototype,e,n)},n.overwriteMethod=function(e,n){t.overwriteMethod(this.prototype,e,n)},n.overwriteChainableMethod=function(e,n,i){t.overwriteChainableMethod(this.prototype,e,n,i)},n.prototype.assert=function(e,n,a,s,l,c){var u=t.test(this,arguments);if(!0!==c&&(c=!1),!0!==i.showDiff&&(c=!1),!u){var n=t.getMessage(this,arguments),d=t.getActual(this,arguments);throw new r(n,{actual:d,expected:s,showDiff:c},i.includeStack?this.assert:o(this,"ssfi"))}},Object.defineProperty(n.prototype,"_obj",{get:function(){return o(this,"object")},set:function(e){o(this,"object",e)}})}},{"./config":7}],7:[function(e,t,n){t.exports={includeStack:!1,showDiff:!0,truncateThreshold:40}},{}],8:[function(e,t,n){t.exports=function(e,t){function n(e,n){n&&M(this,"message",n),e=e.toLowerCase();var i=M(this,"object"),r=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an ":"a ";this.assert(e===t.type(i),"expected #{this} to be "+r+e,"expected #{this} not to be "+r+e)}function i(){M(this,"contains",!0)}function r(e,n){t.expectTypes(this,["array","object","string"]),n&&M(this,"message",n);var i=M(this,"object"),r=!1;if("array"===t.type(i)&&"object"===t.type(e)){for(var o in i)if(t.eql(i[o],e)){r=!0;break}}else if("object"===t.type(e)){if(!M(this,"negate")){for(var a in e)new _(i).property(a,e[a]);return}var s={};for(var a in e)s[a]=i[a];r=t.eql(s,e)}else r=void 0!=i&&~i.indexOf(e);this.assert(r,"expected #{this} to include "+t.inspect(e),"expected #{this} to not include "+t.inspect(e))}function o(){var e=M(this,"object"),t=Object.prototype.toString.call(e);this.assert("[object Arguments]"===t,"expected #{this} to be arguments but got "+t,"expected #{this} to not be arguments")}function a(e,t){t&&M(this,"message",t);var n=M(this,"object");return M(this,"deep")?this.eql(e):void this.assert(e===n,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",e,this._obj,!0)}function s(e,n){n&&M(this,"message",n),this.assert(t.eql(e,M(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",e,this._obj,!0)}function l(e,t){t&&M(this,"message",t);var n=M(this,"object");if(M(this,"doLength")){new _(n,t).to.have.property("length");var i=n.length;this.assert(i>e,"expected #{this} to have a length above #{exp} but got #{act}","expected #{this} to not have a length above #{exp}",e,i)}else this.assert(n>e,"expected #{this} to be above "+e,"expected #{this} to be at most "+e)}function c(e,t){t&&M(this,"message",t);var n=M(this,"object");if(M(this,"doLength")){new _(n,t).to.have.property("length");var i=n.length;this.assert(i>=e,"expected #{this} to have a length at least #{exp} but got #{act}","expected #{this} to have a length below #{exp}",e,i)}else this.assert(n>=e,"expected #{this} to be at least "+e,"expected #{this} to be below "+e)}function u(e,t){t&&M(this,"message",t);var n=M(this,"object");if(M(this,"doLength")){new _(n,t).to.have.property("length");var i=n.length;this.assert(i<e,"expected #{this} to have a length below #{exp} but got #{act}","expected #{this} to not have a length below #{exp}",e,i)}else this.assert(n<e,"expected #{this} to be below "+e,"expected #{this} to be at least "+e)}function d(e,t){t&&M(this,"message",t);var n=M(this,"object");if(M(this,"doLength")){new _(n,t).to.have.property("length");var i=n.length;this.assert(i<=e,"expected #{this} to have a length at most #{exp} but got #{act}","expected #{this} to have a length above #{exp}",e,i)}else this.assert(n<=e,"expected #{this} to be at most "+e,"expected #{this} to be above "+e)}function p(e,n){n&&M(this,"message",n);var i=t.getName(e);this.assert(M(this,"object")instanceof e,"expected #{this} to be an instance of "+i,"expected #{this} to not be an instance of "+i)}function h(e,n){n&&M(this,"message",n);var i=M(this,"object");this.assert(i.hasOwnProperty(e),"expected #{this} to have own property "+t.inspect(e),"expected #{this} to not have own property "+t.inspect(e))}function f(e,n,i){"string"==typeof n&&(i=n,n=null),i&&M(this,"message",i);var r=M(this,"object"),o=Object.getOwnPropertyDescriptor(Object(r),e);o&&n?this.assert(t.eql(n,o),"expected the own property descriptor for "+t.inspect(e)+" on #{this} to match "+t.inspect(n)+", got "+t.inspect(o),"expected the own property descriptor for "+t.inspect(e)+" on #{this} to not match "+t.inspect(n),n,o,!0):this.assert(o,"expected #{this} to have an own property descriptor for "+t.inspect(e),"expected #{this} to not have an own property descriptor for "+t.inspect(e)),M(this,"object",o)}function m(){M(this,"doLength",!0)}function g(e,t){t&&M(this,"message",t);var n=M(this,"object");new _(n,t).to.have.property("length");var i=n.length;this.assert(i==e,"expected #{this} to have a length of #{exp} but got #{act}","expected #{this} to not have a length of #{act}",e,i)}function v(e,t){t&&M(this,"message",t);var n=M(this,"object");this.assert(e.exec(n),"expected #{this} to match "+e,"expected #{this} not to match "+e)}function y(e){var n,i=M(this,"object"),r=!0,o="keys must be given single argument of Array|Object|String, or multiple String arguments";switch(t.type(e)){case"array":if(arguments.length>1)throw new Error(o);break;case"object":if(arguments.length>1)throw new Error(o);e=Object.keys(e);break;default:e=Array.prototype.slice.call(arguments)}if(!e.length)throw new Error("keys required");var a=Object.keys(i),s=e,l=e.length,c=M(this,"any"),u=M(this,"all");if(c||u||(u=!0),c){var d=s.filter(function(e){return~a.indexOf(e)});r=d.length>0}if(u&&(r=e.every(function(e){return~a.indexOf(e)}),M(this,"negate")||M(this,"contains")||(r=r&&e.length==a.length)),l>1){e=e.map(function(e){return t.inspect(e)});var p=e.pop();u&&(n=e.join(", ")+", and "+p),c&&(n=e.join(", ")+", or "+p)}else n=t.inspect(e[0]);n=(l>1?"keys ":"key ")+n,n=(M(this,"contains")?"contain ":"have ")+n,this.assert(r,"expected #{this} to "+n,"expected #{this} to not "+n,s.slice(0).sort(),a.sort(),!0)}function b(e,n,i){i&&M(this,"message",i);var r=M(this,"object");new _(r,i).is.a("function");var o=!1,a=null,s=null,l=null;0===arguments.length?(n=null,e=null):e&&(e instanceof RegExp||"string"==typeof e)?(n=e,e=null):e&&e instanceof Error?(a=e,e=null,n=null):"function"==typeof e?(s=e.prototype.name,(!s||"Error"===s&&e!==Error)&&(s=e.name||(new e).name)):e=null;try{r()}catch(i){if(a)return this.assert(i===a,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}",a instanceof Error?a.toString():a,i instanceof Error?i.toString():i),M(this,"object",i),this;if(e&&(this.assert(i instanceof e,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp} but #{act} was thrown",s,i instanceof Error?i.toString():i),!n))return M(this,"object",i),this;var c="error"===t.type(i)&&"message"in i?i.message:""+i;if(null!=c&&n&&n instanceof RegExp)return this.assert(n.exec(c),"expected #{this} to throw error matching #{exp} but got #{act}","expected #{this} to throw error not matching #{exp}",n,c),M(this,"object",i),this;if(null!=c&&n&&"string"==typeof n)return this.assert(~c.indexOf(n),"expected #{this} to throw error including #{exp} but got #{act}","expected #{this} to throw error not including #{act}",n,c),M(this,"object",i),this;o=!0,l=i}var u="",d=null!==s?s:a?"#{exp}":"an error";o&&(u=" but #{act} was thrown"),this.assert(o===!0,"expected #{this} to throw "+d+u,"expected #{this} to not throw "+d+u,a instanceof Error?a.toString():a,l instanceof Error?l.toString():l),M(this,"object",l)}function k(e,n){n&&M(this,"message",n);var i=M(this,"object"),r=M(this,"itself"),o="function"!==t.type(i)||r?i[e]:i.prototype[e];this.assert("function"==typeof o,"expected #{this} to respond to "+t.inspect(e),"expected #{this} to not respond to "+t.inspect(e))}function x(e,n){n&&M(this,"message",n);var i=M(this,"object"),r=e(i);this.assert(r,"expected #{this} to satisfy "+t.objDisplay(e),"expected #{this} to not satisfy"+t.objDisplay(e),!this.negate,r)}function w(e,n,i){i&&M(this,"message",i);var r=M(this,"object");if(new _(r,i).is.a("number"),"number"!==t.type(e)||"number"!==t.type(n))throw new Error("the arguments to closeTo or approximately must be numbers");this.assert(Math.abs(r-e)<=n,"expected #{this} to be close to "+e+" +/- "+n,"expected #{this} not to be close to "+e+" +/- "+n)}function E(e,t,n){return e.every(function(e){return n?t.some(function(t){return n(e,t)}):t.indexOf(e)!==-1})}function C(e,t){t&&M(this,"message",t);var n=M(this,"object");new _(e).to.be.an("array"),this.assert(e.indexOf(n)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",e,n);
}function P(e,t,n){n&&M(this,"message",n);var i=M(this,"object");new _(e,n).to.have.property(t),new _(i).is.a("function");var r=e[t];i(),this.assert(r!==e[t],"expected ."+t+" to change","expected ."+t+" to not change")}function T(e,t,n){n&&M(this,"message",n);var i=M(this,"object");new _(e,n).to.have.property(t),new _(i).is.a("function");var r=e[t];i(),this.assert(e[t]-r>0,"expected ."+t+" to increase","expected ."+t+" to not increase")}function S(e,t,n){n&&M(this,"message",n);var i=M(this,"object");new _(e,n).to.have.property(t),new _(i).is.a("function");var r=e[t];i(),this.assert(e[t]-r<0,"expected ."+t+" to decrease","expected ."+t+" to not decrease")}var _=e.Assertion,M=(Object.prototype.toString,t.flag);["to","be","been","is","and","has","have","with","that","which","at","of","same"].forEach(function(e){_.addProperty(e,function(){return this})}),_.addProperty("not",function(){M(this,"negate",!0)}),_.addProperty("deep",function(){M(this,"deep",!0)}),_.addProperty("any",function(){M(this,"any",!0),M(this,"all",!1)}),_.addProperty("all",function(){M(this,"all",!0),M(this,"any",!1)}),_.addChainableMethod("an",n),_.addChainableMethod("a",n),_.addChainableMethod("include",r,i),_.addChainableMethod("contain",r,i),_.addChainableMethod("contains",r,i),_.addChainableMethod("includes",r,i),_.addProperty("ok",function(){this.assert(M(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")}),_.addProperty("true",function(){this.assert(!0===M(this,"object"),"expected #{this} to be true","expected #{this} to be false",!this.negate)}),_.addProperty("false",function(){this.assert(!1===M(this,"object"),"expected #{this} to be false","expected #{this} to be true",!!this.negate)}),_.addProperty("null",function(){this.assert(null===M(this,"object"),"expected #{this} to be null","expected #{this} not to be null")}),_.addProperty("undefined",function(){this.assert(void 0===M(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")}),_.addProperty("NaN",function(){this.assert(isNaN(M(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")}),_.addProperty("exist",function(){this.assert(null!=M(this,"object"),"expected #{this} to exist","expected #{this} to not exist")}),_.addProperty("empty",function(){var e=M(this,"object"),t=e;Array.isArray(e)||"string"==typeof object?t=e.length:"object"==typeof e&&(t=Object.keys(e).length),this.assert(!t,"expected #{this} to be empty","expected #{this} not to be empty")}),_.addProperty("arguments",o),_.addProperty("Arguments",o),_.addMethod("equal",a),_.addMethod("equals",a),_.addMethod("eq",a),_.addMethod("eql",s),_.addMethod("eqls",s),_.addMethod("above",l),_.addMethod("gt",l),_.addMethod("greaterThan",l),_.addMethod("least",c),_.addMethod("gte",c),_.addMethod("below",u),_.addMethod("lt",u),_.addMethod("lessThan",u),_.addMethod("most",d),_.addMethod("lte",d),_.addMethod("within",function(e,t,n){n&&M(this,"message",n);var i=M(this,"object"),r=e+".."+t;if(M(this,"doLength")){new _(i,n).to.have.property("length");var o=i.length;this.assert(o>=e&&o<=t,"expected #{this} to have a length within "+r,"expected #{this} to not have a length within "+r)}else this.assert(i>=e&&i<=t,"expected #{this} to be within "+r,"expected #{this} to not be within "+r)}),_.addMethod("instanceof",p),_.addMethod("instanceOf",p),_.addMethod("property",function(e,n,i){i&&M(this,"message",i);var r=!!M(this,"deep"),o=r?"deep property ":"property ",a=M(this,"negate"),s=M(this,"object"),l=r?t.getPathInfo(e,s):null,c=r?l.exists:t.hasProperty(e,s),u=r?l.value:s[e];if(a&&arguments.length>1){if(void 0===u)throw i=null!=i?i+": ":"",new Error(i+t.inspect(s)+" has no "+o+t.inspect(e))}else this.assert(c,"expected #{this} to have a "+o+t.inspect(e),"expected #{this} to not have "+o+t.inspect(e));arguments.length>1&&this.assert(n===u,"expected #{this} to have a "+o+t.inspect(e)+" of #{exp}, but got #{act}","expected #{this} to not have a "+o+t.inspect(e)+" of #{act}",n,u),M(this,"object",u)}),_.addMethod("ownProperty",h),_.addMethod("haveOwnProperty",h),_.addMethod("ownPropertyDescriptor",f),_.addMethod("haveOwnPropertyDescriptor",f),_.addChainableMethod("length",g,m),_.addMethod("lengthOf",g),_.addMethod("match",v),_.addMethod("matches",v),_.addMethod("string",function(e,n){n&&M(this,"message",n);var i=M(this,"object");new _(i,n).is.a("string"),this.assert(~i.indexOf(e),"expected #{this} to contain "+t.inspect(e),"expected #{this} to not contain "+t.inspect(e))}),_.addMethod("keys",y),_.addMethod("key",y),_.addMethod("throw",b),_.addMethod("throws",b),_.addMethod("Throw",b),_.addMethod("respondTo",k),_.addMethod("respondsTo",k),_.addProperty("itself",function(){M(this,"itself",!0)}),_.addMethod("satisfy",x),_.addMethod("satisfies",x),_.addMethod("closeTo",w),_.addMethod("approximately",w),_.addMethod("members",function(e,n){n&&M(this,"message",n);var i=M(this,"object");new _(i).to.be.an("array"),new _(e).to.be.an("array");var r=M(this,"deep")?t.eql:void 0;return M(this,"contains")?this.assert(E(e,i,r),"expected #{this} to be a superset of #{act}","expected #{this} to not be a superset of #{act}",i,e):void this.assert(E(i,e,r)&&E(e,i,r),"expected #{this} to have the same members as #{act}","expected #{this} to not have the same members as #{act}",i,e)}),_.addMethod("oneOf",C),_.addChainableMethod("change",P),_.addChainableMethod("changes",P),_.addChainableMethod("increase",T),_.addChainableMethod("increases",T),_.addChainableMethod("decrease",S),_.addChainableMethod("decreases",S),_.addProperty("extensible",function(){var e,t=M(this,"object");try{e=Object.isExtensible(t)}catch(t){if(!(t instanceof TypeError))throw t;e=!1}this.assert(e,"expected #{this} to be extensible","expected #{this} to not be extensible")}),_.addProperty("sealed",function(){var e,t=M(this,"object");try{e=Object.isSealed(t)}catch(t){if(!(t instanceof TypeError))throw t;e=!0}this.assert(e,"expected #{this} to be sealed","expected #{this} to not be sealed")}),_.addProperty("frozen",function(){var e,t=M(this,"object");try{e=Object.isFrozen(t)}catch(t){if(!(t instanceof TypeError))throw t;e=!0}this.assert(e,"expected #{this} to be frozen","expected #{this} to not be frozen")})}},{}],9:[function(e,t,n){t.exports=function(e,t){var n=e.Assertion,i=t.flag,r=e.assert=function(t,i){var r=new n(null,null,e.assert);r.assert(t,i,"[ negation message unavailable ]")};r.fail=function(t,n,i,o){throw i=i||"assert.fail()",new e.AssertionError(i,{actual:t,expected:n,operator:o},r.fail)},r.isOk=function(e,t){new n(e,t).is.ok},r.isNotOk=function(e,t){new n(e,t).is.not.ok},r.equal=function(e,t,o){var a=new n(e,o,r.equal);a.assert(t==i(a,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",t,e)},r.notEqual=function(e,t,o){var a=new n(e,o,r.notEqual);a.assert(t!=i(a,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",t,e)},r.strictEqual=function(e,t,i){new n(e,i).to.equal(t)},r.notStrictEqual=function(e,t,i){new n(e,i).to.not.equal(t)},r.deepEqual=function(e,t,i){new n(e,i).to.eql(t)},r.notDeepEqual=function(e,t,i){new n(e,i).to.not.eql(t)},r.isAbove=function(e,t,i){new n(e,i).to.be.above(t)},r.isAtLeast=function(e,t,i){new n(e,i).to.be.least(t)},r.isBelow=function(e,t,i){new n(e,i).to.be.below(t)},r.isAtMost=function(e,t,i){new n(e,i).to.be.most(t)},r.isTrue=function(e,t){new n(e,t).is.true},r.isNotTrue=function(e,t){new n(e,t).to.not.equal(!0)},r.isFalse=function(e,t){new n(e,t).is.false},r.isNotFalse=function(e,t){new n(e,t).to.not.equal(!1)},r.isNull=function(e,t){new n(e,t).to.equal(null)},r.isNotNull=function(e,t){new n(e,t).to.not.equal(null)},r.isNaN=function(e,t){new n(e,t).to.be.NaN},r.isNotNaN=function(e,t){new n(e,t).not.to.be.NaN},r.isUndefined=function(e,t){new n(e,t).to.equal(void 0)},r.isDefined=function(e,t){new n(e,t).to.not.equal(void 0)},r.isFunction=function(e,t){new n(e,t).to.be.a("function")},r.isNotFunction=function(e,t){new n(e,t).to.not.be.a("function")},r.isObject=function(e,t){new n(e,t).to.be.a("object")},r.isNotObject=function(e,t){new n(e,t).to.not.be.a("object")},r.isArray=function(e,t){new n(e,t).to.be.an("array")},r.isNotArray=function(e,t){new n(e,t).to.not.be.an("array")},r.isString=function(e,t){new n(e,t).to.be.a("string")},r.isNotString=function(e,t){new n(e,t).to.not.be.a("string")},r.isNumber=function(e,t){new n(e,t).to.be.a("number")},r.isNotNumber=function(e,t){new n(e,t).to.not.be.a("number")},r.isBoolean=function(e,t){new n(e,t).to.be.a("boolean")},r.isNotBoolean=function(e,t){new n(e,t).to.not.be.a("boolean")},r.typeOf=function(e,t,i){new n(e,i).to.be.a(t)},r.notTypeOf=function(e,t,i){new n(e,i).to.not.be.a(t)},r.instanceOf=function(e,t,i){new n(e,i).to.be.instanceOf(t)},r.notInstanceOf=function(e,t,i){new n(e,i).to.not.be.instanceOf(t)},r.include=function(e,t,i){new n(e,i,r.include).include(t)},r.notInclude=function(e,t,i){new n(e,i,r.notInclude).not.include(t)},r.match=function(e,t,i){new n(e,i).to.match(t)},r.notMatch=function(e,t,i){new n(e,i).to.not.match(t)},r.property=function(e,t,i){new n(e,i).to.have.property(t)},r.notProperty=function(e,t,i){new n(e,i).to.not.have.property(t)},r.deepProperty=function(e,t,i){new n(e,i).to.have.deep.property(t)},r.notDeepProperty=function(e,t,i){new n(e,i).to.not.have.deep.property(t)},r.propertyVal=function(e,t,i,r){new n(e,r).to.have.property(t,i)},r.propertyNotVal=function(e,t,i,r){new n(e,r).to.not.have.property(t,i)},r.deepPropertyVal=function(e,t,i,r){new n(e,r).to.have.deep.property(t,i)},r.deepPropertyNotVal=function(e,t,i,r){new n(e,r).to.not.have.deep.property(t,i)},r.lengthOf=function(e,t,i){new n(e,i).to.have.length(t)},r.throws=function(e,t,r,o){("string"==typeof t||t instanceof RegExp)&&(r=t,t=null);var a=new n(e,o).to.throw(t,r);return i(a,"object")},r.doesNotThrow=function(e,t,i){"string"==typeof t&&(i=t,t=null),new n(e,i).to.not.Throw(t)},r.operator=function(e,r,o,a){var s;switch(r){case"==":s=e==o;break;case"===":s=e===o;break;case">":s=e>o;break;case">=":s=e>=o;break;case"<":s=e<o;break;case"<=":s=e<=o;break;case"!=":s=e!=o;break;case"!==":s=e!==o;break;default:throw new Error('Invalid operator "'+r+'"')}var l=new n(s,a);l.assert(!0===i(l,"object"),"expected "+t.inspect(e)+" to be "+r+" "+t.inspect(o),"expected "+t.inspect(e)+" to not be "+r+" "+t.inspect(o))},r.closeTo=function(e,t,i,r){new n(e,r).to.be.closeTo(t,i)},r.approximately=function(e,t,i,r){new n(e,r).to.be.approximately(t,i)},r.sameMembers=function(e,t,i){new n(e,i).to.have.same.members(t)},r.sameDeepMembers=function(e,t,i){new n(e,i).to.have.same.deep.members(t)},r.includeMembers=function(e,t,i){new n(e,i).to.include.members(t)},r.includeDeepMembers=function(e,t,i){new n(e,i).to.include.deep.members(t)},r.oneOf=function(e,t,i){new n(e,i).to.be.oneOf(t)},r.changes=function(e,t,i){new n(e).to.change(t,i)},r.doesNotChange=function(e,t,i){new n(e).to.not.change(t,i)},r.increases=function(e,t,i){new n(e).to.increase(t,i)},r.doesNotIncrease=function(e,t,i){new n(e).to.not.increase(t,i)},r.decreases=function(e,t,i){new n(e).to.decrease(t,i)},r.doesNotDecrease=function(e,t,i){new n(e).to.not.decrease(t,i)},r.ifError=function(e){if(e)throw e},r.isExtensible=function(e,t){new n(e,t).to.be.extensible},r.isNotExtensible=function(e,t){new n(e,t).to.not.be.extensible},r.isSealed=function(e,t){new n(e,t).to.be.sealed},r.isNotSealed=function(e,t){new n(e,t).to.not.be.sealed},r.isFrozen=function(e,t){new n(e,t).to.be.frozen},r.isNotFrozen=function(e,t){new n(e,t).to.not.be.frozen},function e(t,n){return r[n]=r[t],e}("isOk","ok")("isNotOk","notOk")("throws","throw")("throws","Throw")("isExtensible","extensible")("isNotExtensible","notExtensible")("isSealed","sealed")("isNotSealed","notSealed")("isFrozen","frozen")("isNotFrozen","notFrozen")}},{}],10:[function(e,t,n){t.exports=function(e,t){e.expect=function(t,n){return new e.Assertion(t,n)},e.expect.fail=function(t,n,i,r){throw i=i||"expect.fail()",new e.AssertionError(i,{actual:t,expected:n,operator:r},e.expect.fail)}}},{}],11:[function(e,t,n){t.exports=function(e,t){function n(){function t(){return this instanceof String||this instanceof Number||this instanceof Boolean?new i(this.valueOf(),null,t):new i(this,null,t)}function n(e){Object.defineProperty(this,"should",{value:e,enumerable:!0,configurable:!0,writable:!0})}Object.defineProperty(Object.prototype,"should",{set:n,get:t,configurable:!0});var r={};return r.fail=function(t,n,i,o){throw i=i||"should.fail()",new e.AssertionError(i,{actual:t,expected:n,operator:o},r.fail)},r.equal=function(e,t,n){new i(e,n).to.equal(t)},r.Throw=function(e,t,n,r){new i(e,r).to.Throw(t,n)},r.exist=function(e,t){new i(e,t).to.exist},r.not={},r.not.equal=function(e,t,n){new i(e,n).to.not.equal(t)},r.not.Throw=function(e,t,n,r){new i(e,r).to.not.Throw(t,n)},r.not.exist=function(e,t){new i(e,t).to.not.exist},r.throw=r.Throw,r.not.throw=r.not.Throw,r}var i=e.Assertion;e.should=n,e.Should=n}},{}],12:[function(e,t,n){var i=e("./transferFlags"),r=e("./flag"),o=e("../config"),a="__proto__"in Object,s=/^(?:length|name|arguments|caller)$/,l=Function.prototype.call,c=Function.prototype.apply;t.exports=function(e,t,n,u){"function"!=typeof u&&(u=function(){});var d={method:n,chainingBehavior:u};e.__methods||(e.__methods={}),e.__methods[t]=d,Object.defineProperty(e,t,{get:function(){d.chainingBehavior.call(this);var t=function e(){var t=r(this,"ssfi");t&&o.includeStack===!1&&r(this,"ssfi",e);var n=d.method.apply(this,arguments);return void 0===n?this:n};if(a){var n=t.__proto__=Object.create(this);n.call=l,n.apply=c}else{var u=Object.getOwnPropertyNames(e);u.forEach(function(n){if(!s.test(n)){var i=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,i)}})}return i(this,t),t},configurable:!0})}},{"../config":7,"./flag":16,"./transferFlags":32}],13:[function(e,t,n){var i=e("../config"),r=e("./flag");t.exports=function(e,t,n){e[t]=function(){var o=r(this,"ssfi");o&&i.includeStack===!1&&r(this,"ssfi",e[t]);var a=n.apply(this,arguments);return void 0===a?this:a}}},{"../config":7,"./flag":16}],14:[function(e,t,n){var i=e("../config"),r=e("./flag");t.exports=function(e,t,n){Object.defineProperty(e,t,{get:function e(){var t=r(this,"ssfi");t&&i.includeStack===!1&&r(this,"ssfi",e);var o=n.call(this);return void 0===o?this:o},configurable:!0})}},{"../config":7,"./flag":16}],15:[function(e,t,n){var i=e("assertion-error"),r=e("./flag"),o=e("type-detect");t.exports=function(e,t){var e=r(e,"object");t=t.map(function(e){return e.toLowerCase()}),t.sort();var n=t.map(function(e,n){var i=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an":"a",r=t.length>1&&n===t.length-1?"or ":"";return r+i+" "+e}).join(", ");if(!t.some(function(t){return o(e)===t}))throw new i("object tested must be "+n+", but "+o(e)+" given")}},{"./flag":16,"assertion-error":1,"type-detect":216}],16:[function(e,t,n){t.exports=function(e,t,n){var i=e.__flags||(e.__flags=Object.create(null));return 3!==arguments.length?i[t]:void(i[t]=n)}},{}],17:[function(e,t,n){t.exports=function(e,t){return t.length>4?t[4]:e._obj}},{}],18:[function(e,t,n){t.exports=function(e){var t=[];for(var n in e)t.push(n);return t}},{}],19:[function(e,t,n){var i=e("./flag"),r=e("./getActual"),o=(e("./inspect"),e("./objDisplay"));t.exports=function(e,t){var n=i(e,"negate"),a=i(e,"object"),s=t[3],l=r(e,t),c=n?t[2]:t[1],u=i(e,"message");return"function"==typeof c&&(c=c()),c=c||"",c=c.replace(/#\{this\}/g,function(){return o(a)}).replace(/#\{act\}/g,function(){return o(l)}).replace(/#\{exp\}/g,function(){return o(s)}),u?u+": "+c:c}},{"./flag":16,"./getActual":17,"./inspect":26,"./objDisplay":27}],20:[function(e,t,n){t.exports=function(e){if(e.name)return e.name;var t=/^\s?function ([^(]*)\(/.exec(e);return t&&t[1]?t[1]:""}},{}],21:[function(e,t,n){function i(e){var t=e.replace(/([^\\])\[/g,"$1.["),n=t.match(/(\\\.|[^.]+?)+/g);return n.map(function(e){var t=/^\[(\d+)\]$/,n=t.exec(e);return n?{i:parseFloat(n[1])}:{p:e.replace(/\\([.\[\]])/g,"$1")}})}function r(e,t,n){var i,r=t;n=void 0===n?e.length:n;for(var o=0,a=n;o<a;o++){var s=e[o];r?("undefined"!=typeof s.p?r=r[s.p]:"undefined"!=typeof s.i&&(r=r[s.i]),o==a-1&&(i=r)):i=void 0}return i}var o=e("./hasProperty");t.exports=function(e,t){var n=i(e),a=n[n.length-1],s={parent:n.length>1?r(n,t,n.length-1):t,name:a.p||a.i,value:r(n,t)};return s.exists=o(s.name,s.parent),s}},{"./hasProperty":24}],22:[function(e,t,n){var i=e("./getPathInfo");t.exports=function(e,t){var n=i(e,t);return n.value}},{"./getPathInfo":21}],23:[function(e,t,n){t.exports=function(e){function t(e){n.indexOf(e)===-1&&n.push(e)}for(var n=Object.getOwnPropertyNames(e),i=Object.getPrototypeOf(e);null!==i;)Object.getOwnPropertyNames(i).forEach(t),i=Object.getPrototypeOf(i);return n}},{}],24:[function(e,t,n){var i=e("type-detect"),r={number:Number,string:String};t.exports=function(e,t){var n=i(t);return"null"!==n&&"undefined"!==n&&(r[n]&&"object"!=typeof t&&(t=new r[n](t)),e in t)}},{"type-detect":216}],25:[function(e,t,n){var n=t.exports={};n.test=e("./test"),n.type=e("type-detect"),n.expectTypes=e("./expectTypes"),n.getMessage=e("./getMessage"),n.getActual=e("./getActual"),n.inspect=e("./inspect"),n.objDisplay=e("./objDisplay"),n.flag=e("./flag"),n.transferFlags=e("./transferFlags"),n.eql=e("deep-eql"),n.getPathValue=e("./getPathValue"),n.getPathInfo=e("./getPathInfo"),n.hasProperty=e("./hasProperty"),n.getName=e("./getName"),n.addProperty=e("./addProperty"),n.addMethod=e("./addMethod"),n.overwriteProperty=e("./overwriteProperty"),n.overwriteMethod=e("./overwriteMethod"),n.addChainableMethod=e("./addChainableMethod"),n.overwriteChainableMethod=e("./overwriteChainableMethod")},{"./addChainableMethod":12,"./addMethod":13,"./addProperty":14,"./expectTypes":15,"./flag":16,"./getActual":17,"./getMessage":19,"./getName":20,"./getPathInfo":21,"./getPathValue":22,"./hasProperty":24,"./inspect":26,"./objDisplay":27,"./overwriteChainableMethod":28,"./overwriteMethod":29,"./overwriteProperty":30,"./test":31,"./transferFlags":32,"deep-eql":34,"type-detect":216}],26:[function(e,t,n){function i(e,t,n,i){var o={showHidden:t,seen:[],stylize:function(e){return e}};return r(o,e,"undefined"==typeof n?2:n)}function r(e,t,i){if(t&&"function"==typeof t.inspect&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var f=t.inspect(i);return"string"!=typeof f&&(f=r(e,f,i)),f}var b=o(e,t);if(b)return b;if(y(t)){if("outerHTML"in t)return t.outerHTML;try{if(document.xmlVersion){var k=new XMLSerializer;return k.serializeToString(t)}var x="http://www.w3.org/1999/xhtml",w=document.createElementNS(x,"_");return w.appendChild(t.cloneNode(!1)),html=w.innerHTML.replace("><",">"+t.innerHTML+"<"),w.innerHTML="",html}catch(e){}}var E=v(t),C=e.showHidden?g(t):E;if(0===C.length||h(t)&&(1===C.length&&"stack"===C[0]||2===C.length&&"description"===C[0]&&"stack"===C[1])){if("function"==typeof t){var P=m(t),T=P?": "+P:"";return e.stylize("[Function"+T+"]","special")}if(d(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(p(t))return e.stylize(Date.prototype.toUTCString.call(t),"date");if(h(t))return a(t)}var S="",_=!1,M=["{","}"];if(u(t)&&(_=!0,M=["[","]"]),"function"==typeof t){var P=m(t),T=P?": "+P:"";S=" [Function"+T+"]"}if(d(t)&&(S=" "+RegExp.prototype.toString.call(t)),p(t)&&(S=" "+Date.prototype.toUTCString.call(t)),h(t))return a(t);if(0===C.length&&(!_||0==t.length))return M[0]+S+M[1];if(i<0)return d(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special");e.seen.push(t);var O;return O=_?s(e,t,i,E,C):C.map(function(n){return l(e,t,i,E,n,_)}),e.seen.pop(),c(O,S,M)}function o(e,t){switch(typeof t){case"undefined":return e.stylize("undefined","undefined");case"string":var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string");case"number":return 0===t&&1/t===-(1/0)?e.stylize("-0","number"):e.stylize(""+t,"number");case"boolean":return e.stylize(""+t,"boolean")}if(null===t)return e.stylize("null","null")}function a(e){return"["+Error.prototype.toString.call(e)+"]"}function s(e,t,n,i,r){for(var o=[],a=0,s=t.length;a<s;++a)Object.prototype.hasOwnProperty.call(t,String(a))?o.push(l(e,t,n,i,String(a),!0)):o.push("");return r.forEach(function(r){r.match(/^\d+$/)||o.push(l(e,t,n,i,r,!0))}),o}function l(e,t,n,i,o,a){var s,l;if(t.__lookupGetter__&&(t.__lookupGetter__(o)?l=t.__lookupSetter__(o)?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):t.__lookupSetter__(o)&&(l=e.stylize("[Setter]","special"))),i.indexOf(o)<0&&(s="["+o+"]"),l||(e.seen.indexOf(t[o])<0?(l=null===n?r(e,t[o],null):r(e,t[o],n-1),l.indexOf("\n")>-1&&(l=a?l.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+l.split("\n").map(function(e){return"   "+e}).join("\n"))):l=e.stylize("[Circular]","special")),"undefined"==typeof s){if(a&&o.match(/^\d+$/))return l;s=JSON.stringify(""+o),s.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+l}function c(e,t,n){var i=0,r=e.reduce(function(e,t){return i++,t.indexOf("\n")>=0&&i++,e+t.length+1},0);return r>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}function u(e){return Array.isArray(e)||"object"==typeof e&&"[object Array]"===f(e)}function d(e){return"object"==typeof e&&"[object RegExp]"===f(e)}function p(e){return"object"==typeof e&&"[object Date]"===f(e)}function h(e){return"object"==typeof e&&"[object Error]"===f(e)}function f(e){return Object.prototype.toString.call(e)}var m=e("./getName"),g=e("./getProperties"),v=e("./getEnumerableProperties");t.exports=i;var y=function(e){return"object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&1===e.nodeType&&"string"==typeof e.nodeName}},{"./getEnumerableProperties":18,"./getName":20,"./getProperties":23}],27:[function(e,t,n){var i=e("./inspect"),r=e("../config");t.exports=function(e){var t=i(e),n=Object.prototype.toString.call(e);if(r.truncateThreshold&&t.length>=r.truncateThreshold){if("[object Function]"===n)return e.name&&""!==e.name?"[Function: "+e.name+"]":"[Function]";if("[object Array]"===n)return"[ Array("+e.length+") ]";if("[object Object]"===n){var o=Object.keys(e),a=o.length>2?o.splice(0,2).join(", ")+", ...":o.join(", ");return"{ Object ("+a+") }"}return t}return t}},{"../config":7,"./inspect":26}],28:[function(e,t,n){t.exports=function(e,t,n,i){var r=e.__methods[t],o=r.chainingBehavior;r.chainingBehavior=function(){var e=i(o).call(this);return void 0===e?this:e};var a=r.method;r.method=function(){var e=n(a).apply(this,arguments);return void 0===e?this:e}}},{}],29:[function(e,t,n){t.exports=function(e,t,n){var i=e[t],r=function(){return this};i&&"function"==typeof i&&(r=i),e[t]=function(){var e=n(r).apply(this,arguments);return void 0===e?this:e}}},{}],30:[function(e,t,n){t.exports=function(e,t,n){var i=Object.getOwnPropertyDescriptor(e,t),r=function(){};i&&"function"==typeof i.get&&(r=i.get),Object.defineProperty(e,t,{get:function(){var e=n(r).call(this);return void 0===e?this:e},configurable:!0})}},{}],31:[function(e,t,n){var i=e("./flag");t.exports=function(e,t){var n=i(e,"negate"),r=t[0];return n?!r:r}},{"./flag":16}],32:[function(e,t,n){t.exports=function(e,t,n){var i=e.__flags||(e.__flags=Object.create(null));t.__flags||(t.__flags=Object.create(null)),n=3!==arguments.length||n;for(var r in i)(n||"object"!==r&&"ssfi"!==r&&"message"!=r)&&(t.__flags[r]=i[r])}},{}],33:[function(t,n,i){!function(){"use strict";function t(){for(var e=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var o=typeof r;if("string"===o||"number"===o)e.push(r);else if(Array.isArray(r))e.push(t.apply(null,r));else if("object"===o)for(var a in r)i.call(r,a)&&r[a]&&e.push(a)}}return e.join(" ")}var i={}.hasOwnProperty;"undefined"!=typeof n&&n.exports?n.exports=t:"function"==typeof e&&"object"==typeof e.amd&&e.amd?e("classnames",[],function(){return t}):window.classNames=t}()},{}],34:[function(e,t,n){t.exports=e("./lib/eql")},{"./lib/eql":35}],35:[function(e,t,n){function i(e,t,n){return!!r(e,t)||("date"===m(e)?a(e,t):"regexp"===m(e)?s(e,t):f.isBuffer(e)?d(e,t):"arguments"===m(e)?l(e,t,n):!!o(e,t)&&("object"!==m(e)&&"object"!==m(t)&&"array"!==m(e)&&"array"!==m(t)?r(e,t):h(e,t,n)))}function r(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function o(e,t){return m(e)===m(t)}function a(e,t){return"date"===m(t)&&r(e.getTime(),t.getTime())}function s(e,t){return"regexp"===m(t)&&r(e.toString(),t.toString())}function l(e,t,n){return"arguments"===m(t)&&(e=[].slice.call(e),t=[].slice.call(t),i(e,t,n))}function c(e){var t=[];for(var n in e)t.push(n);return t}function u(e,t){if(e.length!==t.length)return!1;for(var n=0,i=!0;n<e.length;n++)if(e[n]!==t[n]){i=!1;break}return i}function d(e,t){return!!f.isBuffer(t)&&u(e,t)}function p(e){return null!==e&&void 0!==e}function h(e,t,n){if(!p(e)||!p(t))return!1;if(e.prototype!==t.prototype)return!1;var r;if(n){for(r=0;r<n.length;r++)if(n[r][0]===e&&n[r][1]===t||n[r][0]===t&&n[r][1]===e)return!0}else n=[];try{var o=c(e),a=c(t)}catch(e){return!1}if(o.sort(),a.sort(),!u(o,a))return!1;n.push([e,t]);var s;for(r=o.length-1;r>=0;r--)if(s=o[r],!i(e[s],t[s],n))return!1;return!0}var f,m=e("type-detect");try{f=e("buffer").Buffer}catch(e){f={},f.isBuffer=function(){return!1}}t.exports=i},{buffer:3,"type-detect":36}],36:[function(e,t,n){t.exports=e("./lib/type")},{"./lib/type":37}],37:[function(e,t,n){function i(e){var t=Object.prototype.toString.call(e);return o[t]?o[t]:null===e?"null":void 0===e?"undefined":e===Object(e)?"object":typeof e}function r(){this.tests={}}var n=t.exports=i,o={"[object Array]":"array","[object RegExp]":"regexp","[object Function]":"function","[object Arguments]":"arguments","[object Date]":"date"};n.Library=r,r.prototype.of=i,r.prototype.define=function(e,t){return 1===arguments.length?this.tests[e]:(this.tests[e]=t,this)},r.prototype.test=function(e,t){if(t===i(e))return!0;var n=this.tests[t];if(n&&"regexp"===i(n))return n.test(e);if(n&&"function"===i(n))return n(e);throw new ReferenceError('Type test "'+t+'" not defined or invalid.')}},{}],38:[function(e,t,n){"use strict";var i=e("./emptyFunction"),r={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:i}},registerDefault:function(){}};t.exports=r},{"./emptyFunction":45}],39:[function(e,t,n){"use strict";var i=!("undefined"==typeof window||!window.document||!window.document.createElement),r={canUseDOM:i,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:i&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:i&&!!window.screen,isInWorker:!i};t.exports=r},{}],40:[function(e,t,n){"use strict";function i(e){return e.replace(r,function(e,t){return t.toUpperCase()})}var r=/-(.)/g;t.exports=i},{}],41:[function(e,t,n){"use strict";function i(e){return r(e.replace(o,"ms-"))}var r=e("./camelize"),o=/^-ms-/;t.exports=i},{"./camelize":40}],42:[function(e,t,n){"use strict";function i(e,t){return!(!e||!t)&&(e===t||!r(e)&&(r(t)?i(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var r=e("./isTextNode");t.exports=i},{"./isTextNode":55}],43:[function(e,t,n){"use strict";function i(e){var t=e.length;if(Array.isArray(e)||"object"!=typeof e&&"function"!=typeof e?a(!1):void 0,"number"!=typeof t?a(!1):void 0,0===t||t-1 in e?void 0:a(!1),"function"==typeof e.callee?a(!1):void 0,e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(e){}for(var n=Array(t),i=0;i<t;i++)n[i]=e[i];return n}function r(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function o(e){return r(e)?Array.isArray(e)?e.slice():i(e):[e]}var a=e("./invariant");t.exports=o},{"./invariant":53}],44:[function(e,t,n){"use strict";function i(e){var t=e.match(u);return t&&t[1].toLowerCase()}function r(e,t){var n=c;c?void 0:l(!1);var r=i(e),o=r&&s(r);if(o){n.innerHTML=o[1]+e+o[2];for(var u=o[0];u--;)n=n.lastChild}else n.innerHTML=e;var d=n.getElementsByTagName("script");d.length&&(t?void 0:l(!1),a(d).forEach(t));for(var p=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return p}var o=e("./ExecutionEnvironment"),a=e("./createArrayFromMixed"),s=e("./getMarkupWrap"),l=e("./invariant"),c=o.canUseDOM?document.createElement("div"):null,u=/^\s*<(\w+)/;t.exports=r},{"./ExecutionEnvironment":39,"./createArrayFromMixed":43,"./getMarkupWrap":49,"./invariant":53}],45:[function(e,t,n){"use strict";function i(e){return function(){return e}}var r=function(){};r.thatReturns=i,r.thatReturnsFalse=i(!1),r.thatReturnsTrue=i(!0),r.thatReturnsNull=i(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(e){return e},t.exports=r},{}],46:[function(e,t,n){"use strict";var i={};t.exports=i},{}],47:[function(e,t,n){"use strict";function i(e){try{e.focus()}catch(e){}}t.exports=i},{}],48:[function(e,t,n){"use strict";function i(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=i},{}],49:[function(e,t,n){"use strict";function i(e){return a?void 0:o(!1),p.hasOwnProperty(e)||(e="*"),s.hasOwnProperty(e)||("*"===e?a.innerHTML="<link />":a.innerHTML="<"+e+"></"+e+">",s[e]=!a.firstChild),s[e]?p[e]:null}var r=e("./ExecutionEnvironment"),o=e("./invariant"),a=r.canUseDOM?document.createElement("div"):null,s={},l=[1,'<select multiple="true">',"</select>"],c=[1,"<table>","</table>"],u=[3,"<table><tbody><tr>","</tr></tbody></table>"],d=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:l,option:l,caption:c,colgroup:c,tbody:c,tfoot:c,thead:c,td:u,th:u},h=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];h.forEach(function(e){p[e]=d,s[e]=!0}),t.exports=i},{"./ExecutionEnvironment":39,"./invariant":53}],50:[function(e,t,n){"use strict";function i(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=i},{}],51:[function(e,t,n){"use strict";function i(e){return e.replace(r,"-$1").toLowerCase()}var r=/([A-Z])/g;t.exports=i},{}],52:[function(e,t,n){"use strict";function i(e){return r(e).replace(o,"-ms-")}var r=e("./hyphenate"),o=/^ms-/;t.exports=i},{"./hyphenate":51}],53:[function(e,t,n){"use strict";function i(e,t,n,i,r,o,a,s){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,i,r,o,a,s],u=0;l=new Error(t.replace(/%s/g,function(){return c[u++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}}t.exports=i},{}],54:[function(e,t,n){"use strict";function i(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}t.exports=i},{}],55:[function(e,t,n){"use strict";function i(e){return r(e)&&3==e.nodeType}var r=e("./isNode");t.exports=i},{"./isNode":54}],56:[function(e,t,n){"use strict";var i=e("./invariant"),r=function(e){var t,n={};e instanceof Object&&!Array.isArray(e)?void 0:i(!1);for(t in e)e.hasOwnProperty(t)&&(n[t]=t);return n};t.exports=r},{"./invariant":53}],57:[function(e,t,n){"use strict";
var i=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t;return null};t.exports=i},{}],58:[function(e,t,n){"use strict";function i(e,t,n){if(!e)return null;var i={};for(var o in e)r.call(e,o)&&(i[o]=t.call(n,e[o],o,e));return i}var r=Object.prototype.hasOwnProperty;t.exports=i},{}],59:[function(e,t,n){"use strict";function i(e){var t={};return function(n){return t.hasOwnProperty(n)||(t[n]=e.call(this,n)),t[n]}}t.exports=i},{}],60:[function(e,t,n){"use strict";var i,r=e("./ExecutionEnvironment");r.canUseDOM&&(i=window.performance||window.msPerformance||window.webkitPerformance),t.exports=i||{}},{"./ExecutionEnvironment":39}],61:[function(e,t,n){"use strict";var i,r=e("./performance");i=r.now?function(){return r.now()}:function(){return Date.now()},t.exports=i},{"./performance":60}],62:[function(e,t,n){"use strict";function i(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function r(e,t){if(i(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!i(e[n[a]],t[n[a]]))return!1;return!0}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],63:[function(e,t,n){"use strict";var i=e("./emptyFunction"),r=i;t.exports=r},{"./emptyFunction":45}],64:[function(e,t,n){!function(e,n){"object"==typeof t&&t.exports?t.exports=e.document?n(e):n:e.Highcharts=n(e)}("undefined"!=typeof window?window:this,function(e){function t(t,n){var i="Highcharts error #"+t+": www.highcharts.com/errors/"+t;if(n)throw Error(i);e.console&&void 0}function n(e,t,n){this.options=t,this.elem=e,this.prop=n}function i(){var e,t,n=arguments,i={},r=function(e,t){var n,i;"object"!=typeof e&&(e={});for(i in t)t.hasOwnProperty(i)&&(n=t[i],e[i]=n&&"object"==typeof n&&"[object Array]"!==Object.prototype.toString.call(n)&&"renderTo"!==i&&"number"!=typeof n.nodeType?r(e[i]||{},n):t[i]);return e};for(n[0]===!0&&(i=n[1],n=Array.prototype.slice.call(n,2)),t=n.length,e=0;e<t;e++)i=r(i,n[e]);return i}function r(e,t){return parseInt(e,t||10)}function o(e){return"string"==typeof e}function a(e){return e&&"object"==typeof e}function s(e){return"[object Array]"===Object.prototype.toString.call(e)}function l(e,t){for(var n=e.length;n--;)if(e[n]===t){e.splice(n,1);break}}function c(e){return e!==A&&null!==e}function u(e,t,n){var i,r;if(o(t))c(n)?e.setAttribute(t,n):e&&e.getAttribute&&(r=e.getAttribute(t));else if(c(t)&&a(t))for(i in t)e.setAttribute(i,t[i]);return r}function d(e){return s(e)?e:[e]}function p(e,t,n){return t?setTimeout(e,t,n):void e.call(0,n)}function h(e,t){be&&!Pe&&t&&t.opacity!==A&&(t.filter="alpha(opacity="+100*t.opacity+")"),Ke(e.style,t)}function f(e,t,n,i,r){return e=oe.createElement(e),t&&Ke(e,t),r&&h(e,{padding:0,border:"none",margin:0}),n&&h(e,n),i&&i.appendChild(e),e}function m(e,t){var n=function(){};return n.prototype=new e,Ke(n.prototype,t),n}function g(e,t,n){return Array((t||2)+1-String(e).length).join(n||0)+e}function v(e){return 6e4*(H&&H(e)||W||0)}function y(e,t){for(var n,i,r,o,a,s="{",l=!1,c=[];(s=e.indexOf(s))!==-1;){if(n=e.slice(0,s),l){for(i=n.split(":"),r=i.shift().split("."),a=r.length,n=t,o=0;o<a;o++)n=n[r[o]];i.length&&(i=i.join(":"),r=/\.([0-9])/,o=F.lang,a=void 0,/f$/.test(i)?(a=(a=i.match(r))?a[1]:-1,null!==n&&(n=re.numberFormat(n,a,o.decimalPoint,i.indexOf(",")>-1?o.thousandsSep:""))):n=U(i,n))}c.push(n),e=e.slice(s+1),s=(l=!l)?"}":"{"}return c.push(e),c.join("")}function b(e){return ae.pow(10,le(ae.log(e)/ae.LN10))}function k(e,t,n,i,r){var o,a=e,n=Ze(n,1);for(o=e/n,t||(t=[1,2,2.5,5,10],i===!1&&(1===n?t=[1,2,5,10]:n<=.1&&(t=[1/n]))),i=0;i<t.length&&(a=t[i],!(r&&a*n>=e||!r&&o<=(t[i]+(t[i+1]||t[i]))/2));i++);return a*=n}function x(e,t){var n,i,r=e.length;for(i=0;i<r;i++)e[i].safeI=i;for(e.sort(function(e,i){return n=t(e,i),0===n?e.safeI-i.safeI:n}),i=0;i<r;i++)delete e[i].safeI}function w(e){for(var t=e.length,n=e[0];t--;)e[t]<n&&(n=e[t]);return n}function E(e){for(var t=e.length,n=e[0];t--;)e[t]>n&&(n=e[t]);return n}function C(e,t){for(var n in e)e[n]&&e[n]!==t&&e[n].destroy&&e[n].destroy(),delete e[n]}function P(e){I||(I=f(Re)),e&&I.appendChild(e),I.innerHTML=""}function T(e,t){return parseFloat(e.toPrecision(t||14))}function S(e,t){t.renderer.globalAnimation=Ze(e,t.animation)}function _(e){return a(e)?i(e):{duration:e?500:0}}function M(){var t=F.global,n=t.useUTC,i=n?"getUTC":"get",r=n?"setUTC":"set";Y=t.Date||e.Date,W=n&&t.timezoneOffset,H=n&&t.getTimezoneOffset,V=function(e,t,i,r,o,a){var s;return n?(s=Y.UTC.apply(0,arguments),s+=v(s)):s=new Y(e,t,Ze(i,1),Ze(r,0),Ze(o,0),Ze(a,0)).getTime(),s},z=i+"Minutes",G=i+"Hours",X=i+"Day",q=i+"Date",K=i+"Month",Q=i+"FullYear",Z=r+"Milliseconds",$=r+"Seconds",J=r+"Minutes",ee=r+"Hours",te=r+"Date",ne=r+"Month",ie=r+"FullYear"}function O(e){return this instanceof O?void this.init(e):new O(e)}function D(){}function N(e,t,n,i){this.axis=e,this.pos=t,this.type=n||"",this.isNew=!0,!n&&!i&&this.addLabel()}function R(e,t,n,i,r){var o=e.chart.inverted;this.axis=e,this.isNegative=n,this.options=t,this.x=i,this.total=null,this.points={},this.stack=r,this.rightCliff=this.leftCliff=0,this.alignOptions={align:t.align||(o?n?"left":"right":"center"),verticalAlign:t.verticalAlign||(o?"middle":n?"bottom":"top"),y:Ze(t.y,o?4:n?14:-6),x:Ze(t.x,o?n?-6:6:0)},this.textAlign=t.textAlign||(o?n?"right":"left":"center")}var A,j,L,I,F,U,B,Y,V,W,H,z,G,X,q,K,Q,Z,$,J,ee,te,ne,ie,re,oe=e.document,ae=Math,se=ae.round,le=ae.floor,ce=ae.ceil,ue=ae.max,de=ae.min,pe=ae.abs,he=ae.cos,fe=ae.sin,me=ae.PI,ge=2*me/360,ve=e.navigator&&e.navigator.userAgent||"",ye=e.opera,be=/(msie|trident|edge)/i.test(ve)&&!ye,ke=oe&&8===oe.documentMode,xe=!be&&/AppleWebKit/.test(ve),we=/Firefox/.test(ve),Ee=/(Mobile|Android|Windows Phone)/.test(ve),Ce="http://www.w3.org/2000/svg",Pe=oe&&oe.createElementNS&&!!oe.createElementNS(Ce,"svg").createSVGRect,Te=we&&parseInt(ve.split("Firefox/")[1],10)<4,Se=oe&&!Pe&&!be&&!!oe.createElement("canvas").getContext,_e={},Me=0,Oe=function(){},De=[],Ne=0,Re="div",Ae=/^[0-9]+$/,je=["plotTop","marginRight","marginBottom","plotLeft"],Le={};re=e.Highcharts?t(16,!0):{win:e},re.seriesTypes=Le;var Ie,Fe,Ue,Be,Ye,Ve,We,He,ze,Ge,Xe,qe=[];n.prototype={dSetter:function(){var e,t=this.paths[0],n=this.paths[1],i=[],r=this.now,o=t.length;if(1===r)i=this.toD;else if(o===n.length&&r<1)for(;o--;)e=parseFloat(t[o]),i[o]=isNaN(e)?t[o]:r*parseFloat(n[o]-e)+e;else i=n;this.elem.attr("d",i)},update:function(){var e=this.elem,t=this.prop,n=this.now,i=this.options.step;this[t+"Setter"]?this[t+"Setter"]():e.attr?e.element&&e.attr(t,n):e.style[t]=n+this.unit,i&&i.call(e,n,this)},run:function(e,t,n){var i,r=this,o=function(e){return!o.stopped&&r.step(e)};this.startTime=+new Y,this.start=e,this.end=t,this.unit=n,this.now=this.start,this.pos=0,o.elem=this.elem,o()&&1===qe.push(o)&&(o.timerId=setInterval(function(){for(i=0;i<qe.length;i++)qe[i]()||qe.splice(i--,1);qe.length||clearInterval(o.timerId)},13))},step:function(e){var t,n=+new Y,i=this.options;t=this.elem;var r,o=i.complete,a=i.duration,s=i.curAnim;if(t.attr&&!t.element)t=!1;else if(e||n>=a+this.startTime){this.now=this.end,this.pos=1,this.update(),e=s[this.prop]=!0;for(r in s)s[r]!==!0&&(e=!1);e&&o&&o.call(t),t=!1}else this.pos=i.easing((n-this.startTime)/a),this.now=this.start+(this.end-this.start)*this.pos,this.update(),t=!0;return t},initPath:function(e,t,n){var i,t=t||"",r=e.shift,o=t.indexOf("C")>-1,a=o?7:3,t=t.split(" "),n=[].concat(n),s=e.isArea,l=s?2:1,c=function(e){for(i=e.length;i--;)("M"===e[i]||"L"===e[i])&&e.splice(i+1,0,e[i+1],e[i+2],e[i+1],e[i+2])};if(o&&(c(t),c(n)),r<=n.length/a&&t.length===n.length)for(;r--;)n=n.slice(0,a).concat(n),s&&(n=n.concat(n.slice(n.length-a)));if(e.shift=0,t.length)for(e=n.length;t.length<e;)r=t.slice().splice(t.length/l-a,a*l),o&&(r[a-6]=r[a-2],r[a-5]=r[a-1]),[].splice.apply(t,[t.length/l,0].concat(r));return[t,n]}};var Ke=re.extend=function(e,t){var n;e||(e={});for(n in t)e[n]=t[n];return e},Qe=re.isNumber=function(e){return"number"==typeof e&&!isNaN(e)},Ze=re.pick=function(){var e,t,n=arguments,i=n.length;for(e=0;e<i;e++)if(t=n[e],t!==A&&null!==t)return t},$e=re.wrap=function(e,t,n){var i=e[t];e[t]=function(){var e=Array.prototype.slice.call(arguments);return e.unshift(i),n.apply(this,e)}};U=function(e,t,n){if(!Qe(t))return F.lang.invalidDate||"";var i,e=Ze(e,"%Y-%m-%d %H:%M:%S"),r=new Y(t-v(t)),o=r[G](),a=r[X](),s=r[q](),l=r[K](),c=r[Q](),u=F.lang,d=u.weekdays,p=u.shortWeekdays,r=Ke({a:p?p[a]:d[a].substr(0,3),A:d[a],d:g(s),e:g(s,2," "),w:a,b:u.shortMonths[l],B:u.months[l],m:g(l+1),y:c.toString().substr(2,2),Y:c,H:g(o),k:o,I:g(o%12||12),l:o%12||12,M:g(r[z]()),p:o<12?"AM":"PM",P:o<12?"am":"pm",S:g(r.getSeconds()),L:g(se(t%1e3),3)},re.dateFormats);for(i in r)for(;e.indexOf("%"+i)!==-1;)e=e.replace("%"+i,"function"==typeof r[i]?r[i](t):r[i]);return n?e.substr(0,1).toUpperCase()+e.substr(1):e},B={millisecond:1,second:1e3,minute:6e4,hour:36e5,day:864e5,week:6048e5,month:24192e5,year:314496e5},re.numberFormat=function(e,t,n,i){var o,a,e=+e||0,t=+t,s=F.lang,l=(e.toString().split(".")[1]||"").length,c=Math.abs(e);return t===-1?t=Math.min(l,20):Qe(t)||(t=2),o=String(r(c.toFixed(t))),a=o.length>3?o.length%3:0,n=Ze(n,s.decimalPoint),i=Ze(i,s.thousandsSep),e=e<0?"-":"",e+=a?o.substr(0,a)+i:"",e+=o.substr(a).replace(/(\d{3})(?=\d)/g,"$1"+i),t&&(i=Math.abs(c-o+Math.pow(10,-Math.max(t,l)-1)),e+=n+i.toFixed(t).slice(2)),e},Math.easeInOutSine=function(e){return-.5*(Math.cos(Math.PI*e)-1)},Ie=function(t,n){var i;return"width"===n?Math.min(t.offsetWidth,t.scrollWidth)-Ie(t,"padding-left")-Ie(t,"padding-right"):"height"===n?Math.min(t.offsetHeight,t.scrollHeight)-Ie(t,"padding-top")-Ie(t,"padding-bottom"):(i=e.getComputedStyle(t,void 0))&&r(i.getPropertyValue(n))},Fe=function(e,t){return t.indexOf?t.indexOf(e):[].indexOf.call(t,e)},Be=function(e,t){return[].filter.call(e,t)},Ve=function(e,t){for(var n=[],i=0,r=e.length;i<r;i++)n[i]=t.call(e[i],e[i],i,e);return n},Ye=function(t){var n=oe.documentElement,t=t.getBoundingClientRect();return{top:t.top+(e.pageYOffset||n.scrollTop)-(n.clientTop||0),left:t.left+(e.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}},Xe=function(e){for(var t=qe.length;t--;)qe[t].elem===e&&(qe[t].stopped=!0)},Ue=function(e,t){return Array.prototype.forEach.call(e,t)},We=function(t,n,i){function r(n){n.target=n.srcElement||e,i.call(t,n)}var o=t.hcEvents=t.hcEvents||{};t.addEventListener?t.addEventListener(n,i,!1):t.attachEvent&&(t.hcEventsIE||(t.hcEventsIE={}),t.hcEventsIE[i.toString()]=r,t.attachEvent("on"+n,r)),o[n]||(o[n]=[]),o[n].push(i)},He=function(e,t,n){function i(t,n){e.removeEventListener?e.removeEventListener(t,n,!1):e.attachEvent&&(n=e.hcEventsIE[n.toString()],e.detachEvent("on"+t,n))}function r(){var n,r,o;if(e.nodeName)for(o in t?(n={},n[t]=!0):n=s,n)if(s[o])for(r=s[o].length;r--;)i(o,s[o][r])}var o,a,s=e.hcEvents;s&&(t?(o=s[t]||[],n?(a=Fe(n,o),a>-1&&(o.splice(a,1),s[t]=o),i(t,n)):(r(),s[t]=[])):(r(),e.hcEvents={}))},ze=function(e,t,n,i){var r;r=e.hcEvents;var o,a,n=n||{};if(oe.createEvent&&(e.dispatchEvent||e.fireEvent))r=oe.createEvent("Events"),r.initEvent(t,!0,!0),r.target=e,Ke(r,n),e.dispatchEvent?e.dispatchEvent(r):e.fireEvent(t,r);else if(r)for(r=r[t]||[],o=r.length,n.preventDefault||(n.preventDefault=function(){n.defaultPrevented=!0}),n.target=e,n.type||(n.type=t),t=0;t<o;t++)a=r[t],a.call(e,n)===!1&&n.preventDefault();i&&!n.defaultPrevented&&i(n)},Ge=function(e,t,r){var o,s,l,c,u="";a(r)||(o=arguments,r={duration:o[2],easing:o[3],complete:o[4]}),Qe(r.duration)||(r.duration=400),r.easing="function"==typeof r.easing?r.easing:Math[r.easing]||Math.easeInOutSine,r.curAnim=i(t);for(c in t)l=new n(e,r,c),s=null,"d"===c?(l.paths=l.initPath(e,e.d,t.d),l.toD=t.d,o=0,s=1):e.attr?o=e.attr(c):(o=parseFloat(Ie(e,c))||0,"opacity"!==c&&(u="px")),s||(s=t[c]),s.match&&s.match("px")&&(s=s.replace(/px/g,"")),l.run(o,s,u)},e.jQuery&&(e.jQuery.fn.highcharts=function(){var e=[].slice.call(arguments);if(this[0])return e[0]?(new(re[o(e[0])?e.shift():"Chart"])(this[0],e[0],e[1]),this):De[u(this[0],"data-highcharts-chart")]}),oe&&!oe.defaultView&&(Ie=function(e,t){var n;return n={width:"clientWidth",height:"clientHeight"}[t],e.style[t]?r(e.style[t]):("opacity"===t&&(t="filter"),n?(e.style.zoom=1,Math.max(e[n]-2*Ie(e,"padding"),0)):(n=e.currentStyle[t.replace(/\-(\w)/g,function(e,t){return t.toUpperCase()})],"filter"===t&&(n=n.replace(/alpha\(opacity=([0-9]+)\)/,function(e,t){return t/100})),""===n?1:r(n)))}),Array.prototype.forEach||(Ue=function(e,t){for(var n=0,i=e.length;n<i;n++)if(t.call(e[n],e[n],n,e)===!1)return n}),Array.prototype.indexOf||(Fe=function(e,t){var n,i=0;if(t)for(n=t.length;i<n;i++)if(t[i]===e)return i;return-1}),Array.prototype.filter||(Be=function(e,t){for(var n=[],i=0,r=e.length;i<r;i++)t(e[i],i)&&n.push(e[i]);return n}),re.Fx=n,re.inArray=Fe,re.each=Ue,re.grep=Be,re.offset=Ye,re.map=Ve,re.addEvent=We,re.removeEvent=He,re.fireEvent=ze,re.animate=Ge,re.animObject=_,re.stop=Xe,F={colors:"#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#2b908f,#f45b5b,#91e8e1".split(","),symbols:["circle","diamond","square","triangle","triangle-down"],lang:{loading:"Loading...",months:"January,February,March,April,May,June,July,August,September,October,November,December".split(","),shortMonths:"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),weekdays:"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),decimalPoint:".",numericSymbols:"k,M,G,T,P,E".split(","),resetZoom:"Reset zoom",resetZoomTitle:"Reset zoom level 1:1",thousandsSep:" "},global:{useUTC:!0,canvasToolsURL:"http://code.highcharts.com/modules/canvas-tools.js",VMLRadialGradientURL:"http://code.highcharts.com/4.2.5/gfx/vml-radial-gradient.png"},chart:{borderColor:"#4572A7",borderRadius:0,defaultSeriesType:"line",ignoreHiddenSeries:!0,spacing:[10,10,15,10],backgroundColor:"#FFFFFF",plotBorderColor:"#C0C0C0",resetZoomButton:{theme:{zIndex:20},position:{align:"right",x:-10,y:10}}},title:{text:"Chart title",align:"center",margin:15,style:{color:"#333333",fontSize:"18px"},widthAdjust:-44},subtitle:{text:"",align:"center",style:{color:"#555555"},widthAdjust:-44},plotOptions:{line:{allowPointSelect:!1,showCheckbox:!1,animation:{duration:1e3},events:{},lineWidth:2,marker:{lineWidth:0,radius:4,lineColor:"#FFFFFF",states:{hover:{enabled:!0,lineWidthPlus:1,radiusPlus:2},select:{fillColor:"#FFFFFF",lineColor:"#000000",lineWidth:2}}},point:{events:{}},dataLabels:{align:"center",formatter:function(){return null===this.y?"":re.numberFormat(this.y,-1)},style:{color:"contrast",fontSize:"11px",fontWeight:"bold",textShadow:"0 0 6px contrast, 0 0 3px contrast"},verticalAlign:"bottom",x:0,y:0,padding:5},cropThreshold:300,pointRange:0,softThreshold:!0,states:{hover:{lineWidthPlus:1,marker:{},halo:{size:10,opacity:.25}},select:{marker:{}}},stickyTracking:!0,turboThreshold:1e3}},labels:{style:{position:"absolute",color:"#3E576F"}},legend:{enabled:!0,align:"center",layout:"horizontal",labelFormatter:function(){return this.name},borderColor:"#909090",borderRadius:0,navigation:{activeColor:"#274b6d",inactiveColor:"#CCC"},shadow:!1,itemStyle:{color:"#333333",fontSize:"12px",fontWeight:"bold"},itemHoverStyle:{color:"#000"},itemHiddenStyle:{color:"#CCC"},itemCheckboxStyle:{position:"absolute",width:"13px",height:"13px"},symbolPadding:5,verticalAlign:"bottom",x:0,y:0,title:{style:{fontWeight:"bold"}}},loading:{labelStyle:{fontWeight:"bold",position:"relative",top:"45%"},style:{position:"absolute",backgroundColor:"white",opacity:.5,textAlign:"center"}},tooltip:{enabled:!0,animation:Pe,backgroundColor:"rgba(249, 249, 249, .85)",borderWidth:1,borderRadius:3,dateTimeLabelFormats:{millisecond:"%A, %b %e, %H:%M:%S.%L",second:"%A, %b %e, %H:%M:%S",minute:"%A, %b %e, %H:%M",hour:"%A, %b %e, %H:%M",day:"%A, %b %e, %Y",week:"Week from %A, %b %e, %Y",month:"%B %Y",year:"%Y"},footerFormat:"",headerFormat:'<span style="font-size: 10px">{point.key}</span><br/>',pointFormat:'<span style="color:{point.color}">●</span> {series.name}: <b>{point.y}</b><br/>',shadow:!0,snap:Ee?25:10,style:{color:"#333333",cursor:"default",fontSize:"12px",padding:"8px",pointerEvents:"none",whiteSpace:"nowrap"}},credits:{enabled:!0,text:"Highcharts.com",href:"http://www.highcharts.com",position:{align:"right",x:-10,verticalAlign:"bottom",y:-5},style:{cursor:"pointer",color:"#909090",fontSize:"9px"}}};var Je=F.plotOptions,et=Je.line;M(),O.prototype={parsers:[{regex:/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,parse:function(e){return[r(e[1]),r(e[2]),r(e[3]),parseFloat(e[4],10)]}},{regex:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,parse:function(e){return[r(e[1],16),r(e[2],16),r(e[3],16),1]}},{regex:/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,parse:function(e){return[r(e[1]),r(e[2]),r(e[3]),1]}}],init:function(e){var t,n,i,r;if((this.input=e)&&e.stops)this.stops=Ve(e.stops,function(e){return new O(e[1])});else for(i=this.parsers.length;i--&&!n;)r=this.parsers[i],(t=r.regex.exec(e))&&(n=r.parse(t));this.rgba=n||[]},get:function(e){var t,n=this.input,r=this.rgba;return this.stops?(t=i(n),t.stops=[].concat(t.stops),Ue(this.stops,function(n,i){t.stops[i]=[t.stops[i][0],n.get(e)]})):t=r&&Qe(r[0])?"rgb"===e||!e&&1===r[3]?"rgb("+r[0]+","+r[1]+","+r[2]+")":"a"===e?r[3]:"rgba("+r.join(",")+")":n,t},brighten:function(e){var t,n=this.rgba;if(this.stops)Ue(this.stops,function(t){t.brighten(e)});else if(Qe(e)&&0!==e)for(t=0;t<3;t++)n[t]+=r(255*e),n[t]<0&&(n[t]=0),n[t]>255&&(n[t]=255);return this},setOpacity:function(e){return this.rgba[3]=e,this}},D.prototype={opacity:1,textProps:"direction,fontSize,fontWeight,fontFamily,fontStyle,color,lineHeight,width,textDecoration,textOverflow,textShadow".split(","),init:function(e,t){this.element="span"===t?f(t):oe.createElementNS(Ce,t),this.renderer=e},animate:function(e,t,n){return t=Ze(t,this.renderer.globalAnimation,!0),Xe(this),t?(n&&(t.complete=n),Ge(this,e,t)):this.attr(e,null,n),this},colorGradient:function(e,t,n){var r,o,a,l,u,d,p,h,f,m,g,v,y=this.renderer,b=[];if(e.linearGradient?o="linearGradient":e.radialGradient&&(o="radialGradient"),o){a=e[o],u=y.gradients,p=e.stops,m=n.radialReference,s(a)&&(e[o]=a={x1:a[0],y1:a[1],x2:a[2],y2:a[3],gradientUnits:"userSpaceOnUse"}),"radialGradient"===o&&m&&!c(a.gradientUnits)&&(l=a,a=i(a,y.getRadialAttr(m,l),{gradientUnits:"userSpaceOnUse"}));for(g in a)"id"!==g&&b.push(g,a[g]);for(g in p)b.push(p[g]);b=b.join(","),u[b]?m=u[b].attr("id"):(a.id=m="highcharts-"+Me++,u[b]=d=y.createElement(o).attr(a).add(y.defs),d.radAttr=l,d.stops=[],Ue(p,function(e){0===e[1].indexOf("rgba")?(r=O(e[1]),h=r.get("rgb"),f=r.get("a")):(h=e[1],f=1),e=y.createElement("stop").attr({offset:e[0],"stop-color":h,"stop-opacity":f}).add(d),d.stops.push(e)})),v="url("+y.url+"#"+m+")",n.setAttribute(t,v),n.gradient=b,e.toString=function(){return v}}},applyTextShadow:function(e){var t,n=this.element,i=e.indexOf("contrast")!==-1,o={},a=this.renderer.forExport,s=a||n.style.textShadow!==A&&!be;i&&(o.textShadow=e=e.replace(/contrast/g,this.renderer.getContrast(n.style.fill))),(xe||a)&&(o.textRendering="geometricPrecision"),s?this.css(o):(this.fakeTS=!0,this.ySetter=this.xSetter,t=[].slice.call(n.getElementsByTagName("tspan")),Ue(e.split(/\s?,\s?/g),function(e){var i,o,a=n.firstChild,e=e.split(" ");i=e[e.length-1],(o=e[e.length-2])&&Ue(t,function(e,t){var s;0===t&&(e.setAttribute("x",n.getAttribute("x")),t=n.getAttribute("y"),e.setAttribute("y",t||0),null===t&&n.setAttribute("y",0)),s=e.cloneNode(1),u(s,{class:"highcharts-text-shadow",fill:i,stroke:i,"stroke-opacity":1/ue(r(o),3),"stroke-width":o,"stroke-linejoin":"round"}),n.insertBefore(s,a)})}))},attr:function(e,t,n){var i,r,o,a=this.element,s=this;if("string"==typeof e&&t!==A&&(i=e,e={},e[i]=t),"string"==typeof e)s=(this[e+"Getter"]||this._defaultGetter).call(this,e,a);else{for(i in e)t=e[i],o=!1,this.symbolName&&/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(i)&&(r||(this.symbolAttr(e),r=!0),o=!0),!this.rotation||"x"!==i&&"y"!==i||(this.doTransform=!0),o||(o=this[i+"Setter"]||this._defaultSetter,o.call(this,t,i,a),this.shadows&&/^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(i)&&this.updateShadows(i,t,o));this.doTransform&&(this.updateTransform(),this.doTransform=!1)}return n&&n(),s},updateShadows:function(e,t,n){for(var i=this.shadows,r=i.length;r--;)n.call(i[r],"height"===e?Math.max(t-(i[r].cutHeight||0),0):"d"===e?this.d:t,e,i[r])},addClass:function(e){var t=this.element,n=u(t,"class")||"";return n.indexOf(e)===-1&&u(t,"class",n+" "+e),this},symbolAttr:function(e){var t=this;Ue("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","),function(n){t[n]=Ze(e[n],t[n])}),t.attr({d:t.renderer.symbols[t.symbolName](t.x,t.y,t.width,t.height,t)})},clip:function(e){return this.attr("clip-path",e?"url("+this.renderer.url+"#"+e.id+")":"none")},crisp:function(e){var t,n,i={},r=this.strokeWidth||0;n=se(r)%2/2,e.x=le(e.x||this.x||0)+n,e.y=le(e.y||this.y||0)+n,e.width=le((e.width||this.width||0)-2*n),e.height=le((e.height||this.height||0)-2*n),e.strokeWidth=r;for(t in e)this[t]!==e[t]&&(this[t]=i[t]=e[t]);return i},css:function(e){var t,n,i=this.styles,o={},a=this.element,s="";if(t=!i,e&&e.color&&(e.fill=e.color),i)for(n in e)e[n]!==i[n]&&(o[n]=e[n],t=!0);if(t){if(t=this.textWidth=e&&e.width&&"text"===a.nodeName.toLowerCase()&&r(e.width)||this.textWidth,i&&(e=Ke(i,o)),this.styles=e,t&&(Se||!Pe&&this.renderer.forExport)&&delete e.width,be&&!Pe)h(this.element,e);else{i=function(e,t){return"-"+t.toLowerCase()};for(n in e)s+=n.replace(/([A-Z])/g,i)+":"+e[n]+";";u(a,"style",s)}t&&this.added&&this.renderer.buildText(this)}return this},on:function(e,t){var n=this,i=n.element;return L&&"click"===e?(i.ontouchstart=function(e){n.touchEventFired=Y.now(),e.preventDefault(),t.call(i,e)},i.onclick=function(e){(ve.indexOf("Android")===-1||Y.now()-(n.touchEventFired||0)>1100)&&t.call(i,e)}):i["on"+e]=t,this},setRadialReference:function(e){var t=this.renderer.gradients[this.element.gradient];return this.element.radialReference=e,t&&t.radAttr&&t.animate(this.renderer.getRadialAttr(e,t.radAttr)),this},translate:function(e,t){return this.attr({translateX:e,translateY:t})},invert:function(){return this.inverted=!0,this.updateTransform(),this},updateTransform:function(){var e=this.translateX||0,t=this.translateY||0,n=this.scaleX,i=this.scaleY,r=this.inverted,o=this.rotation,a=this.element;r&&(e+=this.attr("width"),t+=this.attr("height")),e=["translate("+e+","+t+")"],r?e.push("rotate(90) scale(-1,1)"):o&&e.push("rotate("+o+" "+(a.getAttribute("x")||0)+" "+(a.getAttribute("y")||0)+")"),(c(n)||c(i))&&e.push("scale("+Ze(n,1)+" "+Ze(i,1)+")"),e.length&&a.setAttribute("transform",e.join(" "))},toFront:function(){var e=this.element;return e.parentNode.appendChild(e),this},align:function(e,t,n){var i,r,a,s,c={};return r=this.renderer,a=r.alignedObjects,e?(this.alignOptions=e,this.alignByTranslate=t,(!n||o(n))&&(this.alignTo=i=n||"renderer",l(a,this),a.push(this),n=null)):(e=this.alignOptions,t=this.alignByTranslate,i=this.alignTo),n=Ze(n,r[i],r),i=e.align,r=e.verticalAlign,a=(n.x||0)+(e.x||0),s=(n.y||0)+(e.y||0),"right"!==i&&"center"!==i||(a+=(n.width-(e.width||0))/{right:1,center:2}[i]),c[t?"translateX":"x"]=se(a),"bottom"!==r&&"middle"!==r||(s+=(n.height-(e.height||0))/({bottom:1,middle:2}[r]||1)),c[t?"translateY":"y"]=se(s),this[this.placed?"animate":"attr"](c),this.placed=!0,this.alignAttr=c,this},getBBox:function(e,t){var n,i,r,o,a=this.renderer,s=this.element,l=this.styles;i=this.textStr;var c,u,d,p=s.style,h=a.cache,f=a.cacheKeys;if(r=Ze(t,this.rotation),o=r*ge,i!==A&&(d=["",r||0,l&&l.fontSize,s.style.width].join(","),d=""===i||Ae.test(i)?"num:"+i.toString().length+d:i+d),d&&!e&&(n=h[d]),!n){if(s.namespaceURI===Ce||a.forExport){try{u=this.fakeTS&&function(e){Ue(s.querySelectorAll(".highcharts-text-shadow"),function(t){t.style.display=e})},we&&p.textShadow?(c=p.textShadow,p.textShadow=""):u&&u("none"),n=s.getBBox?Ke({},s.getBBox()):{width:s.offsetWidth,height:s.offsetHeight},c?p.textShadow=c:u&&u("")}catch(e){}(!n||n.width<0)&&(n={width:0,height:0})}else n=this.htmlGetBBox();if(a.isSVG&&(a=n.width,i=n.height,be&&l&&"11px"===l.fontSize&&"16.9"===i.toPrecision(3)&&(n.height=i=14),r&&(n.width=pe(i*fe(o))+pe(a*he(o)),n.height=pe(i*he(o))+pe(a*fe(o)))),d){for(;f.length>250;)delete h[f.shift()];h[d]||f.push(d),h[d]=n}}return n},show:function(e){return this.attr({visibility:e?"inherit":"visible"})},hide:function(){return this.attr({visibility:"hidden"})},fadeOut:function(e){var t=this;t.animate({opacity:0},{duration:e||150,complete:function(){t.attr({y:-9999})}})},add:function(e){var t,n=this.renderer,i=this.element;return e&&(this.parentGroup=e),this.parentInverted=e&&e.inverted,void 0!==this.textStr&&n.buildText(this),this.added=!0,(!e||e.handleZ||this.zIndex)&&(t=this.zIndexSetter()),t||(e?e.element:n.box).appendChild(i),this.onAdd&&this.onAdd(),this},safeRemoveChild:function(e){var t=e.parentNode;t&&t.removeChild(e)},destroy:function(){var e,t,n=this,i=n.element||{},r=n.shadows,o=n.renderer.isSVG&&"SPAN"===i.nodeName&&n.parentGroup;if(i.onclick=i.onmouseout=i.onmouseover=i.onmousemove=i.point=null,Xe(n),n.clipPath&&(n.clipPath=n.clipPath.destroy()),n.stops){for(t=0;t<n.stops.length;t++)n.stops[t]=n.stops[t].destroy();n.stops=null}for(n.safeRemoveChild(i),r&&Ue(r,function(e){n.safeRemoveChild(e)});o&&o.div&&0===o.div.childNodes.length;)i=o.parentGroup,n.safeRemoveChild(o.div),delete o.div,o=i;n.alignTo&&l(n.renderer.alignedObjects,n);for(e in n)delete n[e];return null},shadow:function(e,t,n){var i,r,o,a,s,l,c=[],d=this.element;if(e){for(a=Ze(e.width,3),s=(e.opacity||.15)/a,l=this.parentInverted?"(-1,-1)":"("+Ze(e.offsetX,1)+", "+Ze(e.offsetY,1)+")",i=1;i<=a;i++)r=d.cloneNode(0),o=2*a+1-2*i,u(r,{isShadow:"true",stroke:e.color||"black","stroke-opacity":s*i,"stroke-width":o,transform:"translate"+l,fill:"none"}),n&&(u(r,"height",ue(u(r,"height")-o,0)),r.cutHeight=o),t?t.element.appendChild(r):d.parentNode.insertBefore(r,d),c.push(r);this.shadows=c}return this},xGetter:function(e){return"circle"===this.element.nodeName&&(e={x:"cx",y:"cy"}[e]||e),this._defaultGetter(e)},_defaultGetter:function(e){return e=Ze(this[e],this.element?this.element.getAttribute(e):null,0),/^[\-0-9\.]+$/.test(e)&&(e=parseFloat(e)),e},dSetter:function(e,t,n){e&&e.join&&(e=e.join(" ")),/(NaN| {2}|^$)/.test(e)&&(e="M 0 0"),n.setAttribute(t,e),this[t]=e},dashstyleSetter:function(e){var t,n=this["stroke-width"];if("inherit"===n&&(n=1),e=e&&e.toLowerCase()){for(e=e.replace("shortdashdotdot","3,1,1,1,1,1,").replace("shortdashdot","3,1,1,1").replace("shortdot","1,1,").replace("shortdash","3,1,").replace("longdash","8,3,").replace(/dot/g,"1,3,").replace("dash","4,3,").replace(/,$/,"").split(","),t=e.length;t--;)e[t]=r(e[t])*n;e=e.join(",").replace(/NaN/g,"none"),this.element.setAttribute("stroke-dasharray",e)}},alignSetter:function(e){this.element.setAttribute("text-anchor",{left:"start",center:"middle",right:"end"}[e])},opacitySetter:function(e,t,n){this[t]=e,n.setAttribute(t,e)},titleSetter:function(e){var t=this.element.getElementsByTagName("title")[0];t||(t=oe.createElementNS(Ce,"title"),this.element.appendChild(t)),t.firstChild&&t.removeChild(t.firstChild),t.appendChild(oe.createTextNode(String(Ze(e),"").replace(/<[^>]*>/g,"")))},textSetter:function(e){e!==this.textStr&&(delete this.bBox,this.textStr=e,this.added&&this.renderer.buildText(this))},fillSetter:function(e,t,n){"string"==typeof e?n.setAttribute(t,e):e&&this.colorGradient(e,t,n)},visibilitySetter:function(e,t,n){"inherit"===e?n.removeAttribute(t):n.setAttribute(t,e)},zIndexSetter:function(e,t){var n,i,o,a=this.renderer,s=this.parentGroup,a=(s||a).element||a.box,l=this.element;n=this.added;var u;if(c(e)&&(l.zIndex=e,e=+e,this[t]===e&&(n=!1),this[t]=e),n){for((e=this.zIndex)&&s&&(s.handleZ=!0),s=a.childNodes,u=0;u<s.length&&!o;u++)n=s[u],i=n.zIndex,n!==l&&(r(i)>e||!c(e)&&c(i))&&(a.insertBefore(l,n),o=!0);o||a.appendChild(l)}return o},_defaultSetter:function(e,t,n){n.setAttribute(t,e)}},D.prototype.yGetter=D.prototype.xGetter,D.prototype.translateXSetter=D.prototype.translateYSetter=D.prototype.rotationSetter=D.prototype.verticalAlignSetter=D.prototype.scaleXSetter=D.prototype.scaleYSetter=function(e,t){this[t]=e,this.doTransform=!0},D.prototype["stroke-widthSetter"]=D.prototype.strokeSetter=function(e,t,n){this[t]=e,this.stroke&&this["stroke-width"]?(this.strokeWidth=this["stroke-width"],D.prototype.fillSetter.call(this,this.stroke,"stroke",n),n.setAttribute("stroke-width",this["stroke-width"]),this.hasStroke=!0):"stroke-width"===t&&0===e&&this.hasStroke&&(n.removeAttribute("stroke"),this.hasStroke=!1)};var tt=function(){this.init.apply(this,arguments)};tt.prototype={Element:D,init:function(t,n,i,r,o,a){var s,r=this.createElement("svg").attr({version:"1.1"}).css(this.getStyle(r));s=r.element,t.appendChild(s),t.innerHTML.indexOf("xmlns")===-1&&u(s,"xmlns",Ce),this.isSVG=!0,this.box=s,this.boxWrapper=r,this.alignedObjects=[],this.url=(we||xe)&&oe.getElementsByTagName("base").length?e.location.href.replace(/#.*?$/,"").replace(/([\('\)])/g,"\\$1").replace(/ /g,"%20"):"",this.createElement("desc").add().element.appendChild(oe.createTextNode("Created with Highcharts 4.2.5")),this.defs=this.createElement("defs").add(),this.allowHTML=a,this.forExport=o,this.gradients={},this.cache={},this.cacheKeys=[],this.imgCount=0,this.setSize(n,i,!1);var l;we&&t.getBoundingClientRect&&(this.subPixelFix=n=function(){h(t,{left:0,top:0}),l=t.getBoundingClientRect(),h(t,{left:ce(l.left)-l.left+"px",top:ce(l.top)-l.top+"px"})},n(),We(e,"resize",n))},getStyle:function(e){return this.style=Ke({fontFamily:'"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',fontSize:"12px"},e)},isHidden:function(){return!this.boxWrapper.getBBox().width},destroy:function(){var t=this.defs;return this.box=null,this.boxWrapper=this.boxWrapper.destroy(),C(this.gradients||{}),this.gradients=null,t&&(this.defs=t.destroy()),this.subPixelFix&&He(e,"resize",this.subPixelFix),this.alignedObjects=null},createElement:function(e){var t=new this.Element;return t.init(this,e),t},draw:function(){},getRadialAttr:function(e,t){return{cx:e[0]-e[2]/2+t.cx*e[2],cy:e[1]-e[2]/2+t.cy*e[2],r:t.r*e[2]}},buildText:function(e){for(var t,n,i,o=e.element,a=this,s=a.forExport,l=Ze(e.textStr,"").toString(),c=l.indexOf("<")!==-1,d=o.childNodes,p=u(o,"x"),f=e.styles,m=e.textWidth,g=f&&f.lineHeight,v=f&&f.textShadow,y=f&&"ellipsis"===f.textOverflow,b=d.length,k=m&&!e.added&&this.box,x=function(e){return g?r(g):a.fontMetrics(/(px|em)$/.test(e&&e.style.fontSize)?e.style.fontSize:f&&f.fontSize||a.style.fontSize||12,e).h},w=function(e){return e.replace(/&lt;/g,"<").replace(/&gt;/g,">")};b--;)o.removeChild(d[b]);c||v||y||l.indexOf(" ")!==-1?(t=/<.*style="([^"]+)".*>/,n=/<.*href="(http[^"]+)".*>/,k&&k.appendChild(o),l=c?l.replace(/<(b|strong)>/g,'<span style="font-weight:bold">').replace(/<(i|em)>/g,'<span style="font-style:italic">').replace(/<a/g,"<span").replace(/<\/(b|strong|i|em|a)>/g,"</span>").split(/<br.*?>/g):[l],l=Be(l,function(e){return""!==e}),Ue(l,function(r,l){var c,d=0,r=r.replace(/^\s+|\s+$/g,"").replace(/<span/g,"|||<span").replace(/<\/span>/g,"</span>|||");c=r.split("|||"),Ue(c,function(r){if(""!==r||1===c.length){var g,v={},b=oe.createElementNS(Ce,"tspan");if(t.test(r)&&(g=r.match(t)[1].replace(/(;| |^)color([ :])/,"$1fill$2"),u(b,"style",g)),n.test(r)&&!s&&(u(b,"onclick",'location.href="'+r.match(n)[1]+'"'),h(b,{cursor:"pointer"})),r=w(r.replace(/<(.|\n)*?>/g,"")||" ")," "!==r){if(b.appendChild(oe.createTextNode(r)),d?v.dx=0:l&&null!==p&&(v.x=p),u(b,v),o.appendChild(b),!d&&l&&(!Pe&&s&&h(b,{display:"block"}),u(b,"dy",x(b))),m){for(var k,E,v=r.replace(/([^\^])-/g,"$1- ").split(" "),C=c.length>1||l||v.length>1&&"nowrap"!==f.whiteSpace,P=[],T=x(b),S=1,_=e.rotation,M=r,O=M.length;(C||y)&&(v.length||P.length);)e.rotation=0,k=e.getBBox(!0),E=k.width,!Pe&&a.forExport&&(E=a.measureSpanWidth(b.firstChild.data,e.styles)),
k=E>m,void 0===i&&(i=k),y&&i?(O/=2,""===M||!k&&O<.5?v=[]:(M=r.substring(0,M.length+(k?-1:1)*ce(O)),v=[M+(m>3?"…":"")],b.removeChild(b.firstChild))):k&&1!==v.length?(b.removeChild(b.firstChild),P.unshift(v.pop())):(v=P,P=[],v.length&&(S++,b=oe.createElementNS(Ce,"tspan"),u(b,{dy:T,x:p}),g&&u(b,"style",g),o.appendChild(b)),E>m&&(m=E)),v.length&&b.appendChild(oe.createTextNode(v.join(" ").replace(/- /g,"-")));e.rotation=_}d++}}})}),i&&e.attr("title",e.textStr),k&&k.removeChild(o),v&&e.applyTextShadow&&e.applyTextShadow(v)):o.appendChild(oe.createTextNode(w(l)))},getContrast:function(e){return e=O(e).rgba,e[0]+e[1]+e[2]>384?"#000000":"#FFFFFF"},button:function(e,t,n,r,o,a,s,l,c){var u,d,p,h,f,m,g=this.label(e,t,n,c,null,null,null,null,"button"),v=0,e={x1:0,y1:0,x2:0,y2:1},o=i({"stroke-width":1,stroke:"#CCCCCC",fill:{linearGradient:e,stops:[[0,"#FEFEFE"],[1,"#F6F6F6"]]},r:2,padding:5,style:{color:"black"}},o);return p=o.style,delete o.style,a=i(o,{stroke:"#68A",fill:{linearGradient:e,stops:[[0,"#FFF"],[1,"#ACF"]]}},a),h=a.style,delete a.style,s=i(o,{stroke:"#68A",fill:{linearGradient:e,stops:[[0,"#9BD"],[1,"#CDF"]]}},s),f=s.style,delete s.style,l=i(o,{style:{color:"#CCC"}},l),m=l.style,delete l.style,We(g.element,be?"mouseover":"mouseenter",function(){3!==v&&g.attr(a).css(h)}),We(g.element,be?"mouseout":"mouseleave",function(){3!==v&&(u=[o,a,s][v],d=[p,h,f][v],g.attr(u).css(d))}),g.setState=function(e){(g.state=v=e)?2===e?g.attr(s).css(f):3===e&&g.attr(l).css(m):g.attr(o).css(p)},g.on("click",function(e){3!==v&&r.call(g,e)}).attr(o).css(Ke({cursor:"default"},p))},crispLine:function(e,t){return e[1]===e[4]&&(e[1]=e[4]=se(e[1])-t%2/2),e[2]===e[5]&&(e[2]=e[5]=se(e[2])+t%2/2),e},path:function(e){var t={fill:"none"};return s(e)?t.d=e:a(e)&&Ke(t,e),this.createElement("path").attr(t)},circle:function(e,t,n){return e=a(e)?e:{x:e,y:t,r:n},t=this.createElement("circle"),t.xSetter=t.ySetter=function(e,t,n){n.setAttribute("c"+t,e)},t.attr(e)},arc:function(e,t,n,i,r,o){return a(e)&&(t=e.y,n=e.r,i=e.innerR,r=e.start,o=e.end,e=e.x),e=this.symbol("arc",e||0,t||0,n||0,n||0,{innerR:i||0,start:r||0,end:o||0}),e.r=n,e},rect:function(e,t,n,i,r,o){var r=a(e)?e.r:r,s=this.createElement("rect"),e=a(e)?e:e===A?{}:{x:e,y:t,width:ue(n,0),height:ue(i,0)};return o!==A&&(s.strokeWidth=o,e=s.crisp(e)),r&&(e.r=r),s.rSetter=function(e,t,n){u(n,{rx:e,ry:e})},s.attr(e)},setSize:function(e,t,n){var i=this.alignedObjects,r=i.length;for(this.width=e,this.height=t,this.boxWrapper[Ze(n,!0)?"animate":"attr"]({width:e,height:t});r--;)i[r].align()},g:function(e){var t=this.createElement("g");return c(e)?t.attr({class:"highcharts-"+e}):t},image:function(e,t,n,i,r){var o={preserveAspectRatio:"none"};return arguments.length>1&&Ke(o,{x:t,y:n,width:i,height:r}),o=this.createElement("image").attr(o),o.element.setAttributeNS?o.element.setAttributeNS("http://www.w3.org/1999/xlink","href",e):o.element.setAttribute("hc-svg-href",e),o},symbol:function(e,t,n,i,r,o){var a,s,l,c=this,u=this.symbols[e],u=u&&u(se(t),se(n),i,r,o),d=/^url\((.*?)\)$/;return u?(a=this.path(u),Ke(a,{symbolName:e,x:t,y:n,width:i,height:r}),o&&Ke(a,o)):d.test(e)&&(l=function(e,t){e.element&&(e.attr({width:t[0],height:t[1]}),e.alignByTranslate||e.translate(se((i-t[0])/2),se((r-t[1])/2)))},s=e.match(d)[1],e=_e[s]||o&&o.width&&o.height&&[o.width,o.height],a=this.image(s).attr({x:t,y:n}),a.isImg=!0,e?l(a,e):(a.attr({width:0,height:0}),f("img",{onload:function(){0===this.width&&(h(this,{position:"absolute",top:"-999em"}),oe.body.appendChild(this)),l(a,_e[s]=[this.width,this.height]),this.parentNode&&this.parentNode.removeChild(this),c.imgCount--,!c.imgCount&&De[c.chartIndex].onload&&De[c.chartIndex].onload()},src:s}),this.imgCount++)),a},symbols:{circle:function(e,t,n,i){var r=.166*n;return["M",e+n/2,t,"C",e+n+r,t,e+n+r,t+i,e+n/2,t+i,"C",e-r,t+i,e-r,t,e+n/2,t,"Z"]},square:function(e,t,n,i){return["M",e,t,"L",e+n,t,e+n,t+i,e,t+i,"Z"]},triangle:function(e,t,n,i){return["M",e+n/2,t,"L",e+n,t+i,e,t+i,"Z"]},"triangle-down":function(e,t,n,i){return["M",e,t,"L",e+n,t,e+n/2,t+i,"Z"]},diamond:function(e,t,n,i){return["M",e+n/2,t,"L",e+n,t+i/2,e+n/2,t+i,e,t+i/2,"Z"]},arc:function(e,t,n,i,r){var o=r.start,n=r.r||n||i,a=r.end-.001,i=r.innerR,s=r.open,l=he(o),c=fe(o),u=he(a),a=fe(a),r=r.end-o<me?0:1;return["M",e+n*l,t+n*c,"A",n,n,0,r,1,e+n*u,t+n*a,s?"M":"L",e+i*u,t+i*a,"A",i,i,0,r,0,e+i*l,t+i*c,s?"":"Z"]},callout:function(e,t,n,i,r){var o,a=de(r&&r.r||0,n,i),s=a+6,l=r&&r.anchorX,r=r&&r.anchorY;return o=["M",e+a,t,"L",e+n-a,t,"C",e+n,t,e+n,t,e+n,t+a,"L",e+n,t+i-a,"C",e+n,t+i,e+n,t+i,e+n-a,t+i,"L",e+a,t+i,"C",e,t+i,e,t+i,e,t+i-a,"L",e,t+a,"C",e,t,e,t,e+a,t],l&&l>n&&r>t+s&&r<t+i-s?o.splice(13,3,"L",e+n,r-6,e+n+6,r,e+n,r+6,e+n,t+i-a):l&&l<0&&r>t+s&&r<t+i-s?o.splice(33,3,"L",e,r+6,e-6,r,e,r-6,e,t+a):r&&r>i&&l>e+s&&l<e+n-s?o.splice(23,3,"L",l+6,t+i,l,t+i+6,l-6,t+i,e+a,t+i):r&&r<0&&l>e+s&&l<e+n-s&&o.splice(3,3,"L",l-6,t,l,t-6,l+6,t,n-a,t),o}},clipRect:function(e,t,n,i){var r="highcharts-"+Me++,o=this.createElement("clipPath").attr({id:r}).add(this.defs),e=this.rect(e,t,n,i,0).add(o);return e.id=r,e.clipPath=o,e.count=0,e},text:function(e,t,n,i){var r=Se||!Pe&&this.forExport,o={};return!i||!this.allowHTML&&this.forExport?(o.x=Math.round(t||0),n&&(o.y=Math.round(n)),(e||0===e)&&(o.text=e),e=this.createElement("text").attr(o),r&&e.css({position:"absolute"}),i||(e.xSetter=function(e,t,n){var i,r,o=n.getElementsByTagName("tspan"),a=n.getAttribute(t);for(r=0;r<o.length;r++)i=o[r],i.getAttribute(t)===a&&i.setAttribute(t,e);n.setAttribute(t,e)}),e):this.html(e,t,n)},fontMetrics:function(t,n){var i,o,t=t||this.style.fontSize;return!t&&n&&e.getComputedStyle&&(n=n.element||n,t=(i=e.getComputedStyle(n,""))&&i.fontSize),t=/px/.test(t)?r(t):/em/.test(t)?12*parseFloat(t):12,i=t<24?t+3:se(1.2*t),o=se(.8*i),{h:i,b:o,f:t}},rotCorr:function(e,t,n){var i=e;return t&&n&&(i=ue(i*he(t*ge),4)),{x:-e/3*fe(t*ge),y:i}},label:function(e,t,n,r,o,a,s,l,u){var d,p,h,f,m,g,v,y,b,k,x,w=this,E=w.g(u),C=w.text("",0,0,s).attr({zIndex:1}),P=0,T=3,S=0,_=0,M={};b=function(){var e,t;e=C.element.style,p=(void 0===h||void 0===f||E.styles.textAlign)&&c(C.textStr)&&C.getBBox(),E.width=(h||p.width||0)+2*T+S,E.height=(f||p.height||0)+2*T,v=T+w.fontMetrics(e&&e.fontSize,C).b,y&&(d||(e=_,t=(l?-v:0)+_,E.box=d=r?w.symbol(r,e,t,E.width,E.height,M):w.rect(e,t,E.width,E.height,0,M["stroke-width"]),d.isImg||d.attr("fill","none"),d.add(E)),d.isImg||d.attr(Ke({width:se(E.width),height:se(E.height)},M)),M=null)},k=function(){var e,t=E.styles,t=t&&t.textAlign,n=S+T;e=l?0:v,c(h)&&p&&("center"===t||"right"===t)&&(n+={center:.5,right:1}[t]*(h-p.width)),n===C.x&&e===C.y||(C.attr("x",n),e!==A&&C.attr("y",e)),C.x=n,C.y=e},x=function(e,t){d?d.attr(e,t):M[e]=t},E.onAdd=function(){C.add(E),E.attr({text:e||0===e?e:"",x:t,y:n}),d&&c(o)&&E.attr({anchorX:o,anchorY:a})},E.widthSetter=function(e){h=e},E.heightSetter=function(e){f=e},E.paddingSetter=function(e){c(e)&&e!==T&&(T=E.padding=e,k())},E.paddingLeftSetter=function(e){c(e)&&e!==S&&(S=e,k())},E.alignSetter=function(e){e={left:0,center:.5,right:1}[e],e!==P&&(P=e,p&&E.attr({x:m}))},E.textSetter=function(e){e!==A&&C.textSetter(e),b(),k()},E["stroke-widthSetter"]=function(e,t){e&&(y=!0),_=e%2/2,x(t,e)},E.strokeSetter=E.fillSetter=E.rSetter=function(e,t){"fill"===t&&e&&(y=!0),x(t,e)},E.anchorXSetter=function(e,t){o=e,x(t,se(e)-_-m)},E.anchorYSetter=function(e,t){a=e,x(t,e-g)},E.xSetter=function(e){E.x=e,P&&(e-=P*((h||p.width)+2*T)),m=se(e),E.attr("translateX",m)},E.ySetter=function(e){g=E.y=se(e),E.attr("translateY",g)};var O=E.css;return Ke(E,{css:function(e){if(e){var t={},e=i(e);Ue(E.textProps,function(n){e[n]!==A&&(t[n]=e[n],delete e[n])}),C.css(t)}return O.call(E,e)},getBBox:function(){return{width:p.width+2*T,height:p.height+2*T,x:p.x-T,y:p.y-T}},shadow:function(e){return d&&d.shadow(e),E},destroy:function(){He(E.element,"mouseenter"),He(E.element,"mouseleave"),C&&(C=C.destroy()),d&&(d=d.destroy()),D.prototype.destroy.call(E),E=w=b=k=x=null}})}},j=tt,Ke(D.prototype,{htmlCss:function(e){var t=this.element;return(t=e&&"SPAN"===t.tagName&&e.width)&&(delete e.width,this.textWidth=t,this.updateTransform()),e&&"ellipsis"===e.textOverflow&&(e.whiteSpace="nowrap",e.overflow="hidden"),this.styles=Ke(this.styles,e),h(this.element,e),this},htmlGetBBox:function(){var e=this.element;return"text"===e.nodeName&&(e.style.position="absolute"),{x:e.offsetLeft,y:e.offsetTop,width:e.offsetWidth,height:e.offsetHeight}},htmlUpdateTransform:function(){if(this.added){var e=this.renderer,t=this.element,n=this.translateX||0,i=this.translateY||0,o=this.x||0,a=this.y||0,s=this.textAlign||"left",l={left:0,center:.5,right:1}[s],u=this.shadows,d=this.styles;if(h(t,{marginLeft:n,marginTop:i}),u&&Ue(u,function(e){h(e,{marginLeft:n+1,marginTop:i+1})}),this.inverted&&Ue(t.childNodes,function(n){e.invertChild(n,t)}),"SPAN"===t.tagName){var u=this.rotation,p=r(this.textWidth),f=d&&d.whiteSpace,m=[u,s,t.innerHTML,this.textWidth,this.textAlign].join(",");m!==this.cTT&&(d=e.fontMetrics(t.style.fontSize).b,c(u)&&this.setSpanRotation(u,l,d),t.offsetWidth>p&&/[ \-]/.test(t.textContent||t.innerText)?(h(t,{width:p+"px",display:"block",whiteSpace:f||"normal"}),this.hasTextWidth=!0):this.hasTextWidth&&(h(t,{width:"",display:"",whiteSpace:f||"nowrap"}),this.hasTextWidth=!1),this.getSpanCorrection(this.hasTextWidth?p:t.offsetWidth,d,l,u,s)),h(t,{left:o+(this.xCorr||0)+"px",top:a+(this.yCorr||0)+"px"}),xe&&(d=t.offsetHeight),this.cTT=m}}else this.alignOnAdd=!0},setSpanRotation:function(e,t,n){var i={},r=be?"-ms-transform":xe?"-webkit-transform":we?"MozTransform":ye?"-o-transform":"";i[r]=i.transform="rotate("+e+"deg)",i[r+(we?"Origin":"-origin")]=i.transformOrigin=100*t+"% "+n+"px",h(this.element,i)},getSpanCorrection:function(e,t,n){this.xCorr=-e*n,this.yCorr=-t}}),Ke(tt.prototype,{html:function(e,t,n){var i=this.createElement("span"),r=i.element,o=i.renderer,a=o.isSVG,s=function(e,t){Ue(["opacity","visibility"],function(n){$e(e,n+"Setter",function(e,n,i,r){e.call(this,n,i,r),t[i]=n})})};return i.textSetter=function(e){e!==r.innerHTML&&delete this.bBox,r.innerHTML=this.textStr=e,i.htmlUpdateTransform()},a&&s(i,i.element.style),i.xSetter=i.ySetter=i.alignSetter=i.rotationSetter=function(e,t){"align"===t&&(t="textAlign"),i[t]=e,i.htmlUpdateTransform()},i.attr({text:e,x:se(t),y:se(n)}).css({position:"absolute",fontFamily:this.style.fontFamily,fontSize:this.style.fontSize}),r.style.whiteSpace="nowrap",i.css=i.htmlCss,a&&(i.add=function(e){var t,n=o.box.parentNode,a=[];if(this.parentGroup=e){if(t=e.div,!t){for(;e;)a.push(e),e=e.parentGroup;Ue(a.reverse(),function(e){var i,r=u(e.element,"class");r&&(r={className:r}),t=e.div=e.div||f(Re,r,{position:"absolute",left:(e.translateX||0)+"px",top:(e.translateY||0)+"px",opacity:e.opacity},t||n),i=t.style,Ke(e,{translateXSetter:function(t,n){i.left=t+"px",e[n]=t,e.doTransform=!0},translateYSetter:function(t,n){i.top=t+"px",e[n]=t,e.doTransform=!0}}),s(e,i)})}}else t=n;return t.appendChild(r),i.added=!0,i.alignOnAdd&&i.htmlUpdateTransform(),i}),i}});var nt;if(!Pe&&!Se){nt={init:function(e,t){var n=["<",t,' filled="f" stroked="f"'],i=["position: ","absolute",";"],r=t===Re;("shape"===t||r)&&i.push("left:0;top:0;width:1px;height:1px;"),i.push("visibility: ",r?"hidden":"visible"),n.push(' style="',i.join(""),'"/>'),t&&(n=r||"span"===t||"img"===t?n.join(""):e.prepVML(n),this.element=f(n)),this.renderer=e},add:function(e){var t=this.renderer,n=this.element,i=t.box,r=e&&e.inverted,i=e?e.element||e:i;return e&&(this.parentGroup=e),r&&t.invertChild(n,i),i.appendChild(n),this.added=!0,this.alignOnAdd&&!this.deferUpdateTransform&&this.updateTransform(),this.onAdd&&this.onAdd(),this},updateTransform:D.prototype.htmlUpdateTransform,setSpanRotation:function(){var e=this.rotation,t=he(e*ge),n=fe(e*ge);h(this.element,{filter:e?["progid:DXImageTransform.Microsoft.Matrix(M11=",t,", M12=",-n,", M21=",n,", M22=",t,", sizingMethod='auto expand')"].join(""):"none"})},getSpanCorrection:function(e,t,n,i,r){var o,a=i?he(i*ge):1,s=i?fe(i*ge):0,l=Ze(this.elemHeight,this.element.offsetHeight);this.xCorr=a<0&&-e,this.yCorr=s<0&&-l,o=a*s<0,this.xCorr+=s*t*(o?1-n:n),this.yCorr-=a*t*(i?o?n:1-n:1),r&&"left"!==r&&(this.xCorr-=e*n*(a<0?-1:1),i&&(this.yCorr-=l*n*(s<0?-1:1)),h(this.element,{textAlign:r}))},pathToVML:function(e){for(var t=e.length,n=[];t--;)Qe(e[t])?n[t]=se(10*e[t])-5:"Z"===e[t]?n[t]="x":(n[t]=e[t],!e.isArc||"wa"!==e[t]&&"at"!==e[t]||(n[t+5]===n[t+7]&&(n[t+7]+=e[t+7]>e[t+5]?1:-1),n[t+6]===n[t+8]&&(n[t+8]+=e[t+8]>e[t+6]?1:-1)));return n.join(" ")||"x"},clip:function(e){var t,n=this;return e?(t=e.members,l(t,n),t.push(n),n.destroyClip=function(){l(t,n)},e=e.getCSS(n)):(n.destroyClip&&n.destroyClip(),e={clip:ke?"inherit":"rect(auto)"}),n.css(e)},css:D.prototype.htmlCss,safeRemoveChild:function(e){e.parentNode&&P(e)},destroy:function(){return this.destroyClip&&this.destroyClip(),D.prototype.destroy.apply(this)},on:function(t,n){return this.element["on"+t]=function(){var t=e.event;t.target=t.srcElement,n(t)},this},cutOffPath:function(e,t){var n,e=e.split(/[ ,]/);return n=e.length,9!==n&&11!==n||(e[n-4]=e[n-2]=r(e[n-2])-10*t),e.join(" ")},shadow:function(e,t,n){var i,o,a,s,l,c,u,d=[],p=this.element,h=this.renderer,m=p.style,g=p.path;if(g&&"string"!=typeof g.value&&(g="x"),l=g,e){for(c=Ze(e.width,3),u=(e.opacity||.15)/c,i=1;i<=3;i++)s=2*c+1-2*i,n&&(l=this.cutOffPath(g.value,s+.5)),a=['<shape isShadow="true" strokeweight="',s,'" filled="false" path="',l,'" coordsize="10 10" style="',p.style.cssText,'" />'],o=f(h.prepVML(a),null,{left:r(m.left)+Ze(e.offsetX,1),top:r(m.top)+Ze(e.offsetY,1)}),n&&(o.cutOff=s+1),a=['<stroke color="',e.color||"black",'" opacity="',u*i,'"/>'],f(h.prepVML(a),null,null,o),t?t.element.appendChild(o):p.parentNode.insertBefore(o,p),d.push(o);this.shadows=d}return this},updateShadows:Oe,setAttr:function(e,t){ke?this.element[e]=t:this.element.setAttribute(e,t)},classSetter:function(e){this.element.className=e},dashstyleSetter:function(e,t,n){(n.getElementsByTagName("stroke")[0]||f(this.renderer.prepVML(["<stroke/>"]),null,null,n))[t]=e||"solid",this[t]=e},dSetter:function(e,t,n){var i=this.shadows,e=e||[];if(this.d=e.join&&e.join(" "),n.path=e=this.pathToVML(e),i)for(n=i.length;n--;)i[n].path=i[n].cutOff?this.cutOffPath(e,i[n].cutOff):e;this.setAttr(t,e)},fillSetter:function(e,t,n){var i=n.nodeName;"SPAN"===i?n.style.color=e:"IMG"!==i&&(n.filled="none"!==e,this.setAttr("fillcolor",this.renderer.color(e,n,t,this)))},"fill-opacitySetter":function(e,t,n){f(this.renderer.prepVML(["<",t.split("-")[0],' opacity="',e,'"/>']),null,null,n)},opacitySetter:Oe,rotationSetter:function(e,t,n){n=n.style,this[t]=n[t]=e,n.left=-se(fe(e*ge)+1)+"px",n.top=se(he(e*ge))+"px"},strokeSetter:function(e,t,n){this.setAttr("strokecolor",this.renderer.color(e,n,t,this))},"stroke-widthSetter":function(e,t,n){n.stroked=!!e,this[t]=e,Qe(e)&&(e+="px"),this.setAttr("strokeweight",e)},titleSetter:function(e,t){this.setAttr(t,e)},visibilitySetter:function(e,t,n){"inherit"===e&&(e="visible"),this.shadows&&Ue(this.shadows,function(n){n.style[t]=e}),"DIV"===n.nodeName&&(e="hidden"===e?"-999em":0,ke||(n.style[t]=e?"visible":"hidden"),t="top"),n.style[t]=e},xSetter:function(e,t,n){this[t]=e,"x"===t?t="left":"y"===t&&(t="top"),this.updateClipping?(this[t]=e,this.updateClipping()):n.style[t]=e},zIndexSetter:function(e,t,n){n.style[t]=e}},nt["stroke-opacitySetter"]=nt["fill-opacitySetter"],re.VMLElement=nt=m(D,nt),nt.prototype.ySetter=nt.prototype.widthSetter=nt.prototype.heightSetter=nt.prototype.xSetter;var it={Element:nt,isIE8:ve.indexOf("MSIE 8.0")>-1,init:function(e,t,n,i){var r;if(this.alignedObjects=[],i=this.createElement(Re).css(Ke(this.getStyle(i),{position:"relative"})),r=i.element,e.appendChild(i.element),this.isVML=!0,this.box=r,this.boxWrapper=i,this.gradients={},this.cache={},this.cacheKeys=[],this.imgCount=0,this.setSize(t,n,!1),!oe.namespaces.hcv){oe.namespaces.add("hcv","urn:schemas-microsoft-com:vml");try{oe.createStyleSheet().cssText="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}catch(e){oe.styleSheets[0].cssText+="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}}},isHidden:function(){return!this.box.offsetWidth},clipRect:function(e,t,n,i){var r=this.createElement(),o=a(e);return Ke(r,{members:[],count:0,left:(o?e.x:e)+1,top:(o?e.y:t)+1,width:(o?e.width:n)-1,height:(o?e.height:i)-1,getCSS:function(e){var t=e.element,n=t.nodeName,e=e.inverted,i=this.top-("shape"===n?t.offsetTop:0),r=this.left,t=r+this.width,o=i+this.height,i={clip:"rect("+se(e?r:i)+"px,"+se(e?o:t)+"px,"+se(e?t:o)+"px,"+se(e?i:r)+"px)"};return!e&&ke&&"DIV"===n&&Ke(i,{width:t+"px",height:o+"px"}),i},updateClipping:function(){Ue(r.members,function(e){e.element&&e.css(r.getCSS(e))})}})},color:function(e,t,n,i){var r,o,a,s=this,l=/^rgba/,c="none";if(e&&e.linearGradient?a="gradient":e&&e.radialGradient&&(a="pattern"),a){var u,d,p,h,m,g,v,y,b=e.linearGradient||e.radialGradient,k="",e=e.stops,x=[],w=function(){o=['<fill colors="'+x.join(",")+'" opacity="',m,'" o:opacity2="',h,'" type="',a,'" ',k,'focus="100%" method="any" />'],f(s.prepVML(o),null,null,t)};if(p=e[0],y=e[e.length-1],p[0]>0&&e.unshift([0,p[1]]),y[0]<1&&e.push([1,y[1]]),Ue(e,function(e,t){l.test(e[1])?(r=O(e[1]),u=r.get("rgb"),d=r.get("a")):(u=e[1],d=1),x.push(100*e[0]+"% "+u),t?(m=d,g=u):(h=d,v=u)}),"fill"===n)if("gradient"===a)n=b.x1||b[0]||0,e=b.y1||b[1]||0,p=b.x2||b[2]||0,b=b.y2||b[3]||0,k='angle="'+(90-180*ae.atan((b-e)/(p-n))/me)+'"',w();else{var E,c=b.r,C=2*c,P=2*c,T=b.cx,S=b.cy,_=t.radialReference,c=function(){_&&(E=i.getBBox(),T+=(_[0]-E.x)/E.width-.5,S+=(_[1]-E.y)/E.height-.5,C*=_[2]/E.width,P*=_[2]/E.height),k='src="'+F.global.VMLRadialGradientURL+'" size="'+C+","+P+'" origin="0.5,0.5" position="'+T+","+S+'" color2="'+v+'" ',w()};i.added?c():i.onAdd=c,c=g}else c=u}else l.test(e)&&"IMG"!==t.tagName?(r=O(e),i[n+"-opacitySetter"](r.get("a"),n,t),c=r.get("rgb")):(c=t.getElementsByTagName(n),c.length&&(c[0].opacity=1,c[0].type="solid"),c=e);return c},prepVML:function(e){var t=this.isIE8,e=e.join("");return t?(e=e.replace("/>",' xmlns="urn:schemas-microsoft-com:vml" />'),e=e.indexOf('style="')===-1?e.replace("/>",' style="display:inline-block;behavior:url(#default#VML);" />'):e.replace('style="','style="display:inline-block;behavior:url(#default#VML);')):e=e.replace("<","<hcv:"),e},text:tt.prototype.html,path:function(e){var t={coordsize:"10 10"};return s(e)?t.d=e:a(e)&&Ke(t,e),this.createElement("shape").attr(t)},circle:function(e,t,n){var i=this.symbol("circle");return a(e)&&(n=e.r,t=e.y,e=e.x),i.isCircle=!0,i.r=n,i.attr({x:e,y:t})},g:function(e){var t;return e&&(t={className:"highcharts-"+e,class:"highcharts-"+e}),this.createElement(Re).attr(t)},image:function(e,t,n,i,r){var o=this.createElement("img").attr({src:e});return arguments.length>1&&o.attr({x:t,y:n,width:i,height:r}),o},createElement:function(e){return"rect"===e?this.symbol(e):tt.prototype.createElement.call(this,e)},invertChild:function(e,t){var n=this,i=t.style,o="IMG"===e.tagName&&e.style;h(e,{flip:"x",left:r(i.width)-(o?r(o.top):1),top:r(i.height)-(o?r(o.left):1),rotation:-90}),Ue(e.childNodes,function(t){n.invertChild(t,e)})},symbols:{arc:function(e,t,n,i,r){var o=r.start,a=r.end,s=r.r||n||i,n=r.innerR,i=he(o),l=fe(o),c=he(a),u=fe(a);return a-o===0?["x"]:(o=["wa",e-s,t-s,e+s,t+s,e+s*i,t+s*l,e+s*c,t+s*u],r.open&&!n&&o.push("e","M",e,t),o.push("at",e-n,t-n,e+n,t+n,e+n*c,t+n*u,e+n*i,t+n*l,"x","e"),o.isArc=!0,o)},circle:function(e,t,n,i,r){return r&&(n=i=2*r.r),r&&r.isCircle&&(e-=n/2,t-=i/2),["wa",e,t,e+n,t+i,e+n,t+i/2,e+n,t+i/2,"e"]},rect:function(e,t,n,i,r){return tt.prototype.symbols[c(r)&&r.r?"callout":"square"].call(0,e,t,n,i,r)}}};re.VMLRenderer=nt=function(){this.init.apply(this,arguments)},nt.prototype=i(tt.prototype,it),j=nt}tt.prototype.measureSpanWidth=function(e,t){var n,i=oe.createElement("span");return n=oe.createTextNode(e),i.appendChild(n),h(i,t),this.box.appendChild(i),n=i.offsetWidth,P(i),n};var rt;Se&&(re.CanVGRenderer=nt=function(){Ce="http://www.w3.org/1999/xhtml"},nt.prototype.symbols={},rt=function(){function e(){var e,n=t.length;for(e=0;e<n;e++)t[e]();t=[]}var t=[];return{push:function(n,i){if(0===t.length){var r=oe.getElementsByTagName("head")[0],o=oe.createElement("script");o.type="text/javascript",o.src=i,o.onload=e,r.appendChild(o)}t.push(n)}}}(),j=nt),N.prototype={addLabel:function(){var e,t=this.axis,n=t.options,r=t.chart,o=t.categories,a=t.names,s=this.pos,l=n.labels,u=t.tickPositions,d=s===u[0],p=s===u[u.length-1],a=o?Ze(o[s],a[s],s):s,o=this.label,u=u.info;t.isDatetimeAxis&&u&&(e=n.dateTimeLabelFormats[u.higherRanks[s]||u.unitName]),this.isFirst=d,this.isLast=p,n=t.labelFormatter.call({axis:t,chart:r,isFirst:d,isLast:p,dateTimeLabelFormat:e,value:t.isLog?T(t.lin2log(a)):a}),c(o)?o&&o.attr({text:n}):(this.labelLength=(this.label=o=c(n)&&l.enabled?r.renderer.text(n,0,0,l.useHTML).css(i(l.style)).add(t.labelGroup):null)&&o.getBBox().width,this.rotation=0)},getLabelSize:function(){return this.label?this.label.getBBox()[this.axis.horiz?"height":"width"]:0},handleOverflow:function(e){var t,n=this.axis,i=e.x,r=n.chart.chartWidth,o=n.chart.spacing,a=Ze(n.labelLeft,de(n.pos,o[3])),o=Ze(n.labelRight,ue(n.pos+n.len,r-o[1])),s=this.label,l=this.rotation,c={left:0,center:.5,right:1}[n.labelAlign],u=s.getBBox().width,d=n.getSlotWidth(),p=d,h=1,f={};l?l<0&&i-c*u<a?t=se(i/he(l*ge)-a):l>0&&i+c*u>o&&(t=se((r-i)/he(l*ge))):(r=i+(1-c)*u,i-c*u<a?p=e.x+p*(1-c)-a:r>o&&(p=o-e.x+p*c,h=-1),p=de(d,p),p<d&&"center"===n.labelAlign&&(e.x+=h*(d-p-c*(d-de(u,p)))),(u>p||n.autoRotation&&s.styles.width)&&(t=p)),t&&(f.width=t,n.options.labels.style.textOverflow||(f.textOverflow="ellipsis"),s.css(f))},getPosition:function(e,t,n,i){var r=this.axis,o=r.chart,a=i&&o.oldChartHeight||o.chartHeight;return{x:e?r.translate(t+n,null,null,i)+r.transB:r.left+r.offset+(r.opposite?(i&&o.oldChartWidth||o.chartWidth)-r.right-r.left:0),y:e?a-r.bottom+r.offset-(r.opposite?r.height:0):a-r.translate(t+n,null,null,i)-r.transB}},getLabelPosition:function(e,t,n,i,r,o,a,s){var l=this.axis,u=l.transA,d=l.reversed,p=l.staggerLines,h=l.tickRotCorr||{x:0,y:0},f=r.y;return c(f)||(f=0===l.side?n.rotation?-8:-n.getBBox().height:2===l.side?h.y+8:he(n.rotation*ge)*(h.y-n.getBBox(!1,0).height/2)),e=e+r.x+h.x-(o&&i?o*u*(d?-1:1):0),t=t+f-(o&&!i?o*u*(d?1:-1):0),p&&(n=a/(s||1)%p,l.opposite&&(n=p-n-1),t+=n*(l.labelOffset/p)),{x:e,y:se(t)}},getMarkPath:function(e,t,n,i,r,o){return o.crispLine(["M",e,t,"L",e+(r?0:-n),t+(r?n:0)],i)},render:function(e,t,n){var i=this.axis,r=i.options,o=i.chart.renderer,a=i.horiz,s=this.type,l=this.label,c=this.pos,u=r.labels,d=this.gridLine,p=s?s+"Grid":"grid",h=s?s+"Tick":"tick",f=r[p+"LineWidth"],m=r[p+"LineColor"],g=r[p+"LineDashStyle"],p=i.tickSize(h),h=r[h+"Color"],v=this.mark,y=u.step,b=!0,k=i.tickmarkOffset,x=this.getPosition(a,c,k,t),w=x.x,x=x.y,E=a&&w===i.pos+i.len||!a&&x===i.pos?-1:1,n=Ze(n,1);this.isActive=!0,f&&(c=i.getPlotLinePath(c+k,f*E,t,!0),d===A&&(d={stroke:m,"stroke-width":f},g&&(d.dashstyle=g),s||(d.zIndex=1),t&&(d.opacity=0),this.gridLine=d=f?o.path(c).attr(d).add(i.gridGroup):null),!t&&d&&c&&d[this.isNew?"attr":"animate"]({d:c,opacity:n})),p&&(i.opposite&&(p[0]=-p[0]),s=this.getMarkPath(w,x,p[0],p[1]*E,a,o),v?v.animate({d:s,opacity:n}):this.mark=o.path(s).attr({stroke:h,"stroke-width":p[1],opacity:n}).add(i.axisGroup)),l&&Qe(w)&&(l.xy=x=this.getLabelPosition(w,x,l,a,u,k,e,y),this.isFirst&&!this.isLast&&!Ze(r.showFirstLabel,1)||this.isLast&&!this.isFirst&&!Ze(r.showLastLabel,1)?b=!1:a&&!i.isRadial&&!u.step&&!u.rotation&&!t&&0!==n&&this.handleOverflow(x),y&&e%y&&(b=!1),b&&Qe(x.y)?(x.opacity=n,l[this.isNew?"attr":"animate"](x),this.isNew=!1):l.attr("y",-9999))},destroy:function(){C(this,this.axis)}},re.PlotLineOrBand=function(e,t){this.axis=e,t&&(this.options=t,this.id=t.id)},re.PlotLineOrBand.prototype={render:function(){var e,t=this,n=t.axis,r=n.horiz,o=t.options,a=o.label,s=t.label,l=o.width,u=o.to,d=o.from,p=c(d)&&c(u),h=o.value,f=o.dashStyle,m=t.svgElem,g=[],v=o.color,y=Ze(o.zIndex,0),b=o.events,k={},x=n.chart.renderer,g=n.log2lin;if(n.isLog&&(d=g(d),u=g(u),h=g(h)),l)g=n.getPlotLinePath(h,l),k={stroke:v,"stroke-width":l},f&&(k.dashstyle=f);else{if(!p)return;g=n.getPlotBandPath(d,u,o),v&&(k.fill=v),o.borderWidth&&(k.stroke=o.borderColor,k["stroke-width"]=o.borderWidth)}if(k.zIndex=y,m)g?(m.show(),m.animate({d:g})):(m.hide(),s&&(t.label=s=s.destroy()));else if(g&&g.length&&(t.svgElem=m=x.path(g).attr(k).add(),b))for(e in o=function(e){m.on(e,function(n){b[e].apply(t,[n])})},b)o(e);return a&&c(a.text)&&g&&g.length&&n.width>0&&n.height>0&&!g.flat?(a=i({align:r&&p&&"center",x:r?!p&&4:10,verticalAlign:!r&&p&&"middle",y:r?p?16:10:p?6:-4,rotation:r&&!p&&90},a),this.renderLabel(a,g,p,y)):s&&s.hide(),t},renderLabel:function(e,t,n,i){var r=this.label,o=this.axis.chart.renderer;r||(r={align:e.textAlign||e.align,rotation:e.rotation},r.zIndex=i,this.label=r=o.text(e.text,0,0,e.useHTML).attr(r).css(e.style).add()),i=[t[1],t[4],n?t[6]:t[1]],t=[t[2],t[5],n?t[7]:t[2]],n=w(i),o=w(t),r.align(e,!1,{x:n,y:o,width:E(i)-n,height:E(t)-o}),r.show()},destroy:function(){l(this.axis.plotLinesAndBands,this),delete this.axis,C(this)}};var ot=re.Axis=function(){this.init.apply(this,arguments)};ot.prototype={defaultOptions:{dateTimeLabelFormats:{millisecond:"%H:%M:%S.%L",second:"%H:%M:%S",minute:"%H:%M",hour:"%H:%M",day:"%e. %b",week:"%e. %b",month:"%b '%y",year:"%Y"},endOnTick:!1,gridLineColor:"#D8D8D8",labels:{enabled:!0,style:{color:"#606060",cursor:"default",fontSize:"11px"},x:0},lineColor:"#C0D0E0",lineWidth:1,minPadding:.01,maxPadding:.01,minorGridLineColor:"#E0E0E0",minorGridLineWidth:1,minorTickColor:"#A0A0A0",minorTickLength:2,minorTickPosition:"outside",startOfWeek:1,startOnTick:!1,tickColor:"#C0D0E0",tickLength:10,tickmarkPlacement:"between",tickPixelInterval:100,tickPosition:"outside",title:{align:"middle",style:{color:"#707070"}},type:"linear"},defaultYAxisOptions:{endOnTick:!0,gridLineWidth:1,tickPixelInterval:72,showLastLabel:!0,labels:{x:-8},lineWidth:0,maxPadding:.05,minPadding:.05,startOnTick:!0,title:{rotation:270,text:"Values"},stackLabels:{enabled:!1,formatter:function(){return re.numberFormat(this.total,-1)},style:i(Je.line.dataLabels.style,{color:"#000000"})}},defaultLeftAxisOptions:{labels:{x:-15},title:{rotation:270}},defaultRightAxisOptions:{labels:{x:15},title:{rotation:90}},defaultBottomAxisOptions:{labels:{autoRotation:[-45],x:0},title:{rotation:0}},defaultTopAxisOptions:{labels:{autoRotation:[-45],x:0},title:{rotation:0}},init:function(e,t){var n=t.isX;this.chart=e,this.horiz=e.inverted?!n:n,this.coll=(this.isXAxis=n)?"xAxis":"yAxis",this.opposite=t.opposite,this.side=t.side||(this.horiz?this.opposite?0:2:this.opposite?1:3),this.setOptions(t);var i=this.options,r=i.type;this.labelFormatter=i.labels.formatter||this.defaultLabelFormatter,this.userOptions=t,this.minPixelPadding=0,this.reversed=i.reversed,this.visible=i.visible!==!1,this.zoomEnabled=i.zoomEnabled!==!1,this.categories=i.categories||"category"===r,this.names=this.names||[],this.isLog="logarithmic"===r,this.isDatetimeAxis="datetime"===r,this.isLinked=c(i.linkedTo),this.ticks={},this.labelEdge=[],this.minorTicks={},this.plotLinesAndBands=[],this.alternateBands={},this.len=0,this.minRange=this.userMinRange=i.minRange||i.maxZoom,this.range=i.range,this.offset=i.offset||0,this.stacks={},this.oldStacks={},this.stacksTouched=0,this.min=this.max=null,this.crosshair=Ze(i.crosshair,d(e.options.tooltip.crosshairs)[n?0:1],!1);var o,i=this.options.events;Fe(this,e.axes)===-1&&(n&&!this.isColorAxis?e.axes.splice(e.xAxis.length,0,this):e.axes.push(this),e[this.coll].push(this)),this.series=this.series||[],e.inverted&&n&&this.reversed===A&&(this.reversed=!0),this.removePlotLine=this.removePlotBand=this.removePlotBandOrLine;for(o in i)We(this,o,i[o]);this.isLog&&(this.val2lin=this.log2lin,this.lin2val=this.lin2log)},setOptions:function(e){this.options=i(this.defaultOptions,this.isXAxis?{}:this.defaultYAxisOptions,[this.defaultTopAxisOptions,this.defaultRightAxisOptions,this.defaultBottomAxisOptions,this.defaultLeftAxisOptions][this.side],i(F[this.coll],e))},defaultLabelFormatter:function(){var e,t=this.axis,n=this.value,i=t.categories,r=this.dateTimeLabelFormat,o=F.lang.numericSymbols,a=o&&o.length,s=t.options.labels.format,t=t.isLog?n:t.tickInterval;if(s)e=y(s,this);else if(i)e=n;else if(r)e=U(r,n);else if(a&&t>=1e3)for(;a--&&e===A;)i=Math.pow(1e3,a+1),t>=i&&10*n%i===0&&null!==o[a]&&(e=re.numberFormat(n/i,-1)+o[a]);return e===A&&(e=pe(n)>=1e4?re.numberFormat(n,-1):re.numberFormat(n,-1,A,"")),e},getSeriesExtremes:function(){var e=this,t=e.chart;e.hasVisibleSeries=!1,e.dataMin=e.dataMax=e.threshold=null,e.softThreshold=!e.isXAxis,e.buildStacks&&e.buildStacks(),Ue(e.series,function(n){if(n.visible||!t.options.chart.ignoreHiddenSeries){var i,r=n.options,o=r.threshold;e.hasVisibleSeries=!0,e.isLog&&o<=0&&(o=null),e.isXAxis?(r=n.xData,r.length&&(n=w(r),!Qe(n)&&!(n instanceof Y)&&(r=Be(r,function(e){return Qe(e)}),n=w(r)),e.dataMin=de(Ze(e.dataMin,r[0]),n),e.dataMax=ue(Ze(e.dataMax,r[0]),E(r)))):(n.getExtremes(),i=n.dataMax,n=n.dataMin,c(n)&&c(i)&&(e.dataMin=de(Ze(e.dataMin,n),n),e.dataMax=ue(Ze(e.dataMax,i),i)),c(o)&&(e.threshold=o),r.softThreshold&&!e.isLog||(e.softThreshold=!1))}})},translate:function(e,t,n,i,r,o){var a=this.linkedParent||this,s=1,l=0,c=i?a.oldTransA:a.transA,i=i?a.oldMin:a.min,u=a.minPixelPadding,r=(a.isOrdinal||a.isBroken||a.isLog&&r)&&a.lin2val;return c||(c=a.transA),n&&(s*=-1,l=a.len),a.reversed&&(s*=-1,l-=s*(a.sector||a.len)),t?(e=e*s+l,e-=u,e=e/c+i,r&&(e=a.lin2val(e))):(r&&(e=a.val2lin(e)),"between"===o&&(o=.5),e=s*(e-i)*c+l+s*u+(Qe(o)?c*o*a.pointRange:0)),e},toPixels:function(e,t){return this.translate(e,!1,!this.horiz,null,!0)+(t?0:this.pos)},toValue:function(e,t){return this.translate(e-(t?0:this.pos),!0,!this.horiz,null,!0)},getPlotLinePath:function(e,t,n,i,r){var o,a,s,l=this.chart,c=this.left,u=this.top,d=n&&l.oldChartHeight||l.chartHeight,p=n&&l.oldChartWidth||l.chartWidth;o=this.transB;var h=function(e,t,n){return(e<t||e>n)&&(i?e=de(ue(t,e),n):s=!0),e},r=Ze(r,this.translate(e,null,null,n)),e=n=se(r+o);return o=a=se(d-r-o),Qe(r)?this.horiz?(o=u,a=d-this.bottom,e=n=h(e,c,c+this.width)):(e=c,n=p-this.right,o=a=h(o,u,u+this.height)):s=!0,s&&!i?null:l.renderer.crispLine(["M",e,o,"L",n,a],t||1)},getLinearTickPositions:function(e,t,n){var i,r=T(le(t/e)*e),o=T(ce(n/e)*e),a=[];if(t===n&&Qe(t))return[t];for(t=r;t<=o&&(a.push(t),t=T(t+e),t!==i);)i=t;return a},getMinorTickPositions:function(){var e,t=this.options,n=this.tickPositions,i=this.minorTickInterval,r=[],o=this.pointRangePadding||0;e=this.min-o;var o=this.max+o,a=o-e;if(a&&a/i<this.len/3)if(this.isLog)for(o=n.length,e=1;e<o;e++)r=r.concat(this.getLogTickPositions(i,n[e-1],n[e],!0));else if(this.isDatetimeAxis&&"auto"===t.minorTickInterval)r=r.concat(this.getTimeTicks(this.normalizeTimeTickInterval(i),e,o,t.startOfWeek));else for(n=e+(n[0]-e)%i;n<=o;n+=i)r.push(n);return 0!==r.length&&this.trimTicks(r,t.startOnTick,t.endOnTick),r},adjustForMinRange:function(){var e,t,n,i,r,o,a,s=this.options,l=this.min,u=this.max,d=this.dataMax-this.dataMin>=this.minRange;this.isXAxis&&this.minRange===A&&!this.isLog&&(c(s.min)||c(s.max)?this.minRange=null:(Ue(this.series,function(e){for(r=e.xData,n=o=e.xIncrement?1:r.length-1;n>0;n--)i=r[n]-r[n-1],(t===A||i<t)&&(t=i)}),this.minRange=de(5*t,this.dataMax-this.dataMin))),u-l<this.minRange&&(a=this.minRange,e=(a-u+l)/2,e=[l-e,Ze(s.min,l-e)],d&&(e[2]=this.dataMin),l=E(e),u=[l+a,Ze(s.max,l+a)],d&&(u[2]=this.dataMax),u=w(u),u-l<a&&(e[0]=u-a,e[1]=Ze(s.min,u-a),l=E(e))),this.min=l,this.max=u},getClosest:function(){var e;return Ue(this.series,function(t){var n=t.closestPointRange;!t.noSharedTooltip&&c(n)&&(e=c(e)?de(e,n):n)}),e},setAxisTranslation:function(e){var t,n=this,i=n.max-n.min,r=n.axisPointRange||0,a=0,s=0,l=n.linkedParent,c=!!n.categories,u=n.transA,d=n.isXAxis;(d||c||r)&&(l?(a=l.minPointOffset,
s=l.pointRangePadding):(t=n.getClosest(),Ue(n.series,function(e){var i=c?1:d?Ze(e.options.pointRange,t,0):n.axisPointRange||0,e=e.options.pointPlacement;r=ue(r,i),n.single||(a=ue(a,o(e)?0:i/2),s=ue(s,"on"===e?0:i))})),l=n.ordinalSlope&&t?n.ordinalSlope/t:1,n.minPointOffset=a*=l,n.pointRangePadding=s*=l,n.pointRange=de(r,i),d&&(n.closestPointRange=t)),e&&(n.oldTransA=u),n.translationSlope=n.transA=u=n.len/(i+s||1),n.transB=n.horiz?n.left:n.bottom,n.minPixelPadding=u*a},minFromRange:function(){return this.max-this.range},setTickInterval:function(e){var n,i,r,o,a=this,s=a.chart,l=a.options,u=a.isLog,d=a.log2lin,p=a.isDatetimeAxis,h=a.isXAxis,f=a.isLinked,m=l.maxPadding,g=l.minPadding,v=l.tickInterval,y=l.tickPixelInterval,x=a.categories,w=a.threshold,E=a.softThreshold;!p&&!x&&!f&&this.getTickAmount(),r=Ze(a.userMin,l.min),o=Ze(a.userMax,l.max),f?(a.linkedParent=s[a.coll][l.linkedTo],s=a.linkedParent.getExtremes(),a.min=Ze(s.min,s.dataMin),a.max=Ze(s.max,s.dataMax),l.type!==a.linkedParent.options.type&&t(11,1)):(!E&&c(w)&&(a.dataMin>=w?(n=w,g=0):a.dataMax<=w&&(i=w,m=0)),a.min=Ze(r,n,a.dataMin),a.max=Ze(o,i,a.dataMax)),u&&(!e&&de(a.min,Ze(a.dataMin,a.min))<=0&&t(10,1),a.min=T(d(a.min),15),a.max=T(d(a.max),15)),a.range&&c(a.max)&&(a.userMin=a.min=r=ue(a.min,a.minFromRange()),a.userMax=o=a.max,a.range=null),ze(a,"foundExtremes"),a.beforePadding&&a.beforePadding(),a.adjustForMinRange(),x||a.axisPointRange||a.usePercentage||f||!c(a.min)||!c(a.max)||!(d=a.max-a.min)||(!c(r)&&g&&(a.min-=d*g),!c(o)&&m&&(a.max+=d*m)),Qe(l.floor)&&(a.min=ue(a.min,l.floor)),Qe(l.ceiling)&&(a.max=de(a.max,l.ceiling)),E&&c(a.dataMin)&&(w=w||0,!c(r)&&a.min<w&&a.dataMin>=w?a.min=w:!c(o)&&a.max>w&&a.dataMax<=w&&(a.max=w)),a.tickInterval=a.min===a.max||void 0===a.min||void 0===a.max?1:f&&!v&&y===a.linkedParent.options.tickPixelInterval?v=a.linkedParent.tickInterval:Ze(v,this.tickAmount?(a.max-a.min)/ue(this.tickAmount-1,1):void 0,x?1:(a.max-a.min)*y/ue(a.len,y)),h&&!e&&Ue(a.series,function(e){e.processData(a.min!==a.oldMin||a.max!==a.oldMax)}),a.setAxisTranslation(!0),a.beforeSetTickPositions&&a.beforeSetTickPositions(),a.postProcessTickInterval&&(a.tickInterval=a.postProcessTickInterval(a.tickInterval)),a.pointRange&&!v&&(a.tickInterval=ue(a.pointRange,a.tickInterval)),e=Ze(l.minTickInterval,a.isDatetimeAxis&&a.closestPointRange),!v&&a.tickInterval<e&&(a.tickInterval=e),p||u||v||(a.tickInterval=k(a.tickInterval,null,b(a.tickInterval),Ze(l.allowDecimals,!(a.tickInterval>.5&&a.tickInterval<5&&a.max>1e3&&a.max<9999)),!!this.tickAmount)),!this.tickAmount&&this.len&&(a.tickInterval=a.unsquish()),this.setTickPositions()},setTickPositions:function(){var e,t,n=this.options,i=n.tickPositions,r=n.tickPositioner,o=n.startOnTick,a=n.endOnTick;this.tickmarkOffset=this.categories&&"between"===n.tickmarkPlacement&&1===this.tickInterval?.5:0,this.minorTickInterval="auto"===n.minorTickInterval&&this.tickInterval?this.tickInterval/5:n.minorTickInterval,this.tickPositions=e=i&&i.slice(),!e&&(e=this.isDatetimeAxis?this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval,n.units),this.min,this.max,n.startOfWeek,this.ordinalPositions,this.closestPointRange,!0):this.isLog?this.getLogTickPositions(this.tickInterval,this.min,this.max):this.getLinearTickPositions(this.tickInterval,this.min,this.max),e.length>this.len&&(e=[e[0],e.pop()]),this.tickPositions=e,r&&(r=r.apply(this,[this.min,this.max])))&&(this.tickPositions=e=r),this.isLinked||(this.trimTicks(e,o,a),this.min===this.max&&c(this.min)&&!this.tickAmount&&(t=!0,this.min-=.5,this.max+=.5),this.single=t,!i&&!r&&this.adjustTickAmount())},trimTicks:function(e,t,n){var i=e[0],r=e[e.length-1],o=this.minPointOffset||0;if(t)this.min=i;else for(;this.min-o>e[0];)e.shift();if(n)this.max=r;else for(;this.max+o<e[e.length-1];)e.pop();0===e.length&&c(i)&&e.push((r+i)/2)},alignToOthers:function(){var e,t={},n=this.options;return this.chart.options.chart.alignTicks!==!1&&n.alignTicks!==!1&&Ue(this.chart[this.coll],function(n){var i=n.options,i=[n.horiz?i.left:i.top,i.width,i.height,i.pane].join(",");n.series.length&&(t[i]?e=!0:t[i]=1)}),e},getTickAmount:function(){var e=this.options,t=e.tickAmount,n=e.tickPixelInterval;!c(e.tickInterval)&&this.len<n&&!this.isRadial&&!this.isLog&&e.startOnTick&&e.endOnTick&&(t=2),!t&&this.alignToOthers()&&(t=ce(this.len/n)+1),t<4&&(this.finalTickAmt=t,t=5),this.tickAmount=t},adjustTickAmount:function(){var e=this.tickInterval,t=this.tickPositions,n=this.tickAmount,i=this.finalTickAmt,r=t&&t.length;if(r<n){for(;t.length<n;)t.push(T(t[t.length-1]+e));this.transA*=(r-1)/(n-1),this.max=t[t.length-1]}else r>n&&(this.tickInterval*=2,this.setTickPositions());if(c(i)){for(e=n=t.length;e--;)(3===i&&e%2===1||i<=2&&e>0&&e<n-1)&&t.splice(e,1);this.finalTickAmt=A}},setScale:function(){var e,t;this.oldMin=this.min,this.oldMax=this.max,this.oldAxisLength=this.len,this.setAxisSize(),t=this.len!==this.oldAxisLength,Ue(this.series,function(t){(t.isDirtyData||t.isDirty||t.xAxis.isDirty)&&(e=!0)}),t||e||this.isLinked||this.forceRedraw||this.userMin!==this.oldUserMin||this.userMax!==this.oldUserMax||this.alignToOthers()?(this.resetStacks&&this.resetStacks(),this.forceRedraw=!1,this.getSeriesExtremes(),this.setTickInterval(),this.oldUserMin=this.userMin,this.oldUserMax=this.userMax,this.isDirty||(this.isDirty=t||this.min!==this.oldMin||this.max!==this.oldMax)):this.cleanStacks&&this.cleanStacks()},setExtremes:function(e,t,n,i,r){var o=this,a=o.chart,n=Ze(n,!0);Ue(o.series,function(e){delete e.kdTree}),r=Ke(r,{min:e,max:t}),ze(o,"setExtremes",r,function(){o.userMin=e,o.userMax=t,o.eventArgs=r,n&&a.redraw(i)})},zoom:function(e,t){var n=this.dataMin,i=this.dataMax,r=this.options,o=de(n,Ze(r.min,n)),r=ue(i,Ze(r.max,i));return this.allowZoomOutside||(c(n)&&e<=o&&(e=o),c(i)&&t>=r&&(t=r)),this.displayBtn=e!==A||t!==A,this.setExtremes(e,t,!1,A,{trigger:"zoom"}),!0},setAxisSize:function(){var e=this.chart,t=this.options,n=t.offsetLeft||0,i=this.horiz,r=Ze(t.width,e.plotWidth-n+(t.offsetRight||0)),o=Ze(t.height,e.plotHeight),a=Ze(t.top,e.plotTop),t=Ze(t.left,e.plotLeft+n),n=/%$/;n.test(o)&&(o=Math.round(parseFloat(o)/100*e.plotHeight)),n.test(a)&&(a=Math.round(parseFloat(a)/100*e.plotHeight+e.plotTop)),this.left=t,this.top=a,this.width=r,this.height=o,this.bottom=e.chartHeight-o-a,this.right=e.chartWidth-r-t,this.len=ue(i?r:o,0),this.pos=i?t:a},getExtremes:function(){var e=this.isLog,t=this.lin2log;return{min:e?T(t(this.min)):this.min,max:e?T(t(this.max)):this.max,dataMin:this.dataMin,dataMax:this.dataMax,userMin:this.userMin,userMax:this.userMax}},getThreshold:function(e){var t=this.isLog,n=this.lin2log,i=t?n(this.min):this.min,t=t?n(this.max):this.max;return null===e?e=t<0?t:i:i>e?e=i:t<e&&(e=t),this.translate(e,0,1,0,1)},autoLabelAlign:function(e){return e=(Ze(e,0)-90*this.side+720)%360,e>15&&e<165?"right":e>195&&e<345?"left":"center"},tickSize:function(e){var t=this.options,n=t[e+"Length"],i=Ze(t[e+"Width"],"tick"===e&&this.isXAxis?1:0);if(i&&n)return"inside"===t[e+"Position"]&&(n=-n),[n,i]},labelMetrics:function(){return this.chart.renderer.fontMetrics(this.options.labels.style.fontSize,this.ticks[0]&&this.ticks[0].label)},unsquish:function(){var e,t,n,i=this.options.labels,r=this.horiz,o=this.tickInterval,a=o,s=this.len/(((this.categories?1:0)+this.max-this.min)/o),l=i.rotation,u=this.labelMetrics(),d=Number.MAX_VALUE,p=function(e){return e/=s||1,e=e>1?ce(e):1,e*o};return r?(n=!i.staggerLines&&!i.step&&(c(l)?[l]:s<Ze(i.autoRotationLimit,80)&&i.autoRotation))&&Ue(n,function(n){var i;(n===l||n&&n>=-90&&n<=90)&&(t=p(pe(u.h/fe(ge*n))),i=t+pe(n/360),i<d&&(d=i,e=n,a=t))}):i.step||(a=p(u.h)),this.autoRotation=n,this.labelRotation=Ze(e,l),a},getSlotWidth:function(){var e=this.chart,t=this.horiz,n=this.options.labels,i=Math.max(this.tickPositions.length-(this.categories?0:1),1),r=e.margin[3];return t&&(n.step||0)<2&&!n.rotation&&(this.staggerLines||1)*e.plotWidth/i||!t&&(r&&r-e.spacing[3]||.33*e.chartWidth)},renderUnsquish:function(){var e,t,n,r=this.chart,a=r.renderer,s=this.tickPositions,l=this.ticks,c=this.options.labels,u=this.horiz,d=this.getSlotWidth(),p=ue(1,se(d-2*(c.padding||5))),h={},f=this.labelMetrics(),m=c.style.textOverflow,g=0;if(o(c.rotation)||(h.rotation=c.rotation||0),this.autoRotation)Ue(s,function(e){(e=l[e])&&e.labelLength>g&&(g=e.labelLength)}),g>p&&g>f.h?h.rotation=this.labelRotation:this.labelRotation=0;else if(d&&(e={width:p+"px"},!m))for(e.textOverflow="clip",t=s.length;!u&&t--;)n=s[t],(p=l[n].label)&&("ellipsis"===p.styles.textOverflow?p.css({textOverflow:"clip"}):l[n].labelLength>d&&p.css({width:d+"px"}),p.getBBox().height>this.len/s.length-(f.h-f.f)&&(p.specCss={textOverflow:"ellipsis"}));h.rotation&&(e={width:(g>.5*r.chartHeight?.33*r.chartHeight:r.chartHeight)+"px"},!m)&&(e.textOverflow="ellipsis"),(this.labelAlign=c.align||this.autoLabelAlign(this.labelRotation))&&(h.align=this.labelAlign),Ue(s,function(t){var n=(t=l[t])&&t.label;n&&(n.attr(h),e&&n.css(i(e,n.specCss)),delete n.specCss,t.rotation=h.rotation)}),this.tickRotCorr=a.rotCorr(f.b,this.labelRotation||0,0!==this.side)},hasData:function(){return this.hasVisibleSeries||c(this.min)&&c(this.max)&&!!this.tickPositions},getOffset:function(){var e,t,n,i,r=this,o=r.chart,a=o.renderer,s=r.options,l=r.tickPositions,u=r.ticks,d=r.horiz,p=r.side,h=o.inverted?[1,0,3,2][p]:p,f=0,m=0,g=s.title,v=s.labels,y=0,b=r.opposite,k=o.axisOffset,o=o.clipOffset,x=[-1,1,1,-1][p],w=r.axisParent,E=this.tickSize("tick");if(e=r.hasData(),r.showAxis=t=e||Ze(s.showEmpty,!0),r.staggerLines=r.horiz&&v.staggerLines,r.axisGroup||(r.gridGroup=a.g("grid").attr({zIndex:s.gridZIndex||1}).add(w),r.axisGroup=a.g("axis").attr({zIndex:s.zIndex||2}).add(w),r.labelGroup=a.g("axis-labels").attr({zIndex:v.zIndex||7}).addClass("highcharts-"+r.coll.toLowerCase()+"-labels").add(w)),e||r.isLinked)Ue(l,function(e){u[e]?u[e].addLabel():u[e]=new N(r,e)}),r.renderUnsquish(),v.reserveSpace!==!1&&(0===p||2===p||{1:"left",3:"right"}[p]===r.labelAlign||"center"===r.labelAlign)&&Ue(l,function(e){y=ue(u[e].getLabelSize(),y)}),r.staggerLines&&(y*=r.staggerLines,r.labelOffset=y*(r.opposite?-1:1));else for(i in u)u[i].destroy(),delete u[i];g&&g.text&&g.enabled!==!1&&(r.axisTitle||((i=g.textAlign)||(i=(d?{low:"left",middle:"center",high:"right"}:{low:b?"right":"left",middle:"center",high:b?"left":"right"})[g.align]),r.axisTitle=a.text(g.text,0,0,g.useHTML).attr({zIndex:7,rotation:g.rotation||0,align:i}).addClass("highcharts-"+this.coll.toLowerCase()+"-title").css(g.style).add(r.axisGroup),r.axisTitle.isNew=!0),t&&(f=r.axisTitle.getBBox()[d?"height":"width"],n=g.offset,m=c(n)?0:Ze(g.margin,d?5:10)),r.axisTitle[t?"show":"hide"](!0)),r.offset=x*Ze(s.offset,k[p]),r.tickRotCorr=r.tickRotCorr||{x:0,y:0},a=0===p?-r.labelMetrics().h:2===p?r.tickRotCorr.y:0,m=Math.abs(y)+m,y&&(m-=a,m+=x*(d?Ze(v.y,r.tickRotCorr.y+8*x):v.x)),r.axisTitleMargin=Ze(n,m),k[p]=ue(k[p],r.axisTitleMargin+f+x*r.offset,m,e&&l.length&&E?E[0]:0),s=s.offset?0:2*le(s.lineWidth/2),o[h]=ue(o[h],s)},getLinePath:function(e){var t=this.chart,n=this.opposite,i=this.offset,r=this.horiz,o=this.left+(n?this.width:0)+i,i=t.chartHeight-this.bottom-(n?this.height:0)+i;return n&&(e*=-1),t.renderer.crispLine(["M",r?this.left:o,r?i:this.top,"L",r?t.chartWidth-this.right:o,r?i:t.chartHeight-this.bottom],e)},getTitlePosition:function(){var e=this.horiz,t=this.left,n=this.top,i=this.len,o=this.options.title,a=e?t:n,s=this.opposite,l=this.offset,c=o.x||0,u=o.y||0,d=r(o.style.fontSize||12),i={low:a+(e?0:i),middle:a+i/2,high:a+(e?i:0)}[o.align],t=(e?n+this.height:t)+(e?1:-1)*(s?-1:1)*this.axisTitleMargin+(2===this.side?d:0);return{x:e?i+c:t+(s?this.width:0)+l+c,y:e?t+u-(s?this.height:0)+l:i+u}},render:function(){var e,t,n,i=this,r=i.chart,o=r.renderer,a=i.options,s=i.isLog,l=i.lin2log,c=i.isLinked,u=i.tickPositions,d=i.axisTitle,h=i.ticks,f=i.minorTicks,m=i.alternateBands,g=a.stackLabels,v=a.alternateGridColor,y=i.tickmarkOffset,b=a.lineWidth,k=r.hasRendered&&Qe(i.oldMin),x=i.showAxis,w=_(o.globalAnimation);i.labelEdge.length=0,i.overlap=!1,Ue([h,f,m],function(e){for(var t in e)e[t].isActive=!1}),(i.hasData()||c)&&(i.minorTickInterval&&!i.categories&&Ue(i.getMinorTickPositions(),function(e){f[e]||(f[e]=new N(i,e,"minor")),k&&f[e].isNew&&f[e].render(null,!0),f[e].render(null,!1,1)}),u.length&&(Ue(u,function(e,t){(!c||e>=i.min&&e<=i.max)&&(h[e]||(h[e]=new N(i,e)),k&&h[e].isNew&&h[e].render(t,!0,.1),h[e].render(t))}),y&&(0===i.min||i.single))&&(h[-1]||(h[-1]=new N(i,(-1),null,(!0))),h[-1].render(-1)),v&&Ue(u,function(e,o){n=u[o+1]!==A?u[o+1]+y:i.max-y,o%2===0&&e<i.max&&n<=i.max+(r.polar?-y:y)&&(m[e]||(m[e]=new re.PlotLineOrBand(i)),t=e+y,m[e].options={from:s?l(t):t,to:s?l(n):n,color:v},m[e].render(),m[e].isActive=!0)}),i._addedPlotLB||(Ue((a.plotLines||[]).concat(a.plotBands||[]),function(e){i.addPlotBandOrLine(e)}),i._addedPlotLB=!0)),Ue([h,f,m],function(e){var t,n,i=[],o=w.duration;for(t in e)e[t].isActive||(e[t].render(t,!1,0),e[t].isActive=!1,i.push(t));p(function(){for(n=i.length;n--;)e[i[n]]&&!e[i[n]].isActive&&(e[i[n]].destroy(),delete e[i[n]])},e!==m&&r.hasRendered&&o?o:0)}),b&&(e=i.getLinePath(b),i.axisLine?i.axisLine.animate({d:e}):i.axisLine=o.path(e).attr({stroke:a.lineColor,"stroke-width":b,zIndex:7}).add(i.axisGroup),i.axisLine[x?"show":"hide"](!0)),d&&x&&(d[d.isNew?"attr":"animate"](i.getTitlePosition()),d.isNew=!1),g&&g.enabled&&i.renderStackTotals(),i.isDirty=!1},redraw:function(){this.visible&&(this.render(),Ue(this.plotLinesAndBands,function(e){e.render()})),Ue(this.series,function(e){e.isDirty=!0})},destroy:function(e){var t,n=this,i=n.stacks,r=n.plotLinesAndBands;e||He(n);for(t in i)C(i[t]),i[t]=null;for(Ue([n.ticks,n.minorTicks,n.alternateBands],function(e){C(e)}),e=r.length;e--;)r[e].destroy();Ue("stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup".split(","),function(e){n[e]&&(n[e]=n[e].destroy())}),this.cross&&this.cross.destroy()},drawCrosshair:function(e,t){var n,i,r,o=this.crosshair;this.crosshair&&(c(t)||!Ze(o.snap,!0))!==!1?(Ze(o.snap,!0)?c(t)&&(n=this.isXAxis?t.plotX:this.len-t.plotY):n=this.horiz?e.chartX-this.pos:this.len-e.chartY+this.pos,n=this.isRadial?this.getPlotLinePath(this.isXAxis?t.x:Ze(t.stackY,t.y))||null:this.getPlotLinePath(null,null,null,null,n)||null,null===n?this.hideCrosshair():(i=this.categories&&!this.isRadial,r=Ze(o.width,i?this.transA:1),this.cross?this.cross.attr({d:n,visibility:"visible","stroke-width":r}):(i={"pointer-events":"none","stroke-width":r,stroke:o.color||(i?"rgba(155,200,255,0.2)":"#C0C0C0"),zIndex:Ze(o.zIndex,2)},o.dashStyle&&(i.dashstyle=o.dashStyle),this.cross=this.chart.renderer.path(n).attr(i).add()))):this.hideCrosshair()},hideCrosshair:function(){this.cross&&this.cross.hide()}},Ke(ot.prototype,{getPlotBandPath:function(e,t){var n=this.getPlotLinePath(t,null,null,!0),i=this.getPlotLinePath(e,null,null,!0);return i&&n?(i.flat=i.toString()===n.toString(),i.push(n[4],n[5],n[1],n[2])):i=null,i},addPlotBand:function(e){return this.addPlotBandOrLine(e,"plotBands")},addPlotLine:function(e){return this.addPlotBandOrLine(e,"plotLines")},addPlotBandOrLine:function(e,t){var n=new re.PlotLineOrBand(this,e).render(),i=this.userOptions;return n&&(t&&(i[t]=i[t]||[],i[t].push(e)),this.plotLinesAndBands.push(n)),n},removePlotBandOrLine:function(e){for(var t=this.plotLinesAndBands,n=this.options,i=this.userOptions,r=t.length;r--;)t[r].id===e&&t[r].destroy();Ue([n.plotLines||[],i.plotLines||[],n.plotBands||[],i.plotBands||[]],function(t){for(r=t.length;r--;)t[r].id===e&&l(t,t[r])})}}),ot.prototype.getTimeTicks=function(e,t,n,i){var r,o=[],a={},s=F.global.useUTC,l=new Y(t-v(t)),u=e.unitRange,d=e.count;if(c(t)){l[Z](u>=B.second?0:d*le(l.getMilliseconds()/d)),u>=B.second&&l[$](u>=B.minute?0:d*le(l.getSeconds()/d)),u>=B.minute&&l[J](u>=B.hour?0:d*le(l[z]()/d)),u>=B.hour&&l[ee](u>=B.day?0:d*le(l[G]()/d)),u>=B.day&&l[te](u>=B.month?1:d*le(l[q]()/d)),u>=B.month&&(l[ne](u>=B.year?0:d*le(l[K]()/d)),r=l[Q]()),u>=B.year&&(r-=r%d,l[ie](r)),u===B.week&&l[te](l[q]()-l[X]()+Ze(i,1)),t=1,(W||H)&&(l=l.getTime(),l=new Y(l+v(l))),r=l[Q]();for(var i=l.getTime(),p=l[K](),h=l[q](),f=!s||!!H,m=(B.day+(s?v(l):6e4*l.getTimezoneOffset()))%B.day;i<n;)o.push(i),u===B.year?i=V(r+t*d,0):u===B.month?i=V(r,p+t*d):!f||u!==B.day&&u!==B.week?i+=u*d:i=V(r,p,h+t*d*(u===B.day?1:7)),t++;o.push(i),Ue(Be(o,function(e){return u<=B.hour&&e%B.day===m}),function(e){a[e]="day"})}return o.info=Ke(e,{higherRanks:a,totalRange:u*d}),o},ot.prototype.normalizeTimeTickInterval=function(e,t){var n,i=t||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]],r=i[i.length-1],o=B[r[0]],a=r[1];for(n=0;n<i.length&&(r=i[n],o=B[r[0]],a=r[1],!(i[n+1]&&e<=(o*a[a.length-1]+B[i[n+1][0]])/2));n++);return o===B.year&&e<5*o&&(a=[1,2,5]),i=k(e/o,a,"year"===r[0]?ue(b(e/o),1):1),{unitRange:o,count:i,unitName:r[0]}},ot.prototype.getLogTickPositions=function(e,t,n,i){var r=this.options,o=this.len,a=this.lin2log,s=this.log2lin,l=[];if(i||(this._minorAutoInterval=null),e>=.5)e=se(e),l=this.getLinearTickPositions(e,t,n);else if(e>=.08)for(var c,u,d,p,h,o=le(t),r=e>.3?[1,2,4]:e>.15?[1,2,4,6,8]:[1,2,3,4,5,6,7,8,9];o<n+1&&!h;o++)for(u=r.length,c=0;c<u&&!h;c++)d=s(a(o)*r[c]),d>t&&(!i||p<=n)&&p!==A&&l.push(p),p>n&&(h=!0),p=d;else t=a(t),n=a(n),e=r[i?"minorTickInterval":"tickInterval"],e=Ze("auto"===e?null:e,this._minorAutoInterval,(n-t)*(r.tickPixelInterval/(i?5:1))/((i?o/this.tickPositions.length:o)||1)),e=k(e,null,b(e)),l=Ve(this.getLinearTickPositions(e,t,n),s),i||(this._minorAutoInterval=e/5);return i||(this.tickInterval=e),l},ot.prototype.log2lin=function(e){return ae.log(e)/ae.LN10},ot.prototype.lin2log=function(e){return ae.pow(10,e)};var at=re.Tooltip=function(){this.init.apply(this,arguments)};at.prototype={init:function(e,t){var n=t.borderWidth,i=t.style,o=r(i.padding);this.chart=e,this.options=t,this.crosshairs=[],this.now={x:0,y:0},this.isHidden=!0,this.label=e.renderer.label("",0,0,t.shape||"callout",null,null,t.useHTML,null,"tooltip").attr({padding:o,fill:t.backgroundColor,"stroke-width":n,r:t.borderRadius,zIndex:8}).css(i).css({padding:0}).add().attr({y:-9999}),Se||this.label.shadow(t.shadow),this.shared=t.shared},destroy:function(){this.label&&(this.label=this.label.destroy()),clearTimeout(this.hideTimer),clearTimeout(this.tooltipTimeout)},move:function(e,t,n,i){var r=this,o=r.now,a=r.options.animation!==!1&&!r.isHidden&&(pe(e-o.x)>1||pe(t-o.y)>1),s=r.followPointer||r.len>1;Ke(o,{x:a?(2*o.x+e)/3:e,y:a?(o.y+t)/2:t,anchorX:s?A:a?(2*o.anchorX+n)/3:n,anchorY:s?A:a?(o.anchorY+i)/2:i}),r.label.attr(o),a&&(clearTimeout(this.tooltipTimeout),this.tooltipTimeout=setTimeout(function(){r&&r.move(e,t,n,i)},32))},hide:function(e){var t=this;clearTimeout(this.hideTimer),e=Ze(e,this.options.hideDelay,500),this.isHidden||(this.hideTimer=p(function(){t.label[e?"fadeOut":"hide"](),t.isHidden=!0},e))},getAnchor:function(e,t){var n,i,r,o=this.chart,a=o.inverted,s=o.plotTop,l=o.plotLeft,c=0,u=0,e=d(e);return n=e[0].tooltipPos,this.followPointer&&t&&(t.chartX===A&&(t=o.pointer.normalize(t)),n=[t.chartX-o.plotLeft,t.chartY-s]),n||(Ue(e,function(e){i=e.series.yAxis,r=e.series.xAxis,c+=e.plotX+(!a&&r?r.left-l:0),u+=(e.plotLow?(e.plotLow+e.plotHigh)/2:e.plotY)+(!a&&i?i.top-s:0)}),c/=e.length,u/=e.length,n=[a?o.plotWidth-u:c,this.shared&&!a&&e.length>1&&t?t.chartY-s:a?o.plotHeight-c:u]),Ve(n,se)},getPosition:function(e,t,n){var i,r=this.chart,o=this.distance,a={},s=n.h||0,l=["y",r.chartHeight,t,n.plotY+r.plotTop,r.plotTop,r.plotTop+r.plotHeight],c=["x",r.chartWidth,e,n.plotX+r.plotLeft,r.plotLeft,r.plotLeft+r.plotWidth],u=!this.followPointer&&Ze(n.ttBelow,!r.inverted==!!n.negative),d=function(e,t,n,i,r,l){var c=n<i-o,d=i+o+n<t,p=i-o-n;if(i+=o,u&&d)a[e]=i;else if(!u&&c)a[e]=p;else if(c)a[e]=de(l-n,p-s<0?p:p-s);else{if(!d)return!1;a[e]=ue(r,i+s+n>t?i:i+s)}},p=function(e,t,n,i){var r;return i<o||i>t-o?r=!1:a[e]=i<n/2?1:i>t-n/2?t-n-2:i-n/2,r},h=function(e){var t=l;l=c,c=t,i=e},f=function(){d.apply(0,l)!==!1?p.apply(0,c)===!1&&!i&&(h(!0),f()):i?a.x=a.y=0:(h(!0),f())};return(r.inverted||this.len>1)&&h(),f(),a},defaultFormatter:function(e){var t,n=this.points||d(this);return t=[e.tooltipFooterHeaderFormatter(n[0])],t=t.concat(e.bodyFormatter(n)),t.push(e.tooltipFooterHeaderFormatter(n[0],!0)),t.join("")},refresh:function(e,t){var n,i,r,o,a=this.chart,s=this.label,l=this.options,c={},u=[];o=l.formatter||this.defaultFormatter;var p,c=a.hoverPoints,h=this.shared;clearTimeout(this.hideTimer),this.followPointer=d(e)[0].series.tooltipOptions.followPointer,r=this.getAnchor(e,t),n=r[0],i=r[1],!h||e.series&&e.series.noSharedTooltip?c=e.getLabelConfig():(a.hoverPoints=e,c&&Ue(c,function(e){e.setState()}),Ue(e,function(e){e.setState("hover"),u.push(e.getLabelConfig())}),c={x:e[0].category,y:e[0].y},c.points=u,this.len=u.length,e=e[0]),o=o.call(c,this),c=e.series,this.distance=Ze(c.tooltipOptions.distance,16),o===!1?this.hide():(this.isHidden&&(Xe(s),s.attr("opacity",1).show()),s.attr({text:o}),p=l.borderColor||e.color||c.color||"#606060",s.attr({stroke:p}),this.updatePosition({plotX:n,plotY:i,negative:e.negative,ttBelow:e.ttBelow,h:r[2]||0}),this.isHidden=!1),ze(a,"tooltipRefresh",{text:o,x:n+a.plotLeft,y:i+a.plotTop,borderColor:p})},updatePosition:function(e){var t=this.chart,n=this.label,n=(this.options.positioner||this.getPosition).call(this,n.width,n.height,e);this.move(se(n.x),se(n.y||0),e.plotX+t.plotLeft,e.plotY+t.plotTop)},getXDateFormat:function(e,t,n){var i,r,o,t=t.dateTimeLabelFormats,a=n&&n.closestPointRange,s={millisecond:15,second:12,minute:9,hour:6,day:3},l="millisecond";if(a){o=U("%m-%d %H:%M:%S.%L",e.x);for(r in B){if(a===B.week&&+U("%w",e.x)===n.options.startOfWeek&&"00:00:00.000"===o.substr(6)){r="week";break}if(B[r]>a){r=l;break}if(s[r]&&o.substr(s[r])!=="01-01 00:00:00.000".substr(s[r]))break;"week"!==r&&(l=r)}r&&(i=t[r])}else i=t.day;return i||t.year},tooltipFooterHeaderFormatter:function(e,t){var n=t?"footer":"header",i=e.series,r=i.tooltipOptions,o=r.xDateFormat,a=i.xAxis,s=a&&"datetime"===a.options.type&&Qe(e.key),n=r[n+"Format"];return s&&!o&&(o=this.getXDateFormat(e,r,a)),s&&o&&(n=n.replace("{point.key}","{point.key:"+o+"}")),y(n,{point:e,series:i})},bodyFormatter:function(e){return Ve(e,function(e){var t=e.series.tooltipOptions;return(t.pointFormatter||e.point.tooltipFormatter).call(e.point,t.pointFormat)})}};var st;L=oe&&oe.documentElement.ontouchstart!==A;var lt=re.Pointer=function(e,t){this.init(e,t)};if(lt.prototype={init:function(e,t){var n,i=t.chart,r=i.events,o=Se?"":i.zoomType,i=e.inverted;this.options=t,this.chart=e,this.zoomX=n=/x/.test(o),this.zoomY=o=/y/.test(o),this.zoomHor=n&&!i||o&&i,this.zoomVert=o&&!i||n&&i,this.hasZoom=n||o,this.runChartClick=r&&!!r.click,this.pinchDown=[],this.lastValidTouch={},re.Tooltip&&t.tooltip.enabled&&(e.tooltip=new at(e,t.tooltip),this.followTouchMove=Ze(t.tooltip.followTouchMove,!0)),this.setDOMEvents()},normalize:function(t,n){var i,r,t=t||e.event;return t.target||(t.target=t.srcElement),r=t.touches?t.touches.length?t.touches.item(0):t.changedTouches[0]:t,n||(this.chartPosition=n=Ye(this.chart.container)),r.pageX===A?(i=ue(t.x,t.clientX-n.left),r=t.y):(i=r.pageX-n.left,r=r.pageY-n.top),Ke(t,{chartX:se(i),chartY:se(r)})},getCoordinates:function(e){var t={xAxis:[],yAxis:[]};return Ue(this.chart.axes,function(n){t[n.isXAxis?"xAxis":"yAxis"].push({axis:n,value:n.toValue(e[n.horiz?"chartX":"chartY"])})}),t},runPointActions:function(e){var t,n,i,r,o=this.chart,a=o.series,s=o.tooltip,l=!!s&&s.shared,c=o.hoverPoint,u=o.hoverSeries,d=[Number.MAX_VALUE,Number.MAX_VALUE],p=[],h=[];if(!l&&!u)for(t=0;t<a.length;t++)!a[t].directTouch&&a[t].options.stickyTracking||(a=[]);if(u&&(l?u.noSharedTooltip:u.directTouch)&&c?h=[c]:(Ue(a,function(t){n=t.noSharedTooltip&&l,i=!l&&t.directTouch,t.visible&&!n&&!i&&Ze(t.options.enableMouseTracking,!0)&&(r=t.searchPoint(e,!n&&1===t.kdDimensions))&&p.push(r)}),Ue(p,function(e){e&&Ue(["dist","distX"],function(t,n){if(Qe(e[t])){var i=e[t]===d[n]&&e.series.group.zIndex>=h[n].series.group.zIndex;(e[t]<d[n]||i)&&(d[n]=e[t],h[n]=e)}})})),l)for(t=p.length;t--;)(p[t].clientX!==h[1].clientX||p[t].series.noSharedTooltip)&&p.splice(t,1);h[0]&&(h[0]!==this.prevKDPoint||s&&s.isHidden)?l&&!h[0].series.noSharedTooltip?(p.length&&s&&s.refresh(p,e),Ue(p,function(t){t.onMouseOver(e,t!==(u&&u.directTouch&&c||h[0]))}),this.prevKDPoint=h[1]):(s&&s.refresh(h[0],e),u&&u.directTouch||h[0].onMouseOver(e),this.prevKDPoint=h[0]):(a=u&&u.tooltipOptions.followPointer,s&&a&&!s.isHidden&&(a=s.getAnchor([{}],e),s.updatePosition({plotX:a[0],plotY:a[1]}))),this._onDocumentMouseMove||(this._onDocumentMouseMove=function(e){De[st]&&De[st].pointer.onDocumentMouseMove(e)},We(oe,"mousemove",this._onDocumentMouseMove)),Ue(l?p:[Ze(c,h[1])],function(t){Ue(o.axes,function(n){(!t||t.series[n.coll]===n)&&n.drawCrosshair(e,t)})})},reset:function(e,t){var n=this.chart,i=n.hoverSeries,r=n.hoverPoint,o=n.hoverPoints,a=n.tooltip,s=a&&a.shared?o:r;e&&s&&Ue(d(s),function(t){t.series.isCartesian&&void 0===t.plotX&&(e=!1)}),e?a&&s&&(a.refresh(s),r&&(r.setState(r.state,!0),Ue(n.axes,function(e){Ze(e.crosshair&&e.crosshair.snap,!0)?e.drawCrosshair(null,r):e.hideCrosshair()}))):(r&&r.onMouseOut(),o&&Ue(o,function(e){e.setState()}),i&&i.onMouseOut(),a&&a.hide(t),this._onDocumentMouseMove&&(He(oe,"mousemove",this._onDocumentMouseMove),this._onDocumentMouseMove=null),Ue(n.axes,function(e){e.hideCrosshair()}),this.hoverX=n.hoverPoints=n.hoverPoint=null)},scaleGroups:function(e,t){var n,i=this.chart;Ue(i.series,function(r){n=e||r.getPlotBox(),r.xAxis&&r.xAxis.zoomEnabled&&(r.group.attr(n),r.markerGroup&&(r.markerGroup.attr(n),r.markerGroup.clip(t?i.clipRect:null)),r.dataLabelsGroup&&r.dataLabelsGroup.attr(n))}),i.clipRect.attr(t||i.clipBox)},dragStart:function(e){var t=this.chart;t.mouseIsDown=e.type,t.cancelClick=!1,t.mouseDownX=this.mouseDownX=e.chartX,t.mouseDownY=this.mouseDownY=e.chartY},drag:function(e){var t,n=this.chart,i=n.options.chart,r=e.chartX,o=e.chartY,a=this.zoomHor,s=this.zoomVert,l=n.plotLeft,c=n.plotTop,u=n.plotWidth,d=n.plotHeight,p=this.selectionMarker,h=this.mouseDownX,f=this.mouseDownY,m=i.panKey&&e[i.panKey+"Key"];p&&p.touch||(r<l?r=l:r>l+u&&(r=l+u),o<c?o=c:o>c+d&&(o=c+d),this.hasDragged=Math.sqrt(Math.pow(h-r,2)+Math.pow(f-o,2)),this.hasDragged>10&&(t=n.isInsidePlot(h-l,f-c),n.hasCartesianSeries&&(this.zoomX||this.zoomY)&&t&&!m&&!p&&(this.selectionMarker=p=n.renderer.rect(l,c,a?1:u,s?1:d,0).attr({fill:i.selectionMarkerFill||"rgba(69,114,167,0.25)",zIndex:7}).add()),p&&a&&(r-=h,p.attr({width:pe(r),x:(r>0?0:r)+h})),p&&s&&(r=o-f,p.attr({height:pe(r),y:(r>0?0:r)+f})),t&&!p&&i.panning&&n.pan(e,i.panning)))},drop:function(e){var t=this,n=this.chart,i=this.hasPinched;if(this.selectionMarker){var r,o={originalEvent:e,xAxis:[],yAxis:[]},a=this.selectionMarker,s=a.attr?a.attr("x"):a.x,l=a.attr?a.attr("y"):a.y,u=a.attr?a.attr("width"):a.width,d=a.attr?a.attr("height"):a.height;(this.hasDragged||i)&&(Ue(n.axes,function(n){if(n.zoomEnabled&&c(n.min)&&(i||t[{xAxis:"zoomX",yAxis:"zoomY"}[n.coll]])){var a=n.horiz,p="touchend"===e.type?n.minPixelPadding:0,h=n.toValue((a?s:l)+p),a=n.toValue((a?s+u:l+d)-p);o[n.coll].push({axis:n,min:de(h,a),max:ue(h,a)}),r=!0}}),r&&ze(n,"selection",o,function(e){n.zoom(Ke(e,i?{animation:!1}:null))})),this.selectionMarker=this.selectionMarker.destroy(),i&&this.scaleGroups()}n&&(h(n.container,{cursor:n._cursor}),n.cancelClick=this.hasDragged>10,n.mouseIsDown=this.hasDragged=this.hasPinched=!1,this.pinchDown=[])},onContainerMouseDown:function(e){e=this.normalize(e),e.preventDefault&&e.preventDefault(),this.dragStart(e)},onDocumentMouseUp:function(e){De[st]&&De[st].pointer.drop(e)},onDocumentMouseMove:function(e){var t=this.chart,n=this.chartPosition,e=this.normalize(e,n);n&&!this.inClass(e.target,"highcharts-tracker")&&!t.isInsidePlot(e.chartX-t.plotLeft,e.chartY-t.plotTop)&&this.reset()},onContainerMouseLeave:function(e){var t=De[st];t&&(e.relatedTarget||e.toElement)&&(t.pointer.reset(),t.pointer.chartPosition=null)},onContainerMouseMove:function(e){var t=this.chart;c(st)&&De[st]&&De[st].mouseIsDown||(st=t.index),e=this.normalize(e),e.returnValue=!1,"mousedown"===t.mouseIsDown&&this.drag(e),(this.inClass(e.target,"highcharts-tracker")||t.isInsidePlot(e.chartX-t.plotLeft,e.chartY-t.plotTop))&&!t.openMenu&&this.runPointActions(e)},inClass:function(e,t){for(var n;e;){if(n=u(e,"class")){if(n.indexOf(t)!==-1)return!0;if(n.indexOf("highcharts-container")!==-1)return!1}e=e.parentNode}},onTrackerMouseOut:function(e){var t=this.chart.hoverSeries,e=e.relatedTarget||e.toElement;!t||!e||t.options.stickyTracking||this.inClass(e,"highcharts-tooltip")||this.inClass(e,"highcharts-series-"+t.index)||t.onMouseOut()},onContainerClick:function(e){var t=this.chart,n=t.hoverPoint,i=t.plotLeft,r=t.plotTop,e=this.normalize(e);t.cancelClick||(n&&this.inClass(e.target,"highcharts-tracker")?(ze(n.series,"click",Ke(e,{point:n})),t.hoverPoint&&n.firePointEvent("click",e)):(Ke(e,this.getCoordinates(e)),t.isInsidePlot(e.chartX-i,e.chartY-r)&&ze(t,"click",e)))},setDOMEvents:function(){var e=this,t=e.chart.container;t.onmousedown=function(t){e.onContainerMouseDown(t)},t.onmousemove=function(t){e.onContainerMouseMove(t)},t.onclick=function(t){e.onContainerClick(t)},We(t,"mouseleave",e.onContainerMouseLeave),1===Ne&&We(oe,"mouseup",e.onDocumentMouseUp),L&&(t.ontouchstart=function(t){e.onContainerTouchStart(t)},t.ontouchmove=function(t){e.onContainerTouchMove(t)},1===Ne&&We(oe,"touchend",e.onDocumentTouchEnd))},destroy:function(){var e;He(this.chart.container,"mouseleave",this.onContainerMouseLeave),Ne||(He(oe,"mouseup",this.onDocumentMouseUp),He(oe,"touchend",this.onDocumentTouchEnd)),clearInterval(this.tooltipTimeout);for(e in this)this[e]=null}},Ke(re.Pointer.prototype,{pinchTranslate:function(e,t,n,i,r,o){(this.zoomHor||this.pinchHor)&&this.pinchTranslateDirection(!0,e,t,n,i,r,o),(this.zoomVert||this.pinchVert)&&this.pinchTranslateDirection(!1,e,t,n,i,r,o)},pinchTranslateDirection:function(e,t,n,i,r,o,a,s){var l,c,u,d=this.chart,p=e?"x":"y",h=e?"X":"Y",f="chart"+h,m=e?"width":"height",g=d["plot"+(e?"Left":"Top")],v=s||1,y=d.inverted,b=d.bounds[e?"h":"v"],k=1===t.length,x=t[0][f],w=n[0][f],E=!k&&t[1][f],C=!k&&n[1][f],n=function(){!k&&pe(x-E)>20&&(v=s||pe(w-C)/pe(x-E)),c=(g-w)/v+x,l=d["plot"+(e?"Width":"Height")]/v};n(),t=c,t<b.min?(t=b.min,u=!0):t+l>b.max&&(t=b.max-l,u=!0),u?(w-=.8*(w-a[p][0]),k||(C-=.8*(C-a[p][1])),n()):a[p]=[w,C],y||(o[p]=c-g,o[m]=l),o=y?1/v:v,r[m]=l,r[p]=t,i[y?e?"scaleY":"scaleX":"scale"+h]=v,i["translate"+h]=o*g+(w-o*x)},pinch:function(e){var t=this,n=t.chart,i=t.pinchDown,r=e.touches,o=r.length,a=t.lastValidTouch,s=t.hasZoom,l=t.selectionMarker,c={},u=1===o&&(t.inClass(e.target,"highcharts-tracker")&&n.runTrackerClick||t.runChartClick),d={};o>1&&(t.initiated=!0),s&&t.initiated&&!u&&e.preventDefault(),Ve(r,function(e){return t.normalize(e)}),"touchstart"===e.type?(Ue(r,function(e,t){i[t]={chartX:e.chartX,chartY:e.chartY}}),a.x=[i[0].chartX,i[1]&&i[1].chartX],a.y=[i[0].chartY,i[1]&&i[1].chartY],Ue(n.axes,function(e){if(e.zoomEnabled){var t=n.bounds[e.horiz?"h":"v"],i=e.minPixelPadding,r=e.toPixels(Ze(e.options.min,e.dataMin)),o=e.toPixels(Ze(e.options.max,e.dataMax)),a=de(r,o),r=ue(r,o);t.min=de(e.pos,a-i),t.max=ue(e.pos+e.len,r+i)}}),t.res=!0):i.length&&(l||(t.selectionMarker=l=Ke({destroy:Oe,touch:!0},n.plotBox)),t.pinchTranslate(i,r,c,l,d,a),t.hasPinched=s,t.scaleGroups(c,d),!s&&t.followTouchMove&&1===o?this.runPointActions(t.normalize(e)):t.res&&(t.res=!1,this.reset(!1,0)))},touch:function(e,t){var n,i=this.chart;st=i.index,1===e.touches.length?(e=this.normalize(e),i.isInsidePlot(e.chartX-i.plotLeft,e.chartY-i.plotTop)&&!i.openMenu?(t&&this.runPointActions(e),"touchmove"===e.type&&(i=this.pinchDown,n=!!i[0]&&Math.sqrt(Math.pow(i[0].chartX-e.chartX,2)+Math.pow(i[0].chartY-e.chartY,2))>=4),Ze(n,!0)&&this.pinch(e)):t&&this.reset()):2===e.touches.length&&this.pinch(e)},onContainerTouchStart:function(e){
this.touch(e,!0)},onContainerTouchMove:function(e){this.touch(e)},onDocumentTouchEnd:function(e){De[st]&&De[st].pointer.drop(e)}}),e.PointerEvent||e.MSPointerEvent){var ct={},ut=!!e.PointerEvent,dt=function(){var e,t=[];t.item=function(e){return this[e]};for(e in ct)ct.hasOwnProperty(e)&&t.push({pageX:ct[e].pageX,pageY:ct[e].pageY,target:ct[e].target});return t},pt=function(e,t,n,i){"touch"!==e.pointerType&&e.pointerType!==e.MSPOINTER_TYPE_TOUCH||!De[st]||(i(e),i=De[st].pointer,i[t]({type:n,target:e.currentTarget,preventDefault:Oe,touches:dt()}))};Ke(lt.prototype,{onContainerPointerDown:function(e){pt(e,"onContainerTouchStart","touchstart",function(e){ct[e.pointerId]={pageX:e.pageX,pageY:e.pageY,target:e.currentTarget}})},onContainerPointerMove:function(e){pt(e,"onContainerTouchMove","touchmove",function(e){ct[e.pointerId]={pageX:e.pageX,pageY:e.pageY},ct[e.pointerId].target||(ct[e.pointerId].target=e.currentTarget)})},onDocumentPointerUp:function(e){pt(e,"onDocumentTouchEnd","touchend",function(e){delete ct[e.pointerId]})},batchMSEvents:function(e){e(this.chart.container,ut?"pointerdown":"MSPointerDown",this.onContainerPointerDown),e(this.chart.container,ut?"pointermove":"MSPointerMove",this.onContainerPointerMove),e(oe,ut?"pointerup":"MSPointerUp",this.onDocumentPointerUp)}}),$e(lt.prototype,"init",function(e,t,n){e.call(this,t,n),this.hasZoom&&h(t.container,{"-ms-touch-action":"none","touch-action":"none"})}),$e(lt.prototype,"setDOMEvents",function(e){e.apply(this),(this.hasZoom||this.followTouchMove)&&this.batchMSEvents(We)}),$e(lt.prototype,"destroy",function(e){this.batchMSEvents(He),e.call(this)})}var ht=re.Legend=function(e,t){this.init(e,t)};ht.prototype={init:function(e,t){var n=this,r=t.itemStyle,o=t.itemMarginTop||0;this.options=t,t.enabled&&(n.itemStyle=r,n.itemHiddenStyle=i(r,t.itemHiddenStyle),n.itemMarginTop=o,n.padding=r=Ze(t.padding,8),n.initialItemX=r,n.initialItemY=r-5,n.maxItemWidth=0,n.chart=e,n.itemHeight=0,n.symbolWidth=Ze(t.symbolWidth,16),n.pages=[],n.render(),We(n.chart,"endResize",function(){n.positionCheckboxes()}))},colorizeItem:function(e,t){var n,i=this.options,r=e.legendItem,o=e.legendLine,a=e.legendSymbol,s=this.itemHiddenStyle.color,i=t?i.itemStyle.color:s,l=t?e.legendColor||e.color||"#CCC":s,s=e.options&&e.options.marker,c={fill:l};if(r&&r.css({fill:i,color:i}),o&&o.attr({stroke:l}),a){if(s&&a.isMarker)for(n in c.stroke=l,s=e.convertAttribs(s))r=s[n],r!==A&&(c[n]=r);a.attr(c)}},positionItem:function(e){var t=this.options,n=t.symbolPadding,t=!t.rtl,i=e._legendItemPos,r=i[0],i=i[1],o=e.checkbox;(e=e.legendGroup)&&e.element&&e.translate(t?r:this.legendWidth-r-2*n-4,i),o&&(o.x=r,o.y=i)},destroyItem:function(e){var t=e.checkbox;Ue(["legendItem","legendLine","legendSymbol","legendGroup"],function(t){e[t]&&(e[t]=e[t].destroy())}),t&&P(e.checkbox)},destroy:function(){var e=this.group,t=this.box;t&&(this.box=t.destroy()),e&&(this.group=e.destroy())},positionCheckboxes:function(e){var t,n=this.group.alignAttr,i=this.clipHeight||this.legendHeight,r=this.titleHeight;n&&(t=n.translateY,Ue(this.allItems,function(o){var a,s=o.checkbox;s&&(a=t+r+s.y+(e||0)+3,h(s,{left:n.translateX+o.checkboxOffset+s.x-20+"px",top:a+"px",display:a>t-6&&a<t+i-6?"":"none"}))}))},renderTitle:function(){var e=this.padding,t=this.options.title,n=0;t.text&&(this.title||(this.title=this.chart.renderer.label(t.text,e-3,e-4,null,null,null,null,null,"legend-title").attr({zIndex:1}).css(t.style).add(this.group)),e=this.title.getBBox(),n=e.height,this.offsetWidth=e.width,this.contentGroup.attr({translateY:n})),this.titleHeight=n},setText:function(e){var t=this.options;e.legendItem.attr({text:t.labelFormat?y(t.labelFormat,e):t.labelFormatter.call(e)})},renderItem:function(e){var t=this.chart,n=t.renderer,r=this.options,o="horizontal"===r.layout,a=this.symbolWidth,s=r.symbolPadding,l=this.itemStyle,c=this.itemHiddenStyle,u=this.padding,d=o?Ze(r.itemDistance,20):0,p=!r.rtl,h=r.width,f=r.itemMarginBottom||0,m=this.itemMarginTop,g=this.initialItemX,v=e.legendItem,y=e.series&&e.series.drawLegendSymbol?e.series:e,b=y.options,b=this.createCheckboxForItem&&b&&b.showCheckbox,k=r.useHTML;v||(e.legendGroup=n.g("legend-item").attr({zIndex:1}).add(this.scrollGroup),e.legendItem=v=n.text("",p?a+s:-s,this.baseline||0,k).css(i(e.visible?l:c)).attr({align:p?"left":"right",zIndex:2}).add(e.legendGroup),this.baseline||(this.fontMetrics=n.fontMetrics(l.fontSize,v),this.baseline=this.fontMetrics.f+3+m,v.attr("y",this.baseline)),y.drawLegendSymbol(this,e),this.setItemEvents&&this.setItemEvents(e,v,k,l,c),b&&this.createCheckboxForItem(e)),this.colorizeItem(e,e.visible),this.setText(e),n=v.getBBox(),a=e.checkboxOffset=r.itemWidth||e.legendItemWidth||a+s+n.width+d+(b?20:0),this.itemHeight=s=se(e.legendItemHeight||n.height),o&&this.itemX-g+a>(h||t.chartWidth-2*u-g-r.x)&&(this.itemX=g,this.itemY+=m+this.lastLineHeight+f,this.lastLineHeight=0),this.maxItemWidth=ue(this.maxItemWidth,a),this.lastItemY=m+this.itemY+f,this.lastLineHeight=ue(s,this.lastLineHeight),e._legendItemPos=[this.itemX,this.itemY],o?this.itemX+=a:(this.itemY+=m+s+f,this.lastLineHeight=s),this.offsetWidth=h||ue((o?this.itemX-g-d:a)+u,this.offsetWidth)},getAllItems:function(){var e=[];return Ue(this.chart.series,function(t){var n=t.options;Ze(n.showInLegend,!c(n.linkedTo)&&A,!0)&&(e=e.concat(t.legendItems||("point"===n.legendType?t.data:t)))}),e},adjustMargins:function(e,t){var n=this.chart,i=this.options,r=i.align.charAt(0)+i.verticalAlign.charAt(0)+i.layout.charAt(0);this.display&&!i.floating&&Ue([/(lth|ct|rth)/,/(rtv|rm|rbv)/,/(rbh|cb|lbh)/,/(lbv|lm|ltv)/],function(o,a){o.test(r)&&!c(e[a])&&(n[je[a]]=ue(n[je[a]],n.legend[(a+1)%2?"legendHeight":"legendWidth"]+[1,-1,-1,1][a]*i[a%2?"x":"y"]+Ze(i.margin,12)+t[a]))})},render:function(){var e,t,n,i,r=this,o=r.chart,a=o.renderer,s=r.group,l=r.box,c=r.options,u=r.padding,d=c.borderWidth,p=c.backgroundColor;r.itemX=r.initialItemX,r.itemY=r.initialItemY,r.offsetWidth=0,r.lastItemY=0,s||(r.group=s=a.g("legend").attr({zIndex:7}).add(),r.contentGroup=a.g().attr({zIndex:1}).add(s),r.scrollGroup=a.g().add(r.contentGroup)),r.renderTitle(),e=r.getAllItems(),x(e,function(e,t){return(e.options&&e.options.legendIndex||0)-(t.options&&t.options.legendIndex||0)}),c.reversed&&e.reverse(),r.allItems=e,r.display=t=!!e.length,r.lastLineHeight=0,Ue(e,function(e){r.renderItem(e)}),n=(c.width||r.offsetWidth)+u,i=r.lastItemY+r.lastLineHeight+r.titleHeight,i=r.handleOverflow(i),i+=u,(d||p)&&(l?n>0&&i>0&&(l[l.isNew?"attr":"animate"](l.crisp({width:n,height:i})),l.isNew=!1):(r.box=l=a.rect(0,0,n,i,c.borderRadius,d||0).attr({stroke:c.borderColor,"stroke-width":d||0,fill:p||"none"}).add(s).shadow(c.shadow),l.isNew=!0),l[t?"show":"hide"]()),r.legendWidth=n,r.legendHeight=i,Ue(e,function(e){r.positionItem(e)}),t&&s.align(Ke({width:n,height:i},c),!0,"spacingBox"),o.isResizing||this.positionCheckboxes()},handleOverflow:function(e){var t,n,i=this,r=this.chart,o=r.renderer,a=this.options,s=a.y,s=r.spacingBox.height+("top"===a.verticalAlign?-s:s)-this.padding,l=a.maxHeight,c=this.clipRect,u=a.navigation,d=Ze(u.animation,!0),p=u.arrowSize||12,h=this.nav,f=this.pages,m=this.padding,g=this.allItems,v=function(e){c.attr({height:e}),i.contentGroup.div&&(i.contentGroup.div.style.clip="rect("+m+"px,9999px,"+(m+e)+"px,0)")};return"horizontal"===a.layout&&(s/=2),l&&(s=de(s,l)),f.length=0,e>s&&u.enabled!==!1?(this.clipHeight=t=ue(s-20-this.titleHeight-m,0),this.currentPage=Ze(this.currentPage,1),this.fullHeight=e,Ue(g,function(e,i){var r=e._legendItemPos[1],o=se(e.legendItem.getBBox().height),a=f.length;(!a||r-f[a-1]>t&&(n||r)!==f[a-1])&&(f.push(n||r),a++),i===g.length-1&&r+o-f[a-1]>t&&f.push(r),r!==n&&(n=r)}),c||(c=i.clipRect=o.clipRect(0,m,9999,0),i.contentGroup.clip(c)),v(t),h||(this.nav=h=o.g().attr({zIndex:1}).add(this.group),this.up=o.symbol("triangle",0,0,p,p).on("click",function(){i.scroll(-1,d)}).add(h),this.pager=o.text("",15,10).css(u.style).add(h),this.down=o.symbol("triangle-down",0,0,p,p).on("click",function(){i.scroll(1,d)}).add(h)),i.scroll(0),e=s):h&&(v(r.chartHeight),h.hide(),this.scrollGroup.attr({translateY:1}),this.clipHeight=0),e},scroll:function(e,t){var n=this.pages,i=n.length,r=this.currentPage+e,o=this.clipHeight,a=this.options.navigation,s=a.activeColor,a=a.inactiveColor,l=this.pager,c=this.padding;r>i&&(r=i),r>0&&(t!==A&&S(t,this.chart),this.nav.attr({translateX:c,translateY:o+this.padding+7+this.titleHeight,visibility:"visible"}),this.up.attr({fill:1===r?a:s}).css({cursor:1===r?"default":"pointer"}),l.attr({text:r+"/"+i}),this.down.attr({x:18+this.pager.getBBox().width,fill:r===i?a:s}).css({cursor:r===i?"default":"pointer"}),n=-n[r-1]+this.initialItemY,this.scrollGroup.animate({translateY:n}),this.currentPage=r,this.positionCheckboxes(n))}},nt=re.LegendSymbolMixin={drawRectangle:function(e,t){var n=e.options.symbolHeight||e.fontMetrics.f;t.legendSymbol=this.chart.renderer.rect(0,e.baseline-n+1,e.symbolWidth,n,e.options.symbolRadius||0).attr({zIndex:3}).add(t.legendGroup)},drawLineMarker:function(e){var t,n=this.options,i=n.marker,r=e.symbolWidth,o=this.chart.renderer,a=this.legendGroup,e=e.baseline-se(.3*e.fontMetrics.b);n.lineWidth&&(t={"stroke-width":n.lineWidth},n.dashStyle&&(t.dashstyle=n.dashStyle),this.legendLine=o.path(["M",0,e,"L",r,e]).attr(t).add(a)),i&&i.enabled!==!1&&(n=i.radius,this.legendSymbol=i=o.symbol(this.symbol,r/2-n,e-n,2*n,2*n,i).add(a),i.isMarker=!0)}},(/Trident\/7\.0/.test(ve)||we)&&$e(ht.prototype,"positionItem",function(e,t){var n=this,i=function(){t._legendItemPos&&e.call(n,t)};i(),setTimeout(i)});var ft=re.Chart=function(){this.getArgs.apply(this,arguments)};re.chart=function(e,t,n){return new ft(e,t,n)},ft.prototype={callbacks:[],getArgs:function(){var e=[].slice.call(arguments);(o(e[0])||e[0].nodeName)&&(this.renderTo=e.shift()),this.init(e[0],e[1])},init:function(e,t){var n,r=e.series;e.series=null,n=i(F,e),n.series=e.series=r,this.userOptions=e,r=n.chart,this.margin=this.splashArray("margin",r),this.spacing=this.splashArray("spacing",r);var o=r.events;this.bounds={h:{},v:{}},this.callback=t,this.isResizing=0,this.options=n,this.axes=[],this.series=[],this.hasCartesianSeries=r.showAxes;var a,s=this;if(s.index=De.length,De.push(s),Ne++,r.reflow!==!1&&We(s,"load",function(){s.initReflow()}),o)for(a in o)We(s,a,o[a]);s.xAxis=[],s.yAxis=[],s.animation=!Se&&Ze(r.animation,!0),s.pointCount=s.colorCounter=s.symbolCounter=0,s.firstRender()},initSeries:function(e){var n=this.options.chart;return(n=Le[e.type||n.type||n.defaultSeriesType])||t(17,!0),n=new n,n.init(this,e),n},isInsidePlot:function(e,t,n){var i=n?t:e,e=n?e:t;return i>=0&&i<=this.plotWidth&&e>=0&&e<=this.plotHeight},redraw:function(e){var t,n,i=this.axes,r=this.series,o=this.pointer,a=this.legend,s=this.isDirtyLegend,l=this.hasCartesianSeries,c=this.isDirtyBox,u=r.length,d=u,p=this.renderer,h=p.isHidden(),f=[];for(S(e,this),h&&this.cloneRenderTo(),this.layOutTitles();d--;)if(e=r[d],e.options.stacking&&(t=!0,e.isDirty)){n=!0;break}if(n)for(d=u;d--;)e=r[d],e.options.stacking&&(e.isDirty=!0);Ue(r,function(e){e.isDirty&&"point"===e.options.legendType&&(e.updateTotals&&e.updateTotals(),s=!0),e.isDirtyData&&ze(e,"updatedData")}),s&&a.options.enabled&&(a.render(),this.isDirtyLegend=!1),t&&this.getStacks(),l&&!this.isResizing&&(this.maxTicks=null,Ue(i,function(e){e.setScale()})),this.getMargins(),l&&(Ue(i,function(e){e.isDirty&&(c=!0)}),Ue(i,function(e){var n=e.min+","+e.max;e.extKey!==n&&(e.extKey=n,f.push(function(){ze(e,"afterSetExtremes",Ke(e.eventArgs,e.getExtremes())),delete e.eventArgs})),(c||t)&&e.redraw()})),c&&this.drawChartBox(),Ue(r,function(e){e.isDirty&&e.visible&&(!e.isCartesian||e.xAxis)&&e.redraw()}),o&&o.reset(!0),p.draw(),ze(this,"redraw"),h&&this.cloneRenderTo(!0),Ue(f,function(e){e.call()})},get:function(e){var t,n,i=this.axes,r=this.series;for(t=0;t<i.length;t++)if(i[t].options.id===e)return i[t];for(t=0;t<r.length;t++)if(r[t].options.id===e)return r[t];for(t=0;t<r.length;t++)for(n=r[t].points||[],i=0;i<n.length;i++)if(n[i].id===e)return n[i];return null},getAxes:function(){var e=this,t=this.options,n=t.xAxis=d(t.xAxis||{}),t=t.yAxis=d(t.yAxis||{});Ue(n,function(e,t){e.index=t,e.isX=!0}),Ue(t,function(e,t){e.index=t}),n=n.concat(t),Ue(n,function(t){new ot(e,t)})},getSelectedPoints:function(){var e=[];return Ue(this.series,function(t){e=e.concat(Be(t.points||[],function(e){return e.selected}))}),e},getSelectedSeries:function(){return Be(this.series,function(e){return e.selected})},setTitle:function(e,t,n){var r,o,a=this,s=a.options;o=s.title=i(s.title,e),r=s.subtitle=i(s.subtitle,t),s=r,Ue([["title",e,o],["subtitle",t,s]],function(e){var t=e[0],n=a[t],i=e[1],e=e[2];n&&i&&(a[t]=n=n.destroy()),e&&e.text&&!n&&(a[t]=a.renderer.text(e.text,0,0,e.useHTML).attr({align:e.align,class:"highcharts-"+t,zIndex:e.zIndex||4}).css(e.style).add())}),a.layOutTitles(n)},layOutTitles:function(e){var t=0,n=this.title,i=this.subtitle,r=this.options,o=r.title,r=r.subtitle,a=this.renderer,s=this.spacingBox;!n||(n.css({width:(o.width||s.width+o.widthAdjust)+"px"}).align(Ke({y:a.fontMetrics(o.style.fontSize,n).b-3},o),!1,s),o.floating||o.verticalAlign)||(t=n.getBBox().height),i&&(i.css({width:(r.width||s.width+r.widthAdjust)+"px"}).align(Ke({y:t+(o.margin-13)+a.fontMetrics(r.style.fontSize,n).b},r),!1,s),!r.floating&&!r.verticalAlign&&(t=ce(t+i.getBBox().height))),n=this.titleOffset!==t,this.titleOffset=t,!this.isDirtyBox&&n&&(this.isDirtyBox=n,this.hasRendered&&Ze(e,!0)&&this.isDirtyBox&&this.redraw())},getChartSize:function(){var e=this.options.chart,t=e.width,e=e.height,n=this.renderToClone||this.renderTo;c(t)||(this.containerWidth=Ie(n,"width")),c(e)||(this.containerHeight=Ie(n,"height")),this.chartWidth=ue(0,t||this.containerWidth||600),this.chartHeight=ue(0,Ze(e,this.containerHeight>19?this.containerHeight:400))},cloneRenderTo:function(e){var t=this.renderToClone,n=this.container;e?t&&(this.renderTo.appendChild(n),P(t),delete this.renderToClone):(n&&n.parentNode===this.renderTo&&this.renderTo.removeChild(n),this.renderToClone=t=this.renderTo.cloneNode(0),h(t,{position:"absolute",top:"-9999px",display:"block"}),t.style.setProperty&&t.style.setProperty("display","block","important"),oe.body.appendChild(t),n&&t.appendChild(n))},getContainer:function(){var e,n,i,a=this.options,s=a.chart;e=this.renderTo;var l="highcharts-"+Me++;e||(this.renderTo=e=s.renderTo),o(e)&&(this.renderTo=e=oe.getElementById(e)),e||t(13,!0),n=r(u(e,"data-highcharts-chart")),Qe(n)&&De[n]&&De[n].hasRendered&&De[n].destroy(),u(e,"data-highcharts-chart",this.index),e.innerHTML="",!s.skipClone&&!e.offsetWidth&&this.cloneRenderTo(),this.getChartSize(),n=this.chartWidth,i=this.chartHeight,this.container=e=f(Re,{className:"highcharts-container"+(s.className?" "+s.className:""),id:l},Ke({position:"relative",overflow:"hidden",width:n+"px",height:i+"px",textAlign:"left",lineHeight:"normal",zIndex:0,"-webkit-tap-highlight-color":"rgba(0,0,0,0)"},s.style),this.renderToClone||e),this._cursor=e.style.cursor,this.renderer=new(re[s.renderer]||j)(e,n,i,s.style,s.forExport,a.exporting&&a.exporting.allowHTML),Se&&this.renderer.create(this,e,n,i),this.renderer.chartIndex=this.index},getMargins:function(e){var t=this.spacing,n=this.margin,i=this.titleOffset;this.resetMargins(),i&&!c(n[0])&&(this.plotTop=ue(this.plotTop,i+this.options.title.margin+t[0])),this.legend.adjustMargins(n,t),this.extraBottomMargin&&(this.marginBottom+=this.extraBottomMargin),this.extraTopMargin&&(this.plotTop+=this.extraTopMargin),e||this.getAxisMargins()},getAxisMargins:function(){var e=this,t=e.axisOffset=[0,0,0,0],n=e.margin;e.hasCartesianSeries&&Ue(e.axes,function(e){e.visible&&e.getOffset()}),Ue(je,function(i,r){c(n[r])||(e[i]+=t[r])}),e.setChartSize()},reflow:function(t){var n=this,i=n.options.chart,r=n.renderTo,o=i.width||Ie(r,"width"),a=i.height||Ie(r,"height"),i=t?t.target:e;n.hasUserSize||n.isPrinting||!o||!a||i!==e&&i!==oe||(o===n.containerWidth&&a===n.containerHeight||(clearTimeout(n.reflowTimeout),n.reflowTimeout=p(function(){n.container&&(n.setSize(o,a,!1),n.hasUserSize=null)},t?100:0)),n.containerWidth=o,n.containerHeight=a)},initReflow:function(){var t=this,n=function(e){t.reflow(e)};We(e,"resize",n),We(t,"destroy",function(){He(e,"resize",n)})},setSize:function(e,t,n){var i,r,o=this,a=o.renderer;o.isResizing+=1,S(n,o),o.oldChartHeight=o.chartHeight,o.oldChartWidth=o.chartWidth,c(e)&&(o.chartWidth=i=ue(0,se(e)),o.hasUserSize=!!i),c(t)&&(o.chartHeight=r=ue(0,se(t))),e=a.globalAnimation,(e?Ge:h)(o.container,{width:i+"px",height:r+"px"},e),o.setChartSize(!0),a.setSize(i,r,n),o.maxTicks=null,Ue(o.axes,function(e){e.isDirty=!0,e.setScale()}),Ue(o.series,function(e){e.isDirty=!0}),o.isDirtyLegend=!0,o.isDirtyBox=!0,o.layOutTitles(),o.getMargins(),o.redraw(n),o.oldChartHeight=null,ze(o,"resize"),p(function(){o&&ze(o,"endResize",null,function(){o.isResizing-=1})},_(e).duration)},setChartSize:function(e){var t,n,i,r,o=this.inverted,a=this.renderer,s=this.chartWidth,l=this.chartHeight,c=this.options.chart,u=this.spacing,d=this.clipOffset;this.plotLeft=t=se(this.plotLeft),this.plotTop=n=se(this.plotTop),this.plotWidth=i=ue(0,se(s-t-this.marginRight)),this.plotHeight=r=ue(0,se(l-n-this.marginBottom)),this.plotSizeX=o?r:i,this.plotSizeY=o?i:r,this.plotBorderWidth=c.plotBorderWidth||0,this.spacingBox=a.spacingBox={x:u[3],y:u[0],width:s-u[3]-u[1],height:l-u[0]-u[2]},this.plotBox=a.plotBox={x:t,y:n,width:i,height:r},s=2*le(this.plotBorderWidth/2),o=ce(ue(s,d[3])/2),a=ce(ue(s,d[0])/2),this.clipBox={x:o,y:a,width:le(this.plotSizeX-ue(s,d[1])/2-o),height:ue(0,le(this.plotSizeY-ue(s,d[2])/2-a))},e||Ue(this.axes,function(e){e.setAxisSize(),e.setAxisTranslation()})},resetMargins:function(){var e=this;Ue(je,function(t,n){e[t]=Ze(e.margin[n],e.spacing[n])}),e.axisOffset=[0,0,0,0],e.clipOffset=[0,0,0,0]},drawChartBox:function(){var e,t=this.options.chart,n=this.renderer,i=this.chartWidth,r=this.chartHeight,o=this.chartBackground,a=this.plotBackground,s=this.plotBorder,l=this.plotBGImage,c=t.borderWidth||0,u=t.backgroundColor,d=t.plotBackgroundColor,p=t.plotBackgroundImage,h=t.plotBorderWidth||0,f=this.plotLeft,m=this.plotTop,g=this.plotWidth,v=this.plotHeight,y=this.plotBox,b=this.clipRect,k=this.clipBox;e=c+(t.shadow?8:0),(c||u)&&(o?o.animate(o.crisp({width:i-e,height:r-e})):(o={fill:u||"none"},c&&(o.stroke=t.borderColor,o["stroke-width"]=c),this.chartBackground=n.rect(e/2,e/2,i-e,r-e,t.borderRadius,c).attr(o).addClass("highcharts-background").add().shadow(t.shadow))),d&&(a?a.animate(y):this.plotBackground=n.rect(f,m,g,v,0).attr({fill:d}).add().shadow(t.plotShadow)),p&&(l?l.animate(y):this.plotBGImage=n.image(p,f,m,g,v).add()),b?b.animate({width:k.width,height:k.height}):this.clipRect=n.clipRect(k),h&&(s?(s.strokeWidth=-h,s.animate(s.crisp({x:f,y:m,width:g,height:v}))):this.plotBorder=n.rect(f,m,g,v,0,-h).attr({stroke:t.plotBorderColor,"stroke-width":h,fill:"none",zIndex:1}).add()),this.isDirtyBox=!1},propFromSeries:function(){var e,t,n,i=this,r=i.options.chart,o=i.options.series;Ue(["inverted","angular","polar"],function(a){for(e=Le[r.type||r.defaultSeriesType],n=i[a]||r[a]||e&&e.prototype[a],t=o&&o.length;!n&&t--;)(e=Le[o[t].type])&&e.prototype[a]&&(n=!0);i[a]=n})},linkSeries:function(){var e=this,t=e.series;Ue(t,function(e){e.linkedSeries.length=0}),Ue(t,function(t){var n=t.options.linkedTo;o(n)&&(n=":previous"===n?e.series[t.index-1]:e.get(n))&&(n.linkedSeries.push(t),t.linkedParent=n,t.visible=Ze(t.options.visible,n.options.visible,t.visible))})},renderSeries:function(){Ue(this.series,function(e){e.translate(),e.render()})},renderLabels:function(){var e=this,t=e.options.labels;t.items&&Ue(t.items,function(n){var i=Ke(t.style,n.style),o=r(i.left)+e.plotLeft,a=r(i.top)+e.plotTop+12;delete i.left,delete i.top,e.renderer.text(n.html,o,a).attr({zIndex:2}).css(i).add()})},render:function(){var e,t,n,i,r=this.axes,o=this.renderer,a=this.options;this.setTitle(),this.legend=new ht(this,a.legend),this.getStacks&&this.getStacks(),this.getMargins(!0),this.setChartSize(),e=this.plotWidth,t=this.plotHeight-=21,Ue(r,function(e){e.setScale()}),this.getAxisMargins(),n=e/this.plotWidth>1.1,i=t/this.plotHeight>1.05,(n||i)&&(this.maxTicks=null,Ue(r,function(e){(e.horiz&&n||!e.horiz&&i)&&e.setTickInterval(!0)}),this.getMargins()),this.drawChartBox(),this.hasCartesianSeries&&Ue(r,function(e){e.visible&&e.render()}),this.seriesGroup||(this.seriesGroup=o.g("series-group").attr({zIndex:3}).add()),this.renderSeries(),this.renderLabels(),this.showCredits(a.credits),this.hasRendered=!0},showCredits:function(t){t.enabled&&!this.credits&&(this.credits=this.renderer.text(t.text,0,0).on("click",function(){t.href&&(e.location.href=t.href)}).attr({align:t.position.align,zIndex:8}).css(t.style).add().align(t.position))},destroy:function(){var e,t=this,n=t.axes,i=t.series,r=t.container,o=r&&r.parentNode;for(ze(t,"destroy"),De[t.index]=A,Ne--,t.renderTo.removeAttribute("data-highcharts-chart"),He(t),e=n.length;e--;)n[e]=n[e].destroy();for(e=i.length;e--;)i[e]=i[e].destroy();Ue("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","),function(e){var n=t[e];n&&n.destroy&&(t[e]=n.destroy())}),r&&(r.innerHTML="",He(r),o&&P(r));for(e in t)delete t[e]},isReadyToRender:function(){var t=this;return!(!Pe&&e==e.top&&"complete"!==oe.readyState||Se&&!e.canvg)||(Se?rt.push(function(){t.firstRender()},t.options.global.canvasToolsURL):oe.attachEvent("onreadystatechange",function(){oe.detachEvent("onreadystatechange",t.firstRender),"complete"===oe.readyState&&t.firstRender()}),!1)},firstRender:function(){var e=this,t=e.options;e.isReadyToRender()&&(e.getContainer(),ze(e,"init"),e.resetMargins(),e.setChartSize(),e.propFromSeries(),e.getAxes(),Ue(t.series||[],function(t){e.initSeries(t)}),e.linkSeries(),ze(e,"beforeRender"),re.Pointer&&(e.pointer=new lt(e,t)),e.render(),e.renderer.draw(),!e.renderer.imgCount&&e.onload&&e.onload(),e.cloneRenderTo(!0))},onload:function(){var e=this;Ue([this.callback].concat(this.callbacks),function(t){t&&void 0!==e.index&&t.apply(e,[e])}),ze(e,"load"),this.onload=null},splashArray:function(e,t){var n=t[e],n=a(n)?n:[n,n,n,n];return[Ze(t[e+"Top"],n[0]),Ze(t[e+"Right"],n[1]),Ze(t[e+"Bottom"],n[2]),Ze(t[e+"Left"],n[3])]}};var it=re.CenteredSeriesMixin={getCenter:function(){var e,t,n=this.options,i=this.chart,r=2*(n.slicedOffset||0),o=i.plotWidth-2*r,i=i.plotHeight-2*r,a=n.center,a=[Ze(a[0],"50%"),Ze(a[1],"50%"),n.size||"100%",n.innerSize||0],s=de(o,i);for(e=0;e<4;++e)t=a[e],n=e<2||2===e&&/%$/.test(t),a[e]=(/%$/.test(t)?[o,i,s,a[2]][e]*parseFloat(t)/100:parseFloat(t))+(n?r:0);return a[3]>a[2]&&(a[3]=a[2]),a}},mt=function(){};mt.prototype={init:function(e,t,n){return this.series=e,this.color=e.color,this.applyOptions(t,n),this.pointAttr={},e.options.colorByPoint&&(t=e.options.colors||e.chart.options.colors,this.color=this.color||t[e.colorCounter++],e.colorCounter===t.length)&&(e.colorCounter=0),e.chart.pointCount++,this},applyOptions:function(e,t){var n=this.series,i=n.options.pointValKey||n.pointValKey,e=mt.prototype.optionsToObject.call(this,e);return Ke(this,e),this.options=this.options?Ke(this.options,e):e,i&&(this.y=this[i]),this.isNull=null===this.x||null===this.y,void 0===this.x&&n&&(this.x=void 0===t?n.autoIncrement():t),this},optionsToObject:function(e){var t={},n=this.series,i=n.options.keys,r=i||n.pointArrayMap||["y"],o=r.length,a=0,l=0;if(Qe(e)||null===e)t[r[0]]=e;else if(s(e))for(!i&&e.length>o&&(n=typeof e[0],"string"===n?t.name=e[0]:"number"===n&&(t.x=e[0]),a++);l<o;)i&&void 0===e[a]||(t[r[l]]=e[a]),a++,l++;else"object"==typeof e&&(t=e,e.dataLabels&&(n._hasPointLabels=!0),e.marker&&(n._hasPointMarkers=!0));return t},destroy:function(){var e,t=this.series.chart,n=t.hoverPoints;t.pointCount--,n&&(this.setState(),l(n,this),!n.length)&&(t.hoverPoints=null),this===t.hoverPoint&&this.onMouseOut(),(this.graphic||this.dataLabel)&&(He(this),this.destroyElements()),this.legendItem&&t.legend.destroyItem(this);for(e in this)this[e]=null},destroyElements:function(){for(var e,t=["graphic","dataLabel","dataLabelUpper","connector","shadowGroup"],n=6;n--;)e=t[n],this[e]&&(this[e]=this[e].destroy())},getLabelConfig:function(){return{x:this.category,y:this.y,color:this.color,key:this.name||this.category,series:this.series,point:this,percentage:this.percentage,total:this.total||this.stackTotal}},tooltipFormatter:function(e){var t=this.series,n=t.tooltipOptions,i=Ze(n.valueDecimals,""),r=n.valuePrefix||"",o=n.valueSuffix||"";return Ue(t.pointArrayMap||["y"],function(t){t="{point."+t,(r||o)&&(e=e.replace(t+"}",r+t+"}"+o)),e=e.replace(t+"}",t+":,."+i+"f}")}),y(e,{point:this,series:this.series})},firePointEvent:function(e,t,n){var i=this,r=this.series.options;(r.point.events[e]||i.options&&i.options.events&&i.options.events[e])&&this.importEvents(),"click"===e&&r.allowPointSelect&&(n=function(e){i.select&&i.select(null,e.ctrlKey||e.metaKey||e.shiftKey)}),ze(this,e,t,n)},visible:!0};var gt=re.Series=function(){};gt.prototype={isCartesian:!0,type:"line",pointClass:mt,sorted:!0,requireSorting:!0,pointAttrToOptions:{stroke:"lineColor","stroke-width":"lineWidth",fill:"fillColor",r:"radius"},directTouch:!1,axisTypes:["xAxis","yAxis"],colorCounter:0,parallelArrays:["x","y"],init:function(e,t){var n,i,r=this,o=e.series,a=function(e,t){return Ze(e.options.index,e._i)-Ze(t.options.index,t._i)};r.chart=e,r.options=t=r.setOptions(t),r.linkedSeries=[],r.bindAxes(),Ke(r,{name:t.name,state:"",pointAttr:{},visible:t.visible!==!1,selected:t.selected===!0}),Se&&(t.animation=!1),i=t.events;for(n in i)We(r,n,i[n]);(i&&i.click||t.point&&t.point.events&&t.point.events.click||t.allowPointSelect)&&(e.runTrackerClick=!0),r.getColor(),r.getSymbol(),Ue(r.parallelArrays,function(e){r[e+"Data"]=[]}),r.setData(t.data,!1),r.isCartesian&&(e.hasCartesianSeries=!0),o.push(r),r._i=o.length-1,x(o,a),this.yAxis&&x(this.yAxis.series,a),Ue(o,function(e,t){e.index=t,e.name=e.name||"Series "+(t+1)})},bindAxes:function(){var e,n=this,i=n.options,r=n.chart;Ue(n.axisTypes||[],function(o){Ue(r[o],function(t){e=t.options,(i[o]===e.index||i[o]!==A&&i[o]===e.id||i[o]===A&&0===e.index)&&(t.series.push(n),n[o]=t,t.isDirty=!0)}),!n[o]&&n.optionalAxis!==o&&t(18,!0)})},updateParallelArrays:function(e,t){var n=e.series,i=arguments,r=Qe(t)?function(i){var r="y"===i&&n.toYData?n.toYData(e):e[i];n[i+"Data"][t]=r}:function(e){Array.prototype[t].apply(n[e+"Data"],Array.prototype.slice.call(i,2))};Ue(n.parallelArrays,r)},autoIncrement:function(){var e,t=this.options,n=this.xIncrement,i=t.pointIntervalUnit,n=Ze(n,t.pointStart,0);return this.pointInterval=e=Ze(this.pointInterval,t.pointInterval,1),i&&(t=new Y(n),"day"===i?t=+t[te](t[q]()+e):"month"===i?t=+t[ne](t[K]()+e):"year"===i&&(t=+t[ie](t[Q]()+e)),e=t-n),this.xIncrement=n+e,n},setOptions:function(e){var t=this.chart,n=t.options.plotOptions,t=t.userOptions||{},r=t.plotOptions||{},o=n[this.type];return this.userOptions=e,n=i(o,n.series,e),this.tooltipOptions=i(F.tooltip,F.plotOptions[this.type].tooltip,t.tooltip,r.series&&r.series.tooltip,r[this.type]&&r[this.type].tooltip,e.tooltip),null===o.marker&&delete n.marker,this.zoneAxis=n.zoneAxis,e=this.zones=(n.zones||[]).slice(),!n.negativeColor&&!n.negativeFillColor||n.zones||e.push({value:n[this.zoneAxis+"Threshold"]||n.threshold||0,color:n.negativeColor,fillColor:n.negativeFillColor}),e.length&&c(e[e.length-1].value)&&e.push({color:this.color,fillColor:this.fillColor}),n},getCyclic:function(e,t,n){var i=this.userOptions,r="_"+e+"Index",o=e+"Counter";t||(c(i[r])?t=i[r]:(i[r]=t=this.chart[o]%n.length,this.chart[o]+=1),t=n[t]),this[e]=t},getColor:function(){this.options.colorByPoint?this.options.color=null:this.getCyclic("color",this.options.color||Je[this.type].color,this.chart.options.colors)},getSymbol:function(){var e=this.options.marker;this.getCyclic("symbol",e.symbol,this.chart.options.symbols),/^url/.test(this.symbol)&&(e.radius=0)},drawLegendSymbol:nt.drawLineMarker,setData:function(e,n,i,r){var a,l=this,u=l.points,d=u&&u.length||0,p=l.options,h=l.chart,f=null,m=l.xAxis,g=m&&!!m.categories,v=p.turboThreshold,y=this.xData,b=this.yData,k=(a=l.pointArrayMap)&&a.length,e=e||[];if(a=e.length,n=Ze(n,!0),r!==!1&&a&&d===a&&!l.cropped&&!l.hasGroupedData&&l.visible)Ue(e,function(e,t){u[t].update&&e!==p.data[t]&&u[t].update(e,!1,null,!1)});else{if(l.xIncrement=null,l.colorCounter=0,Ue(this.parallelArrays,function(e){l[e+"Data"].length=0}),v&&a>v){for(i=0;null===f&&i<a;)f=e[i],i++;if(Qe(f)){for(g=Ze(p.pointStart,0),f=Ze(p.pointInterval,1),i=0;i<a;i++)y[i]=g,b[i]=e[i],g+=f;l.xIncrement=g}else if(s(f))if(k)for(i=0;i<a;i++)f=e[i],y[i]=f[0],b[i]=f.slice(1,k+1);else for(i=0;i<a;i++)f=e[i],y[i]=f[0],b[i]=f[1];else t(12)}else for(i=0;i<a;i++)e[i]!==A&&(f={series:l},l.pointClass.prototype.applyOptions.apply(f,[e[i]]),l.updateParallelArrays(f,i),g&&c(f.name))&&(m.names[f.x]=f.name);for(o(b[0])&&t(14,!0),l.data=[],l.options.data=l.userOptions.data=e,i=d;i--;)u[i]&&u[i].destroy&&u[i].destroy();m&&(m.minRange=m.userMinRange),l.isDirty=l.isDirtyData=h.isDirtyBox=!0,i=!1}"point"===p.legendType&&(this.processData(),this.generatePoints()),n&&h.redraw(i)},processData:function(e){var n,i=this.xData,r=this.yData,o=i.length;n=0;var a,s,l,c=this.xAxis,u=this.options;l=u.cropThreshold;var d,p,h=this.getExtremesFromAll||u.getExtremesFromAll,f=this.isCartesian,u=c&&c.val2lin,m=c&&c.isLog;if(f&&!this.isDirty&&!c.isDirty&&!this.yAxis.isDirty&&!e)return!1;for(c&&(e=c.getExtremes(),d=e.min,p=e.max),f&&this.sorted&&!h&&(!l||o>l||this.forceCrop)&&(i[o-1]<d||i[0]>p?(i=[],r=[]):(i[0]<d||i[o-1]>p)&&(n=this.cropData(this.xData,this.yData,d,p),i=n.xData,r=n.yData,n=n.start,a=!0)),l=i.length||1;--l;)o=m?u(i[l])-u(i[l-1]):i[l]-i[l-1],o>0&&(s===A||o<s)?s=o:o<0&&this.requireSorting&&t(15);this.cropped=a,this.cropStart=n,this.processedXData=i,this.processedYData=r,this.closestPointRange=s},cropData:function(e,t,n,i){var r,o=e.length,a=0,s=o,l=Ze(this.cropShoulder,1);for(r=0;r<o;r++)if(e[r]>=n){a=ue(0,r-l);break}for(n=r;n<o;n++)if(e[n]>i){s=n+l;break}return{xData:e.slice(a,s),yData:t.slice(a,s),start:a,end:s}},generatePoints:function(){var e,t,n,i,r=this.options.data,o=this.data,a=this.processedXData,s=this.processedYData,l=this.pointClass,c=a.length,u=this.cropStart||0,p=this.hasGroupedData,h=[];for(o||p||(o=[],o.length=r.length,o=this.data=o),i=0;i<c;i++)t=u+i,p?(h[i]=(new l).init(this,[a[i]].concat(d(s[i]))),h[i].dataGroup=this.groupMap[i]):(o[t]?n=o[t]:r[t]!==A&&(o[t]=n=(new l).init(this,r[t],a[i])),h[i]=n),h[i].index=t;if(o&&(c!==(e=o.length)||p))for(i=0;i<e;i++)i===u&&!p&&(i+=c),o[i]&&(o[i].destroyElements(),o[i].plotX=A);this.data=o,this.points=h},getExtremes:function(e){var t,n=this.yAxis,i=this.processedXData,r=[],o=0;t=this.xAxis.getExtremes();var a,s,l,c,u=t.min,d=t.max,e=e||this.stackedYData||this.processedYData||[];for(t=e.length,c=0;c<t;c++)if(s=i[c],l=e[c],a=null!==l&&l!==A&&(!n.isLog||l.length||l>0),s=this.getExtremesFromAll||this.options.getExtremesFromAll||this.cropped||(i[c+1]||s)>=u&&(i[c-1]||s)<=d,a&&s)if(a=l.length)for(;a--;)null!==l[a]&&(r[o++]=l[a]);else r[o++]=l;this.dataMin=w(r),this.dataMax=E(r)},translate:function(){this.processedXData||this.processData(),this.generatePoints();for(var e,n,i,r,o=this.options,a=o.stacking,s=this.xAxis,l=s.categories,u=this.yAxis,d=this.points,p=d.length,h=!!this.modifyValue,f=o.pointPlacement,m="between"===f||Qe(f),g=o.threshold,v=o.startFromThreshold?g:0,y=Number.MAX_VALUE,o=0;o<p;o++){var b=d[o],k=b.x,x=b.y;n=b.low;var w=a&&u.stacks[(this.negStacks&&x<(v?0:g)?"-":"")+this.stackKey];u.isLog&&null!==x&&x<=0&&(b.y=x=null,t(10)),b.plotX=e=T(de(ue(-1e5,s.translate(k,0,0,0,1,f,"flags"===this.type)),1e5)),a&&this.visible&&!b.isNull&&w&&w[k]&&(r=this.getStackIndicator(r,k,this.index),w=w[k],x=w.points[r.key],n=x[0],x=x[1],n===v&&(n=Ze(g,u.min)),u.isLog&&n<=0&&(n=null),b.total=b.stackTotal=w.total,b.percentage=w.total&&b.y/w.total*100,b.stackY=x,w.setOffset(this.pointXOffset||0,this.barW||0)),
b.yBottom=c(n)?u.translate(n,0,1,0,1):null,h&&(x=this.modifyValue(x,b)),b.plotY=n="number"==typeof x&&x!==1/0?de(ue(-1e5,u.translate(x,0,1,0,1)),1e5):A,b.isInside=n!==A&&n>=0&&n<=u.len&&e>=0&&e<=s.len,b.clientX=m?s.translate(k,0,0,0,1):e,b.negative=b.y<(g||0),b.category=l&&l[b.x]!==A?l[b.x]:b.x,b.isNull||(void 0!==i&&(y=de(y,pe(e-i))),i=e)}this.closestPointRangePx=y},getValidPoints:function(e,t){var n=this.chart;return Be(e||this.points||[],function(e){return!(t&&!n.isInsidePlot(e.plotX,e.plotY,n.inverted))&&!e.isNull})},setClip:function(e){var t=this.chart,n=this.options,i=t.renderer,r=t.inverted,o=this.clipBox,a=o||t.clipBox,s=this.sharedClipKey||["_sharedClip",e&&e.duration,e&&e.easing,a.height,n.xAxis,n.yAxis].join(","),l=t[s],c=t[s+"m"];l||(e&&(a.width=0,t[s+"m"]=c=i.clipRect(-99,r?-t.plotLeft:-t.plotTop,99,r?t.chartWidth:t.chartHeight)),t[s]=l=i.clipRect(a)),e&&(l.count+=1),n.clip!==!1&&(this.group.clip(e||o?l:t.clipRect),this.markerGroup.clip(c),this.sharedClipKey=s),e||(l.count-=1,l.count<=0&&s&&t[s]&&(o||(t[s]=t[s].destroy()),t[s+"m"]&&(t[s+"m"]=t[s+"m"].destroy())))},animate:function(e){var t,n=this.chart,i=this.options.animation;i&&!a(i)&&(i=Je[this.type].animation),e?this.setClip(i):(t=this.sharedClipKey,(e=n[t])&&e.animate({width:n.plotSizeX},i),n[t+"m"]&&n[t+"m"].animate({width:n.plotSizeX+99},i),this.animate=null)},afterAnimate:function(){this.setClip(),ze(this,"afterAnimate")},drawPoints:function(){var e,t,n,i,r,o,a,s,l,c,u,d,p=this.points,h=this.chart,f=this.options.marker,m=this.pointAttr[""],g=this.markerGroup,v=Ze(f.enabled,this.xAxis.isRadial,this.closestPointRangePx>2*f.radius);if(f.enabled!==!1||this._hasPointMarkers)for(i=p.length;i--;)r=p[i],t=le(r.plotX),n=r.plotY,l=r.graphic,c=r.marker||{},u=!!r.marker,e=v&&c.enabled===A||c.enabled,d=r.isInside,e&&Qe(n)&&null!==r.y?(e=r.pointAttr[r.selected?"select":""]||m,o=e.r,a=Ze(c.symbol,this.symbol),s=0===a.indexOf("url"),l?l[d?"show":"hide"](!0).attr(e).animate(Ke({x:t-o,y:n-o},l.symbolName?{width:2*o,height:2*o}:{})):d&&(o>0||s)&&(r.graphic=h.renderer.symbol(a,t-o,n-o,2*o,2*o,u?c:f).attr(e).add(g))):l&&(r.graphic=l.destroy())},convertAttribs:function(e,t,n,i){var r,o,a=this.pointAttrToOptions,s={},e=e||{},t=t||{},n=n||{},i=i||{};for(r in a)o=a[r],s[r]=Ze(e[o],t[r],n[r],i[r]);return s},getAttribs:function(){var e,t,n,i=this,r=i.options,o=Je[i.type].marker?r.marker:r,a=o.states,s=a.hover,l=i.color,u=i.options.negativeColor,d={stroke:l,fill:l},p=i.points||[],h=[],f=i.pointAttrToOptions;e=i.hasPointSpecificOptions;var m=o.lineColor,g=o.fillColor;t=r.turboThreshold;var v,y,b=i.zones,k=i.zoneAxis||"y";if(r.marker?(s.radius=s.radius||o.radius+s.radiusPlus,s.lineWidth=s.lineWidth||o.lineWidth+s.lineWidthPlus):(s.color=s.color||O(s.color||l).brighten(s.brightness).get(),s.negativeColor=s.negativeColor||O(s.negativeColor||u).brighten(s.brightness).get()),h[""]=i.convertAttribs(o,d),Ue(["hover","select"],function(e){h[e]=i.convertAttribs(a[e],h[""])}),i.pointAttr=h,l=p.length,!t||l<t||e)for(;l--;){if(t=p[l],(o=t.options&&t.options.marker||t.options)&&o.enabled===!1&&(o.radius=0),d=null,b.length){for(e=0,d=b[e];t[k]>=d.value;)d=b[++e];t.color=t.fillColor=d=Ze(d.color,i.color)}if(e=r.colorByPoint||t.color,t.options)for(y in f)c(o[f[y]])&&(e=!0);e?(o=o||{},n=[],a=o.states||{},e=a.hover=a.hover||{},r.marker&&(!t.negative||e.fillColor||s.fillColor)||(e[i.pointAttrToOptions.fill]=e.color||!t.options.color&&s[t.negative&&u?"negativeColor":"color"]||O(t.color).brighten(e.brightness||s.brightness).get()),v={color:t.color},g||(v.fillColor=t.color),m||(v.lineColor=t.color),o.hasOwnProperty("color")&&!o.color&&delete o.color,d&&!s.fillColor&&(e.fillColor=d),n[""]=i.convertAttribs(Ke(v,o),h[""]),n.hover=i.convertAttribs(a.hover,h.hover,n[""]),n.select=i.convertAttribs(a.select,h.select,n[""])):n=h,t.pointAttr=n}},destroy:function(){var e,t,n,i,r=this,o=r.chart,a=/AppleWebKit\/533/.test(ve),s=r.data||[];for(ze(r,"destroy"),He(r),Ue(r.axisTypes||[],function(e){(i=r[e])&&(l(i.series,r),i.isDirty=i.forceRedraw=!0)}),r.legendItem&&r.chart.legend.destroyItem(r),e=s.length;e--;)(t=s[e])&&t.destroy&&t.destroy();r.points=null,clearTimeout(r.animationTimeout);for(n in r)r[n]instanceof D&&!r[n].survive&&(e=a&&"group"===n?"hide":"destroy",r[n][e]());o.hoverSeries===r&&(o.hoverSeries=null),l(o.series,r);for(n in r)delete r[n]},getGraphPath:function(e,t,n){var i,r,o=this,a=o.options,s=a.step,l=[],e=e||o.points;return(i=e.reversed)&&e.reverse(),(s={right:1,center:2}[s]||s&&3)&&i&&(s=4-s),a.connectNulls&&!t&&!n&&(e=this.getValidPoints(e)),Ue(e,function(i,u){var d=i.plotX,p=i.plotY,h=e[u-1];(i.leftCliff||h&&h.rightCliff)&&!n&&(r=!0),i.isNull&&!c(t)&&u>0?r=!a.connectNulls:i.isNull&&!t?r=!0:(0===u||r?h=["M",i.plotX,i.plotY]:o.getPointSpline?h=o.getPointSpline(e,i,u):s?(h=1===s?["L",h.plotX,p]:2===s?["L",(h.plotX+d)/2,h.plotY,"L",(h.plotX+d)/2,p]:["L",d,h.plotY],h.push("L",d,p)):h=["L",d,p],l.push.apply(l,h),r=!1)}),o.graphPath=l},drawGraph:function(){var e=this,t=this.options,n=[["graph",t.lineColor||this.color,t.dashStyle]],i=t.lineWidth,r="square"!==t.linecap,o=(this.gappedPath||this.getGraphPath).call(this),a=this.fillGraph&&this.color||"none";Ue(this.zones,function(i,r){n.push(["zoneGraph"+r,i.color||e.color,i.dashStyle||t.dashStyle])}),Ue(n,function(n,s){var l=n[0],c=e[l];c?c.animate({d:o}):(i||a)&&o.length&&(c={stroke:n[1],"stroke-width":i,fill:a,zIndex:1},n[2]?c.dashstyle=n[2]:r&&(c["stroke-linecap"]=c["stroke-linejoin"]="round"),e[l]=e.chart.renderer.path(o).attr(c).add(e.group).shadow(s<2&&t.shadow))})},applyZones:function(){var e,t,n,i,r,o,a,s=this,l=this.chart,c=l.renderer,u=this.zones,d=this.clips||[],p=this.graph,h=this.area,f=ue(l.chartWidth,l.chartHeight),m=this[(this.zoneAxis||"y")+"Axis"],g=m.reversed,v=l.inverted,y=m.horiz,b=!1;u.length&&(p||h)&&m.min!==A&&(p&&p.hide(),h&&h.hide(),i=m.getExtremes(),Ue(u,function(u,k){e=g?y?l.plotWidth:0:y?0:m.toPixels(i.min),e=de(ue(Ze(t,e),0),f),t=de(ue(se(m.toPixels(Ze(u.value,i.max),!0)),0),f),b&&(e=t=m.toPixels(i.max)),r=Math.abs(e-t),o=de(e,t),a=ue(e,t),m.isXAxis?(n={x:v?a:o,y:0,width:r,height:f},y||(n.x=l.plotHeight-n.x)):(n={x:0,y:v?a:o,width:f,height:r},y&&(n.y=l.plotWidth-n.y)),l.inverted&&c.isVML&&(n=m.isXAxis?{x:0,y:g?o:a,height:n.width,width:l.chartWidth}:{x:n.y-l.plotLeft-l.spacingBox.x,y:0,width:n.height,height:l.chartHeight}),d[k]?d[k].animate(n):(d[k]=c.clipRect(n),p&&s["zoneGraph"+k].clip(d[k]),h&&s["zoneArea"+k].clip(d[k])),b=u.value>i.max}),this.clips=d)},invertGroups:function(){function e(){var e={width:t.yAxis.len,height:t.xAxis.len};Ue(["group","markerGroup"],function(n){t[n]&&t[n].attr(e).invert()})}var t=this,n=t.chart;t.xAxis&&(We(n,"resize",e),We(t,"destroy",function(){He(n,"resize",e)}),e(),t.invertGroups=e)},plotGroup:function(e,t,n,i,r){var o=this[e],a=!o;return a&&(this[e]=o=this.chart.renderer.g(t).attr({zIndex:i||.1}).add(r),o.addClass("highcharts-series-"+this.index)),o.attr({visibility:n})[a?"attr":"animate"](this.getPlotBox()),o},getPlotBox:function(){var e=this.chart,t=this.xAxis,n=this.yAxis;return e.inverted&&(t=n,n=this.xAxis),{translateX:t?t.left:e.plotLeft,translateY:n?n.top:e.plotTop,scaleX:1,scaleY:1}},render:function(){var e,t=this,n=t.chart,i=t.options,r=!!t.animate&&n.renderer.isSVG&&_(i.animation).duration,o=t.visible?"inherit":"hidden",a=i.zIndex,s=t.hasRendered,l=n.seriesGroup;e=t.plotGroup("group","series",o,a,l),t.markerGroup=t.plotGroup("markerGroup","markers",o,a,l),r&&t.animate(!0),t.getAttribs(),e.inverted=!!t.isCartesian&&n.inverted,t.drawGraph&&(t.drawGraph(),t.applyZones()),Ue(t.points,function(e){e.redraw&&e.redraw()}),t.drawDataLabels&&t.drawDataLabels(),t.visible&&t.drawPoints(),t.drawTracker&&t.options.enableMouseTracking!==!1&&t.drawTracker(),n.inverted&&t.invertGroups(),i.clip!==!1&&!t.sharedClipKey&&!s&&e.clip(n.clipRect),r&&t.animate(),s||(t.animationTimeout=p(function(){t.afterAnimate()},r)),t.isDirty=t.isDirtyData=!1,t.hasRendered=!0},redraw:function(){var e=this.chart,t=this.isDirty||this.isDirtyData,n=this.group,i=this.xAxis,r=this.yAxis;n&&(e.inverted&&n.attr({width:e.plotWidth,height:e.plotHeight}),n.animate({translateX:Ze(i&&i.left,e.plotLeft),translateY:Ze(r&&r.top,e.plotTop)})),this.translate(),this.render(),t&&delete this.kdTree},kdDimensions:1,kdAxisArray:["clientX","plotY"],searchPoint:function(e,t){var n=this.xAxis,i=this.yAxis,r=this.chart.inverted;return this.searchKDTree({clientX:r?n.len-e.chartY+n.pos:e.chartX-n.pos,plotY:r?i.len-e.chartX+i.pos:e.chartY-i.pos},t)},buildKDTree:function(){function e(n,i,r){var o,a;if(a=n&&n.length)return o=t.kdAxisArray[i%r],n.sort(function(e,t){return e[o]-t[o]}),a=Math.floor(a/2),{point:n[a],left:e(n.slice(0,a),i+1,r),right:e(n.slice(a+1),i+1,r)}}var t=this,n=t.kdDimensions;delete t.kdTree,p(function(){t.kdTree=e(t.getValidPoints(null,!t.directTouch),n,n)},t.options.kdNow?0:1)},searchKDTree:function(e,t){function n(e,t,s,l){var u,d,p=t.point,h=i.kdAxisArray[s%l],f=p;return d=c(e[r])&&c(p[r])?Math.pow(e[r]-p[r],2):null,u=c(e[o])&&c(p[o])?Math.pow(e[o]-p[o],2):null,u=(d||0)+(u||0),p.dist=c(u)?Math.sqrt(u):Number.MAX_VALUE,p.distX=c(d)?Math.sqrt(d):Number.MAX_VALUE,h=e[h]-p[h],u=h<0?"left":"right",d=h<0?"right":"left",t[u]&&(u=n(e,t[u],s+1,l),f=u[a]<f[a]?u:p),t[d]&&Math.sqrt(h*h)<f[a]&&(e=n(e,t[d],s+1,l),f=e[a]<f[a]?e:f),f}var i=this,r=this.kdAxisArray[0],o=this.kdAxisArray[1],a=t?"distX":"dist";if(this.kdTree||this.buildKDTree(),this.kdTree)return n(e,this.kdTree,this.kdDimensions,this.kdDimensions)}},R.prototype={destroy:function(){C(this,this.axis)},render:function(e){var t=this.options,n=t.format,n=n?y(n,this):t.formatter.call(this);this.label?this.label.attr({text:n,visibility:"hidden"}):this.label=this.axis.chart.renderer.text(n,null,null,t.useHTML).css(t.style).attr({align:this.textAlign,rotation:t.rotation,visibility:"hidden"}).add(e)},setOffset:function(e,t){var n=this.axis,i=n.chart,r=i.inverted,o=n.reversed,o=this.isNegative&&!o||!this.isNegative&&o,a=n.translate(n.usePercentage?100:this.total,0,0,0,1),n=n.translate(0),n=pe(a-n),s=i.xAxis[0].translate(this.x)+e,l=i.plotHeight,o={x:r?o?a:a-n:s,y:r?l-s-t:o?l-a-n:l-a,width:r?n:t,height:r?t:n};(r=this.label)&&(r.align(this.alignOptions,null,o),o=r.alignAttr,r[this.options.crop===!1||i.isInsidePlot(o.x,o.y)?"show":"hide"](!0))}},ft.prototype.getStacks=function(){var e=this;Ue(e.yAxis,function(e){e.stacks&&e.hasVisibleSeries&&(e.oldStacks=e.stacks)}),Ue(e.series,function(t){!t.options.stacking||t.visible!==!0&&e.options.chart.ignoreHiddenSeries!==!1||(t.stackKey=t.type+Ze(t.options.stack,""))})},ot.prototype.buildStacks=function(){var e,t,n=this.series,i=Ze(this.options.reversedStacks,!0),r=n.length;if(!this.isXAxis){for(this.usePercentage=!1,t=r;t--;)n[i?t:r-t-1].setStackedPoints();for(t=r;t--;)e=n[i?t:r-t-1],e.setStackCliffs&&e.setStackCliffs();if(this.usePercentage)for(t=0;t<r;t++)n[t].setPercentStacks()}},ot.prototype.renderStackTotals=function(){var e,t,n=this.chart,i=n.renderer,r=this.stacks,o=this.stackTotalGroup;o||(this.stackTotalGroup=o=i.g("stack-labels").attr({visibility:"visible",zIndex:6}).add()),o.translate(n.plotLeft,n.plotTop);for(e in r)for(t in n=r[e])n[t].render(o)},ot.prototype.resetStacks=function(){var e,t,n=this.stacks;if(!this.isXAxis)for(e in n)for(t in n[e])n[e][t].touched<this.stacksTouched?(n[e][t].destroy(),delete n[e][t]):(n[e][t].total=null,n[e][t].cum=0)},ot.prototype.cleanStacks=function(){var e,t,n;if(!this.isXAxis){this.oldStacks&&(e=this.stacks=this.oldStacks);for(t in e)for(n in e[t])e[t][n].cum=e[t][n].total}},gt.prototype.setStackedPoints=function(){if(this.options.stacking&&(this.visible===!0||this.chart.options.chart.ignoreHiddenSeries===!1)){var e,t,n,i,r,o,a,s=this.processedXData,l=this.processedYData,c=[],u=l.length,d=this.options,p=d.threshold,h=d.startFromThreshold?p:0,f=d.stack,d=d.stacking,m=this.stackKey,g="-"+m,v=this.negStacks,y=this.yAxis,b=y.stacks,k=y.oldStacks;for(y.stacksTouched+=1,r=0;r<u;r++)o=s[r],a=l[r],e=this.getStackIndicator(e,o,this.index),i=e.key,n=(t=v&&a<(h?0:p))?g:m,b[n]||(b[n]={}),b[n][o]||(k[n]&&k[n][o]?(b[n][o]=k[n][o],b[n][o].total=null):b[n][o]=new R(y,y.options.stackLabels,t,o,f)),n=b[n][o],null!==a&&(n.points[i]=n.points[this.index]=[Ze(n.cum,h)],n.touched=y.stacksTouched,e.index>0&&this.singleStacks===!1&&(n.points[i][0]=n.points[this.index+","+o+",0"][0])),"percent"===d?(t=t?m:g,v&&b[t]&&b[t][o]?(t=b[t][o],n.total=t.total=ue(t.total,n.total)+pe(a)||0):n.total=T(n.total+(pe(a)||0))):n.total=T(n.total+(a||0)),n.cum=Ze(n.cum,h)+(a||0),null!==a&&(n.points[i].push(n.cum),c[r]=n.cum);"percent"===d&&(y.usePercentage=!0),this.stackedYData=c,y.oldStacks={}}},gt.prototype.setPercentStacks=function(){var e,t=this,n=t.stackKey,i=t.yAxis.stacks,r=t.processedXData;Ue([n,"-"+n],function(n){for(var o,a,s,l=r.length;l--;)a=r[l],e=t.getStackIndicator(e,a,t.index),o=(s=i[n]&&i[n][a])&&s.points[e.key],(a=o)&&(s=s.total?100/s.total:0,a[0]=T(a[0]*s),a[1]=T(a[1]*s),t.stackedYData[l]=a[1])})},gt.prototype.getStackIndicator=function(e,t,n){return c(e)&&e.x===t?e.index++:e={x:t,index:0},e.key=[n,t,e.index].join(","),e},Ke(ft.prototype,{addSeries:function(e,t,n){var i,r=this;return e&&(t=Ze(t,!0),ze(r,"addSeries",{options:e},function(){i=r.initSeries(e),r.isDirtyLegend=!0,r.linkSeries(),t&&r.redraw(n)})),i},addAxis:function(e,t,n,r){var o=t?"xAxis":"yAxis",a=this.options,e=i(e,{index:this[o].length,isX:t});new ot(this,e),a[o]=d(a[o]||{}),a[o].push(e),Ze(n,!0)&&this.redraw(r)},showLoading:function(e){var t=this,n=t.options,i=t.loadingDiv,r=n.loading,o=function(){i&&h(i,{left:t.plotLeft+"px",top:t.plotTop+"px",width:t.plotWidth+"px",height:t.plotHeight+"px"})};i||(t.loadingDiv=i=f(Re,{className:"highcharts-loading"},Ke(r.style,{zIndex:10,display:"none"}),t.container),t.loadingSpan=f("span",null,r.labelStyle,i),We(t,"redraw",o)),t.loadingSpan.innerHTML=e||n.lang.loading,t.loadingShown||(h(i,{opacity:0,display:""}),Ge(i,{opacity:r.style.opacity},{duration:r.showDuration||0}),t.loadingShown=!0),o()},hideLoading:function(){var e=this.options,t=this.loadingDiv;t&&Ge(t,{opacity:0},{duration:e.loading.hideDuration||100,complete:function(){h(t,{display:"none"})}}),this.loadingShown=!1}}),Ke(mt.prototype,{update:function(e,t,n,i){function r(){l.applyOptions(e),null===l.y&&u&&(l.graphic=u.destroy()),a(e)&&!s(e)&&(l.redraw=function(){u&&u.element&&e&&e.marker&&e.marker.symbol&&(l.graphic=u.destroy()),e&&e.dataLabels&&l.dataLabel&&(l.dataLabel=l.dataLabel.destroy()),l.redraw=null}),o=l.index,c.updateParallelArrays(l,o),h&&l.name&&(h[l.x]=l.name),p.data[o]=a(p.data[o])&&!s(p.data[o])?l.options:e,c.isDirty=c.isDirtyData=!0,!c.fixedBox&&c.hasCartesianSeries&&(d.isDirtyBox=!0),"point"===p.legendType&&(d.isDirtyLegend=!0),t&&d.redraw(n)}var o,l=this,c=l.series,u=l.graphic,d=c.chart,p=c.options,h=c.xAxis&&c.xAxis.names,t=Ze(t,!0);i===!1?r():l.firePointEvent("update",{options:e},r)},remove:function(e,t){this.series.removePoint(Fe(this,this.series.data),e,t)}}),Ke(gt.prototype,{addPoint:function(e,t,n,i){var r,o=this,a=o.options,s=o.data,l=o.graph,c=o.area,u=o.chart,d=o.xAxis&&o.xAxis.names,p=l&&l.shift||0,h=["graph","area"],l=a.data,f=o.xData;if(S(i,u),n){for(i=o.zones.length;i--;)h.push("zoneGraph"+i,"zoneArea"+i);Ue(h,function(e){o[e]&&(o[e].shift=p+(a.step?2:1))})}if(c&&(c.isArea=!0),t=Ze(t,!0),c={series:o},o.pointClass.prototype.applyOptions.apply(c,[e]),h=c.x,i=f.length,o.requireSorting&&h<f[i-1])for(r=!0;i&&f[i-1]>h;)i--;o.updateParallelArrays(c,"splice",i,0,0),o.updateParallelArrays(c,i),d&&c.name&&(d[h]=c.name),l.splice(i,0,e),r&&(o.data.splice(i,0,null),o.processData()),"point"===a.legendType&&o.generatePoints(),n&&(s[0]&&s[0].remove?s[0].remove(!1):(s.shift(),o.updateParallelArrays(c,"shift"),l.shift())),o.isDirty=!0,o.isDirtyData=!0,t&&(o.getAttribs(),u.redraw())},removePoint:function(e,t,n){var i=this,r=i.data,o=r[e],a=i.points,s=i.chart,l=function(){a&&a.length===r.length&&a.splice(e,1),r.splice(e,1),i.options.data.splice(e,1),i.updateParallelArrays(o||{series:i},"splice",e,1),o&&o.destroy(),i.isDirty=!0,i.isDirtyData=!0,t&&s.redraw()};S(n,s),t=Ze(t,!0),o?o.firePointEvent("remove",null,l):l()},remove:function(e,t){var n=this,i=n.chart;ze(n,"remove",null,function(){n.destroy(),i.isDirtyLegend=i.isDirtyBox=!0,i.linkSeries(),Ze(e,!0)&&i.redraw(t)})},update:function(e,t){var n,r=this,o=this.chart,a=this.userOptions,s=this.type,l=Le[s].prototype,c=["group","markerGroup","dataLabelsGroup"];(e.type&&e.type!==s||void 0!==e.zIndex)&&(c.length=0),Ue(c,function(e){c[e]=r[e],delete r[e]}),e=i(a,{animation:!1,index:this.index,pointStart:this.xData[0]},{data:this.options.data},e),this.remove(!1);for(n in l)this[n]=A;Ke(this,Le[e.type||s].prototype),Ue(c,function(e){r[e]=c[e]}),this.init(o,e),o.linkSeries(),Ze(t,!0)&&o.redraw(!1)}}),Ke(ot.prototype,{update:function(e,t){var n=this.chart,e=n.options[this.coll][this.options.index]=i(this.userOptions,e);this.destroy(!0),this._addedPlotLB=this.chart._labelPanes=A,this.init(n,Ke(e,{events:A})),n.isDirtyBox=!0,Ze(t,!0)&&n.redraw()},remove:function(e){for(var t=this.chart,n=this.coll,i=this.series,r=i.length;r--;)i[r]&&i[r].remove(!1);l(t.axes,this),l(t[n],this),t.options[n].splice(this.options.index,1),Ue(t[n],function(e,t){e.options.index=t}),this.destroy(),t.isDirtyBox=!0,Ze(e,!0)&&t.redraw()},setTitle:function(e,t){this.update({title:e},t)},setCategories:function(e,t){this.update({categories:e},t)}});var vt=m(gt);Le.line=vt,Je.area=i(et,{softThreshold:!1,threshold:0});var yt=m(gt,{type:"area",singleStacks:!1,getStackPoints:function(){var e,t,n,i=[],r=[],o=this.xAxis,a=this.yAxis,s=a.stacks[this.stackKey],l={},c=this.points,u=this.index,d=a.series,p=d.length,h=Ze(a.options.reversedStacks,!0)?1:-1;if(this.options.stacking){for(t=0;t<c.length;t++)l[c[t].x]=c[t];for(n in s)null!==s[n].total&&r.push(n);r.sort(function(e,t){return e-t}),e=Ve(d,function(){return this.visible}),Ue(r,function(n,c){var d,f,m=0;if(l[n]&&!l[n].isNull)i.push(l[n]),Ue([-1,1],function(i){var o=1===i?"rightNull":"leftNull",a=0,m=s[r[c+i]];if(m)for(t=u;t>=0&&t<p;)d=m.points[t],d||(t===u?l[n][o]=!0:e[t]&&(f=s[n].points[t])&&(a-=f[1]-f[0])),t+=h;l[n][1===i?"rightCliff":"leftCliff"]=a});else{for(t=u;t>=0&&t<p;){if(d=s[n].points[t]){m=d[1];break}t+=h}m=a.toPixels(m,!0),i.push({isNull:!0,plotX:o.toPixels(n,!0),plotY:m,yBottom:m})}})}return i},getGraphPath:function(e){var t,n,i,r,o=gt.prototype.getGraphPath,a=this.options,s=a.stacking,l=this.yAxis,c=[],u=[],d=this.index,p=l.stacks[this.stackKey],h=a.threshold,f=l.getThreshold(a.threshold),a=a.connectNulls||"percent"===s,m=function(t,n,r){var o,a,m=e[t],t=s&&p[m.x].points[d],g=m[r+"Null"]||0,r=m[r+"Cliff"]||0,m=!0;r||g?(o=(g?t[0]:t[1])+r,a=t[0]+r,m=!!g):!s&&e[n]&&e[n].isNull&&(o=a=h),void 0!==o&&(u.push({plotX:i,plotY:null===o?f:l.getThreshold(o),isNull:m}),c.push({plotX:i,plotY:null===a?f:l.getThreshold(a)}))},e=e||this.points;for(s&&(e=this.getStackPoints()),t=0;t<e.length;t++)n=e[t].isNull,i=Ze(e[t].rectPlotX,e[t].plotX),r=Ze(e[t].yBottom,f),(!n||a)&&(a||m(t,t-1,"left"),n&&!s&&a||(u.push(e[t]),c.push({x:t,plotX:i,plotY:r})),a||m(t,t+1,"right"));return t=o.call(this,u,!0,!0),c.reversed=!0,n=o.call(this,c,!0,!0),n.length&&(n[0]="L"),t=t.concat(n),o=o.call(this,u,!1,a),this.areaPath=t,o},drawGraph:function(){this.areaPath=[],gt.prototype.drawGraph.apply(this);var e=this,t=this.areaPath,n=this.options,i=[["area",this.color,n.fillColor]];Ue(this.zones,function(t,r){i.push(["zoneArea"+r,t.color||e.color,t.fillColor||n.fillColor])}),Ue(i,function(i){var r=i[0],o=e[r];o?o.animate({d:t}):(o={fill:i[2]||i[1],zIndex:0},i[2]||(o["fill-opacity"]=Ze(n.fillOpacity,.75)),e[r]=e.chart.renderer.path(t).attr(o).add(e.group))})},drawLegendSymbol:nt.drawRectangle});return Le.area=yt,Je.spline=i(et),vt=m(gt,{type:"spline",getPointSpline:function(e,t,n){var i,r,o,a,s=t.plotX,l=t.plotY,c=e[n-1],n=e[n+1];if(c&&!c.isNull&&n&&!n.isNull){e=c.plotY,o=n.plotX;var n=n.plotY,u=0;i=(1.5*s+c.plotX)/2.5,r=(1.5*l+e)/2.5,o=(1.5*s+o)/2.5,a=(1.5*l+n)/2.5,o!==i&&(u=(a-r)*(o-s)/(o-i)+l-a),r+=u,a+=u,r>e&&r>l?(r=ue(e,l),a=2*l-r):r<e&&r<l&&(r=de(e,l),a=2*l-r),a>n&&a>l?(a=ue(n,l),r=2*l-a):a<n&&a<l&&(a=de(n,l),r=2*l-a),t.rightContX=o,t.rightContY=a}return t=["C",Ze(c.rightContX,c.plotX),Ze(c.rightContY,c.plotY),Ze(i,s),Ze(r,l),s,l],c.rightContX=c.rightContY=null,t}}),Le.spline=vt,Je.areaspline=i(Je.area),yt=yt.prototype,vt=m(vt,{type:"areaspline",getStackPoints:yt.getStackPoints,getGraphPath:yt.getGraphPath,setStackCliffs:yt.setStackCliffs,drawGraph:yt.drawGraph,drawLegendSymbol:nt.drawRectangle}),Le.areaspline=vt,Je.column=i(et,{borderColor:"#FFFFFF",borderRadius:0,groupPadding:.2,marker:null,pointPadding:.1,minPointLength:0,cropThreshold:50,pointRange:null,states:{hover:{brightness:.1,shadow:!1,halo:!1},select:{color:"#C0C0C0",borderColor:"#000000",shadow:!1}},dataLabels:{align:null,verticalAlign:null,y:null},softThreshold:!1,startFromThreshold:!0,stickyTracking:!1,tooltip:{distance:6},threshold:0}),vt=m(gt,{type:"column",pointAttrToOptions:{stroke:"borderColor",fill:"color",r:"borderRadius"},cropShoulder:0,directTouch:!0,trackerGroups:["group","dataLabelsGroup"],negStacks:!0,init:function(){gt.prototype.init.apply(this,arguments);var e=this,t=e.chart;t.hasRendered&&Ue(t.series,function(t){t.type===e.type&&(t.isDirty=!0)})},getColumnMetrics:function(){var e,t=this,n=t.options,i=t.xAxis,r=t.yAxis,o=i.reversed,a={},s=0;n.grouping===!1?s=1:Ue(t.chart.series,function(n){var i,o=n.options,l=n.yAxis;n.type===t.type&&n.visible&&r.len===l.len&&r.pos===l.pos&&(o.stacking?(e=n.stackKey,a[e]===A&&(a[e]=s++),i=a[e]):o.grouping!==!1&&(i=s++),n.columnIndex=i)});var l=de(pe(i.transA)*(i.ordinalSlope||n.pointRange||i.closestPointRange||i.tickInterval||1),i.len),c=l*n.groupPadding,u=(l-2*c)/s,n=de(n.maxPointWidth||i.len,Ze(n.pointWidth,u*(1-2*n.pointPadding)));return t.columnMetrics={width:n,offset:(u-n)/2+(c+((t.columnIndex||0)+(o?1:0))*u-l/2)*(o?-1:1)},t.columnMetrics},crispCol:function(e,t,n,i){var r=this.chart,o=this.borderWidth,a=-(o%2?.5:0),o=o%2?.5:1;return r.inverted&&r.renderer.isVML&&(o+=1),n=Math.round(e+n)+a,e=Math.round(e)+a,n-=e,i=Math.round(t+i)+o,a=pe(t)<=.5&&i>.5,t=Math.round(t)+o,i-=t,a&&i&&(t-=1,i+=1),{x:e,y:t,width:n,height:i}},translate:function(){var e=this,t=e.chart,n=e.options,i=e.borderWidth=Ze(n.borderWidth,e.closestPointRange*e.xAxis.transA<2?0:1),r=e.yAxis,o=e.translatedThreshold=r.getThreshold(n.threshold),a=Ze(n.minPointLength,5),s=e.getColumnMetrics(),l=s.width,c=e.barW=ue(l,1+2*i),u=e.pointXOffset=s.offset;t.inverted&&(o-=.5),n.pointPadding&&(c=ce(c)),gt.prototype.translate.apply(e),Ue(e.points,function(n){var i,s=de(Ze(n.yBottom,o),9e4),d=999+pe(s),d=de(ue(-d,n.plotY),r.len+d),p=n.plotX+u,h=c,f=de(d,s),m=ue(d,s)-f;pe(m)<a&&a&&(m=a,i=!r.reversed&&!n.negative||r.reversed&&n.negative,f=pe(f-o)>a?s-a:o-(i?a:0)),n.barX=p,n.pointWidth=l,n.tooltipPos=t.inverted?[r.len+r.pos-t.plotLeft-d,e.xAxis.len-p-h/2,m]:[p+h/2,d+r.pos-t.plotTop,m],n.shapeType="rect",n.shapeArgs=e.crispCol(p,f,h,m)})},getSymbol:Oe,drawLegendSymbol:nt.drawRectangle,drawGraph:Oe,drawPoints:function(){var e,t,n=this,r=this.chart,o=n.options,a=r.renderer,s=o.animationLimit||250;Ue(n.points,function(l){var u,d=l.graphic;Qe(l.plotY)&&null!==l.y?(e=l.shapeArgs,u=c(n.borderWidth)?{"stroke-width":n.borderWidth}:{},t=l.pointAttr[l.selected?"select":""]||n.pointAttr[""],d?(Xe(d),d.attr(u).attr(t)[r.pointCount<s?"animate":"attr"](i(e))):l.graphic=a[l.shapeType](e).attr(u).attr(t).add(l.group||n.group).shadow(o.shadow,null,o.stacking&&!o.borderRadius)):d&&(l.graphic=d.destroy())})},animate:function(e){var t=this,n=this.yAxis,i=t.options,r=this.chart.inverted,o={};Pe&&(e?(o.scaleY=.001,e=de(n.pos+n.len,ue(n.pos,n.toPixels(i.threshold))),r?o.translateX=e-n.len:o.translateY=e,t.group.attr(o)):(o[r?"translateX":"translateY"]=n.pos,t.group.animate(o,Ke(_(t.options.animation),{step:function(e,n){t.group.attr({scaleY:ue(.001,n.pos)})}})),t.animate=null))},remove:function(){var e=this,t=e.chart;t.hasRendered&&Ue(t.series,function(t){t.type===e.type&&(t.isDirty=!0)}),gt.prototype.remove.apply(e,arguments)}}),Le.column=vt,Je.bar=i(Je.column),yt=m(vt,{type:"bar",inverted:!0}),Le.bar=yt,Je.scatter=i(et,{lineWidth:0,marker:{enabled:!0},tooltip:{headerFormat:'<span style="color:{point.color}">●</span> <span style="font-size: 10px;"> {series.name}</span><br/>',pointFormat:"x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"}}),yt=m(gt,{type:"scatter",sorted:!1,requireSorting:!1,noSharedTooltip:!0,trackerGroups:["group","markerGroup","dataLabelsGroup"],takeOrdinalPosition:!1,kdDimensions:2,drawGraph:function(){this.options.lineWidth&&gt.prototype.drawGraph.call(this)}}),Le.scatter=yt,Je.pie=i(et,{borderColor:"#FFFFFF",borderWidth:1,center:[null,null],clip:!1,colorByPoint:!0,dataLabels:{distance:30,enabled:!0,formatter:function(){return null===this.y?void 0:this.point.name},x:0},ignoreHiddenPoint:!0,legendType:"point",marker:null,size:null,showInLegend:!1,slicedOffset:10,states:{hover:{brightness:.1,shadow:!1}},stickyTracking:!1,tooltip:{followPointer:!0}}),et={type:"pie",isCartesian:!1,pointClass:m(mt,{init:function(){mt.prototype.init.apply(this,arguments);var e,t=this;return t.name=Ze(t.name,"Slice"),e=function(e){t.slice("select"===e.type)},We(t,"select",e),We(t,"unselect",e),t},setVisible:function(e,t){var n=this,i=n.series,r=i.chart,o=i.options.ignoreHiddenPoint,t=Ze(t,o);e!==n.visible&&(n.visible=n.options.visible=e=e===A?!n.visible:e,i.options.data[Fe(n,i.data)]=n.options,Ue(["graphic","dataLabel","connector","shadowGroup"],function(t){n[t]&&n[t][e?"show":"hide"](!0)}),n.legendItem&&r.legend.colorizeItem(n,e),!e&&"hover"===n.state&&n.setState(""),o&&(i.isDirty=!0),t&&r.redraw())},slice:function(e,t,n){var i=this.series;S(n,i.chart),Ze(t,!0),this.sliced=this.options.sliced=e=c(e)?e:!this.sliced,i.options.data[Fe(this,i.data)]=this.options,e=e?this.slicedTranslation:{translateX:0,translateY:0},this.graphic.animate(e),this.shadowGroup&&this.shadowGroup.animate(e)},haloPath:function(e){var t=this.shapeArgs,n=this.series.chart;return this.sliced||!this.visible?[]:this.series.chart.renderer.symbols.arc(n.plotLeft+t.x,n.plotTop+t.y,t.r+e,t.r+e,{innerR:this.shapeArgs.r,start:t.start,end:t.end})}}),requireSorting:!1,directTouch:!0,noSharedTooltip:!0,trackerGroups:["group","dataLabelsGroup"],axisTypes:[],pointAttrToOptions:{stroke:"borderColor","stroke-width":"borderWidth",fill:"color"},animate:function(e){var t=this,n=t.points,i=t.startAngleRad;e||(Ue(n,function(e){var n=e.graphic,r=e.shapeArgs;n&&(n.attr({r:e.startR||t.center[3]/2,start:i,end:i}),n.animate({r:r.r,start:r.start,end:r.end},t.options.animation))}),t.animate=null)},updateTotals:function(){var e,t,n=0,i=this.points,r=i.length,o=this.options.ignoreHiddenPoint;for(e=0;e<r;e++)t=i[e],n+=o&&!t.visible?0:t.y;for(this.total=n,e=0;e<r;e++)t=i[e],t.percentage=n>0&&(t.visible||!o)?t.y/n*100:0,t.total=n},generatePoints:function(){gt.prototype.generatePoints.call(this),this.updateTotals()},translate:function(e){this.generatePoints();var t,n,i,r,o,a=0,s=this.options,l=s.slicedOffset,c=l+s.borderWidth,u=s.startAngle||0,d=this.startAngleRad=me/180*(u-90),u=(this.endAngleRad=me/180*(Ze(s.endAngle,u+360)-90))-d,p=this.points,h=s.dataLabels.distance,s=s.ignoreHiddenPoint,f=p.length;for(e||(this.center=e=this.getCenter()),this.getX=function(t,n){return i=ae.asin(de((t-e[1])/(e[2]/2+h),1)),e[0]+(n?-1:1)*he(i)*(e[2]/2+h)},r=0;r<f;r++)o=p[r],t=d+a*u,s&&!o.visible||(a+=o.percentage/100),n=d+a*u,o.shapeType="arc",o.shapeArgs={x:e[0],y:e[1],r:e[2]/2,innerR:e[3]/2,start:se(1e3*t)/1e3,end:se(1e3*n)/1e3},i=(n+t)/2,i>1.5*me?i-=2*me:i<-me/2&&(i+=2*me),o.slicedTranslation={translateX:se(he(i)*l),translateY:se(fe(i)*l)},t=he(i)*e[2]/2,n=fe(i)*e[2]/2,o.tooltipPos=[e[0]+.7*t,e[1]+.7*n],o.half=i<-me/2||i>me/2?1:0,o.angle=i,c=de(c,h/2),o.labelPos=[e[0]+t+he(i)*h,e[1]+n+fe(i)*h,e[0]+t+he(i)*c,e[1]+n+fe(i)*c,e[0]+t,e[1]+n,h<0?"center":o.half?"right":"left",i]},drawGraph:null,drawPoints:function(){var e,t,n,i,r,o,a=this,s=a.chart.renderer,l=a.options.shadow;l&&!a.shadowGroup&&(a.shadowGroup=s.g("shadow").add(a.group)),Ue(a.points,function(c){null!==c.y&&(t=c.graphic,r=c.shapeArgs,n=c.shadowGroup,i=c.pointAttr[c.selected?"select":""],i.stroke||(i.stroke=i.fill),l&&!n&&(n=c.shadowGroup=s.g("shadow").add(a.shadowGroup)),e=c.sliced?c.slicedTranslation:{translateX:0,translateY:0},n&&n.attr(e),t?t.setRadialReference(a.center).attr(i).animate(Ke(r,e)):(o={"stroke-linejoin":"round"},c.visible||(o.visibility="hidden"),c.graphic=t=s[c.shapeType](r).setRadialReference(a.center).attr(i).attr(o).attr(e).add(a.group).shadow(l,n)))})},searchPoint:Oe,sortByAngle:function(e,t){e.sort(function(e,n){return void 0!==e.angle&&(n.angle-e.angle)*t})},drawLegendSymbol:nt.drawRectangle,getCenter:it.getCenter,getSymbol:Oe},et=m(gt,et),Le.pie=et,gt.prototype.drawDataLabels=function(){var e,t,n,r,o=this,a=o.options,s=a.cursor,l=a.dataLabels,u=o.points,d=o.hasRendered||0,p=Ze(l.defer,!0),h=o.chart.renderer;(l.enabled||o._hasPointLabels)&&(o.dlProcessOptions&&o.dlProcessOptions(l),r=o.plotGroup("dataLabelsGroup","data-labels",p&&!d?"hidden":"visible",l.zIndex||6),p&&(r.attr({opacity:+d}),d||We(o,"afterAnimate",function(){o.visible&&r.show(),r[a.animation?"animate":"attr"]({opacity:1},{duration:200})})),t=l,Ue(u,function(u){var d,p,f,m,g=u.dataLabel,v=u.connector,b=!0,k={};if(e=u.dlOptions||u.options&&u.options.dataLabels,d=Ze(e&&e.enabled,t.enabled)&&null!==u.y,g&&!d)u.dataLabel=g.destroy();else if(d){if(l=i(t,e),m=l.style,d=l.rotation,p=u.getLabelConfig(),n=l.format?y(l.format,p):l.formatter.call(p,l),m.color=Ze(l.color,m.color,o.color,"black"),g)c(n)?(g.attr({text:n}),b=!1):(u.dataLabel=g=g.destroy(),v&&(u.connector=v.destroy()));else if(c(n)){g={fill:l.backgroundColor,stroke:l.borderColor,"stroke-width":l.borderWidth,r:l.borderRadius||0,rotation:d,padding:l.padding,zIndex:1},"contrast"===m.color&&(k.color=l.inside||l.distance<0||a.stacking?h.getContrast(u.color||o.color):"#000000"),s&&(k.cursor=s);for(f in g)g[f]===A&&delete g[f];g=u.dataLabel=h[d?"text":"label"](n,0,-9999,l.shape,null,null,l.useHTML).attr(g).css(Ke(m,k)).add(r).shadow(l.shadow)}g&&o.alignDataLabel(u,g,l,null,b)}}))},gt.prototype.alignDataLabel=function(e,t,n,i,r){var o=this.chart,a=o.inverted,s=Ze(e.plotX,-9999),l=Ze(e.plotY,-9999),c=t.getBBox(),u=o.renderer.fontMetrics(n.style.fontSize).b,d=n.rotation,p=n.align,h=this.visible&&(e.series.forceDL||o.isInsidePlot(s,se(l),a)||i&&o.isInsidePlot(s,a?i.x+1:i.y+i.height-1,a)),f="justify"===Ze(n.overflow,"justify");h&&(i=Ke({x:a?o.plotWidth-l:s,y:se(a?o.plotHeight-s:l),width:0,height:0},i),Ke(n,{width:c.width,height:c.height}),d?(f=!1,a=o.renderer.rotCorr(u,d),a={x:i.x+n.x+i.width/2+a.x,y:i.y+n.y+{top:0,middle:.5,bottom:1}[n.verticalAlign]*i.height},t[r?"attr":"animate"](a).attr({align:p}),s=(d+720)%360,s=s>180&&s<360,"left"===p?a.y-=s?c.height:0:"center"===p?(a.x-=c.width/2,a.y-=c.height/2):"right"===p&&(a.x-=c.width,a.y-=s?0:c.height)):(t.align(n,null,i),a=t.alignAttr),f?this.justifyDataLabel(t,n,a,c,i,r):Ze(n.crop,!0)&&(h=o.isInsidePlot(a.x,a.y)&&o.isInsidePlot(a.x+c.width,a.y+c.height)),n.shape&&!d&&t.attr({anchorX:e.plotX,anchorY:e.plotY})),h||(Xe(t),t.attr({y:-9999}),t.placed=!1)},gt.prototype.justifyDataLabel=function(e,t,n,i,r,o){var a,s,l=this.chart,c=t.align,u=t.verticalAlign,d=e.box?0:e.padding||0;a=n.x+d,a<0&&("right"===c?t.align="left":t.x=-a,s=!0),a=n.x+i.width-d,a>l.plotWidth&&("left"===c?t.align="right":t.x=l.plotWidth-a,s=!0),a=n.y+d,a<0&&("bottom"===u?t.verticalAlign="top":t.y=-a,s=!0),a=n.y+i.height-d,a>l.plotHeight&&("top"===u?t.verticalAlign="bottom":t.y=l.plotHeight-a,s=!0),s&&(e.placed=!o,e.align(t,null,r))},Le.pie&&(Le.pie.prototype.drawDataLabels=function(){var e,t,n,i,r,o,a,s,l,c,u,d=this,p=d.data,h=d.chart,f=d.options.dataLabels,m=Ze(f.connectorPadding,10),g=Ze(f.connectorWidth,1),v=h.plotWidth,y=h.plotHeight,b=Ze(f.softConnector,!0),k=f.distance,x=d.center,w=x[2]/2,C=x[1],P=k>0,T=[[],[]],S=[0,0,0,0],_=function(e,t){return t.y-e.y};if(d.visible&&(f.enabled||d._hasPointLabels)){for(gt.prototype.drawDataLabels.apply(d),
Ue(p,function(e){e.dataLabel&&e.visible&&(T[e.half].push(e),e.dataLabel._pos=null)}),c=2;c--;){var M,O=[],D=[],N=T[c],R=N.length;if(R){for(d.sortByAngle(N,c-.5),u=p=0;!p&&N[u];)p=N[u]&&N[u].dataLabel&&(N[u].dataLabel.getBBox().height||21),u++;if(k>0){for(r=de(C+w+k,h.plotHeight),u=ue(0,C-w-k);u<=r;u+=p)O.push(u);if(r=O.length,R>r){for(e=[].concat(N),e.sort(_),u=R;u--;)e[u].rank=u;for(u=R;u--;)N[u].rank>=r&&N.splice(u,1);R=N.length}for(u=0;u<R;u++){e=N[u],o=e.labelPos,e=9999;var A,j;for(j=0;j<r;j++)A=pe(O[j]-o[1]),A<e&&(e=A,M=j);if(M<u&&null!==O[u])M=u;else for(r<R-u+M&&null!==O[u]&&(M=r-R+u);null===O[M];)M++;D.push({i:M,y:O[M]}),O[M]=null}D.sort(_)}for(u=0;u<R;u++)e=N[u],o=e.labelPos,i=e.dataLabel,l=e.visible===!1?"hidden":"inherit",e=o[1],k>0?(r=D.pop(),M=r.i,s=r.y,(e>s&&null!==O[M+1]||e<s&&null!==O[M-1])&&(s=de(ue(0,e),h.plotHeight))):s=e,a=f.justify?x[0]+(c?-1:1)*(w+k):d.getX(s===C-w-k||s===C+w+k?e:s,c),i._attr={visibility:l,align:o[6]},i._pos={x:a+f.x+({left:m,right:-m}[o[6]]||0),y:s+f.y-10},i.connX=a,i.connY=s,null===this.options.size&&(r=i.width,a-r<m?S[3]=ue(se(r-a+m),S[3]):a+r>v-m&&(S[1]=ue(se(a+r-v+m),S[1])),s-p/2<0?S[0]=ue(se(-s+p/2),S[0]):s+p/2>y&&(S[2]=ue(se(s+p/2-y),S[2])))}}(0===E(S)||this.verifyDataLabelOverflow(S))&&(this.placeDataLabels(),P&&g&&Ue(this.points,function(e){t=e.connector,o=e.labelPos,(i=e.dataLabel)&&i._pos&&e.visible?(l=i._attr.visibility,a=i.connX,s=i.connY,n=b?["M",a+("left"===o[6]?5:-5),s,"C",a,s,2*o[2]-o[4],2*o[3]-o[5],o[2],o[3],"L",o[4],o[5]]:["M",a+("left"===o[6]?5:-5),s,"L",o[2],o[3],"L",o[4],o[5]],t?(t.animate({d:n}),t.attr("visibility",l)):e.connector=t=d.chart.renderer.path(n).attr({"stroke-width":g,stroke:f.connectorColor||e.color||"#606060",visibility:l}).add(d.dataLabelsGroup)):t&&(e.connector=t.destroy())}))}},Le.pie.prototype.placeDataLabels=function(){Ue(this.points,function(e){var t=e.dataLabel;t&&e.visible&&((e=t._pos)?(t.attr(t._attr),t[t.moved?"animate":"attr"](e),t.moved=!0):t&&t.attr({y:-9999}))})},Le.pie.prototype.alignDataLabel=Oe,Le.pie.prototype.verifyDataLabelOverflow=function(e){var t,n=this.center,i=this.options,r=i.center,o=i.minSize||80,a=o;return null!==r[0]?a=ue(n[2]-ue(e[1],e[3]),o):(a=ue(n[2]-e[1]-e[3],o),n[0]+=(e[3]-e[1])/2),null!==r[1]?a=ue(de(a,n[2]-ue(e[0],e[2])),o):(a=ue(de(a,n[2]-e[0]-e[2]),o),n[1]+=(e[0]-e[2])/2),a<n[2]?(n[2]=a,n[3]=Math.min(/%$/.test(i.innerSize||0)?a*parseFloat(i.innerSize||0)/100:parseFloat(i.innerSize||0),a),this.translate(n),this.drawDataLabels&&this.drawDataLabels()):t=!0,t}),Le.column&&(Le.column.prototype.alignDataLabel=function(e,t,n,r,o){var a=this.chart.inverted,s=e.series,l=e.dlBox||e.shapeArgs,c=Ze(e.below,e.plotY>Ze(this.translatedThreshold,s.yAxis.len)),u=Ze(n.inside,!!this.options.stacking);l&&(r=i(l),r.y<0&&(r.height+=r.y,r.y=0),l=r.y+r.height-s.yAxis.len,l>0&&(r.height-=l),a&&(r={x:s.yAxis.len-r.y-r.height,y:s.xAxis.len-r.x-r.width,width:r.height,height:r.width}),u||(a?(r.x+=c?0:r.width,r.width=0):(r.y+=c?r.height:0,r.height=0))),n.align=Ze(n.align,!a||u?"center":c?"right":"left"),n.verticalAlign=Ze(n.verticalAlign,a||u?"middle":c?"top":"bottom"),gt.prototype.alignDataLabel.call(this,e,t,n,r,o)}),function(e){var t=e.Chart,n=e.each,i=e.pick,r=e.addEvent;t.prototype.callbacks.push(function(e){function t(){var t=[];n(e.series,function(e){var r=e.options.dataLabels,o=e.dataLabelCollections||["dataLabel"];(r.enabled||e._hasPointLabels)&&!r.allowOverlap&&e.visible&&n(o,function(r){n(e.points,function(e){e[r]&&(e[r].labelrank=i(e.labelrank,e.shapeArgs&&e.shapeArgs.height),t.push(e[r]))})})}),e.hideOverlappingLabels(t)}t(),r(e,"redraw",t)}),t.prototype.hideOverlappingLabels=function(e){var t,i,r,o,a,s,l,c,u,d=e.length;for(i=0;i<d;i++)(t=e[i])&&(t.oldOpacity=t.opacity,t.newOpacity=1);for(e.sort(function(e,t){return(t.labelrank||0)-(e.labelrank||0)}),i=0;i<d;i++)for(r=e[i],t=i+1;t<d;++t)o=e[t],r&&o&&r.placed&&o.placed&&0!==r.newOpacity&&0!==o.newOpacity&&(a=r.alignAttr,s=o.alignAttr,l=r.parentGroup,c=o.parentGroup,u=2*(r.box?0:r.padding),a=!(s.x+c.translateX>a.x+l.translateX+(r.width-u)||s.x+c.translateX+(o.width-u)<a.x+l.translateX||s.y+c.translateY>a.y+l.translateY+(r.height-u)||s.y+c.translateY+(o.height-u)<a.y+l.translateY))&&((r.labelrank<o.labelrank?r:o).newOpacity=0);n(e,function(e){var t,n;e&&(n=e.newOpacity,e.oldOpacity!==n&&e.placed&&(n?e.show(!0):t=function(){e.hide()},e.alignAttr.opacity=n,e[e.isOld?"animate":"attr"](e.alignAttr,null,t)),e.isOld=!0)})}}(re),et=re.TrackerMixin={drawTrackerPoint:function(){var e=this,t=e.chart,n=t.pointer,i=e.options.cursor,r=i&&{cursor:i},o=function(e){for(var n,i=e.target;i&&!n;)n=i.point,i=i.parentNode;n!==A&&n!==t.hoverPoint&&n.onMouseOver(e)};Ue(e.points,function(e){e.graphic&&(e.graphic.element.point=e),e.dataLabel&&(e.dataLabel.element.point=e)}),e._hasTracking||(Ue(e.trackerGroups,function(t){e[t]&&(e[t].addClass("highcharts-tracker").on("mouseover",o).on("mouseout",function(e){n.onTrackerMouseOut(e)}).css(r),L)&&e[t].on("touchstart",o)}),e._hasTracking=!0)},drawTrackerGraph:function(){var e=this,t=e.options,n=t.trackByArea,i=[].concat(n?e.areaPath:e.graphPath),r=i.length,o=e.chart,a=o.pointer,s=o.renderer,l=o.options.tooltip.snap,c=e.tracker,u=t.cursor,d=u&&{cursor:u},p=function(){o.hoverSeries!==e&&e.onMouseOver()},h="rgba(192,192,192,"+(Pe?1e-4:.002)+")";if(r&&!n)for(u=r+1;u--;)"M"===i[u]&&i.splice(u+1,0,i[u+1]-l,i[u+2],"L"),(u&&"M"===i[u]||u===r)&&i.splice(u,0,"L",i[u-2]+l,i[u-1]);c?c.attr({d:i}):(e.tracker=s.path(i).attr({"stroke-linejoin":"round",visibility:e.visible?"visible":"hidden",stroke:h,fill:n?h:"none","stroke-width":t.lineWidth+(n?0:2*l),zIndex:2}).add(e.group),Ue([e.tracker,e.markerGroup],function(e){e.addClass("highcharts-tracker").on("mouseover",p).on("mouseout",function(e){a.onTrackerMouseOut(e)}).css(d),L&&e.on("touchstart",p)}))}},Le.column&&(vt.prototype.drawTracker=et.drawTrackerPoint),Le.pie&&(Le.pie.prototype.drawTracker=et.drawTrackerPoint),Le.scatter&&(yt.prototype.drawTracker=et.drawTrackerPoint),Ke(ht.prototype,{setItemEvents:function(e,t,n,i,r){var o=this;(n?t:e.legendGroup).on("mouseover",function(){e.setState("hover"),t.css(o.options.itemHoverStyle)}).on("mouseout",function(){t.css(e.visible?i:r),e.setState()}).on("click",function(t){var n=function(){e.setVisible&&e.setVisible()},t={browserEvent:t};e.firePointEvent?e.firePointEvent("legendItemClick",t,n):ze(e,"legendItemClick",t,n)})},createCheckboxForItem:function(e){e.checkbox=f("input",{type:"checkbox",checked:e.selected,defaultChecked:e.selected},this.options.itemCheckboxStyle,this.chart.container),We(e.checkbox,"click",function(t){ze(e.series||e,"checkboxClick",{checked:t.target.checked,item:e},function(){e.select()})})}}),F.legend.itemStyle.cursor="pointer",Ke(ft.prototype,{showResetZoom:function(){var e=this,t=F.lang,n=e.options.chart.resetZoomButton,i=n.theme,r=i.states,o="chart"===n.relativeTo?null:"plotBox";this.resetZoomButton=e.renderer.button(t.resetZoom,null,null,function(){e.zoomOut()},i,r&&r.hover).attr({align:n.position.align,title:t.resetZoomTitle}).add().align(n.position,!1,o)},zoomOut:function(){var e=this;ze(e,"selection",{resetSelection:!0},function(){e.zoom()})},zoom:function(e){var t,n,i=this.pointer,r=!1;!e||e.resetSelection?Ue(this.axes,function(e){t=e.zoom()}):Ue(e.xAxis.concat(e.yAxis),function(e){var n=e.axis,o=n.isXAxis;(i[o?"zoomX":"zoomY"]||i[o?"pinchX":"pinchY"])&&(t=n.zoom(e.min,e.max),n.displayBtn&&(r=!0))}),n=this.resetZoomButton,r&&!n?this.showResetZoom():!r&&a(n)&&(this.resetZoomButton=n.destroy()),t&&this.redraw(Ze(this.options.chart.animation,e&&e.animation,this.pointCount<100))},pan:function(e,t){var n,i=this,r=i.hoverPoints;r&&Ue(r,function(e){e.setState()}),Ue("xy"===t?[1,0]:[1],function(t){var t=i[t?"xAxis":"yAxis"][0],r=t.horiz,o=e[r?"chartX":"chartY"],r=r?"mouseDownX":"mouseDownY",a=i[r],s=(t.pointRange||0)/2,l=t.getExtremes(),c=t.toValue(a-o,!0)+s,s=t.toValue(a+t.len-o,!0)-s,a=a>o;t.series.length&&(a||c>de(l.dataMin,l.min))&&(!a||s<ue(l.dataMax,l.max))&&(t.setExtremes(c,s,!1,!1,{trigger:"pan"}),n=!0),i[r]=o}),n&&i.redraw(!1),h(i.container,{cursor:"move"})}}),Ke(mt.prototype,{select:function(e,t){var n=this,i=n.series,r=i.chart,e=Ze(e,!n.selected);n.firePointEvent(e?"select":"unselect",{accumulate:t},function(){n.selected=n.options.selected=e,i.options.data[Fe(n,i.data)]=n.options,n.setState(e&&"select"),t||Ue(r.getSelectedPoints(),function(e){e.selected&&e!==n&&(e.selected=e.options.selected=!1,i.options.data[Fe(e,i.data)]=e.options,e.setState(""),e.firePointEvent("unselect"))})})},onMouseOver:function(e,t){var n=this.series,i=n.chart,r=i.tooltip,o=i.hoverPoint;i.hoverSeries!==n&&n.onMouseOver(),o&&o!==this&&o.onMouseOut(),this.series&&(this.firePointEvent("mouseOver"),r&&(!r.shared||n.noSharedTooltip)&&r.refresh(this,e),this.setState("hover"),!t)&&(i.hoverPoint=this)},onMouseOut:function(){var e=this.series.chart,t=e.hoverPoints;this.firePointEvent("mouseOut"),t&&Fe(this,t)!==-1||(this.setState(),e.hoverPoint=null)},importEvents:function(){if(!this.hasImportedEvents){var e,t=i(this.series.options.point,this.options).events;this.events=t;for(e in t)We(this,e,t[e]);this.hasImportedEvents=!0}},setState:function(e,t){var n,r=le(this.plotX),o=this.plotY,a=this.series,s=a.options.states,l=Je[a.type].marker&&a.options.marker,c=l&&!l.enabled,u=l&&l.states[e],d=u&&u.enabled===!1,p=a.stateMarkerGraphic,h=this.marker||{},f=a.chart,m=a.halo,e=e||"";n=this.pointAttr[e]||a.pointAttr[e],e===this.state&&!t||this.selected&&"select"!==e||s[e]&&s[e].enabled===!1||e&&(d||c&&u.enabled===!1)||e&&h.states&&h.states[e]&&h.states[e].enabled===!1||(this.graphic?(l=l&&this.graphic.symbolName&&n.r,this.graphic.attr(i(n,l?{x:r-l,y:o-l,width:2*l,height:2*l}:{})),p&&p.hide()):(e&&u&&(l=u.radius,h=h.symbol||a.symbol,p&&p.currentSymbol!==h&&(p=p.destroy()),p?p[t?"animate":"attr"]({x:r-l,y:o-l}):h&&(a.stateMarkerGraphic=p=f.renderer.symbol(h,r-l,o-l,2*l,2*l).attr(n).add(a.markerGroup),p.currentSymbol=h)),p&&(p[e&&f.isInsidePlot(r,o,f.inverted)?"show":"hide"](),p.element.point=this)),(r=s[e]&&s[e].halo)&&r.size?(m||(a.halo=m=f.renderer.path().add(f.seriesGroup)),m.attr(Ke({fill:this.color||a.color,"fill-opacity":r.opacity,zIndex:-1},r.attributes))[t?"animate":"attr"]({d:this.haloPath(r.size)})):m&&m.attr({d:[]}),this.state=e)},haloPath:function(e){var t=this.series,n=t.chart,i=t.getPlotBox(),r=n.inverted,o=Math.floor(this.plotX);return n.renderer.symbols.circle(i.translateX+(r?t.yAxis.len-this.plotY:o)-e,i.translateY+(r?t.xAxis.len-o:this.plotY)-e,2*e,2*e)}}),Ke(gt.prototype,{onMouseOver:function(){var e=this.chart,t=e.hoverSeries;t&&t!==this&&t.onMouseOut(),this.options.events.mouseOver&&ze(this,"mouseOver"),this.setState("hover"),e.hoverSeries=this},onMouseOut:function(){var e=this.options,t=this.chart,n=t.tooltip,i=t.hoverPoint;t.hoverSeries=null,i&&i.onMouseOut(),this&&e.events.mouseOut&&ze(this,"mouseOut"),n&&!e.stickyTracking&&(!n.shared||this.noSharedTooltip)&&n.hide(),this.setState()},setState:function(e){var t=this.options,n=this.graph,i=t.states,r=t.lineWidth,t=0,e=e||"";if(this.state!==e&&(this.state=e,!(i[e]&&i[e].enabled===!1)&&(e&&(r=i[e].lineWidth||r+(i[e].lineWidthPlus||0)),n&&!n.dashstyle)))for(e={"stroke-width":r},n.attr(e);this["zoneGraph"+t];)this["zoneGraph"+t].attr(e),t+=1},setVisible:function(e,t){var n,i=this,r=i.chart,o=i.legendItem,a=r.options.chart.ignoreHiddenSeries,s=i.visible;n=(i.visible=e=i.userOptions.visible=e===A?!s:e)?"show":"hide",Ue(["group","dataLabelsGroup","markerGroup","tracker"],function(e){i[e]&&i[e][n]()}),r.hoverSeries!==i&&(r.hoverPoint&&r.hoverPoint.series)!==i||i.onMouseOut(),o&&r.legend.colorizeItem(i,e),i.isDirty=!0,i.options.stacking&&Ue(r.series,function(e){e.options.stacking&&e.visible&&(e.isDirty=!0)}),Ue(i.linkedSeries,function(t){t.setVisible(e,!1)}),a&&(r.isDirtyBox=!0),t!==!1&&r.redraw(),ze(i,n)},show:function(){this.setVisible(!0)},hide:function(){this.setVisible(!1)},select:function(e){this.selected=e=e===A?!this.selected:e,this.checkbox&&(this.checkbox.checked=e),ze(this,e?"select":"unselect")},drawTracker:et.drawTrackerGraph}),Ke(re,{Color:O,Point:mt,Tick:N,Renderer:j,SVGElement:D,SVGRenderer:tt,arrayMin:w,arrayMax:E,charts:De,correctFloat:T,dateFormat:U,error:t,format:y,pathAnim:void 0,getOptions:function(){return F},hasBidiBug:Te,isTouchDevice:Ee,setOptions:function(e){return F=i(!0,F,e),M(),F},addEvent:We,removeEvent:He,createElement:f,discardElement:P,css:h,each:Ue,map:Ve,merge:i,splat:d,stableSort:x,extendClass:m,pInt:r,svg:Pe,canvas:Se,vml:!Pe&&!Se,product:"Highcharts",version:"4.2.5"}),re})},{}],65:[function(e,t,n){n.read=function(e,t,n,i,r){var o,a,s=8*r-i-1,l=(1<<s)-1,c=l>>1,u=-7,d=n?r-1:0,p=n?-1:1,h=e[t+d];for(d+=p,o=h&(1<<-u)-1,h>>=-u,u+=s;u>0;o=256*o+e[t+d],d+=p,u-=8);for(a=o&(1<<-u)-1,o>>=-u,u+=i;u>0;a=256*a+e[t+d],d+=p,u-=8);if(0===o)o=1-c;else{if(o===l)return a?NaN:(h?-1:1)*(1/0);a+=Math.pow(2,i),o-=c}return(h?-1:1)*a*Math.pow(2,o-i)},n.write=function(e,t,n,i,r,o){var a,s,l,c=8*o-r-1,u=(1<<c)-1,d=u>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,h=i?0:o-1,f=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=u):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),t+=a+d>=1?p/l:p*Math.pow(2,1-d),t*l>=2&&(a++,l/=2),a+d>=u?(s=0,a=u):a+d>=1?(s=(t*l-1)*Math.pow(2,r),a+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,r),a=0));r>=8;e[n+h]=255&s,h+=f,s/=256,r-=8);for(a=a<<r|s,c+=r;c>0;e[n+h]=255&a,h+=f,a/=256,c-=8);e[n+h-f]|=128*m}},{}],66:[function(e,t,n){var i={}.toString;t.exports=Array.isArray||function(e){return"[object Array]"==i.call(e)}},{}],67:[function(t,n,i){!function(t,r){"object"==typeof i&&"undefined"!=typeof n?n.exports=r():"function"==typeof e&&e.amd?e(r):t.moment=r()}(this,function(){"use strict";function e(){return li.apply(null,arguments)}function i(e){li=e}function r(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function o(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function a(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function s(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function l(e,t){for(var n in t)s(t,n)&&(e[n]=t[n]);return s(t,"toString")&&(e.toString=t.toString),s(t,"valueOf")&&(e.valueOf=t.valueOf),e}function c(e,t,n,i){return Ie(e,t,n,i,!0).utc()}function u(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function d(e){return null==e._pf&&(e._pf=u()),e._pf}function p(e){if(null==e._isValid){var t=d(e),n=ci.call(t.parsedDateParts,function(e){return null!=e});e._isValid=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n),e._strict&&(e._isValid=e._isValid&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour)}return e._isValid}function h(e){var t=c(NaN);return null!=e?l(d(t),e):d(t).userInvalidated=!0,t}function f(e){return void 0===e}function m(e,t){var n,i,r;if(f(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),f(t._i)||(e._i=t._i),f(t._f)||(e._f=t._f),f(t._l)||(e._l=t._l),f(t._strict)||(e._strict=t._strict),f(t._tzm)||(e._tzm=t._tzm),f(t._isUTC)||(e._isUTC=t._isUTC),f(t._offset)||(e._offset=t._offset),f(t._pf)||(e._pf=d(t)),f(t._locale)||(e._locale=t._locale),ui.length>0)for(n in ui)i=ui[n],r=t[i],f(r)||(e[i]=r);return e}function g(t){m(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),di===!1&&(di=!0,e.updateOffset(this),di=!1)}function v(e){return e instanceof g||null!=e&&null!=e._isAMomentObject}function y(e){return e<0?Math.ceil(e):Math.floor(e)}function b(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=y(t)),n}function k(e,t,n){var i,r=Math.min(e.length,t.length),o=Math.abs(e.length-t.length),a=0;for(i=0;i<r;i++)(n&&e[i]!==t[i]||!n&&b(e[i])!==b(t[i]))&&a++;return a+o}function x(t){e.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn}function w(t,n){var i=!0;return l(function(){return null!=e.deprecationHandler&&e.deprecationHandler(null,t),i&&(x(t+"\nArguments: "+Array.prototype.slice.call(arguments).join(", ")+"\n"+(new Error).stack),i=!1),n.apply(this,arguments)},n)}function E(t,n){null!=e.deprecationHandler&&e.deprecationHandler(t,n),pi[t]||(x(n),pi[t]=!0)}function C(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function P(e){return"[object Object]"===Object.prototype.toString.call(e)}function T(e){var t,n;for(n in e)t=e[n],C(t)?this[n]=t:this["_"+n]=t;this._config=e,this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)}function S(e,t){var n,i=l({},e);for(n in t)s(t,n)&&(P(e[n])&&P(t[n])?(i[n]={},l(i[n],e[n]),l(i[n],t[n])):null!=t[n]?i[n]=t[n]:delete i[n]);return i}function _(e){null!=e&&this.set(e)}function M(e){return e?e.toLowerCase().replace("_","-"):e}function O(e){for(var t,n,i,r,o=0;o<e.length;){for(r=M(e[o]).split("-"),t=r.length,n=M(e[o+1]),n=n?n.split("-"):null;t>0;){if(i=D(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&k(r,n,!0)>=t-1)break;t--}o++}return null}function D(e){var i=null;if(!gi[e]&&"undefined"!=typeof n&&n&&n.exports)try{i=fi._abbr,t("./locale/"+e),N(i)}catch(e){}return gi[e]}function N(e,t){var n;return e&&(n=f(t)?j(e):R(e,t),n&&(fi=n)),fi._abbr}function R(e,t){return null!==t?(t.abbr=e,null!=gi[e]?(E("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale"),t=S(gi[e]._config,t)):null!=t.parentLocale&&(null!=gi[t.parentLocale]?t=S(gi[t.parentLocale]._config,t):E("parentLocaleUndefined","specified parentLocale is not defined yet")),gi[e]=new _(t),N(e),gi[e]):(delete gi[e],null)}function A(e,t){if(null!=t){var n;null!=gi[e]&&(t=S(gi[e]._config,t)),n=new _(t),n.parentLocale=gi[e],gi[e]=n,N(e)}else null!=gi[e]&&(null!=gi[e].parentLocale?gi[e]=gi[e].parentLocale:null!=gi[e]&&delete gi[e]);return gi[e]}function j(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return fi;if(!r(e)){if(t=D(e))return t;e=[e]}return O(e)}function L(){return hi(gi)}function I(e,t){var n=e.toLowerCase();vi[n]=vi[n+"s"]=vi[t]=e}function F(e){return"string"==typeof e?vi[e]||vi[e.toLowerCase()]:void 0}function U(e){var t,n,i={};for(n in e)s(e,n)&&(t=F(n),t&&(i[t]=e[n]));return i}function B(t,n){return function(i){return null!=i?(V(this,t,i),e.updateOffset(this,n),this):Y(this,t)}}function Y(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function V(e,t,n){e.isValid()&&e._d["set"+(e._isUTC?"UTC":"")+t](n)}function W(e,t){var n;if("object"==typeof e)for(n in e)this.set(n,e[n]);else if(e=F(e),C(this[e]))return this[e](t);return this}function H(e,t,n){var i=""+Math.abs(e),r=t-i.length,o=e>=0;return(o?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}function z(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(xi[e]=r),t&&(xi[t[0]]=function(){return H(r.apply(this,arguments),t[1],t[2])}),n&&(xi[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function G(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function X(e){var t,n,i=e.match(yi);for(t=0,n=i.length;t<n;t++)xi[i[t]]?i[t]=xi[i[t]]:i[t]=G(i[t]);return function(t){var r,o="";for(r=0;r<n;r++)o+=i[r]instanceof Function?i[r].call(t,e):i[r];return o}}function q(e,t){return e.isValid()?(t=K(t,e.localeData()),ki[t]=ki[t]||X(t),ki[t](e)):e.localeData().invalidDate()}function K(e,t){function n(e){return t.longDateFormat(e)||e}var i=5;for(bi.lastIndex=0;i>=0&&bi.test(e);)e=e.replace(bi,n),bi.lastIndex=0,i-=1;return e}function Q(e,t,n){Ui[e]=C(t)?t:function(e,i){return e&&n?n:t}}function Z(e,t){return s(Ui,e)?Ui[e](t._strict,t._locale):new RegExp($(e))}function $(e){return J(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,n,i,r){return t||n||i||r}))}function J(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function ee(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),"number"==typeof t&&(i=function(e,n){n[t]=b(e)}),n=0;n<e.length;n++)Bi[e[n]]=i}function te(e,t){ee(e,function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)})}function ne(e,t,n){null!=t&&s(Bi,e)&&Bi[e](t,n._a,n,e)}function ie(e,t){return new Date(Date.UTC(e,t+1,0)).getUTCDate()}function re(e,t){return r(this._months)?this._months[e.month()]:this._months[Qi.test(t)?"format":"standalone"][e.month()]}function oe(e,t){return r(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Qi.test(t)?"format":"standalone"][e.month()]}function ae(e,t,n){var i,r,o,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=c([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?(r=mi.call(this._shortMonthsParse,a),r!==-1?r:null):(r=mi.call(this._longMonthsParse,a),r!==-1?r:null):"MMM"===t?(r=mi.call(this._shortMonthsParse,a),r!==-1?r:(r=mi.call(this._longMonthsParse,a),r!==-1?r:null)):(r=mi.call(this._longMonthsParse,a),r!==-1?r:(r=mi.call(this._shortMonthsParse,a),r!==-1?r:null))}function se(e,t,n){var i,r,o;if(this._monthsParseExact)return ae.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=c([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}}function le(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=b(t);else if(t=e.localeData().monthsParse(t),"number"!=typeof t)return e;return n=Math.min(e.date(),ie(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function ce(t){return null!=t?(le(this,t),e.updateOffset(this,!0),this):Y(this,"Month")}function ue(){return ie(this.year(),this.month())}function de(e){return this._monthsParseExact?(s(this,"_monthsRegex")||he.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex}function pe(e){return this._monthsParseExact?(s(this,"_monthsRegex")||he.call(this),e?this._monthsStrictRegex:this._monthsRegex):this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex}function he(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;t<12;t++)n=c([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;t<12;t++)i[t]=J(i[t]),r[t]=J(r[t]),o[t]=J(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function fe(e){var t,n=e._a;return n&&d(e).overflow===-2&&(t=n[Vi]<0||n[Vi]>11?Vi:n[Wi]<1||n[Wi]>ie(n[Yi],n[Vi])?Wi:n[Hi]<0||n[Hi]>24||24===n[Hi]&&(0!==n[zi]||0!==n[Gi]||0!==n[Xi])?Hi:n[zi]<0||n[zi]>59?zi:n[Gi]<0||n[Gi]>59?Gi:n[Xi]<0||n[Xi]>999?Xi:-1,d(e)._overflowDayOfYear&&(t<Yi||t>Wi)&&(t=Wi),d(e)._overflowWeeks&&t===-1&&(t=qi),d(e)._overflowWeekday&&t===-1&&(t=Ki),d(e).overflow=t),e}function me(e){var t,n,i,r,o,a,s=e._i,l=tr.exec(s)||nr.exec(s);if(l){for(d(e).iso=!0,t=0,n=rr.length;t<n;t++)if(rr[t][1].exec(l[1])){r=rr[t][0],i=rr[t][2]!==!1;break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=or.length;t<n;t++)if(or[t][1].exec(l[3])){o=(l[2]||" ")+or[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!ir.exec(l[4]))return void(e._isValid=!1);a="Z"}e._f=r+(o||"")+(a||""),Oe(e)}else e._isValid=!1}function ge(t){var n=ar.exec(t._i);return null!==n?void(t._d=new Date((+n[1]))):(me(t),void(t._isValid===!1&&(delete t._isValid,e.createFromInputFallback(t))))}function ve(e,t,n,i,r,o,a){var s=new Date(e,t,n,i,r,o,a);return e<100&&e>=0&&isFinite(s.getFullYear())&&s.setFullYear(e),s}function ye(e){var t=new Date(Date.UTC.apply(null,arguments));return e<100&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function be(e){return ke(e)?366:365}function ke(e){return e%4===0&&e%100!==0||e%400===0}function xe(){return ke(this.year())}function we(e,t,n){var i=7+t-n,r=(7+ye(e,0,i).getUTCDay()-t)%7;return-r+i-1}function Ee(e,t,n,i,r){var o,a,s=(7+n-i)%7,l=we(e,i,r),c=1+7*(t-1)+s+l;return c<=0?(o=e-1,a=be(o)+c):c>be(e)?(o=e+1,a=c-be(e)):(o=e,a=c),{year:o,dayOfYear:a}}function Ce(e,t,n){var i,r,o=we(e.year(),t,n),a=Math.floor((e.dayOfYear()-o-1)/7)+1;return a<1?(r=e.year()-1,i=a+Pe(r,t,n)):a>Pe(e.year(),t,n)?(i=a-Pe(e.year(),t,n),r=e.year()+1):(r=e.year(),i=a),{week:i,year:r}}function Pe(e,t,n){var i=we(e,t,n),r=we(e+1,t,n);return(be(e)-i+r)/7}function Te(e,t,n){return null!=e?e:null!=t?t:n}function Se(t){var n=new Date(e.now());return t._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function _e(e){var t,n,i,r,o=[];if(!e._d){for(i=Se(e),e._w&&null==e._a[Wi]&&null==e._a[Vi]&&Me(e),e._dayOfYear&&(r=Te(e._a[Yi],i[Yi]),e._dayOfYear>be(r)&&(d(e)._overflowDayOfYear=!0),n=ye(r,0,e._dayOfYear),e._a[Vi]=n.getUTCMonth(),e._a[Wi]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=i[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[Hi]&&0===e._a[zi]&&0===e._a[Gi]&&0===e._a[Xi]&&(e._nextDay=!0,e._a[Hi]=0),e._d=(e._useUTC?ye:ve).apply(null,o),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[Hi]=24)}}function Me(e){var t,n,i,r,o,a,s,l;t=e._w,null!=t.GG||null!=t.W||null!=t.E?(o=1,a=4,n=Te(t.GG,e._a[Yi],Ce(Fe(),1,4).year),i=Te(t.W,1),r=Te(t.E,1),(r<1||r>7)&&(l=!0)):(o=e._locale._week.dow,a=e._locale._week.doy,n=Te(t.gg,e._a[Yi],Ce(Fe(),o,a).year),i=Te(t.w,1),null!=t.d?(r=t.d,(r<0||r>6)&&(l=!0)):null!=t.e?(r=t.e+o,(t.e<0||t.e>6)&&(l=!0)):r=o),i<1||i>Pe(n,o,a)?d(e)._overflowWeeks=!0:null!=l?d(e)._overflowWeekday=!0:(s=Ee(n,i,r,o,a),e._a[Yi]=s.year,e._dayOfYear=s.dayOfYear)}function Oe(t){if(t._f===e.ISO_8601)return void me(t);t._a=[],d(t).empty=!0;var n,i,r,o,a,s=""+t._i,l=s.length,c=0;for(r=K(t._f,t._locale).match(yi)||[],n=0;n<r.length;n++)o=r[n],i=(s.match(Z(o,t))||[])[0],i&&(a=s.substr(0,s.indexOf(i)),a.length>0&&d(t).unusedInput.push(a),s=s.slice(s.indexOf(i)+i.length),c+=i.length),xi[o]?(i?d(t).empty=!1:d(t).unusedTokens.push(o),ne(o,i,t)):t._strict&&!i&&d(t).unusedTokens.push(o);d(t).charsLeftOver=l-c,s.length>0&&d(t).unusedInput.push(s),d(t).bigHour===!0&&t._a[Hi]<=12&&t._a[Hi]>0&&(d(t).bigHour=void 0),d(t).parsedDateParts=t._a.slice(0),d(t).meridiem=t._meridiem,t._a[Hi]=De(t._locale,t._a[Hi],t._meridiem),_e(t),fe(t)}function De(e,t,n){var i;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?(i=e.isPM(n),i&&t<12&&(t+=12),i||12!==t||(t=0),t):t}function Ne(e){var t,n,i,r,o;if(0===e._f.length)return d(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=m({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],Oe(t),p(t)&&(o+=d(t).charsLeftOver,o+=10*d(t).unusedTokens.length,d(t).score=o,(null==i||o<i)&&(i=o,n=t));l(e,n||t)}function Re(e){if(!e._d){var t=U(e._i);e._a=a([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),_e(e)}}function Ae(e){var t=new g(fe(je(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}function je(e){var t=e._i,n=e._f;return e._locale=e._locale||j(e._l),null===t||void 0===n&&""===t?h({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),v(t)?new g(fe(t)):(r(n)?Ne(e):n?Oe(e):o(t)?e._d=t:Le(e),p(e)||(e._d=null),e))}function Le(t){var n=t._i;void 0===n?t._d=new Date(e.now()):o(n)?t._d=new Date(n.valueOf()):"string"==typeof n?ge(t):r(n)?(t._a=a(n.slice(0),function(e){return parseInt(e,10)}),_e(t)):"object"==typeof n?Re(t):"number"==typeof n?t._d=new Date(n):e.createFromInputFallback(t)}function Ie(e,t,n,i,r){var o={};return"boolean"==typeof n&&(i=n,n=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=r,o._l=n,o._i=e,o._f=t,o._strict=i,Ae(o)}function Fe(e,t,n,i){return Ie(e,t,n,i,!1)}function Ue(e,t){var n,i;if(1===t.length&&r(t[0])&&(t=t[0]),!t.length)return Fe();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}function Be(){var e=[].slice.call(arguments,0);return Ue("isBefore",e)}function Ye(){var e=[].slice.call(arguments,0);return Ue("isAfter",e)}function Ve(e){var t=U(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||0,a=t.day||0,s=t.hour||0,l=t.minute||0,c=t.second||0,u=t.millisecond||0;this._milliseconds=+u+1e3*c+6e4*l+1e3*s*60*60,this._days=+a+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=j(),this._bubble()}function We(e){return e instanceof Ve}function He(e,t){z(e,0,0,function(){var e=this.utcOffset(),n="+";return e<0&&(e=-e,n="-"),n+H(~~(e/60),2)+t+H(~~e%60,2)})}function ze(e,t){var n=(t||"").match(e)||[],i=n[n.length-1]||[],r=(i+"").match(dr)||["-",0,0],o=+(60*r[1])+b(r[2]);return"+"===r[0]?o:-o}function Ge(t,n){var i,r;return n._isUTC?(i=n.clone(),r=(v(t)||o(t)?t.valueOf():Fe(t).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+r),e.updateOffset(i,!1),i):Fe(t).local()}function Xe(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function qe(t,n){var i,r=this._offset||0;return this.isValid()?null!=t?("string"==typeof t?t=ze(Li,t):Math.abs(t)<16&&(t=60*t),!this._isUTC&&n&&(i=Xe(this)),this._offset=t,this._isUTC=!0,null!=i&&this.add(i,"m"),r!==t&&(!n||this._changeInProgress?dt(this,ot(t-r,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,e.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?r:Xe(this):null!=t?this:NaN}function Ke(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}function Qe(e){return this.utcOffset(0,e)}function Ze(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Xe(this),"m")),this}function $e(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&&this.utcOffset(ze(ji,this._i)),this}function Je(e){return!!this.isValid()&&(e=e?Fe(e).utcOffset():0,(this.utcOffset()-e)%60===0)}function et(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function tt(){if(!f(this._isDSTShifted))return this._isDSTShifted;var e={};if(m(e,this),e=je(e),e._a){var t=e._isUTC?c(e._a):Fe(e._a);this._isDSTShifted=this.isValid()&&k(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function nt(){return!!this.isValid()&&!this._isUTC}function it(){return!!this.isValid()&&this._isUTC}function rt(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function ot(e,t){var n,i,r,o=e,a=null;return We(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:"number"==typeof e?(o={},t?o[t]=e:o.milliseconds=e):(a=pr.exec(e))?(n="-"===a[1]?-1:1,o={y:0,d:b(a[Wi])*n,h:b(a[Hi])*n,m:b(a[zi])*n,s:b(a[Gi])*n,ms:b(a[Xi])*n}):(a=hr.exec(e))?(n="-"===a[1]?-1:1,o={y:at(a[2],n),M:at(a[3],n),w:at(a[4],n),d:at(a[5],n),h:at(a[6],n),m:at(a[7],n),s:at(a[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=lt(Fe(o.from),Fe(o.to)),o={},o.ms=r.milliseconds,o.M=r.months),i=new Ve(o),We(e)&&s(e,"_locale")&&(i._locale=e._locale),i}function at(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function st(e,t){var n={milliseconds:0,months:0};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),
n}function lt(e,t){var n;return e.isValid()&&t.isValid()?(t=Ge(t,e),e.isBefore(t)?n=st(e,t):(n=st(t,e),n.milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}function ct(e){return e<0?Math.round(-1*e)*-1:Math.round(e)}function ut(e,t){return function(n,i){var r,o;return null===i||isNaN(+i)||(E(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period)."),o=n,n=i,i=o),n="string"==typeof n?+n:n,r=ot(n,i),dt(this,r,e),this}}function dt(t,n,i,r){var o=n._milliseconds,a=ct(n._days),s=ct(n._months);t.isValid()&&(r=null==r||r,o&&t._d.setTime(t._d.valueOf()+o*i),a&&V(t,"Date",Y(t,"Date")+a*i),s&&le(t,Y(t,"Month")+s*i),r&&e.updateOffset(t,a||s))}function pt(e,t){var n=e||Fe(),i=Ge(n,this).startOf("day"),r=this.diff(i,"days",!0),o=r<-6?"sameElse":r<-1?"lastWeek":r<0?"lastDay":r<1?"sameDay":r<2?"nextDay":r<7?"nextWeek":"sameElse",a=t&&(C(t[o])?t[o]():t[o]);return this.format(a||this.localeData().calendar(o,this,Fe(n)))}function ht(){return new g(this)}function ft(e,t){var n=v(e)?e:Fe(e);return!(!this.isValid()||!n.isValid())&&(t=F(f(t)?"millisecond":t),"millisecond"===t?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())}function mt(e,t){var n=v(e)?e:Fe(e);return!(!this.isValid()||!n.isValid())&&(t=F(f(t)?"millisecond":t),"millisecond"===t?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())}function gt(e,t,n,i){return i=i||"()",("("===i[0]?this.isAfter(e,n):!this.isBefore(e,n))&&(")"===i[1]?this.isBefore(t,n):!this.isAfter(t,n))}function vt(e,t){var n,i=v(e)?e:Fe(e);return!(!this.isValid()||!i.isValid())&&(t=F(t||"millisecond"),"millisecond"===t?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))}function yt(e,t){return this.isSame(e,t)||this.isAfter(e,t)}function bt(e,t){return this.isSame(e,t)||this.isBefore(e,t)}function kt(e,t,n){var i,r,o,a;return this.isValid()?(i=Ge(e,this),i.isValid()?(r=6e4*(i.utcOffset()-this.utcOffset()),t=F(t),"year"===t||"month"===t||"quarter"===t?(a=xt(this,i),"quarter"===t?a/=3:"year"===t&&(a/=12)):(o=this-i,a="second"===t?o/1e3:"minute"===t?o/6e4:"hour"===t?o/36e5:"day"===t?(o-r)/864e5:"week"===t?(o-r)/6048e5:o),n?a:y(a)):NaN):NaN}function xt(e,t){var n,i,r=12*(t.year()-e.year())+(t.month()-e.month()),o=e.clone().add(r,"months");return t-o<0?(n=e.clone().add(r-1,"months"),i=(t-o)/(o-n)):(n=e.clone().add(r+1,"months"),i=(t-o)/(n-o)),-(r+i)||0}function wt(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function Et(){var e=this.clone().utc();return 0<e.year()&&e.year()<=9999?C(Date.prototype.toISOString)?this.toDate().toISOString():q(e,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):q(e,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function Ct(t){t||(t=this.isUtc()?e.defaultFormatUtc:e.defaultFormat);var n=q(this,t);return this.localeData().postformat(n)}function Pt(e,t){return this.isValid()&&(v(e)&&e.isValid()||Fe(e).isValid())?ot({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function Tt(e){return this.from(Fe(),e)}function St(e,t){return this.isValid()&&(v(e)&&e.isValid()||Fe(e).isValid())?ot({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()}function _t(e){return this.to(Fe(),e)}function Mt(e){var t;return void 0===e?this._locale._abbr:(t=j(e),null!=t&&(this._locale=t),this)}function Ot(){return this._locale}function Dt(e){switch(e=F(e)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===e&&this.weekday(0),"isoWeek"===e&&this.isoWeekday(1),"quarter"===e&&this.month(3*Math.floor(this.month()/3)),this}function Nt(e){return e=F(e),void 0===e||"millisecond"===e?this:("date"===e&&(e="day"),this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms"))}function Rt(){return this._d.valueOf()-6e4*(this._offset||0)}function At(){return Math.floor(this.valueOf()/1e3)}function jt(){return this._offset?new Date(this.valueOf()):this._d}function Lt(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function It(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function Ft(){return this.isValid()?this.toISOString():null}function Ut(){return p(this)}function Bt(){return l({},d(this))}function Yt(){return d(this).overflow}function Vt(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function Wt(e,t){z(0,[e,e.length],0,t)}function Ht(e){return qt.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function zt(e){return qt.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function Gt(){return Pe(this.year(),1,4)}function Xt(){var e=this.localeData()._week;return Pe(this.year(),e.dow,e.doy)}function qt(e,t,n,i,r){var o;return null==e?Ce(this,i,r).year:(o=Pe(e,i,r),t>o&&(t=o),Kt.call(this,e,t,n,i,r))}function Kt(e,t,n,i,r){var o=Ee(e,t,n,i,r),a=ye(o.year,0,o.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}function Qt(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)}function Zt(e){return Ce(e,this._week.dow,this._week.doy).week}function $t(){return this._week.dow}function Jt(){return this._week.doy}function en(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")}function tn(e){var t=Ce(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")}function nn(e,t){return"string"!=typeof e?e:isNaN(e)?(e=t.weekdaysParse(e),"number"==typeof e?e:null):parseInt(e,10)}function rn(e,t){return r(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(t)?"format":"standalone"][e.day()]}function on(e){return this._weekdaysShort[e.day()]}function an(e){return this._weekdaysMin[e.day()]}function sn(e,t,n){var i,r,o,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=c([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?(r=mi.call(this._weekdaysParse,a),r!==-1?r:null):"ddd"===t?(r=mi.call(this._shortWeekdaysParse,a),r!==-1?r:null):(r=mi.call(this._minWeekdaysParse,a),r!==-1?r:null):"dddd"===t?(r=mi.call(this._weekdaysParse,a),r!==-1?r:(r=mi.call(this._shortWeekdaysParse,a),r!==-1?r:(r=mi.call(this._minWeekdaysParse,a),r!==-1?r:null))):"ddd"===t?(r=mi.call(this._shortWeekdaysParse,a),r!==-1?r:(r=mi.call(this._weekdaysParse,a),r!==-1?r:(r=mi.call(this._minWeekdaysParse,a),r!==-1?r:null))):(r=mi.call(this._minWeekdaysParse,a),r!==-1?r:(r=mi.call(this._weekdaysParse,a),r!==-1?r:(r=mi.call(this._shortWeekdaysParse,a),r!==-1?r:null)))}function ln(e,t,n){var i,r,o;if(this._weekdaysParseExact)return sn.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=c([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".",".?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}}function cn(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=nn(e,this.localeData()),this.add(e-t,"d")):t}function un(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")}function dn(e){return this.isValid()?null==e?this.day()||7:this.day(this.day()%7?e:e-7):null!=e?this:NaN}function pn(e){return this._weekdaysParseExact?(s(this,"_weekdaysRegex")||mn.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex}function hn(e){return this._weekdaysParseExact?(s(this,"_weekdaysRegex")||mn.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex}function fn(e){return this._weekdaysParseExact?(s(this,"_weekdaysRegex")||mn.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex}function mn(){function e(e,t){return t.length-e.length}var t,n,i,r,o,a=[],s=[],l=[],u=[];for(t=0;t<7;t++)n=c([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),a.push(i),s.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(a.sort(e),s.sort(e),l.sort(e),u.sort(e),t=0;t<7;t++)s[t]=J(s[t]),l[t]=J(l[t]),u[t]=J(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function gn(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")}function vn(){return this.hours()%12||12}function yn(){return this.hours()||24}function bn(e,t){z(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function kn(e,t){return t._meridiemParse}function xn(e){return"p"===(e+"").toLowerCase().charAt(0)}function wn(e,t,n){return e>11?n?"pm":"PM":n?"am":"AM"}function En(e,t){t[Xi]=b(1e3*("0."+e))}function Cn(){return this._isUTC?"UTC":""}function Pn(){return this._isUTC?"Coordinated Universal Time":""}function Tn(e){return Fe(1e3*e)}function Sn(){return Fe.apply(null,arguments).parseZone()}function _n(e,t,n){var i=this._calendar[e];return C(i)?i.call(t,n):i}function Mn(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])}function On(){return this._invalidDate}function Dn(e){return this._ordinal.replace("%d",e)}function Nn(e){return e}function Rn(e,t,n,i){var r=this._relativeTime[n];return C(r)?r(e,t,n,i):r.replace(/%d/i,e)}function An(e,t){var n=this._relativeTime[e>0?"future":"past"];return C(n)?n(t):n.replace(/%s/i,t)}function jn(e,t,n,i){var r=j(),o=c().set(i,t);return r[n](o,e)}function Ln(e,t,n){if("number"==typeof e&&(t=e,e=void 0),e=e||"",null!=t)return jn(e,t,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=jn(e,i,n,"month");return r}function In(e,t,n,i){"boolean"==typeof e?("number"==typeof t&&(n=t,t=void 0),t=t||""):(t=e,n=t,e=!1,"number"==typeof t&&(n=t,t=void 0),t=t||"");var r=j(),o=e?r._week.dow:0;if(null!=n)return jn(t,(n+o)%7,i,"day");var a,s=[];for(a=0;a<7;a++)s[a]=jn(t,(a+o)%7,i,"day");return s}function Fn(e,t){return Ln(e,t,"months")}function Un(e,t){return Ln(e,t,"monthsShort")}function Bn(e,t,n){return In(e,t,n,"weekdays")}function Yn(e,t,n){return In(e,t,n,"weekdaysShort")}function Vn(e,t,n){return In(e,t,n,"weekdaysMin")}function Wn(){var e=this._data;return this._milliseconds=Br(this._milliseconds),this._days=Br(this._days),this._months=Br(this._months),e.milliseconds=Br(e.milliseconds),e.seconds=Br(e.seconds),e.minutes=Br(e.minutes),e.hours=Br(e.hours),e.months=Br(e.months),e.years=Br(e.years),this}function Hn(e,t,n,i){var r=ot(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function zn(e,t){return Hn(this,e,t,1)}function Gn(e,t){return Hn(this,e,t,-1)}function Xn(e){return e<0?Math.floor(e):Math.ceil(e)}function qn(){var e,t,n,i,r,o=this._milliseconds,a=this._days,s=this._months,l=this._data;return o>=0&&a>=0&&s>=0||o<=0&&a<=0&&s<=0||(o+=864e5*Xn(Qn(s)+a),a=0,s=0),l.milliseconds=o%1e3,e=y(o/1e3),l.seconds=e%60,t=y(e/60),l.minutes=t%60,n=y(t/60),l.hours=n%24,a+=y(n/24),r=y(Kn(a)),s+=r,a-=Xn(Qn(r)),i=y(s/12),s%=12,l.days=a,l.months=s,l.years=i,this}function Kn(e){return 4800*e/146097}function Qn(e){return 146097*e/4800}function Zn(e){var t,n,i=this._milliseconds;if(e=F(e),"month"===e||"year"===e)return t=this._days+i/864e5,n=this._months+Kn(t),"month"===e?n:n/12;switch(t=this._days+Math.round(Qn(this._months)),e){case"week":return t/7+i/6048e5;case"day":return t+i/864e5;case"hour":return 24*t+i/36e5;case"minute":return 1440*t+i/6e4;case"second":return 86400*t+i/1e3;case"millisecond":return Math.floor(864e5*t)+i;default:throw new Error("Unknown unit "+e)}}function $n(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*b(this._months/12)}function Jn(e){return function(){return this.as(e)}}function ei(e){return e=F(e),this[e+"s"]()}function ti(e){return function(){return this._data[e]}}function ni(){return y(this.days()/7)}function ii(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}function ri(e,t,n){var i=ot(e).abs(),r=no(i.as("s")),o=no(i.as("m")),a=no(i.as("h")),s=no(i.as("d")),l=no(i.as("M")),c=no(i.as("y")),u=r<io.s&&["s",r]||o<=1&&["m"]||o<io.m&&["mm",o]||a<=1&&["h"]||a<io.h&&["hh",a]||s<=1&&["d"]||s<io.d&&["dd",s]||l<=1&&["M"]||l<io.M&&["MM",l]||c<=1&&["y"]||["yy",c];return u[2]=t,u[3]=+e>0,u[4]=n,ii.apply(null,u)}function oi(e,t){return void 0!==io[e]&&(void 0===t?io[e]:(io[e]=t,!0))}function ai(e){var t=this.localeData(),n=ri(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)}function si(){var e,t,n,i=ro(this._milliseconds)/1e3,r=ro(this._days),o=ro(this._months);e=y(i/60),t=y(e/60),i%=60,e%=60,n=y(o/12),o%=12;var a=n,s=o,l=r,c=t,u=e,d=i,p=this.asSeconds();return p?(p<0?"-":"")+"P"+(a?a+"Y":"")+(s?s+"M":"")+(l?l+"D":"")+(c||u||d?"T":"")+(c?c+"H":"")+(u?u+"M":"")+(d?d+"S":""):"P0D"}var li,ci;ci=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var ui=e.momentProperties=[],di=!1,pi={};e.suppressDeprecationWarnings=!1,e.deprecationHandler=null;var hi;hi=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)s(e,t)&&n.push(t);return n};var fi,mi,gi={},vi={},yi=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,bi=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,ki={},xi={},wi=/\d/,Ei=/\d\d/,Ci=/\d{3}/,Pi=/\d{4}/,Ti=/[+-]?\d{6}/,Si=/\d\d?/,_i=/\d\d\d\d?/,Mi=/\d\d\d\d\d\d?/,Oi=/\d{1,3}/,Di=/\d{1,4}/,Ni=/[+-]?\d{1,6}/,Ri=/\d+/,Ai=/[+-]?\d+/,ji=/Z|[+-]\d\d:?\d\d/gi,Li=/Z|[+-]\d\d(?::?\d\d)?/gi,Ii=/[+-]?\d+(\.\d{1,3})?/,Fi=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Ui={},Bi={},Yi=0,Vi=1,Wi=2,Hi=3,zi=4,Gi=5,Xi=6,qi=7,Ki=8;mi=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},z("M",["MM",2],"Mo",function(){return this.month()+1}),z("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)}),z("MMMM",0,0,function(e){return this.localeData().months(this,e)}),I("month","M"),Q("M",Si),Q("MM",Si,Ei),Q("MMM",function(e,t){return t.monthsShortRegex(e)}),Q("MMMM",function(e,t){return t.monthsRegex(e)}),ee(["M","MM"],function(e,t){t[Vi]=b(e)-1}),ee(["MMM","MMMM"],function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null!=r?t[Vi]=r:d(n).invalidMonth=e});var Qi=/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/,Zi="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),$i="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),Ji=Fi,er=Fi,tr=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,nr=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,ir=/Z|[+-]\d\d(?::?\d\d)?/,rr=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],or=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],ar=/^\/?Date\((\-?\d+)/i;e.createFromInputFallback=w("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))}),z("Y",0,0,function(){var e=this.year();return e<=9999?""+e:"+"+e}),z(0,["YY",2],0,function(){return this.year()%100}),z(0,["YYYY",4],0,"year"),z(0,["YYYYY",5],0,"year"),z(0,["YYYYYY",6,!0],0,"year"),I("year","y"),Q("Y",Ai),Q("YY",Si,Ei),Q("YYYY",Di,Pi),Q("YYYYY",Ni,Ti),Q("YYYYYY",Ni,Ti),ee(["YYYYY","YYYYYY"],Yi),ee("YYYY",function(t,n){n[Yi]=2===t.length?e.parseTwoDigitYear(t):b(t)}),ee("YY",function(t,n){n[Yi]=e.parseTwoDigitYear(t)}),ee("Y",function(e,t){t[Yi]=parseInt(e,10)}),e.parseTwoDigitYear=function(e){return b(e)+(b(e)>68?1900:2e3)};var sr=B("FullYear",!0);e.ISO_8601=function(){};var lr=w("moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(){var e=Fe.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:h()}),cr=w("moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(){var e=Fe.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:h()}),ur=function(){return Date.now?Date.now():+new Date};He("Z",":"),He("ZZ",""),Q("Z",Li),Q("ZZ",Li),ee(["Z","ZZ"],function(e,t,n){n._useUTC=!0,n._tzm=ze(Li,e)});var dr=/([\+\-]|\d\d)/gi;e.updateOffset=function(){};var pr=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?\d*)?$/,hr=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;ot.fn=Ve.prototype;var fr=ut(1,"add"),mr=ut(-1,"subtract");e.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",e.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var gr=w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e)});z(0,["gg",2],0,function(){return this.weekYear()%100}),z(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Wt("gggg","weekYear"),Wt("ggggg","weekYear"),Wt("GGGG","isoWeekYear"),Wt("GGGGG","isoWeekYear"),I("weekYear","gg"),I("isoWeekYear","GG"),Q("G",Ai),Q("g",Ai),Q("GG",Si,Ei),Q("gg",Si,Ei),Q("GGGG",Di,Pi),Q("gggg",Di,Pi),Q("GGGGG",Ni,Ti),Q("ggggg",Ni,Ti),te(["gggg","ggggg","GGGG","GGGGG"],function(e,t,n,i){t[i.substr(0,2)]=b(e)}),te(["gg","GG"],function(t,n,i,r){n[r]=e.parseTwoDigitYear(t)}),z("Q",0,"Qo","quarter"),I("quarter","Q"),Q("Q",wi),ee("Q",function(e,t){t[Vi]=3*(b(e)-1)}),z("w",["ww",2],"wo","week"),z("W",["WW",2],"Wo","isoWeek"),I("week","w"),I("isoWeek","W"),Q("w",Si),Q("ww",Si,Ei),Q("W",Si),Q("WW",Si,Ei),te(["w","ww","W","WW"],function(e,t,n,i){t[i.substr(0,1)]=b(e)});var vr={dow:0,doy:6};z("D",["DD",2],"Do","date"),I("date","D"),Q("D",Si),Q("DD",Si,Ei),Q("Do",function(e,t){return e?t._ordinalParse:t._ordinalParseLenient}),ee(["D","DD"],Wi),ee("Do",function(e,t){t[Wi]=b(e.match(Si)[0],10)});var yr=B("Date",!0);z("d",0,"do","day"),z("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),z("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),z("dddd",0,0,function(e){return this.localeData().weekdays(this,e)}),z("e",0,0,"weekday"),z("E",0,0,"isoWeekday"),I("day","d"),I("weekday","e"),I("isoWeekday","E"),Q("d",Si),Q("e",Si),Q("E",Si),Q("dd",function(e,t){return t.weekdaysMinRegex(e)}),Q("ddd",function(e,t){return t.weekdaysShortRegex(e)}),Q("dddd",function(e,t){return t.weekdaysRegex(e)}),te(["dd","ddd","dddd"],function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null!=r?t.d=r:d(n).invalidWeekday=e}),te(["d","e","E"],function(e,t,n,i){t[i]=b(e)});var br="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),kr="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),xr="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),wr=Fi,Er=Fi,Cr=Fi;z("DDD",["DDDD",3],"DDDo","dayOfYear"),I("dayOfYear","DDD"),Q("DDD",Oi),Q("DDDD",Ci),ee(["DDD","DDDD"],function(e,t,n){n._dayOfYear=b(e)}),z("H",["HH",2],0,"hour"),z("h",["hh",2],0,vn),z("k",["kk",2],0,yn),z("hmm",0,0,function(){return""+vn.apply(this)+H(this.minutes(),2)}),z("hmmss",0,0,function(){return""+vn.apply(this)+H(this.minutes(),2)+H(this.seconds(),2)}),z("Hmm",0,0,function(){return""+this.hours()+H(this.minutes(),2)}),z("Hmmss",0,0,function(){return""+this.hours()+H(this.minutes(),2)+H(this.seconds(),2)}),bn("a",!0),bn("A",!1),I("hour","h"),Q("a",kn),Q("A",kn),Q("H",Si),Q("h",Si),Q("HH",Si,Ei),Q("hh",Si,Ei),Q("hmm",_i),Q("hmmss",Mi),Q("Hmm",_i),Q("Hmmss",Mi),ee(["H","HH"],Hi),ee(["a","A"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),ee(["h","hh"],function(e,t,n){t[Hi]=b(e),d(n).bigHour=!0}),ee("hmm",function(e,t,n){var i=e.length-2;t[Hi]=b(e.substr(0,i)),t[zi]=b(e.substr(i)),d(n).bigHour=!0}),ee("hmmss",function(e,t,n){var i=e.length-4,r=e.length-2;t[Hi]=b(e.substr(0,i)),t[zi]=b(e.substr(i,2)),t[Gi]=b(e.substr(r)),d(n).bigHour=!0}),ee("Hmm",function(e,t,n){var i=e.length-2;t[Hi]=b(e.substr(0,i)),t[zi]=b(e.substr(i))}),ee("Hmmss",function(e,t,n){var i=e.length-4,r=e.length-2;t[Hi]=b(e.substr(0,i)),t[zi]=b(e.substr(i,2)),t[Gi]=b(e.substr(r))});var Pr=/[ap]\.?m?\.?/i,Tr=B("Hours",!0);z("m",["mm",2],0,"minute"),I("minute","m"),Q("m",Si),Q("mm",Si,Ei),ee(["m","mm"],zi);var Sr=B("Minutes",!1);z("s",["ss",2],0,"second"),I("second","s"),Q("s",Si),Q("ss",Si,Ei),ee(["s","ss"],Gi);var _r=B("Seconds",!1);z("S",0,0,function(){return~~(this.millisecond()/100)}),z(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),z(0,["SSS",3],0,"millisecond"),z(0,["SSSS",4],0,function(){return 10*this.millisecond()}),z(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),z(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),z(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),z(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),z(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),I("millisecond","ms"),Q("S",Oi,wi),Q("SS",Oi,Ei),Q("SSS",Oi,Ci);var Mr;for(Mr="SSSS";Mr.length<=9;Mr+="S")Q(Mr,Ri);for(Mr="S";Mr.length<=9;Mr+="S")ee(Mr,En);var Or=B("Milliseconds",!1);z("z",0,0,"zoneAbbr"),z("zz",0,0,"zoneName");var Dr=g.prototype;Dr.add=fr,Dr.calendar=pt,Dr.clone=ht,Dr.diff=kt,Dr.endOf=Nt,Dr.format=Ct,Dr.from=Pt,Dr.fromNow=Tt,Dr.to=St,Dr.toNow=_t,Dr.get=W,Dr.invalidAt=Yt,Dr.isAfter=ft,Dr.isBefore=mt,Dr.isBetween=gt,Dr.isSame=vt,Dr.isSameOrAfter=yt,Dr.isSameOrBefore=bt,Dr.isValid=Ut,Dr.lang=gr,Dr.locale=Mt,Dr.localeData=Ot,Dr.max=cr,Dr.min=lr,Dr.parsingFlags=Bt,Dr.set=W,Dr.startOf=Dt,Dr.subtract=mr,Dr.toArray=Lt,Dr.toObject=It,Dr.toDate=jt,Dr.toISOString=Et,Dr.toJSON=Ft,Dr.toString=wt,Dr.unix=At,Dr.valueOf=Rt,Dr.creationData=Vt,Dr.year=sr,Dr.isLeapYear=xe,Dr.weekYear=Ht,Dr.isoWeekYear=zt,Dr.quarter=Dr.quarters=Qt,Dr.month=ce,Dr.daysInMonth=ue,Dr.week=Dr.weeks=en,Dr.isoWeek=Dr.isoWeeks=tn,Dr.weeksInYear=Xt,Dr.isoWeeksInYear=Gt,Dr.date=yr,Dr.day=Dr.days=cn,Dr.weekday=un,Dr.isoWeekday=dn,Dr.dayOfYear=gn,Dr.hour=Dr.hours=Tr,Dr.minute=Dr.minutes=Sr,Dr.second=Dr.seconds=_r,Dr.millisecond=Dr.milliseconds=Or,Dr.utcOffset=qe,Dr.utc=Qe,Dr.local=Ze,Dr.parseZone=$e,Dr.hasAlignedHourOffset=Je,Dr.isDST=et,Dr.isDSTShifted=tt,Dr.isLocal=nt,Dr.isUtcOffset=it,Dr.isUtc=rt,Dr.isUTC=rt,Dr.zoneAbbr=Cn,Dr.zoneName=Pn,Dr.dates=w("dates accessor is deprecated. Use date instead.",yr),Dr.months=w("months accessor is deprecated. Use month instead",ce),Dr.years=w("years accessor is deprecated. Use year instead",sr),Dr.zone=w("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",Ke);var Nr=Dr,Rr={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Ar={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},jr="Invalid date",Lr="%d",Ir=/\d{1,2}/,Fr={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Ur=_.prototype;Ur._calendar=Rr,Ur.calendar=_n,Ur._longDateFormat=Ar,Ur.longDateFormat=Mn,Ur._invalidDate=jr,Ur.invalidDate=On,Ur._ordinal=Lr,Ur.ordinal=Dn,Ur._ordinalParse=Ir,Ur.preparse=Nn,Ur.postformat=Nn,Ur._relativeTime=Fr,Ur.relativeTime=Rn,Ur.pastFuture=An,Ur.set=T,Ur.months=re,Ur._months=Zi,Ur.monthsShort=oe,Ur._monthsShort=$i,Ur.monthsParse=se,Ur._monthsRegex=er,Ur.monthsRegex=pe,Ur._monthsShortRegex=Ji,Ur.monthsShortRegex=de,Ur.week=Zt,Ur._week=vr,Ur.firstDayOfYear=Jt,Ur.firstDayOfWeek=$t,Ur.weekdays=rn,Ur._weekdays=br,Ur.weekdaysMin=an,Ur._weekdaysMin=xr,Ur.weekdaysShort=on,Ur._weekdaysShort=kr,Ur.weekdaysParse=ln,Ur._weekdaysRegex=wr,Ur.weekdaysRegex=pn,Ur._weekdaysShortRegex=Er,Ur.weekdaysShortRegex=hn,Ur._weekdaysMinRegex=Cr,Ur.weekdaysMinRegex=fn,Ur.isPM=xn,Ur._meridiemParse=Pr,Ur.meridiem=wn,N("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,n=1===b(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th";return e+n}}),e.lang=w("moment.lang is deprecated. Use moment.locale instead.",N),e.langData=w("moment.langData is deprecated. Use moment.localeData instead.",j);var Br=Math.abs,Yr=Jn("ms"),Vr=Jn("s"),Wr=Jn("m"),Hr=Jn("h"),zr=Jn("d"),Gr=Jn("w"),Xr=Jn("M"),qr=Jn("y"),Kr=ti("milliseconds"),Qr=ti("seconds"),Zr=ti("minutes"),$r=ti("hours"),Jr=ti("days"),eo=ti("months"),to=ti("years"),no=Math.round,io={s:45,m:45,h:22,d:26,M:11},ro=Math.abs,oo=Ve.prototype;oo.abs=Wn,oo.add=zn,oo.subtract=Gn,oo.as=Zn,oo.asMilliseconds=Yr,oo.asSeconds=Vr,oo.asMinutes=Wr,oo.asHours=Hr,oo.asDays=zr,oo.asWeeks=Gr,oo.asMonths=Xr,oo.asYears=qr,oo.valueOf=$n,oo._bubble=qn,oo.get=ei,oo.milliseconds=Kr,oo.seconds=Qr,oo.minutes=Zr,oo.hours=$r,oo.days=Jr,oo.weeks=ni,oo.months=eo,oo.years=to,oo.humanize=ai,oo.toISOString=si,oo.toString=si,oo.toJSON=si,oo.locale=Mt,oo.localeData=Ot,oo.toIsoString=w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",si),oo.lang=gr,z("X",0,0,"unix"),z("x",0,0,"valueOf"),Q("x",Ai),Q("X",Ii),ee("X",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),ee("x",function(e,t,n){n._d=new Date(b(e))}),e.version="2.13.0",i(Fe),e.fn=Nr,e.min=Be,e.max=Ye,e.now=ur,e.utc=c,e.unix=Tn,e.months=Fn,e.isDate=o,e.locale=N,e.invalid=h,e.duration=ot,e.isMoment=v,e.weekdays=Bn,e.parseZone=Sn,e.localeData=j,e.isDuration=We,e.monthsShort=Un,e.weekdaysMin=Vn,e.defineLocale=R,e.updateLocale=A,e.locales=L,e.weekdaysShort=Yn,e.normalizeUnits=F,e.relativeTimeThreshold=oi,e.prototype=Nr;var ao=e;return ao})},{}],68:[function(e,t,n){"use strict";function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function r(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;var i=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if("0123456789"!==i.join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}var o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=r()?Object.assign:function(e,t){for(var n,r,s=i(e),l=1;l<arguments.length;l++){n=Object(arguments[l]);for(var c in n)o.call(n,c)&&(s[c]=n[c]);if(Object.getOwnPropertySymbols){r=Object.getOwnPropertySymbols(n);for(var u=0;u<r.length;u++)a.call(n,r[u])&&(s[r[u]]=n[r[u]])}}return s}},{}],69:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("react"),o=e("./src/DaysView"),a=e("./src/MonthsView"),s=e("./src/YearsView"),l=e("./src/TimeView"),c=e("moment"),u=r.PropTypes,d=r.createClass({mixins:[e("./src/onClickOutside")],viewComponents:{days:o,months:a,years:s,time:l},propTypes:{closeOnSelect:u.bool,onFocus:u.func,onBlur:u.func,onChange:u.func,locale:u.string,input:u.bool,inputProps:u.object,viewMode:u.oneOf(["years","months","days","time"]),isValidDate:u.func,open:u.bool,strictParsing:u.bool},getDefaultProps:function(){var e=function(){};return{className:"",defaultValue:"",inputProps:{},input:!0,onFocus:e,onBlur:e,onChange:e,timeFormat:!0,dateFormat:!0,strictParsing:!0}},getInitialState:function(){var e=this.getStateFromProps(this.props);return void 0==e.open&&(e.open=!this.props.input),e.currentView=this.props.dateFormat?this.props.viewMode||e.updateOn||"days":"time",e},getStateFromProps:function(e){var t,n,i,r=this.getFormats(e),o=e.value||e.defaultValue;return o&&"string"==typeof o?t=this.localMoment(o,r.datetime):o&&(t=this.localMoment(o)),t&&!t.isValid()&&(t=null),n=t?t.clone().startOf("month"):this.localMoment().startOf("month"),i=this.getUpdateOn(r),{updateOn:i,inputFormat:r.datetime,viewDate:n,selectedDate:t,inputValue:t?t.format(r.datetime):o||"",open:e.open}},getUpdateOn:function(e){return e.date.match(/[lLD]/)?"days":e.date.indexOf("M")!=-1?"months":e.date.indexOf("Y")!=-1?"years":"days"},getFormats:function(e){var t={date:e.dateFormat||"",time:e.timeFormat||""},n=this.localMoment(e.date).localeData();return t.date===!0?t.date=n.longDateFormat("L"):"days"!==this.getUpdateOn(t)&&(t.time=""),t.time===!0&&(t.time=n.longDateFormat("LT")),t.datetime=t.date&&t.time?t.date+" "+t.time:t.date||t.time,t},componentWillReceiveProps:function(e){var t=this.getFormats(e),n={};e.value!=this.props.value&&(n=this.getStateFromProps(e)),t.datetime!==this.getFormats(this.props).datetime&&(n.inputFormat=t.datetime),void 0===n.open&&(this.props.closeOnSelect&&"time"!==this.state.currentView?n.open=!1:n.open=this.state.open),this.setState(n)},onInputChange:function(e){var t=null==e.target?e:e.target.value,n=this.localMoment(t,this.state.inputFormat),i={inputValue:t};return n.isValid()&&!this.props.value?(i.selectedDate=n,i.viewDate=n.clone().startOf("month")):i.selectedDate=null,this.setState(i,function(){return this.props.onChange(n.isValid()?n:this.state.inputValue)})},showView:function(e){var t=this;return function(n){t.setState({currentView:e})}},setDate:function(e){var t=this,n={month:"days",year:"months"};return function(i){t.setState({viewDate:t.state.viewDate.clone()[e](parseInt(i.target.getAttribute("data-value"))).startOf(e),currentView:n[e]})}},addTime:function(e,t,n){return this.updateTime("add",e,t,n)},subtractTime:function(e,t,n){return this.updateTime("subtract",e,t,n)},updateTime:function(e,t,n,i){var r=this;return function(){var o={},a=i?"selectedDate":"viewDate";o[a]=r.state[a].clone()[e](t,n),r.setState(o)}},allowedSetTime:["hours","minutes","seconds","milliseconds"],
setTime:function(e,t){var n,i=this.allowedSetTime.indexOf(e)+1,r=this.state,o=(r.selectedDate||r.viewDate).clone();for(o[e](t);i<this.allowedSetTime.length;i++)n=this.allowedSetTime[i],o[n](o[n]());this.props.value||this.setState({selectedDate:o,inputValue:o.format(r.inputFormat)}),this.props.onChange(o)},updateSelectedDate:function(e,t){var n,i=e.target,r=0,o=this.state.viewDate,a=this.state.selectedDate||o;i.className.indexOf("rdtDay")!=-1?(i.className.indexOf("rdtNew")!=-1?r=1:i.className.indexOf("rdtOld")!=-1&&(r=-1),n=o.clone().month(o.month()+r).date(parseInt(i.getAttribute("data-value")))):i.className.indexOf("rdtMonth")!=-1?n=o.clone().month(parseInt(i.getAttribute("data-value"))).date(a.date()):i.className.indexOf("rdtYear")!=-1&&(n=o.clone().month(a.month()).date(a.date()).year(parseInt(i.getAttribute("data-value")))),n.hours(a.hours()).minutes(a.minutes()).seconds(a.seconds()).milliseconds(a.milliseconds()),this.props.value?this.props.closeOnSelect&&t&&this.closeCalendar():this.setState({selectedDate:n,viewDate:n.clone().startOf("month"),inputValue:n.format(this.state.inputFormat),open:!(this.props.closeOnSelect&&t)}),this.props.onChange(n)},openCalendar:function(){this.state.open||(this.props.onFocus(),this.setState({open:!0}))},closeCalendar:function(){this.setState({open:!1}),this.props.onBlur(this.state.selectedDate||this.state.inputValue)},handleClickOutside:function(){this.props.input&&this.state.open&&!this.props.open&&(this.setState({open:!1}),this.props.onBlur(this.state.selectedDate||this.state.inputValue))},localMoment:function(e,t){var n=c(e,t,this.props.strictParsing);return this.props.locale&&n.locale(this.props.locale),n},componentProps:{fromProps:["value","isValidDate","renderDay","renderMonth","renderYear"],fromState:["viewDate","selectedDate","updateOn"],fromThis:["setDate","setTime","showView","addTime","subtractTime","updateSelectedDate","localMoment"]},getComponentProps:function(){var e=this,t=this.getFormats(this.props),n={dateFormat:t.date,timeFormat:t.time};return this.componentProps.fromProps.forEach(function(t){n[t]=e.props[t]}),this.componentProps.fromState.forEach(function(t){n[t]=e.state[t]}),this.componentProps.fromThis.forEach(function(t){n[t]=e[t]}),n},render:function(){var e=this.viewComponents[this.state.currentView],t=r.DOM,n="rdt "+this.props.className,o=[];return this.props.input?o=[t.input(i({key:"i",type:"text",className:"form-control",onFocus:this.openCalendar,onChange:this.onInputChange,value:this.state.inputValue},this.props.inputProps))]:n+=" rdtStatic",this.state.open&&(n+=" rdtOpen"),t.div({className:n},o.concat(t.div({key:"dt",className:"rdtPicker"},r.createElement(e,this.getComponentProps()))))}});d.moment=c,t.exports=d},{"./src/DaysView":71,"./src/MonthsView":72,"./src/TimeView":73,"./src/YearsView":74,"./src/onClickOutside":75,moment:67,"object-assign":70,react:215}],70:[function(e,t,n){"use strict";function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function r(e){var t=Object.getOwnPropertyNames(e);return Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(e))),t.filter(function(t){return o.call(e,t)})}var o=Object.prototype.propertyIsEnumerable;t.exports=Object.assign||function(e,t){for(var n,o,a=i(e),s=1;s<arguments.length;s++){n=arguments[s],o=r(Object(n));for(var l=0;l<o.length;l++)a[o[l]]=n[o[l]]}return a}},{}],71:[function(e,t,n){var i=e("react"),r=e("moment"),o=i.DOM,a=i.createClass({render:function(){var e,t=this.renderFooter(),n=this.props.viewDate,i=n.localeData();return e=[o.thead({key:"th"},[o.tr({key:"h"},[o.th({key:"p",className:"rdtPrev"},o.span({onClick:this.props.subtractTime(1,"months")},"‹")),o.th({key:"s",className:"rdtSwitch",onClick:this.props.showView("months"),colSpan:5,"data-value":this.props.viewDate.month()},i.months(n)+" "+n.year()),o.th({key:"n",className:"rdtNext"},o.span({onClick:this.props.addTime(1,"months")},"›"))]),o.tr({key:"d"},this.getDaysOfWeek(i).map(function(e,t){return o.th({key:e+t,className:"dow"},e)}))]),o.tbody({key:"tb"},this.renderDays())],t&&e.push(t),o.div({className:"rdtDays"},o.table({},e))},getDaysOfWeek:function(e){var t=e._weekdaysMin,n=e.firstDayOfWeek(),i=[],r=0;return t.forEach(function(e){i[(7+r++-n)%7]=e}),i},renderDays:function(){var e,t,n,i,a=this.props.viewDate,s=this.props.selectedDate&&this.props.selectedDate.clone(),l=a.clone().subtract(1,"months"),c=a.year(),u=a.month(),d=[],p=[],h=this.props.renderDay||this.renderDay,f=this.props.isValidDate||this.isValidDate;l.date(l.daysInMonth()).startOf("week");for(var m=l.clone().add(42,"d");l.isBefore(m);)e="rdtDay",i=l.clone(),l.year()==c&&l.month()<u||l.year()<c?e+=" rdtOld":(l.year()==c&&l.month()>u||l.year()>c)&&(e+=" rdtNew"),s&&l.isSame(s,"day")&&(e+=" rdtActive"),l.isSame(r(),"day")&&(e+=" rdtToday"),t=!f(i,s),t&&(e+=" rdtDisabled"),n={key:l.format("M_D"),"data-value":l.date(),className:e},t||(n.onClick=this.updateSelectedDate),p.push(h(n,i,s)),7==p.length&&(d.push(o.tr({key:l.format("M_D")},p)),p=[]),l.add(1,"d");return d},updateSelectedDate:function(e){this.props.updateSelectedDate(e,!0)},renderDay:function(e,t,n){return o.td(e,t.date())},renderFooter:function(){if(!this.props.timeFormat)return"";var e=this.props.selectedDate||this.props.viewDate;return o.tfoot({key:"tf"},o.tr({},o.td({onClick:this.props.showView("time"),colSpan:7,className:"rdtTimeToggle"},e.format(this.props.timeFormat))))},isValidDate:function(){return 1}});t.exports=a},{moment:67,react:215}],72:[function(e,t,n){"use strict";var i=e("react"),r=(e("moment"),i.DOM),o=i.createClass({render:function(){return r.div({className:"rdtMonths"},[r.table({key:"a"},r.thead({},r.tr({},[r.th({key:"prev",className:"rdtPrev"},r.span({onClick:this.props.subtractTime(1,"years")},"‹")),r.th({key:"year",className:"rdtSwitch",onClick:this.props.showView("years"),colSpan:2,"data-value":this.props.viewDate.year()},this.props.viewDate.year()),r.th({key:"next",className:"rdtNext"},r.span({onClick:this.props.addTime(1,"years")},"›"))]))),r.table({key:"months"},r.tbody({key:"b"},this.renderMonths()))])},renderMonths:function(){for(var e,t,n=this.props.selectedDate,i=this.props.viewDate.month(),o=this.props.viewDate.year(),a=[],s=0,l=[],c=this.props.renderMonth||this.renderMonth;s<12;)e="rdtMonth",n&&s===i&&o===n.year()&&(e+=" rdtActive"),t={key:s,"data-value":s,className:e,onClick:"months"==this.props.updateOn?this.updateSelectedMonth:this.props.setDate("month")},l.push(c(t,s,o,n&&n.clone())),4==l.length&&(a.push(r.tr({key:i+"_"+a.length},l)),l=[]),s++;return a},updateSelectedMonth:function(e){this.props.updateSelectedDate(e,!0)},renderMonth:function(e,t,n,i){return r.td(e,this.props.viewDate.localeData()._monthsShort[t])}});t.exports=o},{moment:67,react:215}],73:[function(e,t,n){"use strict";var i=e("react"),r=i.DOM,o=i.createClass({getInitialState:function(){return this.calculateState(this.props)},calculateState:function(e){var t=e.selectedDate||e.viewDate,n=e.timeFormat,i=[];n.indexOf("H")==-1&&n.indexOf("h")==-1||(i.push("hours"),n.indexOf("m")!=-1&&(i.push("minutes"),n.indexOf("s")!=-1&&i.push("seconds")));var r=!1;return this.props.timeFormat.indexOf(" A")!=-1&&null!=this.state&&(r=this.state.hours>12?"PM":"AM"),{hours:t.format("H"),minutes:t.format("mm"),seconds:t.format("ss"),milliseconds:t.format("SSS"),daypart:r,counters:i}},renderCounter:function(e){if("daypart"!==e){var t=this.state[e];return"hours"===e&&this.props.timeFormat.indexOf(" A")!=-1&&t>12&&(t-=12),r.div({key:e,className:"rdtCounter"},[r.span({key:"up",className:"rdtBtn",onMouseDown:this.onStartClicking("increase",e)},"▲"),r.div({key:"c",className:"rdtCount"},t),r.span({key:"do",className:"rdtBtn",onMouseDown:this.onStartClicking("decrease",e)},"▼")])}return""},render:function(){var e=this,t=[];return this.state.counters.forEach(function(n){t.length&&t.push(r.div({key:"sep"+t.length,className:"rdtCounterSeparator"},":")),t.push(e.renderCounter(n))}),this.state.daypart!==!1&&t.push(r.div({key:this.state.daypart,className:"rdtDayPart"},this.state.daypart)),3==this.state.counters.length&&this.props.timeFormat.indexOf("S")!=-1&&(t.push(r.div({className:"rdtCounterSeparator",key:"sep5"},":")),t.push(r.div({className:"rdtCounter rdtMilli",key:"m"},r.input({value:this.state.milliseconds,type:"text",onChange:this.updateMilli})))),r.div({className:"rdtTime"},r.table({},[this.renderHeader(),r.tbody({key:"b"},r.tr({},r.td({},r.div({className:"rdtCounters"},t))))]))},componentWillReceiveProps:function(e,t){this.setState(this.calculateState(e))},updateMilli:function(e){var t=parseInt(e.target.value);t==e.target.value&&t>=0&&t<1e3&&(this.props.setTime("milliseconds",t),this.setState({milliseconds:t}))},renderHeader:function(){if(!this.props.dateFormat)return null;var e=this.props.selectedDate||this.props.viewDate;return r.thead({key:"h"},r.tr({},r.th({className:"rdtSwitch",colSpan:4,onClick:this.props.showView("days")},e.format(this.props.dateFormat))))},onStartClicking:function(e,t){var n=this;this.state[t];return function(){var i={};i[t]=n[e](t),n.setState(i),n.timer=setTimeout(function(){n.increaseTimer=setInterval(function(){i[t]=n[e](t),n.setState(i)},70)},500),n.mouseUpListener=function(){clearTimeout(n.timer),clearInterval(n.increaseTimer),n.props.setTime(t,n.state[t]),document.body.removeEventListener("mouseup",n.mouseUpListener)},document.body.addEventListener("mouseup",n.mouseUpListener)}},maxValues:{hours:23,minutes:59,seconds:59,milliseconds:999},padValues:{hours:1,minutes:2,seconds:2,milliseconds:3},increase:function(e){var t=parseInt(this.state[e])+1;return t>this.maxValues[e]&&(t=0),this.pad(e,t)},decrease:function(e){var t=parseInt(this.state[e])-1;return t<0&&(t=this.maxValues[e]),this.pad(e,t)},pad:function(e,t){for(var n=t+"";n.length<this.padValues[e];)n="0"+n;return n}});t.exports=o},{react:215}],74:[function(e,t,n){"use strict";var i=e("react"),r=i.DOM,o=i.createClass({render:function(){var e=10*parseInt(this.props.viewDate.year()/10,10);return r.div({className:"rdtYears"},[r.table({key:"a"},r.thead({},r.tr({},[r.th({key:"prev",className:"rdtPrev"},r.span({onClick:this.props.subtractTime(10,"years")},"‹")),r.th({key:"year",className:"rdtSwitch",onClick:this.props.showView("years"),colSpan:2},e+"-"+(e+9)),r.th({key:"next",className:"rdtNext"},r.span({onClick:this.props.addTime(10,"years")},"›"))]))),r.table({key:"years"},r.tbody({},this.renderYears(e)))])},renderYears:function(e){var t,n,i=[],o=-1,a=[],s=this.props.renderYear||this.renderYear,l=this.props.selectedDate;for(e--;o<11;)t="rdtYear",o===-1|10===o&&(t+=" rdtOld"),l&&l.year()===e&&(t+=" rdtActive"),n={key:e,"data-value":e,className:t,onClick:"years"==this.props.updateOn?this.updateSelectedYear:this.props.setDate("year")},i.push(s(n,e,l&&l.clone())),4==i.length&&(a.push(r.tr({key:o},i)),i=[]),e++,o++;return a},updateSelectedYear:function(e){this.props.updateSelectedDate(e,!0)},renderYear:function(e,t,n){return r.td(e,t)}});t.exports=o},{react:215}],75:[function(e,t,n){var i=e("react"),r=i.version&&i.version.split(".");r&&(r[0]>0||r[1]>13)&&(i=e("react-dom"));var o=[],a=[],s="ignore-react-onclickoutside",l=function(e,t){return e===t||(e.correspondingElement?e.correspondingElement.classList.contains(s):e.classList.contains(s))};t.exports={componentDidMount:function(){if("function"!=typeof this.handleClickOutside)throw new Error("Component lacks a handleClickOutside(event) function for processing outside click events.");var e=this.__outsideClickHandler=function(e,t){return function(n){n.stopPropagation();for(var i=n.target,r=!1;i.parentNode;){if(r=l(i,e))return;i=i.parentNode}t(n)}}(i.findDOMNode(this),this.handleClickOutside),t=o.length;o.push(this),a[t]=e,this.props.disableOnClickOutside||this.enableOnClickOutside()},componentWillUnmount:function(){this.disableOnClickOutside(),this.__outsideClickHandler=!1;var e=o.indexOf(this);e>-1&&a[e]&&(a.splice(e,1),o.splice(e,1))},enableOnClickOutside:function(){var e=this.__outsideClickHandler;document.addEventListener("mousedown",e),document.addEventListener("touchstart",e)},disableOnClickOutside:function(){var e=this.__outsideClickHandler;document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}},{react:215,"react-dom":76}],76:[function(e,t,n){"use strict";t.exports=e("react/lib/ReactDOM")},{"react/lib/ReactDOM":114}],77:[function(t,n,i){!function(r,o){"object"==typeof i&&"object"==typeof n?n.exports=o(t("react"),t("highcharts")):"function"==typeof e&&e.amd?e(["react","highcharts"],o):"object"==typeof i?i.ReactHighcharts=o(t("react"),t("highcharts")):r.ReactHighcharts=o(r.React,r.Highcharts)}(this,function(e,t){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(3)},function(t,n){t.exports=e},function(e,t,n){(function(t){"use strict";var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r=n(1);e.exports=function(e,n){var o="Highcharts"+e,a=r.createClass({displayName:o,propTypes:{config:r.PropTypes.object.isRequired,isPureConfig:r.PropTypes.bool,neverReflow:r.PropTypes.bool,callback:r.PropTypes.func},defaultProps:{callback:function(){}},renderChart:function(r){var a=this;if(!r)throw new Error("Config must be specified for the "+o+" component");var s=r.chart;this.chart=new n[e](i({},r,{chart:i({},s,{renderTo:this.refs.chart})}),this.props.callback),this.props.neverReflow||t.requestAnimationFrame&&requestAnimationFrame(function(){a.chart&&a.chart.options&&a.chart.reflow()})},shouldComponentUpdate:function(e){return!!(e.neverReflow||e.isPureConfig&&this.props.config===e.config)||(this.renderChart(e.config),!1)},getChart:function(){if(!this.chart)throw new Error("getChart() should not be called before the component is mounted");return this.chart},componentDidMount:function(){this.renderChart(this.props.config)},componentWillUnmount:function(){this.chart.destroy()},render:function(){var e=this.props;return e=i({},e,{ref:"chart"}),r.createElement("div",e)}});return a.Highcharts=n,a}}).call(t,function(){return this}())},function(e,t,n){"use strict";e.exports=n(2)("Chart",n(4))},function(e,n){e.exports=t}])})},{highcharts:64,react:215}],78:[function(e,t,n){"use strict";var i=e("./ReactDOMComponentTree"),r=e("fbjs/lib/focusNode"),o={focusDOMComponent:function(){r(i.getNodeFromInstance(this))}};t.exports=o},{"./ReactDOMComponentTree":118,"fbjs/lib/focusNode":47}],79:[function(e,t,n){"use strict";function i(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function r(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function o(e){switch(e){case _.topCompositionStart:return M.compositionStart;case _.topCompositionEnd:return M.compositionEnd;case _.topCompositionUpdate:return M.compositionUpdate}}function a(e,t){return e===_.topKeyDown&&t.keyCode===x}function s(e,t){switch(e){case _.topKeyUp:return k.indexOf(t.keyCode)!==-1;case _.topKeyDown:return t.keyCode!==x;case _.topKeyPress:case _.topMouseDown:case _.topBlur:return!0;default:return!1}}function l(e){var t=e.detail;return"object"==typeof t&&"data"in t?t.data:null}function c(e,t,n,i){var r,c;if(w?r=o(e):D?s(e,n)&&(r=M.compositionEnd):a(e,n)&&(r=M.compositionStart),!r)return null;P&&(D||r!==M.compositionStart?r===M.compositionEnd&&D&&(c=D.getData()):D=g.getPooled(i));var u=v.getPooled(r,t,n,i);if(c)u.data=c;else{var d=l(n);null!==d&&(u.data=d)}return f.accumulateTwoPhaseDispatches(u),u}function u(e,t){switch(e){case _.topCompositionEnd:return l(t);case _.topKeyPress:var n=t.which;return n!==T?null:(O=!0,S);case _.topTextInput:var i=t.data;return i===S&&O?null:i;default:return null}}function d(e,t){if(D){if(e===_.topCompositionEnd||s(e,t)){var n=D.getData();return g.release(D),D=null,n}return null}switch(e){case _.topPaste:return null;case _.topKeyPress:return t.which&&!r(t)?String.fromCharCode(t.which):null;case _.topCompositionEnd:return P?null:t.data;default:return null}}function p(e,t,n,i){var r;if(r=C?u(e,n):d(e,n),!r)return null;var o=y.getPooled(M.beforeInput,t,n,i);return o.data=r,f.accumulateTwoPhaseDispatches(o),o}var h=e("./EventConstants"),f=e("./EventPropagators"),m=e("fbjs/lib/ExecutionEnvironment"),g=e("./FallbackCompositionState"),v=e("./SyntheticCompositionEvent"),y=e("./SyntheticInputEvent"),b=e("fbjs/lib/keyOf"),k=[9,13,27,32],x=229,w=m.canUseDOM&&"CompositionEvent"in window,E=null;m.canUseDOM&&"documentMode"in document&&(E=document.documentMode);var C=m.canUseDOM&&"TextEvent"in window&&!E&&!i(),P=m.canUseDOM&&(!w||E&&E>8&&E<=11),T=32,S=String.fromCharCode(T),_=h.topLevelTypes,M={beforeInput:{phasedRegistrationNames:{bubbled:b({onBeforeInput:null}),captured:b({onBeforeInputCapture:null})},dependencies:[_.topCompositionEnd,_.topKeyPress,_.topTextInput,_.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:b({onCompositionEnd:null}),captured:b({onCompositionEndCapture:null})},dependencies:[_.topBlur,_.topCompositionEnd,_.topKeyDown,_.topKeyPress,_.topKeyUp,_.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:b({onCompositionStart:null}),captured:b({onCompositionStartCapture:null})},dependencies:[_.topBlur,_.topCompositionStart,_.topKeyDown,_.topKeyPress,_.topKeyUp,_.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:b({onCompositionUpdate:null}),captured:b({onCompositionUpdateCapture:null})},dependencies:[_.topBlur,_.topCompositionUpdate,_.topKeyDown,_.topKeyPress,_.topKeyUp,_.topMouseDown]}},O=!1,D=null,N={eventTypes:M,extractEvents:function(e,t,n,i){return[c(e,t,n,i),p(e,t,n,i)]}};t.exports=N},{"./EventConstants":93,"./EventPropagators":97,"./FallbackCompositionState":98,"./SyntheticCompositionEvent":173,"./SyntheticInputEvent":177,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/keyOf":57}],80:[function(e,t,n){"use strict";function i(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var r={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},o=["Webkit","ms","Moz","O"];Object.keys(r).forEach(function(e){o.forEach(function(t){r[i(t,e)]=r[e]})});var a={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},s={isUnitlessNumber:r,shorthandPropertyExpansions:a};t.exports=s},{}],81:[function(e,t,n){"use strict";var i=e("./CSSProperty"),r=e("fbjs/lib/ExecutionEnvironment"),o=(e("./ReactInstrumentation"),e("fbjs/lib/camelizeStyleName"),e("./dangerousStyleValue")),a=e("fbjs/lib/hyphenateStyleName"),s=e("fbjs/lib/memoizeStringOnly"),l=(e("fbjs/lib/warning"),s(function(e){return a(e)})),c=!1,u="cssFloat";if(r.canUseDOM){var d=document.createElement("div").style;try{d.font=""}catch(e){c=!0}void 0===document.documentElement.style.cssFloat&&(u="styleFloat")}var p={createMarkupForStyles:function(e,t){var n="";for(var i in e)if(e.hasOwnProperty(i)){var r=e[i];null!=r&&(n+=l(i)+":",n+=o(i,r,t)+";")}return n||null},setValueForStyles:function(e,t,n){var r=e.style;for(var a in t)if(t.hasOwnProperty(a)){var s=o(a,t[a],n);if("float"!==a&&"cssFloat"!==a||(a=u),s)r[a]=s;else{var l=c&&i.shorthandPropertyExpansions[a];if(l)for(var d in l)r[d]="";else r[a]=""}}}};t.exports=p},{"./CSSProperty":80,"./ReactInstrumentation":147,"./dangerousStyleValue":190,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/camelizeStyleName":41,"fbjs/lib/hyphenateStyleName":52,"fbjs/lib/memoizeStringOnly":59,"fbjs/lib/warning":63}],82:[function(e,t,n){"use strict";function i(){this._callbacks=null,this._contexts=null}var r=e("object-assign"),o=e("./PooledClass"),a=e("fbjs/lib/invariant");r(i.prototype,{enqueue:function(e,t){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(t)},notifyAll:function(){var e=this._callbacks,t=this._contexts;if(e){e.length!==t.length?a(!1):void 0,this._callbacks=null,this._contexts=null;for(var n=0;n<e.length;n++)e[n].call(t[n]);e.length=0,t.length=0}},checkpoint:function(){return this._callbacks?this._callbacks.length:0},rollback:function(e){this._callbacks&&(this._callbacks.length=e,this._contexts.length=e)},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),o.addPoolingTo(i),t.exports=i},{"./PooledClass":102,"fbjs/lib/invariant":53,"object-assign":68}],83:[function(e,t,n){"use strict";function i(e){var t=e.nodeName&&e.nodeName.toLowerCase();return"select"===t||"input"===t&&"file"===e.type}function r(e){var t=C.getPooled(O.change,N,e,P(e));k.accumulateTwoPhaseDispatches(t),E.batchedUpdates(o,t)}function o(e){b.enqueueEvents(e),b.processEventQueue(!1)}function a(e,t){D=e,N=t,D.attachEvent("onchange",r)}function s(){D&&(D.detachEvent("onchange",r),D=null,N=null)}function l(e,t){if(e===M.topChange)return t}function c(e,t,n){e===M.topFocus?(s(),a(t,n)):e===M.topBlur&&s()}function u(e,t){D=e,N=t,R=e.value,A=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(D,"value",I),D.attachEvent?D.attachEvent("onpropertychange",p):D.addEventListener("propertychange",p,!1)}function d(){D&&(delete D.value,D.detachEvent?D.detachEvent("onpropertychange",p):D.removeEventListener("propertychange",p,!1),D=null,N=null,R=null,A=null)}function p(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==R&&(R=t,r(e))}}function h(e,t){if(e===M.topInput)return t}function f(e,t,n){e===M.topFocus?(d(),u(t,n)):e===M.topBlur&&d()}function m(e,t){if((e===M.topSelectionChange||e===M.topKeyUp||e===M.topKeyDown)&&D&&D.value!==R)return R=D.value,N}function g(e){return e.nodeName&&"input"===e.nodeName.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function v(e,t){if(e===M.topClick)return t}var y=e("./EventConstants"),b=e("./EventPluginHub"),k=e("./EventPropagators"),x=e("fbjs/lib/ExecutionEnvironment"),w=e("./ReactDOMComponentTree"),E=e("./ReactUpdates"),C=e("./SyntheticEvent"),P=e("./getEventTarget"),T=e("./isEventSupported"),S=e("./isTextInputElement"),_=e("fbjs/lib/keyOf"),M=y.topLevelTypes,O={change:{phasedRegistrationNames:{bubbled:_({onChange:null}),captured:_({onChangeCapture:null})},dependencies:[M.topBlur,M.topChange,M.topClick,M.topFocus,M.topInput,M.topKeyDown,M.topKeyUp,M.topSelectionChange]}},D=null,N=null,R=null,A=null,j=!1;x.canUseDOM&&(j=T("change")&&(!("documentMode"in document)||document.documentMode>8));var L=!1;x.canUseDOM&&(L=T("input")&&(!("documentMode"in document)||document.documentMode>11));var I={get:function(){return A.get.call(this)},set:function(e){R=""+e,A.set.call(this,e)}},F={eventTypes:O,extractEvents:function(e,t,n,r){var o,a,s=t?w.getNodeFromInstance(t):window;if(i(s)?j?o=l:a=c:S(s)?L?o=h:(o=m,a=f):g(s)&&(o=v),o){var u=o(e,t);if(u){var d=C.getPooled(O.change,u,n,r);return d.type="change",k.accumulateTwoPhaseDispatches(d),d}}a&&a(e,s,t)}};t.exports=F},{"./EventConstants":93,"./EventPluginHub":94,"./EventPropagators":97,"./ReactDOMComponentTree":118,"./ReactUpdates":166,"./SyntheticEvent":175,"./getEventTarget":198,"./isEventSupported":205,"./isTextInputElement":206,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/keyOf":57}],84:[function(e,t,n){"use strict";function i(e,t){return Array.isArray(t)&&(t=t[1]),t?t.nextSibling:e.firstChild}function r(e,t,n){u.insertTreeBefore(e,t,n)}function o(e,t,n){Array.isArray(t)?s(e,t[0],t[1],n):g(e,t,n)}function a(e,t){if(Array.isArray(t)){var n=t[1];t=t[0],l(e,t,n),e.removeChild(n)}e.removeChild(t)}function s(e,t,n,i){for(var r=t;;){var o=r.nextSibling;if(g(e,r,i),r===n)break;r=o}}function l(e,t,n){for(;;){var i=t.nextSibling;if(i===n)break;e.removeChild(i)}}function c(e,t,n){var i=e.parentNode,r=e.nextSibling;r===t?n&&g(i,document.createTextNode(n),r):n?(m(r,n),l(i,r,t)):l(i,e,t)}var u=e("./DOMLazyTree"),d=e("./Danger"),p=e("./ReactMultiChildUpdateTypes"),h=(e("./ReactDOMComponentTree"),e("./ReactInstrumentation"),e("./createMicrosoftUnsafeLocalFunction")),f=e("./setInnerHTML"),m=e("./setTextContent"),g=h(function(e,t,n){e.insertBefore(t,n)}),v=d.dangerouslyReplaceNodeWithMarkup,y={dangerouslyReplaceNodeWithMarkup:v,replaceDelimitedText:c,processUpdates:function(e,t){for(var n=0;n<t.length;n++){var s=t[n];switch(s.type){case p.INSERT_MARKUP:r(e,s.content,i(e,s.afterNode));break;case p.MOVE_EXISTING:o(e,s.fromNode,i(e,s.afterNode));break;case p.SET_MARKUP:f(e,s.content);break;case p.TEXT_CONTENT:m(e,s.content);break;case p.REMOVE_NODE:a(e,s.fromNode)}}}};t.exports=y},{"./DOMLazyTree":85,"./Danger":89,"./ReactDOMComponentTree":118,"./ReactInstrumentation":147,"./ReactMultiChildUpdateTypes":152,"./createMicrosoftUnsafeLocalFunction":189,"./setInnerHTML":210,"./setTextContent":211}],85:[function(e,t,n){"use strict";function i(e){if(m){var t=e.node,n=e.children;if(n.length)for(var i=0;i<n.length;i++)g(t,n[i],null);else null!=e.html?t.innerHTML=e.html:null!=e.text&&p(t,e.text)}}function r(e,t){e.parentNode.replaceChild(t.node,e),i(t)}function o(e,t){m?e.children.push(t):e.node.appendChild(t.node)}function a(e,t){m?e.html=t:e.node.innerHTML=t}function s(e,t){m?e.text=t:p(e.node,t)}function l(){return this.node.nodeName}function c(e){return{node:e,children:[],html:null,text:null,toString:l}}var u=e("./DOMNamespaces"),d=e("./createMicrosoftUnsafeLocalFunction"),p=e("./setTextContent"),h=1,f=11,m="undefined"!=typeof document&&"number"==typeof document.documentMode||"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),g=d(function(e,t,n){t.node.nodeType===f||t.node.nodeType===h&&"object"===t.node.nodeName.toLowerCase()&&(null==t.node.namespaceURI||t.node.namespaceURI===u.html)?(i(t),e.insertBefore(t.node,n)):(e.insertBefore(t.node,n),i(t))});c.insertTreeBefore=g,c.replaceChildWithTree=r,c.queueChild=o,c.queueHTML=a,c.queueText=s,t.exports=c},{"./DOMNamespaces":86,"./createMicrosoftUnsafeLocalFunction":189,"./setTextContent":211}],86:[function(e,t,n){"use strict";var i={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};t.exports=i},{}],87:[function(e,t,n){"use strict";function i(e,t){return(e&t)===t}var r=e("fbjs/lib/invariant"),o={MUST_USE_PROPERTY:1,HAS_SIDE_EFFECTS:2,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(e){var t=o,n=e.Properties||{},a=e.DOMAttributeNamespaces||{},l=e.DOMAttributeNames||{},c=e.DOMPropertyNames||{},u=e.DOMMutationMethods||{};e.isCustomAttribute&&s._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var d in n){s.properties.hasOwnProperty(d)?r(!1):void 0;var p=d.toLowerCase(),h=n[d],f={attributeName:p,attributeNamespace:null,propertyName:d,mutationMethod:null,mustUseProperty:i(h,t.MUST_USE_PROPERTY),hasSideEffects:i(h,t.HAS_SIDE_EFFECTS),hasBooleanValue:i(h,t.HAS_BOOLEAN_VALUE),hasNumericValue:i(h,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:i(h,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:i(h,t.HAS_OVERLOADED_BOOLEAN_VALUE)};if(!f.mustUseProperty&&f.hasSideEffects?r(!1):void 0,f.hasBooleanValue+f.hasNumericValue+f.hasOverloadedBooleanValue<=1?void 0:r(!1),l.hasOwnProperty(d)){var m=l[d];f.attributeName=m}a.hasOwnProperty(d)&&(f.attributeNamespace=a[d]),c.hasOwnProperty(d)&&(f.propertyName=c[d]),u.hasOwnProperty(d)&&(f.mutationMethod=u[d]),s.properties[d]=f}}},a=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",s={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:a,ATTRIBUTE_NAME_CHAR:a+"\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<s._isCustomAttributeFunctions.length;t++){var n=s._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},injection:o};t.exports=s},{"fbjs/lib/invariant":53}],88:[function(e,t,n){"use strict";function i(e){return!!c.hasOwnProperty(e)||!l.hasOwnProperty(e)&&(s.test(e)?(c[e]=!0,!0):(l[e]=!0,!1))}function r(e,t){return null==t||e.hasBooleanValue&&!t||e.hasNumericValue&&isNaN(t)||e.hasPositiveNumericValue&&t<1||e.hasOverloadedBooleanValue&&t===!1}var o=e("./DOMProperty"),a=(e("./ReactDOMComponentTree"),e("./ReactDOMInstrumentation"),e("./ReactInstrumentation"),e("./quoteAttributeValueForBrowser")),s=(e("fbjs/lib/warning"),new RegExp("^["+o.ATTRIBUTE_NAME_START_CHAR+"]["+o.ATTRIBUTE_NAME_CHAR+"]*$")),l={},c={},u={createMarkupForID:function(e){return o.ID_ATTRIBUTE_NAME+"="+a(e)},setAttributeForID:function(e,t){e.setAttribute(o.ID_ATTRIBUTE_NAME,t)},createMarkupForRoot:function(){return o.ROOT_ATTRIBUTE_NAME+'=""'},setAttributeForRoot:function(e){e.setAttribute(o.ROOT_ATTRIBUTE_NAME,"")},createMarkupForProperty:function(e,t){var n=o.properties.hasOwnProperty(e)?o.properties[e]:null;if(n){if(r(n,t))return"";var i=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&t===!0?i+'=""':i+"="+a(t)}return o.isCustomAttribute(e)?null==t?"":e+"="+a(t):null},createMarkupForCustomAttribute:function(e,t){return i(e)&&null!=t?e+"="+a(t):""},setValueForProperty:function(e,t,n){var i=o.properties.hasOwnProperty(t)?o.properties[t]:null;if(i){var a=i.mutationMethod;if(a)a(e,n);else{if(r(i,n))return void this.deleteValueForProperty(e,t);if(i.mustUseProperty){var s=i.propertyName;i.hasSideEffects&&""+e[s]==""+n||(e[s]=n)}else{var l=i.attributeName,c=i.attributeNamespace;c?e.setAttributeNS(c,l,""+n):i.hasBooleanValue||i.hasOverloadedBooleanValue&&n===!0?e.setAttribute(l,""):e.setAttribute(l,""+n)}}}else if(o.isCustomAttribute(t))return void u.setValueForAttribute(e,t,n)},setValueForAttribute:function(e,t,n){if(i(t)){null==n?e.removeAttribute(t):e.setAttribute(t,""+n)}},deleteValueForProperty:function(e,t){var n=o.properties.hasOwnProperty(t)?o.properties[t]:null;if(n){var i=n.mutationMethod;if(i)i(e,void 0);else if(n.mustUseProperty){var r=n.propertyName;n.hasBooleanValue?e[r]=!1:n.hasSideEffects&&""+e[r]==""||(e[r]="")}else e.removeAttribute(n.attributeName)}else o.isCustomAttribute(t)&&e.removeAttribute(t)}};t.exports=u},{"./DOMProperty":87,"./ReactDOMComponentTree":118,"./ReactDOMInstrumentation":126,"./ReactInstrumentation":147,"./quoteAttributeValueForBrowser":208,"fbjs/lib/warning":63}],89:[function(e,t,n){"use strict";function i(e){return e.substring(1,e.indexOf(" "))}var r=e("./DOMLazyTree"),o=e("fbjs/lib/ExecutionEnvironment"),a=e("fbjs/lib/createNodesFromMarkup"),s=e("fbjs/lib/emptyFunction"),l=e("fbjs/lib/getMarkupWrap"),c=e("fbjs/lib/invariant"),u=/^(<[^ \/>]+)/,d="data-danger-index",p={dangerouslyRenderMarkup:function(e){o.canUseDOM?void 0:c(!1);for(var t,n={},r=0;r<e.length;r++)e[r]?void 0:c(!1),t=i(e[r]),t=l(t)?t:"*",n[t]=n[t]||[],n[t][r]=e[r];var p=[],h=0;for(t in n)if(n.hasOwnProperty(t)){var f,m=n[t];for(f in m)if(m.hasOwnProperty(f)){
var g=m[f];m[f]=g.replace(u,"$1 "+d+'="'+f+'" ')}for(var v=a(m.join(""),s),y=0;y<v.length;++y){var b=v[y];b.hasAttribute&&b.hasAttribute(d)&&(f=+b.getAttribute(d),b.removeAttribute(d),p.hasOwnProperty(f)?c(!1):void 0,p[f]=b,h+=1)}}return h!==p.length?c(!1):void 0,p.length!==e.length?c(!1):void 0,p},dangerouslyReplaceNodeWithMarkup:function(e,t){if(o.canUseDOM?void 0:c(!1),t?void 0:c(!1),"HTML"===e.nodeName?c(!1):void 0,"string"==typeof t){var n=a(t,s)[0];e.parentNode.replaceChild(n,e)}else r.replaceChildWithTree(e,t)}};t.exports=p},{"./DOMLazyTree":85,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/createNodesFromMarkup":44,"fbjs/lib/emptyFunction":45,"fbjs/lib/getMarkupWrap":49,"fbjs/lib/invariant":53}],90:[function(e,t,n){"use strict";var i=e("fbjs/lib/keyOf"),r=[i({ResponderEventPlugin:null}),i({SimpleEventPlugin:null}),i({TapEventPlugin:null}),i({EnterLeaveEventPlugin:null}),i({ChangeEventPlugin:null}),i({SelectEventPlugin:null}),i({BeforeInputEventPlugin:null})];t.exports=r},{"fbjs/lib/keyOf":57}],91:[function(e,t,n){"use strict";var i={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},r={getNativeProps:function(e,t){if(!t.disabled)return t;var n={};for(var r in t)!i[r]&&t.hasOwnProperty(r)&&(n[r]=t[r]);return n}};t.exports=r},{}],92:[function(e,t,n){"use strict";var i=e("./EventConstants"),r=e("./EventPropagators"),o=e("./ReactDOMComponentTree"),a=e("./SyntheticMouseEvent"),s=e("fbjs/lib/keyOf"),l=i.topLevelTypes,c={mouseEnter:{registrationName:s({onMouseEnter:null}),dependencies:[l.topMouseOut,l.topMouseOver]},mouseLeave:{registrationName:s({onMouseLeave:null}),dependencies:[l.topMouseOut,l.topMouseOver]}},u={eventTypes:c,extractEvents:function(e,t,n,i){if(e===l.topMouseOver&&(n.relatedTarget||n.fromElement))return null;if(e!==l.topMouseOut&&e!==l.topMouseOver)return null;var s;if(i.window===i)s=i;else{var u=i.ownerDocument;s=u?u.defaultView||u.parentWindow:window}var d,p;if(e===l.topMouseOut){d=t;var h=n.relatedTarget||n.toElement;p=h?o.getClosestInstanceFromNode(h):null}else d=null,p=t;if(d===p)return null;var f=null==d?s:o.getNodeFromInstance(d),m=null==p?s:o.getNodeFromInstance(p),g=a.getPooled(c.mouseLeave,d,n,i);g.type="mouseleave",g.target=f,g.relatedTarget=m;var v=a.getPooled(c.mouseEnter,p,n,i);return v.type="mouseenter",v.target=m,v.relatedTarget=f,r.accumulateEnterLeaveDispatches(g,v,d,p),[g,v]}};t.exports=u},{"./EventConstants":93,"./EventPropagators":97,"./ReactDOMComponentTree":118,"./SyntheticMouseEvent":179,"fbjs/lib/keyOf":57}],93:[function(e,t,n){"use strict";var i=e("fbjs/lib/keyMirror"),r=i({bubbled:null,captured:null}),o=i({topAbort:null,topAnimationEnd:null,topAnimationIteration:null,topAnimationStart:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topInvalid:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topTransitionEnd:null,topVolumeChange:null,topWaiting:null,topWheel:null}),a={topLevelTypes:o,PropagationPhases:r};t.exports=a},{"fbjs/lib/keyMirror":56}],94:[function(e,t,n){"use strict";var i=e("./EventPluginRegistry"),r=e("./EventPluginUtils"),o=e("./ReactErrorUtils"),a=e("./accumulateInto"),s=e("./forEachAccumulated"),l=e("fbjs/lib/invariant"),c={},u=null,d=function(e,t){e&&(r.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))},p=function(e){return d(e,!0)},h=function(e){return d(e,!1)},f={injection:{injectEventPluginOrder:i.injectEventPluginOrder,injectEventPluginsByName:i.injectEventPluginsByName},putListener:function(e,t,n){"function"!=typeof n?l(!1):void 0;var r=c[t]||(c[t]={});r[e._rootNodeID]=n;var o=i.registrationNameModules[t];o&&o.didPutListener&&o.didPutListener(e,t,n)},getListener:function(e,t){var n=c[t];return n&&n[e._rootNodeID]},deleteListener:function(e,t){var n=i.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t);var r=c[t];r&&delete r[e._rootNodeID]},deleteAllListeners:function(e){for(var t in c)if(c[t][e._rootNodeID]){var n=i.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t),delete c[t][e._rootNodeID]}},extractEvents:function(e,t,n,r){for(var o,s=i.plugins,l=0;l<s.length;l++){var c=s[l];if(c){var u=c.extractEvents(e,t,n,r);u&&(o=a(o,u))}}return o},enqueueEvents:function(e){e&&(u=a(u,e))},processEventQueue:function(e){var t=u;u=null,e?s(t,p):s(t,h),u?l(!1):void 0,o.rethrowCaughtError()},__purge:function(){c={}},__getListenerBank:function(){return c}};t.exports=f},{"./EventPluginRegistry":95,"./EventPluginUtils":96,"./ReactErrorUtils":140,"./accumulateInto":186,"./forEachAccumulated":194,"fbjs/lib/invariant":53}],95:[function(e,t,n){"use strict";function i(){if(s)for(var e in l){var t=l[e],n=s.indexOf(e);if(n>-1?void 0:a(!1),!c.plugins[n]){t.extractEvents?void 0:a(!1),c.plugins[n]=t;var i=t.eventTypes;for(var o in i)r(i[o],t,o)?void 0:a(!1)}}}function r(e,t,n){c.eventNameDispatchConfigs.hasOwnProperty(n)?a(!1):void 0,c.eventNameDispatchConfigs[n]=e;var i=e.phasedRegistrationNames;if(i){for(var r in i)if(i.hasOwnProperty(r)){var s=i[r];o(s,t,n)}return!0}return!!e.registrationName&&(o(e.registrationName,t,n),!0)}function o(e,t,n){c.registrationNameModules[e]?a(!1):void 0,c.registrationNameModules[e]=t,c.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var a=e("fbjs/lib/invariant"),s=null,l={},c={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){s?a(!1):void 0,s=Array.prototype.slice.call(e),i()},injectEventPluginsByName:function(e){var t=!1;for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];l.hasOwnProperty(n)&&l[n]===r||(l[n]?a(!1):void 0,l[n]=r,t=!0)}t&&i()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return c.registrationNameModules[t.registrationName]||null;for(var n in t.phasedRegistrationNames)if(t.phasedRegistrationNames.hasOwnProperty(n)){var i=c.registrationNameModules[t.phasedRegistrationNames[n]];if(i)return i}return null},_resetEventPlugins:function(){s=null;for(var e in l)l.hasOwnProperty(e)&&delete l[e];c.plugins.length=0;var t=c.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var i=c.registrationNameModules;for(var r in i)i.hasOwnProperty(r)&&delete i[r]}};t.exports=c},{"fbjs/lib/invariant":53}],96:[function(e,t,n){"use strict";function i(e){return e===y.topMouseUp||e===y.topTouchEnd||e===y.topTouchCancel}function r(e){return e===y.topMouseMove||e===y.topTouchMove}function o(e){return e===y.topMouseDown||e===y.topTouchStart}function a(e,t,n,i){var r=e.type||"unknown-event";e.currentTarget=b.getNodeFromInstance(i),t?m.invokeGuardedCallbackWithCatch(r,n,e):m.invokeGuardedCallback(r,n,e),e.currentTarget=null}function s(e,t){var n=e._dispatchListeners,i=e._dispatchInstances;if(Array.isArray(n))for(var r=0;r<n.length&&!e.isPropagationStopped();r++)a(e,t,n[r],i[r]);else n&&a(e,t,n,i);e._dispatchListeners=null,e._dispatchInstances=null}function l(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var i=0;i<t.length&&!e.isPropagationStopped();i++)if(t[i](e,n[i]))return n[i]}else if(t&&t(e,n))return n;return null}function c(e){var t=l(e);return e._dispatchInstances=null,e._dispatchListeners=null,t}function u(e){var t=e._dispatchListeners,n=e._dispatchInstances;Array.isArray(t)?g(!1):void 0,e.currentTarget=t?b.getNodeFromInstance(n):null;var i=t?t(e):null;return e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,i}function d(e){return!!e._dispatchListeners}var p,h,f=e("./EventConstants"),m=e("./ReactErrorUtils"),g=e("fbjs/lib/invariant"),v=(e("fbjs/lib/warning"),{injectComponentTree:function(e){p=e},injectTreeTraversal:function(e){h=e}}),y=f.topLevelTypes,b={isEndish:i,isMoveish:r,isStartish:o,executeDirectDispatch:u,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:c,hasDispatches:d,getInstanceFromNode:function(e){return p.getInstanceFromNode(e)},getNodeFromInstance:function(e){return p.getNodeFromInstance(e)},isAncestor:function(e,t){return h.isAncestor(e,t)},getLowestCommonAncestor:function(e,t){return h.getLowestCommonAncestor(e,t)},getParentInstance:function(e){return h.getParentInstance(e)},traverseTwoPhase:function(e,t,n){return h.traverseTwoPhase(e,t,n)},traverseEnterLeave:function(e,t,n,i,r){return h.traverseEnterLeave(e,t,n,i,r)},injection:v};t.exports=b},{"./EventConstants":93,"./ReactErrorUtils":140,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],97:[function(e,t,n){"use strict";function i(e,t,n){var i=t.dispatchConfig.phasedRegistrationNames[n];return b(e,i)}function r(e,t,n){var r=t?y.bubbled:y.captured,o=i(e,n,r);o&&(n._dispatchListeners=g(n._dispatchListeners,o),n._dispatchInstances=g(n._dispatchInstances,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&m.traverseTwoPhase(e._targetInst,r,e)}function a(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst,n=t?m.getParentInstance(t):null;m.traverseTwoPhase(n,r,e)}}function s(e,t,n){if(n&&n.dispatchConfig.registrationName){var i=n.dispatchConfig.registrationName,r=b(e,i);r&&(n._dispatchListeners=g(n._dispatchListeners,r),n._dispatchInstances=g(n._dispatchInstances,e))}}function l(e){e&&e.dispatchConfig.registrationName&&s(e._targetInst,null,e)}function c(e){v(e,o)}function u(e){v(e,a)}function d(e,t,n,i){m.traverseEnterLeave(n,i,s,e,t)}function p(e){v(e,l)}var h=e("./EventConstants"),f=e("./EventPluginHub"),m=e("./EventPluginUtils"),g=e("./accumulateInto"),v=e("./forEachAccumulated"),y=(e("fbjs/lib/warning"),h.PropagationPhases),b=f.getListener,k={accumulateTwoPhaseDispatches:c,accumulateTwoPhaseDispatchesSkipTarget:u,accumulateDirectDispatches:p,accumulateEnterLeaveDispatches:d};t.exports=k},{"./EventConstants":93,"./EventPluginHub":94,"./EventPluginUtils":96,"./accumulateInto":186,"./forEachAccumulated":194,"fbjs/lib/warning":63}],98:[function(e,t,n){"use strict";function i(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var r=e("object-assign"),o=e("./PooledClass"),a=e("./getTextContentAccessor");r(i.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[a()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,i=n.length,r=this.getText(),o=r.length;for(e=0;e<i&&n[e]===r[e];e++);var a=i-e;for(t=1;t<=a&&n[i-t]===r[o-t];t++);var s=t>1?1-t:void 0;return this._fallbackText=r.slice(e,s),this._fallbackText}}),o.addPoolingTo(i),t.exports=i},{"./PooledClass":102,"./getTextContentAccessor":202,"object-assign":68}],99:[function(e,t,n){"use strict";var i=e("./DOMProperty"),r=i.injection.MUST_USE_PROPERTY,o=i.injection.HAS_BOOLEAN_VALUE,a=i.injection.HAS_SIDE_EFFECTS,s=i.injection.HAS_NUMERIC_VALUE,l=i.injection.HAS_POSITIVE_NUMERIC_VALUE,c=i.injection.HAS_OVERLOADED_BOOLEAN_VALUE,u={isCustomAttribute:RegExp.prototype.test.bind(new RegExp("^(data|aria)-["+i.ATTRIBUTE_NAME_CHAR+"]*$")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:o,allowTransparency:0,alt:0,async:o,autoComplete:0,autoPlay:o,capture:o,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:r|o,cite:0,classID:0,className:0,cols:l,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:o,coords:0,crossOrigin:0,data:0,dateTime:0,default:o,defer:o,dir:0,disabled:o,download:c,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:o,formTarget:0,frameBorder:0,headers:0,height:0,hidden:o,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:o,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:r|o,muted:r|o,name:0,nonce:0,noValidate:o,open:o,optimum:0,pattern:0,placeholder:0,poster:0,preload:0,profile:0,radioGroup:0,readOnly:o,rel:0,required:o,reversed:o,role:0,rows:l,rowSpan:s,sandbox:0,scope:0,scoped:o,scrolling:0,seamless:o,selected:r|o,shape:0,size:l,sizes:0,span:l,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:s,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:r|a,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,typeof:0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:o,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{}};t.exports=u},{"./DOMProperty":87}],100:[function(e,t,n){"use strict";function i(e){var t=/[=:]/g,n={"=":"=0",":":"=2"},i=(""+e).replace(t,function(e){return n[e]});return"$"+i}function r(e){var t=/(=0|=2)/g,n={"=0":"=","=2":":"},i="."===e[0]&&"$"===e[1]?e.substring(2):e.substring(1);return(""+i).replace(t,function(e){return n[e]})}var o={escape:i,unescape:r};t.exports=o},{}],101:[function(e,t,n){"use strict";function i(e){null!=e.checkedLink&&null!=e.valueLink?c(!1):void 0}function r(e){i(e),null!=e.value||null!=e.onChange?c(!1):void 0}function o(e){i(e),null!=e.checked||null!=e.onChange?c(!1):void 0}function a(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}var s=e("./ReactPropTypes"),l=e("./ReactPropTypeLocations"),c=e("fbjs/lib/invariant"),u=(e("fbjs/lib/warning"),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),d={value:function(e,t,n){return!e[t]||u[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t,n){return!e[t]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:s.func},p={},h={checkPropTypes:function(e,t,n){for(var i in d){if(d.hasOwnProperty(i))var r=d[i](t,i,e,l.prop);if(r instanceof Error&&!(r.message in p)){p[r.message]=!0;a(n)}}},getValue:function(e){return e.valueLink?(r(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(o(e),e.checkedLink.value):e.checked},executeOnChange:function(e,t){return e.valueLink?(r(e),e.valueLink.requestChange(t.target.value)):e.checkedLink?(o(e),e.checkedLink.requestChange(t.target.checked)):e.onChange?e.onChange.call(void 0,t):void 0}};t.exports=h},{"./ReactPropTypeLocations":159,"./ReactPropTypes":160,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],102:[function(e,t,n){"use strict";var i=e("fbjs/lib/invariant"),r=function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)},o=function(e,t){var n=this;if(n.instancePool.length){var i=n.instancePool.pop();return n.call(i,e,t),i}return new n(e,t)},a=function(e,t,n){var i=this;if(i.instancePool.length){var r=i.instancePool.pop();return i.call(r,e,t,n),r}return new i(e,t,n)},s=function(e,t,n,i){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n,i),o}return new r(e,t,n,i)},l=function(e,t,n,i,r){var o=this;if(o.instancePool.length){var a=o.instancePool.pop();return o.call(a,e,t,n,i,r),a}return new o(e,t,n,i,r)},c=function(e){var t=this;e instanceof t?void 0:i(!1),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=10,d=r,p=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||d,n.poolSize||(n.poolSize=u),n.release=c,n},h={addPoolingTo:p,oneArgumentPooler:r,twoArgumentPooler:o,threeArgumentPooler:a,fourArgumentPooler:s,fiveArgumentPooler:l};t.exports=h},{"fbjs/lib/invariant":53}],103:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("./ReactChildren"),o=e("./ReactComponent"),a=e("./ReactClass"),s=e("./ReactDOMFactories"),l=e("./ReactElement"),c=(e("./ReactElementValidator"),e("./ReactPropTypes")),u=e("./ReactVersion"),d=e("./onlyChild"),p=(e("fbjs/lib/warning"),l.createElement),h=l.createFactory,f=l.cloneElement,m=i,g={Children:{map:r.map,forEach:r.forEach,count:r.count,toArray:r.toArray,only:d},Component:o,createElement:p,cloneElement:f,isValidElement:l.isValidElement,PropTypes:c,createClass:a.createClass,createFactory:h,createMixin:function(e){return e},DOM:s,version:u,__spread:m};t.exports=g},{"./ReactChildren":106,"./ReactClass":107,"./ReactComponent":108,"./ReactDOMFactories":122,"./ReactElement":137,"./ReactElementValidator":138,"./ReactPropTypes":160,"./ReactVersion":167,"./onlyChild":207,"fbjs/lib/warning":63,"object-assign":68}],104:[function(e,t,n){"use strict";function i(e){return Object.prototype.hasOwnProperty.call(e,g)||(e[g]=f++,p[e[g]]={}),p[e[g]]}var r,o=e("object-assign"),a=e("./EventConstants"),s=e("./EventPluginRegistry"),l=e("./ReactEventEmitterMixin"),c=e("./ViewportMetrics"),u=e("./getVendorPrefixedEventName"),d=e("./isEventSupported"),p={},h=!1,f=0,m={topAbort:"abort",topAnimationEnd:u("animationend")||"animationend",topAnimationIteration:u("animationiteration")||"animationiteration",topAnimationStart:u("animationstart")||"animationstart",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:u("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},g="_reactListenersID"+String(Math.random()).slice(2),v=o({},l,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(v.handleTopLevel),v.ReactEventListener=e}},setEnabled:function(e){v.ReactEventListener&&v.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!v.ReactEventListener||!v.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var n=t,r=i(n),o=s.registrationNameDependencies[e],l=a.topLevelTypes,c=0;c<o.length;c++){var u=o[c];r.hasOwnProperty(u)&&r[u]||(u===l.topWheel?d("wheel")?v.ReactEventListener.trapBubbledEvent(l.topWheel,"wheel",n):d("mousewheel")?v.ReactEventListener.trapBubbledEvent(l.topWheel,"mousewheel",n):v.ReactEventListener.trapBubbledEvent(l.topWheel,"DOMMouseScroll",n):u===l.topScroll?d("scroll",!0)?v.ReactEventListener.trapCapturedEvent(l.topScroll,"scroll",n):v.ReactEventListener.trapBubbledEvent(l.topScroll,"scroll",v.ReactEventListener.WINDOW_HANDLE):u===l.topFocus||u===l.topBlur?(d("focus",!0)?(v.ReactEventListener.trapCapturedEvent(l.topFocus,"focus",n),v.ReactEventListener.trapCapturedEvent(l.topBlur,"blur",n)):d("focusin")&&(v.ReactEventListener.trapBubbledEvent(l.topFocus,"focusin",n),v.ReactEventListener.trapBubbledEvent(l.topBlur,"focusout",n)),r[l.topBlur]=!0,r[l.topFocus]=!0):m.hasOwnProperty(u)&&v.ReactEventListener.trapBubbledEvent(u,m[u],n),r[u]=!0)}},trapBubbledEvent:function(e,t,n){return v.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return v.ReactEventListener.trapCapturedEvent(e,t,n)},ensureScrollValueMonitoring:function(){if(void 0===r&&(r=document.createEvent&&"pageX"in document.createEvent("MouseEvent")),!r&&!h){var e=c.refreshScrollValues;v.ReactEventListener.monitorScrollValue(e),h=!0}}});t.exports=v},{"./EventConstants":93,"./EventPluginRegistry":95,"./ReactEventEmitterMixin":141,"./ViewportMetrics":185,"./getVendorPrefixedEventName":203,"./isEventSupported":205,"object-assign":68}],105:[function(e,t,n){"use strict";function i(e,t,n){var i=void 0===e[n];null!=t&&i&&(e[n]=o(t))}var r=e("./ReactReconciler"),o=e("./instantiateReactComponent"),a=(e("./KeyEscapeUtils"),e("./shouldUpdateReactComponent")),s=e("./traverseAllChildren"),l=(e("fbjs/lib/warning"),{instantiateChildren:function(e,t,n){if(null==e)return null;var r={};return s(e,i,r),r},updateChildren:function(e,t,n,i,s){if(t||e){var l,c;for(l in t)if(t.hasOwnProperty(l)){c=e&&e[l];var u=c&&c._currentElement,d=t[l];if(null!=c&&a(u,d))r.receiveComponent(c,d,i,s),t[l]=c;else{c&&(n[l]=r.getNativeNode(c),r.unmountComponent(c,!1));var p=o(d);t[l]=p}}for(l in e)!e.hasOwnProperty(l)||t&&t.hasOwnProperty(l)||(c=e[l],n[l]=r.getNativeNode(c),r.unmountComponent(c,!1))}},unmountChildren:function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];r.unmountComponent(i,t)}}});t.exports=l},{"./KeyEscapeUtils":100,"./ReactReconciler":162,"./instantiateReactComponent":204,"./shouldUpdateReactComponent":212,"./traverseAllChildren":213,"fbjs/lib/warning":63}],106:[function(e,t,n){"use strict";function i(e){return(""+e).replace(k,"$&/")}function r(e,t){this.func=e,this.context=t,this.count=0}function o(e,t,n){var i=e.func,r=e.context;i.call(r,t,e.count++)}function a(e,t,n){if(null==e)return e;var i=r.getPooled(t,n);v(e,o,i),r.release(i)}function s(e,t,n,i){this.result=e,this.keyPrefix=t,this.func=n,this.context=i,this.count=0}function l(e,t,n){var r=e.result,o=e.keyPrefix,a=e.func,s=e.context,l=a.call(s,t,e.count++);Array.isArray(l)?c(l,r,n,g.thatReturnsArgument):null!=l&&(m.isValidElement(l)&&(l=m.cloneAndReplaceKey(l,o+(!l.key||t&&t.key===l.key?"":i(l.key)+"/")+n)),r.push(l))}function c(e,t,n,r,o){var a="";null!=n&&(a=i(n)+"/");var c=s.getPooled(t,a,r,o);v(e,l,c),s.release(c)}function u(e,t,n){if(null==e)return e;var i=[];return c(e,i,null,t,n),i}function d(e,t,n){return null}function p(e,t){return v(e,d,null)}function h(e){var t=[];return c(e,t,null,g.thatReturnsArgument),t}var f=e("./PooledClass"),m=e("./ReactElement"),g=e("fbjs/lib/emptyFunction"),v=e("./traverseAllChildren"),y=f.twoArgumentPooler,b=f.fourArgumentPooler,k=/\/+/g;r.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},f.addPoolingTo(r,y),s.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},f.addPoolingTo(s,b);var x={forEach:a,map:u,mapIntoWithKeyPrefixInternal:c,count:p,toArray:h};t.exports=x},{"./PooledClass":102,"./ReactElement":137,"./traverseAllChildren":213,"fbjs/lib/emptyFunction":45}],107:[function(e,t,n){"use strict";function i(e,t){var n=w.hasOwnProperty(t)?w[t]:null;C.hasOwnProperty(t)&&(n!==k.OVERRIDE_BASE?g(!1):void 0),e&&(n!==k.DEFINE_MANY&&n!==k.DEFINE_MANY_MERGED?g(!1):void 0)}function r(e,t){if(t){"function"==typeof t?g(!1):void 0,h.isValidElement(t)?g(!1):void 0;var n=e.prototype,r=n.__reactAutoBindPairs;t.hasOwnProperty(b)&&E.mixins(e,t.mixins);for(var o in t)if(t.hasOwnProperty(o)&&o!==b){var a=t[o],c=n.hasOwnProperty(o);if(i(c,o),E.hasOwnProperty(o))E[o](e,a);else{var u=w.hasOwnProperty(o),d="function"==typeof a,p=d&&!u&&!c&&t.autobind!==!1;if(p)r.push(o,a),n[o]=a;else if(c){var f=w[o];!u||f!==k.DEFINE_MANY_MERGED&&f!==k.DEFINE_MANY?g(!1):void 0,f===k.DEFINE_MANY_MERGED?n[o]=s(n[o],a):f===k.DEFINE_MANY&&(n[o]=l(n[o],a))}else n[o]=a}}}}function o(e,t){if(t)for(var n in t){var i=t[n];if(t.hasOwnProperty(n)){var r=n in E;r?g(!1):void 0;var o=n in e;o?g(!1):void 0,e[n]=i}}}function a(e,t){e&&t&&"object"==typeof e&&"object"==typeof t?void 0:g(!1);for(var n in t)t.hasOwnProperty(n)&&(void 0!==e[n]?g(!1):void 0,e[n]=t[n]);return e}function s(e,t){return function(){var n=e.apply(this,arguments),i=t.apply(this,arguments);if(null==n)return i;if(null==i)return n;var r={};return a(r,n),a(r,i),r}}function l(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function c(e,t){var n=t.bind(e);return n}function u(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var i=t[n],r=t[n+1];e[i]=c(e,r)}}var d=e("object-assign"),p=e("./ReactComponent"),h=e("./ReactElement"),f=(e("./ReactPropTypeLocations"),e("./ReactPropTypeLocationNames"),e("./ReactNoopUpdateQueue")),m=e("fbjs/lib/emptyObject"),g=e("fbjs/lib/invariant"),v=e("fbjs/lib/keyMirror"),y=e("fbjs/lib/keyOf"),b=(e("fbjs/lib/warning"),y({mixins:null})),k=v({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),x=[],w={mixins:k.DEFINE_MANY,statics:k.DEFINE_MANY,propTypes:k.DEFINE_MANY,contextTypes:k.DEFINE_MANY,childContextTypes:k.DEFINE_MANY,getDefaultProps:k.DEFINE_MANY_MERGED,getInitialState:k.DEFINE_MANY_MERGED,getChildContext:k.DEFINE_MANY_MERGED,render:k.DEFINE_ONCE,componentWillMount:k.DEFINE_MANY,componentDidMount:k.DEFINE_MANY,componentWillReceiveProps:k.DEFINE_MANY,shouldComponentUpdate:k.DEFINE_ONCE,componentWillUpdate:k.DEFINE_MANY,componentDidUpdate:k.DEFINE_MANY,componentWillUnmount:k.DEFINE_MANY,updateComponent:k.OVERRIDE_BASE},E={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)r(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=d({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=d({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=s(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=d({},e.propTypes,t)},statics:function(e,t){o(e,t)},autobind:function(){}},C={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e),t&&this.updater.enqueueCallback(this,t,"replaceState")},isMounted:function(){return this.updater.isMounted(this)}},P=function(){};d(P.prototype,p.prototype,C);var T={createClass:function(e){var t=function(e,t,n){this.__reactAutoBindPairs.length&&u(this),this.props=e,this.context=t,this.refs=m,this.updater=n||f,this.state=null;var i=this.getInitialState?this.getInitialState():null;"object"!=typeof i||Array.isArray(i)?g(!1):void 0,this.state=i};t.prototype=new P,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],x.forEach(r.bind(null,t)),r(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),t.prototype.render?void 0:g(!1);for(var n in w)t.prototype[n]||(t.prototype[n]=null);return t},injection:{injectMixin:function(e){x.push(e)}}};t.exports=T},{"./ReactComponent":108,"./ReactElement":137,"./ReactNoopUpdateQueue":156,"./ReactPropTypeLocationNames":158,"./ReactPropTypeLocations":159,"fbjs/lib/emptyObject":46,"fbjs/lib/invariant":53,"fbjs/lib/keyMirror":56,"fbjs/lib/keyOf":57,"fbjs/lib/warning":63,"object-assign":68}],108:[function(e,t,n){"use strict";function i(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||r}var r=e("./ReactNoopUpdateQueue"),o=(e("./ReactInstrumentation"),e("./canDefineProperty"),e("fbjs/lib/emptyObject")),a=e("fbjs/lib/invariant");e("fbjs/lib/warning");i.prototype.isReactComponent={},i.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e?a(!1):void 0,this.updater.enqueueSetState(this,e),t&&this.updater.enqueueCallback(this,t,"setState")},i.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e,"forceUpdate")};t.exports=i},{"./ReactInstrumentation":147,"./ReactNoopUpdateQueue":156,"./canDefineProperty":188,"fbjs/lib/emptyObject":46,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],109:[function(e,t,n){"use strict";var i=e("./DOMChildrenOperations"),r=e("./ReactDOMIDOperations"),o={processChildrenUpdates:r.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:i.dangerouslyReplaceNodeWithMarkup,unmountIDFromEnvironment:function(e){}};t.exports=o},{"./DOMChildrenOperations":84,"./ReactDOMIDOperations":124}],110:[function(e,t,n){"use strict";var i=e("fbjs/lib/invariant"),r=!1,o={unmountIDFromEnvironment:null,replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){r?i(!1):void 0,o.unmountIDFromEnvironment=e.unmountIDFromEnvironment,o.replaceNodeWithMarkup=e.replaceNodeWithMarkup,o.processChildrenUpdates=e.processChildrenUpdates,r=!0}}};t.exports=o},{"fbjs/lib/invariant":53}],111:[function(e,t,n){"use strict";function i(e,t){a[e]||(a[e]={parentID:null,ownerID:null,text:null,childIDs:[],displayName:"Unknown",isMounted:!1,updateCount:0}),t(a[e])}function r(e){var t=a[e];if(t){var n=t.childIDs;delete a[e],n.forEach(r)}}var o=e("fbjs/lib/invariant"),a={},s=[],l={onSetDisplayName:function(e,t){i(e,function(e){return e.displayName=t})},onSetChildren:function(e,t){i(e,function(n){var i=n.childIDs;n.childIDs=t,t.forEach(function(t){var n=a[t];n?void 0:o(!1),null==n.displayName?o(!1):void 0,null==n.childIDs&&null==n.text?o(!1):void 0,n.isMounted?void 0:o(!1),i.indexOf(t)===-1&&(n.parentID=e)})})},onSetOwner:function(e,t){i(e,function(e){return e.ownerID=t})},onSetText:function(e,t){i(e,function(e){return e.text=t})},onMountComponent:function(e){i(e,function(e){return e.isMounted=!0})},onMountRootComponent:function(e){s.push(e)},onUpdateComponent:function(e){i(e,function(e){return e.updateCount++})},onUnmountComponent:function(e){i(e,function(e){return e.isMounted=!1}),s=s.filter(function(t){return t!==e})},purgeUnmountedComponents:function(){l._preventPurging||Object.keys(a).filter(function(e){return!a[e].isMounted}).forEach(r)},isMounted:function(e){var t=a[e];return!!t&&t.isMounted},getChildIDs:function(e){var t=a[e];return t?t.childIDs:[]},getDisplayName:function(e){var t=a[e];return t?t.displayName:"Unknown"},getOwnerID:function(e){var t=a[e];return t?t.ownerID:null},getParentID:function(e){var t=a[e];return t?t.parentID:null},getText:function(e){var t=a[e];return t?t.text:null},getUpdateCount:function(e){var t=a[e];return t?t.updateCount:0},getRootIDs:function(){return s},getRegisteredIDs:function(){return Object.keys(a)}};t.exports=l},{"fbjs/lib/invariant":53}],112:[function(e,t,n){"use strict";function i(e){var t=e._currentElement._owner||null;if(t){var n=t.getName();if(n)return" Check the render method of `"+n+"`."}return""}function r(e){}function o(e,t){}function a(e){return e.prototype&&e.prototype.isReactComponent}var s=e("object-assign"),l=e("./ReactComponentEnvironment"),c=e("./ReactCurrentOwner"),u=e("./ReactElement"),d=e("./ReactErrorUtils"),p=e("./ReactInstanceMap"),h=(e("./ReactInstrumentation"),e("./ReactNodeTypes")),f=e("./ReactPropTypeLocations"),m=(e("./ReactPropTypeLocationNames"),e("./ReactReconciler")),g=e("./ReactUpdateQueue"),v=e("fbjs/lib/emptyObject"),y=e("fbjs/lib/invariant"),b=e("./shouldUpdateReactComponent");
e("fbjs/lib/warning");r.prototype.render=function(){var e=p.get(this)._currentElement.type,t=e(this.props,this.context,this.updater);return o(e,t),t};var k=1,x={construct:function(e){this._currentElement=e,this._rootNodeID=null,this._instance=null,this._nativeParent=null,this._nativeContainerInfo=null,this._updateBatchNumber=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null,this._calledComponentWillUnmount=!1},mountComponent:function(e,t,n,i){this._context=i,this._mountOrder=k++,this._nativeParent=t,this._nativeContainerInfo=n;var s,l=this._processProps(this._currentElement.props),c=this._processContext(i),d=this._currentElement.type,h=this._constructComponent(l,c);a(d)||null!=h&&null!=h.render||(s=h,o(d,s),null===h||h===!1||u.isValidElement(h)?void 0:y(!1),h=new r(d));h.props=l,h.context=c,h.refs=v,h.updater=g,this._instance=h,p.set(h,this);var f=h.state;void 0===f&&(h.state=f=null),"object"!=typeof f||Array.isArray(f)?y(!1):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var m;return m=h.unstable_handleError?this.performInitialMountWithErrorHandling(s,t,n,e,i):this.performInitialMount(s,t,n,e,i),h.componentDidMount&&e.getReactMountReady().enqueue(h.componentDidMount,h),m},_constructComponent:function(e,t){return this._constructComponentWithoutOwner(e,t)},_constructComponentWithoutOwner:function(e,t){var n,i=this._currentElement.type;return n=a(i)?new i(e,t,g):i(e,t,g)},performInitialMountWithErrorHandling:function(e,t,n,i,r){var o,a=i.checkpoint();try{o=this.performInitialMount(e,t,n,i,r)}catch(s){i.rollback(a),this._instance.unstable_handleError(s),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),a=i.checkpoint(),this._renderedComponent.unmountComponent(!0),i.rollback(a),o=this.performInitialMount(e,t,n,i,r)}return o},performInitialMount:function(e,t,n,i,r){var o=this._instance;o.componentWillMount&&(o.componentWillMount(),this._pendingStateQueue&&(o.state=this._processPendingState(o.props,o.context))),void 0===e&&(e=this._renderValidatedComponent()),this._renderedNodeType=h.getType(e),this._renderedComponent=this._instantiateReactComponent(e);var a=m.mountComponent(this._renderedComponent,i,t,n,this._processChildContext(r));return a},getNativeNode:function(){return m.getNativeNode(this._renderedComponent)},unmountComponent:function(e){if(this._renderedComponent){var t=this._instance;if(t.componentWillUnmount&&!t._calledComponentWillUnmount)if(t._calledComponentWillUnmount=!0,e){var n=this.getName()+".componentWillUnmount()";d.invokeGuardedCallback(n,t.componentWillUnmount.bind(t))}else t.componentWillUnmount();this._renderedComponent&&(m.unmountComponent(this._renderedComponent,e),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,p.remove(t)}},_maskContext:function(e){var t=this._currentElement.type,n=t.contextTypes;if(!n)return v;var i={};for(var r in n)i[r]=e[r];return i},_processContext:function(e){var t=this._maskContext(e);return t},_processChildContext:function(e){var t=this._currentElement.type,n=this._instance,i=n.getChildContext&&n.getChildContext();if(i){"object"!=typeof t.childContextTypes?y(!1):void 0;for(var r in i)r in t.childContextTypes?void 0:y(!1);return s({},e,i)}return e},_processProps:function(e){return e},_checkPropTypes:function(e,t,n){var r=this.getName();for(var o in e)if(e.hasOwnProperty(o)){var a;try{"function"!=typeof e[o]?y(!1):void 0,a=e[o](t,o,r,n)}catch(e){a=e}if(a instanceof Error){i(this);n===f.prop}}},receiveComponent:function(e,t,n){var i=this._currentElement,r=this._context;this._pendingElement=null,this.updateComponent(t,i,e,r,n)},performUpdateIfNecessary:function(e){null!=this._pendingElement?m.receiveComponent(this,this._pendingElement,e,this._context):null!==this._pendingStateQueue||this._pendingForceUpdate?this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context):this._updateBatchNumber=null},updateComponent:function(e,t,n,i,r){var o,a,s=this._instance,l=!1;this._context===r?o=s.context:(o=this._processContext(r),l=!0),t===n?a=n.props:(a=this._processProps(n.props),l=!0),l&&s.componentWillReceiveProps&&s.componentWillReceiveProps(a,o);var c=this._processPendingState(a,o),u=!0;!this._pendingForceUpdate&&s.shouldComponentUpdate&&(u=s.shouldComponentUpdate(a,c,o)),this._updateBatchNumber=null,u?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,a,c,o,e,r)):(this._currentElement=n,this._context=r,s.props=a,s.state=c,s.context=o)},_processPendingState:function(e,t){var n=this._instance,i=this._pendingStateQueue,r=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!i)return n.state;if(r&&1===i.length)return i[0];for(var o=s({},r?i[0]:n.state),a=r?1:0;a<i.length;a++){var l=i[a];s(o,"function"==typeof l?l.call(n,o,e,t):l)}return o},_performComponentUpdate:function(e,t,n,i,r,o){var a,s,l,c=this._instance,u=Boolean(c.componentDidUpdate);u&&(a=c.props,s=c.state,l=c.context),c.componentWillUpdate&&c.componentWillUpdate(t,n,i),this._currentElement=e,this._context=o,c.props=t,c.state=n,c.context=i,this._updateRenderedComponent(r,o),u&&r.getReactMountReady().enqueue(c.componentDidUpdate.bind(c,a,s,l),c)},_updateRenderedComponent:function(e,t){var n=this._renderedComponent,i=n._currentElement,r=this._renderValidatedComponent();if(b(i,r))m.receiveComponent(n,r,e,this._processChildContext(t));else{var o=m.getNativeNode(n);m.unmountComponent(n,!1),this._renderedNodeType=h.getType(r),this._renderedComponent=this._instantiateReactComponent(r);var a=m.mountComponent(this._renderedComponent,e,this._nativeParent,this._nativeContainerInfo,this._processChildContext(t));this._replaceNodeWithMarkup(o,a,n)}},_replaceNodeWithMarkup:function(e,t,n){l.replaceNodeWithMarkup(e,t,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance,t=e.render();return t},_renderValidatedComponent:function(){var e;c.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{c.current=null}return null===e||e===!1||u.isValidElement(e)?void 0:y(!1),e},attachRef:function(e,t){var n=this.getPublicInstance();null==n?y(!1):void 0;var i=t.getPublicInstance(),r=n.refs===v?n.refs={}:n.refs;r[e]=i},detachRef:function(e){var t=this.getPublicInstance().refs;delete t[e]},getName:function(){var e=this._currentElement.type,t=this._instance&&this._instance.constructor;return e.displayName||t&&t.displayName||e.name||t&&t.name||null},getPublicInstance:function(){var e=this._instance;return e instanceof r?null:e},_instantiateReactComponent:null},w={Mixin:x};t.exports=w},{"./ReactComponentEnvironment":110,"./ReactCurrentOwner":113,"./ReactElement":137,"./ReactErrorUtils":140,"./ReactInstanceMap":146,"./ReactInstrumentation":147,"./ReactNodeTypes":155,"./ReactPropTypeLocationNames":158,"./ReactPropTypeLocations":159,"./ReactReconciler":162,"./ReactUpdateQueue":165,"./shouldUpdateReactComponent":212,"fbjs/lib/emptyObject":46,"fbjs/lib/invariant":53,"fbjs/lib/warning":63,"object-assign":68}],113:[function(e,t,n){"use strict";var i={current:null};t.exports=i},{}],114:[function(e,t,n){"use strict";var i=e("./ReactDOMComponentTree"),r=e("./ReactDefaultInjection"),o=e("./ReactMount"),a=e("./ReactReconciler"),s=e("./ReactUpdates"),l=e("./ReactVersion"),c=e("./findDOMNode"),u=e("./getNativeComponentFromComposite"),d=e("./renderSubtreeIntoContainer");e("fbjs/lib/warning");r.inject();var p={findDOMNode:c,render:o.render,unmountComponentAtNode:o.unmountComponentAtNode,version:l,unstable_batchedUpdates:s.batchedUpdates,unstable_renderSubtreeIntoContainer:d};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:i.getClosestInstanceFromNode,getNodeFromInstance:function(e){return e._renderedComponent&&(e=u(e)),e?i.getNodeFromInstance(e):null}},Mount:o,Reconciler:a});t.exports=p},{"./ReactDOMComponentTree":118,"./ReactDefaultInjection":136,"./ReactMount":150,"./ReactReconciler":162,"./ReactUpdates":166,"./ReactVersion":167,"./findDOMNode":192,"./getNativeComponentFromComposite":200,"./renderSubtreeIntoContainer":209,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/warning":63}],115:[function(e,t,n){"use strict";var i=e("./DisabledInputUtils"),r={getNativeProps:i.getNativeProps};t.exports=r},{"./DisabledInputUtils":91}],116:[function(e,t,n){"use strict";function i(e,t){t&&(K[e._tag]&&(null!=t.children||null!=t.dangerouslySetInnerHTML?A(!1):void 0),null!=t.dangerouslySetInnerHTML&&(null!=t.children?A(!1):void 0,"object"==typeof t.dangerouslySetInnerHTML&&W in t.dangerouslySetInnerHTML?void 0:A(!1)),null!=t.style&&"object"!=typeof t.style?A(!1):void 0)}function r(e,t,n,i){if(!(i instanceof N)){var r=e._nativeContainerInfo,a=r._node&&r._node.nodeType===z,s=a?r._node:r._ownerDocument;U(t,s),i.getReactMountReady().enqueue(o,{inst:e,registrationName:t,listener:n})}}function o(){var e=this;k.putListener(e.inst,e.registrationName,e.listener)}function a(){var e=this;_.postMountWrapper(e)}function s(){var e=this;e._rootNodeID?void 0:A(!1);var t=F(e);switch(t?void 0:A(!1),e._tag){case"iframe":case"object":e._wrapperState.listeners=[w.trapBubbledEvent(b.topLevelTypes.topLoad,"load",t)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var n in G)G.hasOwnProperty(n)&&e._wrapperState.listeners.push(w.trapBubbledEvent(b.topLevelTypes[n],G[n],t));break;case"img":e._wrapperState.listeners=[w.trapBubbledEvent(b.topLevelTypes.topError,"error",t),w.trapBubbledEvent(b.topLevelTypes.topLoad,"load",t)];break;case"form":e._wrapperState.listeners=[w.trapBubbledEvent(b.topLevelTypes.topReset,"reset",t),w.trapBubbledEvent(b.topLevelTypes.topSubmit,"submit",t)];break;case"input":case"select":case"textarea":e._wrapperState.listeners=[w.trapBubbledEvent(b.topLevelTypes.topInvalid,"invalid",t)]}}function l(){M.postUpdateWrapper(this)}function c(e){$.call(Z,e)||(Q.test(e)?void 0:A(!1),Z[e]=!0)}function u(e,t){return e.indexOf("-")>=0||null!=t.is}function d(e){var t=e.type;c(t),this._currentElement=e,this._tag=t.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._nativeNode=null,this._nativeParent=null,this._rootNodeID=null,this._domID=null,this._nativeContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var p=e("object-assign"),h=e("./AutoFocusUtils"),f=e("./CSSPropertyOperations"),m=e("./DOMLazyTree"),g=e("./DOMNamespaces"),v=e("./DOMProperty"),y=e("./DOMPropertyOperations"),b=e("./EventConstants"),k=e("./EventPluginHub"),x=e("./EventPluginRegistry"),w=e("./ReactBrowserEventEmitter"),E=e("./ReactComponentBrowserEnvironment"),C=e("./ReactDOMButton"),P=e("./ReactDOMComponentFlags"),T=e("./ReactDOMComponentTree"),S=e("./ReactDOMInput"),_=e("./ReactDOMOption"),M=e("./ReactDOMSelect"),O=e("./ReactDOMTextarea"),D=(e("./ReactInstrumentation"),e("./ReactMultiChild")),N=e("./ReactServerRenderingTransaction"),R=(e("fbjs/lib/emptyFunction"),e("./escapeTextContentForBrowser")),A=e("fbjs/lib/invariant"),j=(e("./isEventSupported"),e("fbjs/lib/keyOf")),L=(e("fbjs/lib/shallowEqual"),e("./validateDOMNesting"),e("fbjs/lib/warning"),P),I=k.deleteListener,F=T.getNodeFromInstance,U=w.listenTo,B=x.registrationNameModules,Y={string:!0,number:!0},V=j({style:null}),W=j({__html:null}),H={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},z=11,G={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},X={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},q={listing:!0,pre:!0,textarea:!0},K=p({menuitem:!0},X),Q=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,Z={},$={}.hasOwnProperty,J=1;d.displayName="ReactDOMComponent",d.Mixin={mountComponent:function(e,t,n,r){this._rootNodeID=J++,this._domID=n._idCounter++,this._nativeParent=t,this._nativeContainerInfo=n;var o=this._currentElement.props;switch(this._tag){case"iframe":case"object":case"img":case"form":case"video":case"audio":this._wrapperState={listeners:null},e.getReactMountReady().enqueue(s,this);break;case"button":o=C.getNativeProps(this,o,t);break;case"input":S.mountWrapper(this,o,t),o=S.getNativeProps(this,o),e.getReactMountReady().enqueue(s,this);break;case"option":_.mountWrapper(this,o,t),o=_.getNativeProps(this,o);break;case"select":M.mountWrapper(this,o,t),o=M.getNativeProps(this,o),e.getReactMountReady().enqueue(s,this);break;case"textarea":O.mountWrapper(this,o,t),o=O.getNativeProps(this,o),e.getReactMountReady().enqueue(s,this)}i(this,o);var l,c;null!=t?(l=t._namespaceURI,c=t._tag):n._tag&&(l=n._namespaceURI,c=n._tag),(null==l||l===g.svg&&"foreignobject"===c)&&(l=g.html),l===g.html&&("svg"===this._tag?l=g.svg:"math"===this._tag&&(l=g.mathml)),this._namespaceURI=l;var u;if(e.useCreateElement){var d,p=n._ownerDocument;if(l===g.html)if("script"===this._tag){var f=p.createElement("div"),v=this._currentElement.type;f.innerHTML="<"+v+"></"+v+">",d=f.removeChild(f.firstChild)}else d=p.createElement(this._currentElement.type,o.is||null);else d=p.createElementNS(l,this._currentElement.type);T.precacheNode(this,d),this._flags|=L.hasCachedChildNodes,this._nativeParent||y.setAttributeForRoot(d),this._updateDOMProperties(null,o,e);var b=m(d);this._createInitialChildren(e,o,r,b),u=b}else{var k=this._createOpenTagMarkupAndPutListeners(e,o),x=this._createContentMarkup(e,o,r);u=!x&&X[this._tag]?k+"/>":k+">"+x+"</"+this._currentElement.type+">"}switch(this._tag){case"button":case"input":case"select":case"textarea":o.autoFocus&&e.getReactMountReady().enqueue(h.focusDOMComponent,this);break;case"option":e.getReactMountReady().enqueue(a,this)}return u},_createOpenTagMarkupAndPutListeners:function(e,t){var n="<"+this._currentElement.type;for(var i in t)if(t.hasOwnProperty(i)){var o=t[i];if(null!=o)if(B.hasOwnProperty(i))o&&r(this,i,o,e);else{i===V&&(o&&(o=this._previousStyleCopy=p({},t.style)),o=f.createMarkupForStyles(o,this));var a=null;null!=this._tag&&u(this._tag,t)?H.hasOwnProperty(i)||(a=y.createMarkupForCustomAttribute(i,o)):a=y.createMarkupForProperty(i,o),a&&(n+=" "+a)}}return e.renderToStaticMarkup?n:(this._nativeParent||(n+=" "+y.createMarkupForRoot()),n+=" "+y.createMarkupForID(this._domID))},_createContentMarkup:function(e,t,n){var i="",r=t.dangerouslySetInnerHTML;if(null!=r)null!=r.__html&&(i=r.__html);else{var o=Y[typeof t.children]?t.children:null,a=null!=o?null:t.children;if(null!=o)i=R(o);else if(null!=a){var s=this.mountChildren(a,e,n);i=s.join("")}}return q[this._tag]&&"\n"===i.charAt(0)?"\n"+i:i},_createInitialChildren:function(e,t,n,i){var r=t.dangerouslySetInnerHTML;if(null!=r)null!=r.__html&&m.queueHTML(i,r.__html);else{var o=Y[typeof t.children]?t.children:null,a=null!=o?null:t.children;if(null!=o)m.queueText(i,o);else if(null!=a)for(var s=this.mountChildren(a,e,n),l=0;l<s.length;l++)m.queueChild(i,s[l])}},receiveComponent:function(e,t,n){var i=this._currentElement;this._currentElement=e,this.updateComponent(t,i,e,n)},updateComponent:function(e,t,n,r){var o=t.props,a=this._currentElement.props;switch(this._tag){case"button":o=C.getNativeProps(this,o),a=C.getNativeProps(this,a);break;case"input":S.updateWrapper(this),o=S.getNativeProps(this,o),a=S.getNativeProps(this,a);break;case"option":o=_.getNativeProps(this,o),a=_.getNativeProps(this,a);break;case"select":o=M.getNativeProps(this,o),a=M.getNativeProps(this,a);break;case"textarea":O.updateWrapper(this),o=O.getNativeProps(this,o),a=O.getNativeProps(this,a)}i(this,a),this._updateDOMProperties(o,a,e),this._updateDOMChildren(o,a,e,r),"select"===this._tag&&e.getReactMountReady().enqueue(l,this)},_updateDOMProperties:function(e,t,n){var i,o,a;for(i in e)if(!t.hasOwnProperty(i)&&e.hasOwnProperty(i)&&null!=e[i])if(i===V){var s=this._previousStyleCopy;for(o in s)s.hasOwnProperty(o)&&(a=a||{},a[o]="");this._previousStyleCopy=null}else B.hasOwnProperty(i)?e[i]&&I(this,i):(v.properties[i]||v.isCustomAttribute(i))&&y.deleteValueForProperty(F(this),i);for(i in t){var l=t[i],c=i===V?this._previousStyleCopy:null!=e?e[i]:void 0;if(t.hasOwnProperty(i)&&l!==c&&(null!=l||null!=c))if(i===V)if(l?l=this._previousStyleCopy=p({},l):this._previousStyleCopy=null,c){for(o in c)!c.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(a=a||{},a[o]="");for(o in l)l.hasOwnProperty(o)&&c[o]!==l[o]&&(a=a||{},a[o]=l[o])}else a=l;else if(B.hasOwnProperty(i))l?r(this,i,l,n):c&&I(this,i);else if(u(this._tag,t))H.hasOwnProperty(i)||y.setValueForAttribute(F(this),i,l);else if(v.properties[i]||v.isCustomAttribute(i)){var d=F(this);null!=l?y.setValueForProperty(d,i,l):y.deleteValueForProperty(d,i)}}a&&f.setValueForStyles(F(this),a,this)},_updateDOMChildren:function(e,t,n,i){var r=Y[typeof e.children]?e.children:null,o=Y[typeof t.children]?t.children:null,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,s=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,l=null!=r?null:e.children,c=null!=o?null:t.children,u=null!=r||null!=a,d=null!=o||null!=s;null!=l&&null==c?this.updateChildren(null,n,i):u&&!d&&this.updateTextContent(""),null!=o?r!==o&&this.updateTextContent(""+o):null!=s?a!==s&&this.updateMarkup(""+s):null!=c&&this.updateChildren(c,n,i)},getNativeNode:function(){return F(this)},unmountComponent:function(e){switch(this._tag){case"iframe":case"object":case"img":case"form":case"video":case"audio":var t=this._wrapperState.listeners;if(t)for(var n=0;n<t.length;n++)t[n].remove();break;case"html":case"head":case"body":A(!1)}this.unmountChildren(e),T.uncacheNode(this),k.deleteAllListeners(this),E.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._domID=null,this._wrapperState=null},getPublicInstance:function(){return F(this)}},p(d.prototype,d.Mixin,D.Mixin),t.exports=d},{"./AutoFocusUtils":78,"./CSSPropertyOperations":81,"./DOMLazyTree":85,"./DOMNamespaces":86,"./DOMProperty":87,"./DOMPropertyOperations":88,"./EventConstants":93,"./EventPluginHub":94,"./EventPluginRegistry":95,"./ReactBrowserEventEmitter":104,"./ReactComponentBrowserEnvironment":109,"./ReactDOMButton":115,"./ReactDOMComponentFlags":117,"./ReactDOMComponentTree":118,"./ReactDOMInput":125,"./ReactDOMOption":127,"./ReactDOMSelect":128,"./ReactDOMTextarea":131,"./ReactInstrumentation":147,"./ReactMultiChild":151,"./ReactServerRenderingTransaction":164,"./escapeTextContentForBrowser":191,"./isEventSupported":205,"./validateDOMNesting":214,"fbjs/lib/emptyFunction":45,"fbjs/lib/invariant":53,"fbjs/lib/keyOf":57,"fbjs/lib/shallowEqual":62,"fbjs/lib/warning":63,"object-assign":68}],117:[function(e,t,n){"use strict";var i={hasCachedChildNodes:1};t.exports=i},{}],118:[function(e,t,n){"use strict";function i(e){for(var t;t=e._renderedComponent;)e=t;return e}function r(e,t){var n=i(e);n._nativeNode=t,t[m]=n}function o(e){var t=e._nativeNode;t&&(delete t[m],e._nativeNode=null)}function a(e,t){if(!(e._flags&f.hasCachedChildNodes)){var n=e._renderedChildren,o=t.firstChild;e:for(var a in n)if(n.hasOwnProperty(a)){var s=n[a],l=i(s)._domID;if(null!=l){for(;null!==o;o=o.nextSibling)if(1===o.nodeType&&o.getAttribute(h)===String(l)||8===o.nodeType&&o.nodeValue===" react-text: "+l+" "||8===o.nodeType&&o.nodeValue===" react-empty: "+l+" "){r(s,o);continue e}p(!1)}}e._flags|=f.hasCachedChildNodes}}function s(e){if(e[m])return e[m];for(var t=[];!e[m];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}for(var n,i;e&&(i=e[m]);e=t.pop())n=i,t.length&&a(i,e);return n}function l(e){var t=s(e);return null!=t&&t._nativeNode===e?t:null}function c(e){if(void 0===e._nativeNode?p(!1):void 0,e._nativeNode)return e._nativeNode;for(var t=[];!e._nativeNode;)t.push(e),e._nativeParent?void 0:p(!1),e=e._nativeParent;for(;t.length;e=t.pop())a(e,e._nativeNode);return e._nativeNode}var u=e("./DOMProperty"),d=e("./ReactDOMComponentFlags"),p=e("fbjs/lib/invariant"),h=u.ID_ATTRIBUTE_NAME,f=d,m="__reactInternalInstance$"+Math.random().toString(36).slice(2),g={getClosestInstanceFromNode:s,getInstanceFromNode:l,getNodeFromInstance:c,precacheChildNodes:a,precacheNode:r,uncacheNode:o};t.exports=g},{"./DOMProperty":87,"./ReactDOMComponentFlags":117,"fbjs/lib/invariant":53}],119:[function(e,t,n){"use strict";function i(e,t){var n={_topLevelWrapper:e,_idCounter:1,_ownerDocument:t?t.nodeType===r?t:t.ownerDocument:null,_node:t,_tag:t?t.nodeName.toLowerCase():null,_namespaceURI:t?t.namespaceURI:null};return n}var r=(e("./validateDOMNesting"),9);t.exports=i},{"./validateDOMNesting":214}],120:[function(e,t,n){"use strict";function i(e,t,n,i,r,o){}var r=e("./ReactDOMUnknownPropertyDevtool"),o=(e("fbjs/lib/warning"),[]),a={addDevtool:function(e){o.push(e)},removeDevtool:function(e){for(var t=0;t<o.length;t++)o[t]===e&&(o.splice(t,1),t--)},onCreateMarkupForProperty:function(e,t){i("onCreateMarkupForProperty",e,t)},onSetValueForProperty:function(e,t,n){i("onSetValueForProperty",e,t,n)},onDeleteValueForProperty:function(e,t){i("onDeleteValueForProperty",e,t)}};a.addDevtool(r),t.exports=a},{"./ReactDOMUnknownPropertyDevtool":133,"fbjs/lib/warning":63}],121:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("./DOMLazyTree"),o=e("./ReactDOMComponentTree"),a=function(e){this._currentElement=null,this._nativeNode=null,this._nativeParent=null,this._nativeContainerInfo=null,this._domID=null};i(a.prototype,{mountComponent:function(e,t,n,i){var a=n._idCounter++;this._domID=a,this._nativeParent=t,this._nativeContainerInfo=n;var s=" react-empty: "+this._domID+" ";if(e.useCreateElement){var l=n._ownerDocument,c=l.createComment(s);return o.precacheNode(this,c),r(c)}return e.renderToStaticMarkup?"":"<!--"+s+"-->"},receiveComponent:function(){},getNativeNode:function(){return o.getNodeFromInstance(this)},unmountComponent:function(){o.uncacheNode(this)}}),t.exports=a},{"./DOMLazyTree":85,"./ReactDOMComponentTree":118,"object-assign":68}],122:[function(e,t,n){"use strict";function i(e){return r.createFactory(e)}var r=e("./ReactElement"),o=(e("./ReactElementValidator"),e("fbjs/lib/mapObject")),a=o({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul",var:"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},i);t.exports=a},{"./ReactElement":137,"./ReactElementValidator":138,"fbjs/lib/mapObject":58}],123:[function(e,t,n){"use strict";var i={useCreateElement:!0};t.exports=i},{}],124:[function(e,t,n){"use strict";var i=e("./DOMChildrenOperations"),r=e("./ReactDOMComponentTree"),o={dangerouslyProcessChildrenUpdates:function(e,t){var n=r.getNodeFromInstance(e);i.processUpdates(n,t)}};t.exports=o},{"./DOMChildrenOperations":84,"./ReactDOMComponentTree":118}],125:[function(e,t,n){"use strict";function i(){this._rootNodeID&&p.updateWrapper(this)}function r(e){var t=this._currentElement.props,n=l.executeOnChange(t,e);u.asap(i,this);var r=t.name;if("radio"===t.type&&null!=r){for(var o=c.getNodeFromInstance(this),a=o;a.parentNode;)a=a.parentNode;for(var s=a.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),p=0;p<s.length;p++){var h=s[p];if(h!==o&&h.form===o.form){var f=c.getInstanceFromNode(h);f?void 0:d(!1),u.asap(i,f)}}}return n}var o=e("object-assign"),a=e("./DisabledInputUtils"),s=e("./DOMPropertyOperations"),l=e("./LinkedValueUtils"),c=e("./ReactDOMComponentTree"),u=e("./ReactUpdates"),d=e("fbjs/lib/invariant"),p=(e("fbjs/lib/warning"),{getNativeProps:function(e,t){var n=l.getValue(t),i=l.getChecked(t),r=o({type:void 0},a.getNativeProps(e,t),{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=i?i:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange});return r},mountWrapper:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:t.defaultChecked||!1,initialValue:null!=n?n:null,listeners:null,onChange:r.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=t.checked;null!=n&&s.setValueForProperty(c.getNodeFromInstance(e),"checked",n||!1);var i=l.getValue(t);null!=i&&s.setValueForProperty(c.getNodeFromInstance(e),"value",""+i)}});t.exports=p},{"./DOMPropertyOperations":88,"./DisabledInputUtils":91,"./LinkedValueUtils":101,"./ReactDOMComponentTree":118,"./ReactUpdates":166,"fbjs/lib/invariant":53,"fbjs/lib/warning":63,"object-assign":68}],126:[function(e,t,n){"use strict";var i=e("./ReactDOMDebugTool");t.exports={debugTool:i}},{"./ReactDOMDebugTool":120}],127:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("./ReactChildren"),o=e("./ReactDOMComponentTree"),a=e("./ReactDOMSelect"),s=(e("fbjs/lib/warning"),{mountWrapper:function(e,t,n){var i=null;if(null!=n){var r=n;"optgroup"===r._tag&&(r=r._nativeParent),null!=r&&"select"===r._tag&&(i=a.getSelectValueContext(r))}var o=null;if(null!=i)if(o=!1,Array.isArray(i)){for(var s=0;s<i.length;s++)if(""+i[s]==""+t.value){o=!0;break}}else o=""+i==""+t.value;e._wrapperState={selected:o}},postMountWrapper:function(e){var t=e._currentElement.props;if(null!=t.value){var n=o.getNodeFromInstance(e);n.setAttribute("value",t.value)}},getNativeProps:function(e,t){var n=i({selected:void 0,children:void 0},t);null!=e._wrapperState.selected&&(n.selected=e._wrapperState.selected);var o="";return r.forEach(t.children,function(e){null!=e&&("string"!=typeof e&&"number"!=typeof e||(o+=e))}),o&&(n.children=o),n}});t.exports=s},{"./ReactChildren":106,"./ReactDOMComponentTree":118,"./ReactDOMSelect":128,"fbjs/lib/warning":63,"object-assign":68}],128:[function(e,t,n){"use strict";function i(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,t=l.getValue(e);null!=t&&r(this,Boolean(e.multiple),t)}}function r(e,t,n){var i,r,o=c.getNodeFromInstance(e).options;if(t){for(i={},r=0;r<n.length;r++)i[""+n[r]]=!0;for(r=0;r<o.length;r++){var a=i.hasOwnProperty(o[r].value);o[r].selected!==a&&(o[r].selected=a)}}else{for(i=""+n,r=0;r<o.length;r++)if(o[r].value===i)return void(o[r].selected=!0);o.length&&(o[0].selected=!0)}}function o(e){var t=this._currentElement.props,n=l.executeOnChange(t,e);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),u.asap(i,this),n}var a=e("object-assign"),s=e("./DisabledInputUtils"),l=e("./LinkedValueUtils"),c=e("./ReactDOMComponentTree"),u=e("./ReactUpdates"),d=(e("fbjs/lib/warning"),!1),p={getNativeProps:function(e,t){return a({},s.getNativeProps(e,t),{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,t){var n=l.getValue(t);e._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:t.defaultValue,listeners:null,onChange:o.bind(e),wasMultiple:Boolean(t.multiple)},void 0===t.value||void 0===t.defaultValue||d||(d=!0)},getSelectValueContext:function(e){return e._wrapperState.initialValue},postUpdateWrapper:function(e){var t=e._currentElement.props;e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(t.multiple);var i=l.getValue(t);null!=i?(e._wrapperState.pendingUpdate=!1,r(e,Boolean(t.multiple),i)):n!==Boolean(t.multiple)&&(null!=t.defaultValue?r(e,Boolean(t.multiple),t.defaultValue):r(e,Boolean(t.multiple),t.multiple?[]:""))}};t.exports=p},{"./DisabledInputUtils":91,"./LinkedValueUtils":101,"./ReactDOMComponentTree":118,"./ReactUpdates":166,"fbjs/lib/warning":63,"object-assign":68}],129:[function(e,t,n){"use strict";function i(e,t,n,i){return e===n&&t===i}function r(e){var t=document.selection,n=t.createRange(),i=n.text.length,r=n.duplicate();r.moveToElementText(e),r.setEndPoint("EndToStart",n);var o=r.text.length,a=o+i;return{start:o,end:a}}function o(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,r=t.anchorOffset,o=t.focusNode,a=t.focusOffset,s=t.getRangeAt(0);try{s.startContainer.nodeType,s.endContainer.nodeType}catch(e){return null}var l=i(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),c=l?0:s.toString().length,u=s.cloneRange();u.selectNodeContents(e),u.setEnd(s.startContainer,s.startOffset);var d=i(u.startContainer,u.startOffset,u.endContainer,u.endOffset),p=d?0:u.toString().length,h=p+c,f=document.createRange();f.setStart(n,r),f.setEnd(o,a);var m=f.collapsed;return{start:m?h:p,end:m?p:h}}function a(e,t){var n,i,r=document.selection.createRange().duplicate();void 0===t.end?(n=t.start,i=n):t.start>t.end?(n=t.end,i=t.start):(n=t.start,i=t.end),r.moveToElementText(e),r.moveStart("character",n),r.setEndPoint("EndToStart",r),r.moveEnd("character",i-n),r.select()}function s(e,t){if(window.getSelection){var n=window.getSelection(),i=e[u()].length,r=Math.min(t.start,i),o=void 0===t.end?r:Math.min(t.end,i);if(!n.extend&&r>o){var a=o;o=r,r=a}var s=c(e,r),l=c(e,o);if(s&&l){var d=document.createRange();d.setStart(s.node,s.offset),n.removeAllRanges(),r>o?(n.addRange(d),n.extend(l.node,l.offset)):(d.setEnd(l.node,l.offset),n.addRange(d))}}}var l=e("fbjs/lib/ExecutionEnvironment"),c=e("./getNodeForCharacterOffset"),u=e("./getTextContentAccessor"),d=l.canUseDOM&&"selection"in document&&!("getSelection"in window),p={getOffsets:d?r:o,setOffsets:d?a:s};t.exports=p},{"./getNodeForCharacterOffset":201,"./getTextContentAccessor":202,"fbjs/lib/ExecutionEnvironment":39}],130:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("./DOMChildrenOperations"),o=e("./DOMLazyTree"),a=e("./ReactDOMComponentTree"),s=(e("./ReactInstrumentation"),e("./escapeTextContentForBrowser")),l=e("fbjs/lib/invariant"),c=(e("./validateDOMNesting"),function(e){this._currentElement=e,this._stringText=""+e,this._nativeNode=null,this._nativeParent=null,this._domID=null,this._mountIndex=0,
this._closingComment=null,this._commentNodes=null});i(c.prototype,{mountComponent:function(e,t,n,i){var r=n._idCounter++,l=" react-text: "+r+" ",c=" /react-text ";if(this._domID=r,this._nativeParent=t,e.useCreateElement){var u=n._ownerDocument,d=u.createComment(l),p=u.createComment(c),h=o(u.createDocumentFragment());return o.queueChild(h,o(d)),this._stringText&&o.queueChild(h,o(u.createTextNode(this._stringText))),o.queueChild(h,o(p)),a.precacheNode(this,d),this._closingComment=p,h}var f=s(this._stringText);return e.renderToStaticMarkup?f:"<!--"+l+"-->"+f+"<!--"+c+"-->"},receiveComponent:function(e,t){if(e!==this._currentElement){this._currentElement=e;var n=""+e;if(n!==this._stringText){this._stringText=n;var i=this.getNativeNode();r.replaceDelimitedText(i[0],i[1],n)}}},getNativeNode:function(){var e=this._commentNodes;if(e)return e;if(!this._closingComment)for(var t=a.getNodeFromInstance(this),n=t.nextSibling;;){if(null==n?l(!1):void 0,8===n.nodeType&&" /react-text "===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return e=[this._nativeNode,this._closingComment],this._commentNodes=e,e},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,a.uncacheNode(this)}}),t.exports=c},{"./DOMChildrenOperations":84,"./DOMLazyTree":85,"./ReactDOMComponentTree":118,"./ReactInstrumentation":147,"./escapeTextContentForBrowser":191,"./validateDOMNesting":214,"fbjs/lib/invariant":53,"object-assign":68}],131:[function(e,t,n){"use strict";function i(){this._rootNodeID&&p.updateWrapper(this)}function r(e){var t=this._currentElement.props,n=l.executeOnChange(t,e);return u.asap(i,this),n}var o=e("object-assign"),a=e("./DisabledInputUtils"),s=e("./DOMPropertyOperations"),l=e("./LinkedValueUtils"),c=e("./ReactDOMComponentTree"),u=e("./ReactUpdates"),d=e("fbjs/lib/invariant"),p=(e("fbjs/lib/warning"),{getNativeProps:function(e,t){null!=t.dangerouslySetInnerHTML?d(!1):void 0;var n=o({},a.getNativeProps(e,t),{defaultValue:void 0,value:void 0,children:e._wrapperState.initialValue,onChange:e._wrapperState.onChange});return n},mountWrapper:function(e,t){var n=t.defaultValue,i=t.children;null!=i&&(null!=n?d(!1):void 0,Array.isArray(i)&&(i.length<=1?void 0:d(!1),i=i[0]),n=""+i),null==n&&(n="");var o=l.getValue(t);e._wrapperState={initialValue:""+(null!=o?o:n),listeners:null,onChange:r.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=l.getValue(t);null!=n&&s.setValueForProperty(c.getNodeFromInstance(e),"value",""+n)}});t.exports=p},{"./DOMPropertyOperations":88,"./DisabledInputUtils":91,"./LinkedValueUtils":101,"./ReactDOMComponentTree":118,"./ReactUpdates":166,"fbjs/lib/invariant":53,"fbjs/lib/warning":63,"object-assign":68}],132:[function(e,t,n){"use strict";function i(e,t){"_nativeNode"in e?void 0:l(!1),"_nativeNode"in t?void 0:l(!1);for(var n=0,i=e;i;i=i._nativeParent)n++;for(var r=0,o=t;o;o=o._nativeParent)r++;for(;n-r>0;)e=e._nativeParent,n--;for(;r-n>0;)t=t._nativeParent,r--;for(var a=n;a--;){if(e===t)return e;e=e._nativeParent,t=t._nativeParent}return null}function r(e,t){"_nativeNode"in e?void 0:l(!1),"_nativeNode"in t?void 0:l(!1);for(;t;){if(t===e)return!0;t=t._nativeParent}return!1}function o(e){return"_nativeNode"in e?void 0:l(!1),e._nativeParent}function a(e,t,n){for(var i=[];e;)i.push(e),e=e._nativeParent;var r;for(r=i.length;r-- >0;)t(i[r],!1,n);for(r=0;r<i.length;r++)t(i[r],!0,n)}function s(e,t,n,r,o){for(var a=e&&t?i(e,t):null,s=[];e&&e!==a;)s.push(e),e=e._nativeParent;for(var l=[];t&&t!==a;)l.push(t),t=t._nativeParent;var c;for(c=0;c<s.length;c++)n(s[c],!0,r);for(c=l.length;c-- >0;)n(l[c],!1,o)}var l=e("fbjs/lib/invariant");t.exports={isAncestor:r,getLowestCommonAncestor:i,getParentInstance:o,traverseTwoPhase:a,traverseEnterLeave:s}},{"fbjs/lib/invariant":53}],133:[function(e,t,n){"use strict";var i,r=(e("./DOMProperty"),e("./EventPluginRegistry"),e("fbjs/lib/warning"),{onCreateMarkupForProperty:function(e,t){i(e)},onSetValueForProperty:function(e,t,n){i(t)},onDeleteValueForProperty:function(e,t){i(t)}});t.exports=r},{"./DOMProperty":87,"./EventPluginRegistry":95,"fbjs/lib/warning":63}],134:[function(e,t,n){"use strict";function i(e,t,n,i,r,o){}function r(e){}var o=(e("fbjs/lib/ExecutionEnvironment"),e("fbjs/lib/performanceNow"),e("fbjs/lib/warning"),[]),a={addDevtool:function(e){o.push(e)},removeDevtool:function(e){for(var t=0;t<o.length;t++)o[t]===e&&(o.splice(t,1),t--)},beginProfiling:function(){},endProfiling:function(){},getFlushHistory:function(){},onBeginFlush:function(){i("onBeginFlush")},onEndFlush:function(){i("onEndFlush")},onBeginLifeCycleTimer:function(e,t){r(e),i("onBeginLifeCycleTimer",e,t)},onEndLifeCycleTimer:function(e,t){r(e),i("onEndLifeCycleTimer",e,t)},onBeginReconcilerTimer:function(e,t){r(e),i("onBeginReconcilerTimer",e,t)},onEndReconcilerTimer:function(e,t){r(e),i("onEndReconcilerTimer",e,t)},onBeginProcessingChildContext:function(){i("onBeginProcessingChildContext")},onEndProcessingChildContext:function(){i("onEndProcessingChildContext")},onNativeOperation:function(e,t,n){r(e),i("onNativeOperation",e,t,n)},onSetState:function(){i("onSetState")},onSetDisplayName:function(e,t){r(e),i("onSetDisplayName",e,t)},onSetChildren:function(e,t){r(e),i("onSetChildren",e,t)},onSetOwner:function(e,t){r(e),i("onSetOwner",e,t)},onSetText:function(e,t){r(e),i("onSetText",e,t)},onMountRootComponent:function(e){r(e),i("onMountRootComponent",e)},onMountComponent:function(e){r(e),i("onMountComponent",e)},onUpdateComponent:function(e){r(e),i("onUpdateComponent",e)},onUnmountComponent:function(e){r(e),i("onUnmountComponent",e)}};t.exports=a},{"./ReactComponentTreeDevtool":111,"./ReactInvalidSetStateWarningDevTool":148,"./ReactNativeOperationHistoryDevtool":154,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/performanceNow":61,"fbjs/lib/warning":63}],135:[function(e,t,n){"use strict";function i(){this.reinitializeTransaction()}var r=e("object-assign"),o=e("./ReactUpdates"),a=e("./Transaction"),s=e("fbjs/lib/emptyFunction"),l={initialize:s,close:function(){p.isBatchingUpdates=!1}},c={initialize:s,close:o.flushBatchedUpdates.bind(o)},u=[c,l];r(i.prototype,a.Mixin,{getTransactionWrappers:function(){return u}});var d=new i,p={isBatchingUpdates:!1,batchedUpdates:function(e,t,n,i,r,o){var a=p.isBatchingUpdates;p.isBatchingUpdates=!0,a?e(t,n,i,r,o):d.perform(e,null,t,n,i,r,o)}};t.exports=p},{"./ReactUpdates":166,"./Transaction":184,"fbjs/lib/emptyFunction":45,"object-assign":68}],136:[function(e,t,n){"use strict";function i(){w||(w=!0,v.EventEmitter.injectReactEventListener(g),v.EventPluginHub.injectEventPluginOrder(a),v.EventPluginUtils.injectComponentTree(d),v.EventPluginUtils.injectTreeTraversal(h),v.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:x,EnterLeaveEventPlugin:s,ChangeEventPlugin:o,SelectEventPlugin:k,BeforeInputEventPlugin:r}),v.NativeComponent.injectGenericComponentClass(u),v.NativeComponent.injectTextComponentClass(f),v.DOMProperty.injectDOMPropertyConfig(l),v.DOMProperty.injectDOMPropertyConfig(b),v.EmptyComponent.injectEmptyComponentFactory(function(e){return new p(e)}),v.Updates.injectReconcileTransaction(y),v.Updates.injectBatchingStrategy(m),v.Component.injectEnvironment(c))}var r=e("./BeforeInputEventPlugin"),o=e("./ChangeEventPlugin"),a=e("./DefaultEventPluginOrder"),s=e("./EnterLeaveEventPlugin"),l=e("./HTMLDOMPropertyConfig"),c=e("./ReactComponentBrowserEnvironment"),u=e("./ReactDOMComponent"),d=e("./ReactDOMComponentTree"),p=e("./ReactDOMEmptyComponent"),h=e("./ReactDOMTreeTraversal"),f=e("./ReactDOMTextComponent"),m=e("./ReactDefaultBatchingStrategy"),g=e("./ReactEventListener"),v=e("./ReactInjection"),y=e("./ReactReconcileTransaction"),b=e("./SVGDOMPropertyConfig"),k=e("./SelectEventPlugin"),x=e("./SimpleEventPlugin"),w=!1;t.exports={inject:i}},{"./BeforeInputEventPlugin":79,"./ChangeEventPlugin":83,"./DefaultEventPluginOrder":90,"./EnterLeaveEventPlugin":92,"./HTMLDOMPropertyConfig":99,"./ReactComponentBrowserEnvironment":109,"./ReactDOMComponent":116,"./ReactDOMComponentTree":118,"./ReactDOMEmptyComponent":121,"./ReactDOMTextComponent":130,"./ReactDOMTreeTraversal":132,"./ReactDefaultBatchingStrategy":135,"./ReactEventListener":142,"./ReactInjection":144,"./ReactReconcileTransaction":161,"./SVGDOMPropertyConfig":168,"./SelectEventPlugin":169,"./SimpleEventPlugin":170}],137:[function(e,t,n){"use strict";var i=e("object-assign"),r=e("./ReactCurrentOwner"),o=(e("fbjs/lib/warning"),e("./canDefineProperty"),"function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103),a={key:!0,ref:!0,__self:!0,__source:!0},s=function(e,t,n,i,r,a,s){var l={$$typeof:o,type:e,key:t,ref:n,props:s,_owner:a};return l};s.createElement=function(e,t,n){var i,o={},l=null,c=null,u=null,d=null;if(null!=t){c=void 0===t.ref?null:t.ref,l=void 0===t.key?null:""+t.key,u=void 0===t.__self?null:t.__self,d=void 0===t.__source?null:t.__source;for(i in t)t.hasOwnProperty(i)&&!a.hasOwnProperty(i)&&(o[i]=t[i])}var p=arguments.length-2;if(1===p)o.children=n;else if(p>1){for(var h=Array(p),f=0;f<p;f++)h[f]=arguments[f+2];o.children=h}if(e&&e.defaultProps){var m=e.defaultProps;for(i in m)void 0===o[i]&&(o[i]=m[i])}return s(e,l,c,u,d,r.current,o)},s.createFactory=function(e){var t=s.createElement.bind(null,e);return t.type=e,t},s.cloneAndReplaceKey=function(e,t){var n=s(e.type,t,e.ref,e._self,e._source,e._owner,e.props);return n},s.cloneElement=function(e,t,n){var o,l=i({},e.props),c=e.key,u=e.ref,d=e._self,p=e._source,h=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,h=r.current),void 0!==t.key&&(c=""+t.key);var f;e.type&&e.type.defaultProps&&(f=e.type.defaultProps);for(o in t)t.hasOwnProperty(o)&&!a.hasOwnProperty(o)&&(void 0===t[o]&&void 0!==f?l[o]=f[o]:l[o]=t[o])}var m=arguments.length-2;if(1===m)l.children=n;else if(m>1){for(var g=Array(m),v=0;v<m;v++)g[v]=arguments[v+2];l.children=g}return s(e.type,c,u,d,p,h,l)},s.isValidElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.exports=s},{"./ReactCurrentOwner":113,"./canDefineProperty":188,"fbjs/lib/warning":63,"object-assign":68}],138:[function(e,t,n){"use strict";function i(){if(d.current){var e=d.current.getName();if(e)return" Check the render method of `"+e+"`."}return""}function r(e,t){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=!0;o("uniqueKey",e,t)}}function o(e,t,n){var r=i();if(!r){var o="string"==typeof n?n:n.displayName||n.name;o&&(r=" Check the top-level render call using <"+o+">.")}var a=f[e]||(f[e]={});if(a[r])return null;a[r]=!0;var s={parentOrOwner:r,url:" See https://fb.me/react-warning-keys for more information.",childOwner:null};return t&&t._owner&&t._owner!==d.current&&(s.childOwner=" It was passed a child from "+t._owner.getName()+"."),s}function a(e,t){if("object"==typeof e)if(Array.isArray(e))for(var n=0;n<e.length;n++){var i=e[n];c.isValidElement(i)&&r(i,t)}else if(c.isValidElement(e))e._store&&(e._store.validated=!0);else if(e){var o=p(e);if(o&&o!==e.entries)for(var a,s=o.call(e);!(a=s.next()).done;)c.isValidElement(a.value)&&r(a.value,t)}}function s(e,t,n,r){for(var o in t)if(t.hasOwnProperty(o)){var a;try{"function"!=typeof t[o]?h(!1):void 0,a=t[o](n,o,e,r)}catch(e){a=e}if(a instanceof Error&&!(a.message in m)){m[a.message]=!0;i()}}}function l(e){var t=e.type;if("function"==typeof t){var n=t.displayName||t.name;t.propTypes&&s(n,t.propTypes,e.props,u.prop),"function"==typeof t.getDefaultProps}}var c=e("./ReactElement"),u=e("./ReactPropTypeLocations"),d=(e("./ReactPropTypeLocationNames"),e("./ReactCurrentOwner")),p=(e("./canDefineProperty"),e("./getIteratorFn")),h=e("fbjs/lib/invariant"),f=(e("fbjs/lib/warning"),{}),m={},g={createElement:function(e,t,n){var i="string"==typeof e||"function"==typeof e,r=c.createElement.apply(this,arguments);if(null==r)return r;if(i)for(var o=2;o<arguments.length;o++)a(arguments[o],e);return l(r),r},createFactory:function(e){var t=g.createElement.bind(null,e);return t.type=e,t},cloneElement:function(e,t,n){for(var i=c.cloneElement.apply(this,arguments),r=2;r<arguments.length;r++)a(arguments[r],i.type);return l(i),i}};t.exports=g},{"./ReactCurrentOwner":113,"./ReactElement":137,"./ReactPropTypeLocationNames":158,"./ReactPropTypeLocations":159,"./canDefineProperty":188,"./getIteratorFn":199,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],139:[function(e,t,n){"use strict";var i,r={injectEmptyComponentFactory:function(e){i=e}},o={create:function(e){return i(e)}};o.injection=r,t.exports=o},{}],140:[function(e,t,n){"use strict";function i(e,t,n,i){try{return t(n,i)}catch(e){return void(null===r&&(r=e))}}var r=null,o={invokeGuardedCallback:i,invokeGuardedCallbackWithCatch:i,rethrowCaughtError:function(){if(r){var e=r;throw r=null,e}}};t.exports=o},{}],141:[function(e,t,n){"use strict";function i(e){r.enqueueEvents(e),r.processEventQueue(!1)}var r=e("./EventPluginHub"),o={handleTopLevel:function(e,t,n,o){var a=r.extractEvents(e,t,n,o);i(a)}};t.exports=o},{"./EventPluginHub":94}],142:[function(e,t,n){"use strict";function i(e){for(;e._nativeParent;)e=e._nativeParent;var t=d.getNodeFromInstance(e),n=t.parentNode;return d.getClosestInstanceFromNode(n)}function r(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function o(e){var t=h(e.nativeEvent),n=d.getClosestInstanceFromNode(t),r=n;do e.ancestors.push(r),r=r&&i(r);while(r);for(var o=0;o<e.ancestors.length;o++)n=e.ancestors[o],m._handleTopLevel(e.topLevelType,n,e.nativeEvent,h(e.nativeEvent))}function a(e){var t=f(window);e(t)}var s=e("object-assign"),l=e("fbjs/lib/EventListener"),c=e("fbjs/lib/ExecutionEnvironment"),u=e("./PooledClass"),d=e("./ReactDOMComponentTree"),p=e("./ReactUpdates"),h=e("./getEventTarget"),f=e("fbjs/lib/getUnboundedScrollPosition");s(r.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),u.addPoolingTo(r,u.twoArgumentPooler);var m={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:c.canUseDOM?window:null,setHandleTopLevel:function(e){m._handleTopLevel=e},setEnabled:function(e){m._enabled=!!e},isEnabled:function(){return m._enabled},trapBubbledEvent:function(e,t,n){var i=n;return i?l.listen(i,t,m.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){var i=n;return i?l.capture(i,t,m.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var t=a.bind(null,e);l.listen(window,"scroll",t)},dispatchEvent:function(e,t){if(m._enabled){var n=r.getPooled(e,t);try{p.batchedUpdates(o,n)}finally{r.release(n)}}}};t.exports=m},{"./PooledClass":102,"./ReactDOMComponentTree":118,"./ReactUpdates":166,"./getEventTarget":198,"fbjs/lib/EventListener":38,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/getUnboundedScrollPosition":50,"object-assign":68}],143:[function(e,t,n){"use strict";var i={logTopLevelRenders:!1};t.exports=i},{}],144:[function(e,t,n){"use strict";var i=e("./DOMProperty"),r=e("./EventPluginHub"),o=e("./EventPluginUtils"),a=e("./ReactComponentEnvironment"),s=e("./ReactClass"),l=e("./ReactEmptyComponent"),c=e("./ReactBrowserEventEmitter"),u=e("./ReactNativeComponent"),d=e("./ReactUpdates"),p={Component:a.injection,Class:s.injection,DOMProperty:i.injection,EmptyComponent:l.injection,EventPluginHub:r.injection,EventPluginUtils:o.injection,EventEmitter:c.injection,NativeComponent:u.injection,Updates:d.injection};t.exports=p},{"./DOMProperty":87,"./EventPluginHub":94,"./EventPluginUtils":96,"./ReactBrowserEventEmitter":104,"./ReactClass":107,"./ReactComponentEnvironment":110,"./ReactEmptyComponent":139,"./ReactNativeComponent":153,"./ReactUpdates":166}],145:[function(e,t,n){"use strict";function i(e){return o(document.documentElement,e)}var r=e("./ReactDOMSelection"),o=e("fbjs/lib/containsNode"),a=e("fbjs/lib/focusNode"),s=e("fbjs/lib/getActiveElement"),l={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=s();return{focusedElem:e,selectionRange:l.hasSelectionCapabilities(e)?l.getSelection(e):null}},restoreSelection:function(e){var t=s(),n=e.focusedElem,r=e.selectionRange;t!==n&&i(n)&&(l.hasSelectionCapabilities(n)&&l.setSelection(n,r),a(n))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=r.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,i=t.end;if(void 0===i&&(i=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(i,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var o=e.createTextRange();o.collapse(!0),o.moveStart("character",n),o.moveEnd("character",i-n),o.select()}else r.setOffsets(e,t)}};t.exports=l},{"./ReactDOMSelection":129,"fbjs/lib/containsNode":42,"fbjs/lib/focusNode":47,"fbjs/lib/getActiveElement":48}],146:[function(e,t,n){"use strict";var i={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,t){e._reactInternalInstance=t}};t.exports=i},{}],147:[function(e,t,n){"use strict";var i=e("./ReactDebugTool");t.exports={debugTool:i}},{"./ReactDebugTool":134}],148:[function(e,t,n){"use strict";var i,r,o=(e("fbjs/lib/warning"),{onBeginProcessingChildContext:function(){i=!0},onEndProcessingChildContext:function(){i=!1},onSetState:function(){r()}});t.exports=o},{"fbjs/lib/warning":63}],149:[function(e,t,n){"use strict";var i=e("./adler32"),r=/\/?>/,o=/^<\!\-\-/,a={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=i(e);return o.test(e)?e:e.replace(r," "+a.CHECKSUM_ATTR_NAME+'="'+t+'"$&')},canReuseMarkup:function(e,t){var n=t.getAttribute(a.CHECKSUM_ATTR_NAME);n=n&&parseInt(n,10);var r=i(e);return r===n}};t.exports=a},{"./adler32":187}],150:[function(e,t,n){"use strict";function i(e,t){for(var n=Math.min(e.length,t.length),i=0;i<n;i++)if(e.charAt(i)!==t.charAt(i))return i;return e.length===t.length?-1:n}function r(e){return e?e.nodeType===N?e.documentElement:e.firstChild:null}function o(e){return e.getAttribute&&e.getAttribute(M)||""}function a(e,t,n,i,r){var o;if(b.logTopLevelRenders){var a=e._currentElement.props,s=a.type;o="React mount: "+("string"==typeof s?s:s.displayName||s.name)}var l=x.mountComponent(e,n,null,g(e,t),r);e._renderedComponent._topLevelWrapper=e,I._mountImageIntoNode(l,t,e,i,n)}function s(e,t,n,i){var r=E.ReactReconcileTransaction.getPooled(!n&&v.useCreateElement);r.perform(a,null,e,t,r,n,i),E.ReactReconcileTransaction.release(r)}function l(e,t,n){for(x.unmountComponent(e,n),t.nodeType===N&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)}function c(e){var t=r(e);if(t){var n=m.getInstanceFromNode(t);return!(!n||!n._nativeParent)}}function u(e){var t=r(e),n=t&&m.getInstanceFromNode(t);return n&&!n._nativeParent?n:null}function d(e){var t=u(e);return t?t._nativeContainerInfo._topLevelWrapper:null}var p=e("./DOMLazyTree"),h=e("./DOMProperty"),f=e("./ReactBrowserEventEmitter"),m=(e("./ReactCurrentOwner"),e("./ReactDOMComponentTree")),g=e("./ReactDOMContainerInfo"),v=e("./ReactDOMFeatureFlags"),y=e("./ReactElement"),b=e("./ReactFeatureFlags"),k=(e("./ReactInstrumentation"),e("./ReactMarkupChecksum")),x=e("./ReactReconciler"),w=e("./ReactUpdateQueue"),E=e("./ReactUpdates"),C=e("fbjs/lib/emptyObject"),P=e("./instantiateReactComponent"),T=e("fbjs/lib/invariant"),S=e("./setInnerHTML"),_=e("./shouldUpdateReactComponent"),M=(e("fbjs/lib/warning"),h.ID_ATTRIBUTE_NAME),O=h.ROOT_ATTRIBUTE_NAME,D=1,N=9,R=11,A={},j=1,L=function(){this.rootID=j++};L.prototype.isReactComponent={},L.prototype.render=function(){return this.props};var I={TopLevelWrapper:L,_instancesByReactRootID:A,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,i){return I.scrollMonitor(n,function(){w.enqueueElementInternal(e,t),i&&w.enqueueCallbackInternal(e,i)}),e},_renderNewRootComponent:function(e,t,n,i){!t||t.nodeType!==D&&t.nodeType!==N&&t.nodeType!==R?T(!1):void 0,f.ensureScrollValueMonitoring();var r=P(e);E.batchedUpdates(s,r,t,n,i);var o=r._instance.rootID;return A[o]=r,r},renderSubtreeIntoContainer:function(e,t,n,i){return null==e||null==e._reactInternalInstance?T(!1):void 0,I._renderSubtreeIntoContainer(e,t,n,i)},_renderSubtreeIntoContainer:function(e,t,n,i){w.validateCallback(i,"ReactDOM.render"),y.isValidElement(t)?void 0:T(!1);var a=y(L,null,null,null,null,null,t),s=d(n);if(s){var l=s._currentElement,u=l.props;if(_(u,t)){var p=s._renderedComponent.getPublicInstance(),h=i&&function(){i.call(p)};return I._updateRootComponent(s,a,n,h),p}I.unmountComponentAtNode(n)}var f=r(n),m=f&&!!o(f),g=c(n),v=m&&!s&&!g,b=I._renderNewRootComponent(a,n,v,null!=e?e._reactInternalInstance._processChildContext(e._reactInternalInstance._context):C)._renderedComponent.getPublicInstance();return i&&i.call(b),b},render:function(e,t,n){return I._renderSubtreeIntoContainer(null,e,t,n)},unmountComponentAtNode:function(e){!e||e.nodeType!==D&&e.nodeType!==N&&e.nodeType!==R?T(!1):void 0;var t=d(e);if(!t){c(e),1===e.nodeType&&e.hasAttribute(O);return!1}return delete A[t._instance.rootID],E.batchedUpdates(l,t,e,!1),!0},_mountImageIntoNode:function(e,t,n,o,a){if(!t||t.nodeType!==D&&t.nodeType!==N&&t.nodeType!==R?T(!1):void 0,o){var s=r(t);if(k.canReuseMarkup(e,s))return void m.precacheNode(n,s);var l=s.getAttribute(k.CHECKSUM_ATTR_NAME);s.removeAttribute(k.CHECKSUM_ATTR_NAME);var c=s.outerHTML;s.setAttribute(k.CHECKSUM_ATTR_NAME,l);var u=e,d=i(u,c);" (client) "+u.substring(d-20,d+20)+"\n (server) "+c.substring(d-20,d+20);t.nodeType===N?T(!1):void 0}if(t.nodeType===N?T(!1):void 0,a.useCreateElement){for(;t.lastChild;)t.removeChild(t.lastChild);p.insertTreeBefore(t,e,null)}else S(t,e),m.precacheNode(n,t.firstChild)}};t.exports=I},{"./DOMLazyTree":85,"./DOMProperty":87,"./ReactBrowserEventEmitter":104,"./ReactCurrentOwner":113,"./ReactDOMComponentTree":118,"./ReactDOMContainerInfo":119,"./ReactDOMFeatureFlags":123,"./ReactElement":137,"./ReactFeatureFlags":143,"./ReactInstrumentation":147,"./ReactMarkupChecksum":149,"./ReactReconciler":162,"./ReactUpdateQueue":165,"./ReactUpdates":166,"./instantiateReactComponent":204,"./setInnerHTML":210,"./shouldUpdateReactComponent":212,"fbjs/lib/emptyObject":46,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],151:[function(e,t,n){"use strict";function i(e,t,n){return{type:d.INSERT_MARKUP,content:e,fromIndex:null,fromNode:null,toIndex:n,afterNode:t}}function r(e,t,n){return{type:d.MOVE_EXISTING,content:null,fromIndex:e._mountIndex,fromNode:p.getNativeNode(e),toIndex:n,afterNode:t}}function o(e,t){return{type:d.REMOVE_NODE,content:null,fromIndex:e._mountIndex,fromNode:t,toIndex:null,afterNode:null}}function a(e){return{type:d.SET_MARKUP,content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function s(e){return{type:d.TEXT_CONTENT,content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function l(e,t){return t&&(e=e||[],e.push(t)),e}function c(e,t){u.processChildrenUpdates(e,t)}var u=e("./ReactComponentEnvironment"),d=(e("./ReactInstrumentation"),e("./ReactMultiChildUpdateTypes")),p=(e("./ReactCurrentOwner"),e("./ReactReconciler")),h=e("./ReactChildReconciler"),f=(e("fbjs/lib/emptyFunction"),e("./flattenChildren")),m=e("fbjs/lib/invariant"),g={Mixin:{_reconcilerInstantiateChildren:function(e,t,n){return h.instantiateChildren(e,t,n)},_reconcilerUpdateChildren:function(e,t,n,i,r){var o;return o=f(t),h.updateChildren(e,o,n,i,r),o},mountChildren:function(e,t,n){var i=this._reconcilerInstantiateChildren(e,t,n);this._renderedChildren=i;var r=[],o=0;for(var a in i)if(i.hasOwnProperty(a)){var s=i[a],l=p.mountComponent(s,t,this,this._nativeContainerInfo,n);s._mountIndex=o++,r.push(l)}return r},updateTextContent:function(e){var t=this._renderedChildren;h.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&m(!1);var i=[s(e)];c(this,i)},updateMarkup:function(e){var t=this._renderedChildren;h.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&m(!1);var i=[a(e)];c(this,i)},updateChildren:function(e,t,n){this._updateChildren(e,t,n)},_updateChildren:function(e,t,n){var i=this._renderedChildren,r={},o=this._reconcilerUpdateChildren(i,e,r,t,n);if(o||i){var a,s=null,u=0,d=0,h=null;for(a in o)if(o.hasOwnProperty(a)){var f=i&&i[a],m=o[a];f===m?(s=l(s,this.moveChild(f,h,d,u)),u=Math.max(f._mountIndex,u),f._mountIndex=d):(f&&(u=Math.max(f._mountIndex,u)),s=l(s,this._mountChildAtIndex(m,h,d,t,n))),d++,h=p.getNativeNode(m)}for(a in r)r.hasOwnProperty(a)&&(s=l(s,this._unmountChild(i[a],r[a])));s&&c(this,s),this._renderedChildren=o}},unmountChildren:function(e){var t=this._renderedChildren;h.unmountChildren(t,e),this._renderedChildren=null},moveChild:function(e,t,n,i){if(e._mountIndex<i)return r(e,t,n)},createChild:function(e,t,n){return i(n,t,e._mountIndex)},removeChild:function(e,t){return o(e,t)},_mountChildAtIndex:function(e,t,n,i,r){var o=p.mountComponent(e,i,this,this._nativeContainerInfo,r);return e._mountIndex=n,this.createChild(e,t,o)},_unmountChild:function(e,t){var n=this.removeChild(e,t);return e._mountIndex=null,n}}};t.exports=g},{"./ReactChildReconciler":105,"./ReactComponentEnvironment":110,"./ReactCurrentOwner":113,"./ReactInstrumentation":147,"./ReactMultiChildUpdateTypes":152,"./ReactReconciler":162,"./flattenChildren":193,"fbjs/lib/emptyFunction":45,"fbjs/lib/invariant":53}],152:[function(e,t,n){"use strict";var i=e("fbjs/lib/keyMirror"),r=i({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});t.exports=r},{"fbjs/lib/keyMirror":56}],153:[function(e,t,n){"use strict";function i(e){if("function"==typeof e.type)return e.type;var t=e.type,n=d[t];return null==n&&(d[t]=n=c(t)),n}function r(e){return u?void 0:l(!1),new u(e)}function o(e){return new p(e)}function a(e){return e instanceof p}var s=e("object-assign"),l=e("fbjs/lib/invariant"),c=null,u=null,d={},p=null,h={injectGenericComponentClass:function(e){u=e},injectTextComponentClass:function(e){p=e},injectComponentClasses:function(e){s(d,e)}},f={getComponentClassForElement:i,createInternalComponent:r,createInstanceForText:o,isTextComponent:a,injection:h};t.exports=f},{"fbjs/lib/invariant":53,"object-assign":68}],154:[function(e,t,n){"use strict";var i=[],r={onNativeOperation:function(e,t,n){i.push({instanceID:e,type:t,payload:n})},clearHistory:function(){r._preventClearing||(i=[])},getHistory:function(){return i}};t.exports=r},{}],155:[function(e,t,n){"use strict";var i=e("./ReactElement"),r=e("fbjs/lib/invariant"),o={NATIVE:0,COMPOSITE:1,EMPTY:2,getType:function(e){return null===e||e===!1?o.EMPTY:i.isValidElement(e)?"function"==typeof e.type?o.COMPOSITE:o.NATIVE:void r(!1)}};t.exports=o},{"./ReactElement":137,"fbjs/lib/invariant":53}],156:[function(e,t,n){"use strict";function i(e,t){}var r=(e("fbjs/lib/warning"),{isMounted:function(e){return!1},enqueueCallback:function(e,t){},enqueueForceUpdate:function(e){i(e,"forceUpdate")},enqueueReplaceState:function(e,t){i(e,"replaceState")},enqueueSetState:function(e,t){i(e,"setState")}});t.exports=r},{"fbjs/lib/warning":63}],157:[function(e,t,n){"use strict";var i=e("fbjs/lib/invariant"),r={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,t,n){r.isValidOwner(n)?void 0:i(!1),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){r.isValidOwner(n)?void 0:i(!1);var o=n.getPublicInstance();o&&o.refs[t]===e.getPublicInstance()&&n.detachRef(t)}};t.exports=r},{"fbjs/lib/invariant":53}],158:[function(e,t,n){"use strict";var i={};t.exports=i},{}],159:[function(e,t,n){"use strict";var i=e("fbjs/lib/keyMirror"),r=i({prop:null,context:null,childContext:null});t.exports=r},{"fbjs/lib/keyMirror":56}],160:[function(e,t,n){"use strict";function i(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function r(e){function t(t,n,i,r,o,a){if(r=r||E,a=a||i,null==n[i]){var s=k[o];return t?new Error("Required "+s+" `"+a+"` was not specified in "+("`"+r+"`.")):null}return e(n,i,r,o,a)}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function o(e){function t(t,n,i,r,o){var a=t[n],s=g(a);if(s!==e){var l=k[r],c=v(a);return new Error("Invalid "+l+" `"+o+"` of type "+("`"+c+"` supplied to `"+i+"`, expected ")+("`"+e+"`."))}return null}return r(t)}function a(){return r(x.thatReturns(null))}function s(e){function t(t,n,i,r,o){if("function"!=typeof e)return new Error("Property `"+o+"` of component `"+i+"` has invalid PropType notation inside arrayOf.");var a=t[n];if(!Array.isArray(a)){var s=k[r],l=g(a);return new Error("Invalid "+s+" `"+o+"` of type "+("`"+l+"` supplied to `"+i+"`, expected an array."))}for(var c=0;c<a.length;c++){var u=e(a,c,i,r,o+"["+c+"]");if(u instanceof Error)return u}return null}return r(t)}function l(){function e(e,t,n,i,r){if(!b.isValidElement(e[t])){var o=k[i];return new Error("Invalid "+o+" `"+r+"` supplied to "+("`"+n+"`, expected a single ReactElement."))}return null}return r(e)}function c(e){function t(t,n,i,r,o){if(!(t[n]instanceof e)){var a=k[r],s=e.name||E,l=y(t[n]);return new Error("Invalid "+a+" `"+o+"` of type "+("`"+l+"` supplied to `"+i+"`, expected ")+("instance of `"+s+"`."))}return null}return r(t)}function u(e){function t(t,n,r,o,a){for(var s=t[n],l=0;l<e.length;l++)if(i(s,e[l]))return null;var c=k[o],u=JSON.stringify(e);return new Error("Invalid "+c+" `"+a+"` of value `"+s+"` "+("supplied to `"+r+"`, expected one of "+u+"."))}return r(Array.isArray(e)?t:function(){return new Error("Invalid argument supplied to oneOf, expected an instance of array.")})}function d(e){function t(t,n,i,r,o){if("function"!=typeof e)return new Error("Property `"+o+"` of component `"+i+"` has invalid PropType notation inside objectOf.");var a=t[n],s=g(a);if("object"!==s){var l=k[r];return new Error("Invalid "+l+" `"+o+"` of type "+("`"+s+"` supplied to `"+i+"`, expected an object."))}for(var c in a)if(a.hasOwnProperty(c)){var u=e(a,c,i,r,o+"."+c);if(u instanceof Error)return u}return null}return r(t)}function p(e){function t(t,n,i,r,o){for(var a=0;a<e.length;a++){var s=e[a];if(null==s(t,n,i,r,o))return null}var l=k[r];return new Error("Invalid "+l+" `"+o+"` supplied to "+("`"+i+"`."))}return r(Array.isArray(e)?t:function(){return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")})}function h(){function e(e,t,n,i,r){if(!m(e[t])){var o=k[i];return new Error("Invalid "+o+" `"+r+"` supplied to "+("`"+n+"`, expected a ReactNode."))}return null}return r(e)}function f(e){function t(t,n,i,r,o){var a=t[n],s=g(a);if("object"!==s){var l=k[r];return new Error("Invalid "+l+" `"+o+"` of type `"+s+"` "+("supplied to `"+i+"`, expected `object`."))}for(var c in e){var u=e[c];if(u){var d=u(a,c,i,r,o+"."+c);if(d)return d}}return null}return r(t)}function m(e){switch(typeof e){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(m);if(null===e||b.isValidElement(e))return!0;var t=w(e);if(!t)return!1;var n,i=t.call(e);if(t!==e.entries){for(;!(n=i.next()).done;)if(!m(n.value))return!1}else for(;!(n=i.next()).done;){var r=n.value;if(r&&!m(r[1]))return!1}return!0;default:return!1}}function g(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":t}function v(e){var t=g(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}function y(e){return e.constructor&&e.constructor.name?e.constructor.name:E}var b=e("./ReactElement"),k=e("./ReactPropTypeLocationNames"),x=e("fbjs/lib/emptyFunction"),w=e("./getIteratorFn"),E="<<anonymous>>",C={array:o("array"),bool:o("boolean"),func:o("function"),number:o("number"),object:o("object"),string:o("string"),any:a(),arrayOf:s,element:l(),instanceOf:c,node:h(),objectOf:d,oneOf:u,oneOfType:p,shape:f};t.exports=C},{"./ReactElement":137,"./ReactPropTypeLocationNames":158,
"./getIteratorFn":199,"fbjs/lib/emptyFunction":45}],161:[function(e,t,n){"use strict";function i(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=o.getPooled(null),this.useCreateElement=e}var r=e("object-assign"),o=e("./CallbackQueue"),a=e("./PooledClass"),s=e("./ReactBrowserEventEmitter"),l=e("./ReactInputSelection"),c=e("./Transaction"),u={initialize:l.getSelectionInformation,close:l.restoreSelection},d={initialize:function(){var e=s.isEnabled();return s.setEnabled(!1),e},close:function(e){s.setEnabled(e)}},p={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},h=[u,d,p],f={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(e){this.reactMountReady.rollback(e)},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null}};r(i.prototype,c.Mixin,f),a.addPoolingTo(i),t.exports=i},{"./CallbackQueue":82,"./PooledClass":102,"./ReactBrowserEventEmitter":104,"./ReactInputSelection":145,"./Transaction":184,"object-assign":68}],162:[function(e,t,n){"use strict";function i(){r.attachRefs(this,this._currentElement)}var r=e("./ReactRef"),o=(e("./ReactInstrumentation"),e("fbjs/lib/invariant")),a={mountComponent:function(e,t,n,r,o){var a=e.mountComponent(t,n,r,o);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(i,e),a},getNativeNode:function(e){return e.getNativeNode()},unmountComponent:function(e,t){r.detachRefs(e,e._currentElement),e.unmountComponent(t)},receiveComponent:function(e,t,n,o){var a=e._currentElement;if(t!==a||o!==e._context){var s=r.shouldUpdateRefs(a,t);s&&r.detachRefs(e,a),e.receiveComponent(t,n,o),s&&e._currentElement&&null!=e._currentElement.ref&&n.getReactMountReady().enqueue(i,e)}},performUpdateIfNecessary:function(e,t,n){return e._updateBatchNumber!==n?void(null!=e._updateBatchNumber&&e._updateBatchNumber!==n+1?o(!1):void 0):void e.performUpdateIfNecessary(t)}};t.exports=a},{"./ReactInstrumentation":147,"./ReactRef":163,"fbjs/lib/invariant":53}],163:[function(e,t,n){"use strict";function i(e,t,n){"function"==typeof e?e(t.getPublicInstance()):o.addComponentAsRefTo(t,e,n)}function r(e,t,n){"function"==typeof e?e(null):o.removeComponentAsRefFrom(t,e,n)}var o=e("./ReactOwner"),a={};a.attachRefs=function(e,t){if(null!==t&&t!==!1){var n=t.ref;null!=n&&i(n,e,t._owner)}},a.shouldUpdateRefs=function(e,t){var n=null===e||e===!1,i=null===t||t===!1;return n||i||t._owner!==e._owner||t.ref!==e.ref},a.detachRefs=function(e,t){if(null!==t&&t!==!1){var n=t.ref;null!=n&&r(n,e,t._owner)}},t.exports=a},{"./ReactOwner":157}],164:[function(e,t,n){"use strict";function i(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.useCreateElement=!1}var r=e("object-assign"),o=e("./PooledClass"),a=e("./Transaction"),s=[],l={enqueue:function(){}},c={getTransactionWrappers:function(){return s},getReactMountReady:function(){return l},destructor:function(){},checkpoint:function(){},rollback:function(){}};r(i.prototype,a.Mixin,c),o.addPoolingTo(i),t.exports=i},{"./PooledClass":102,"./Transaction":184,"object-assign":68}],165:[function(e,t,n){"use strict";function i(e){a.enqueueUpdate(e)}function r(e,t){var n=o.get(e);return n?n:null}var o=(e("./ReactCurrentOwner"),e("./ReactInstanceMap")),a=e("./ReactUpdates"),s=e("fbjs/lib/invariant"),l=(e("fbjs/lib/warning"),{isMounted:function(e){var t=o.get(e);return!!t&&!!t._renderedComponent},enqueueCallback:function(e,t,n){l.validateCallback(t,n);var o=r(e);return o?(o._pendingCallbacks?o._pendingCallbacks.push(t):o._pendingCallbacks=[t],void i(o)):null},enqueueCallbackInternal:function(e,t){e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t],i(e)},enqueueForceUpdate:function(e){var t=r(e,"forceUpdate");t&&(t._pendingForceUpdate=!0,i(t))},enqueueReplaceState:function(e,t){var n=r(e,"replaceState");n&&(n._pendingStateQueue=[t],n._pendingReplaceState=!0,i(n))},enqueueSetState:function(e,t){var n=r(e,"setState");if(n){var o=n._pendingStateQueue||(n._pendingStateQueue=[]);o.push(t),i(n)}},enqueueElementInternal:function(e,t){e._pendingElement=t,i(e)},validateCallback:function(e,t){e&&"function"!=typeof e?s(!1):void 0}});t.exports=l},{"./ReactCurrentOwner":113,"./ReactInstanceMap":146,"./ReactUpdates":166,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],166:[function(e,t,n){"use strict";function i(){S.ReactReconcileTransaction&&x?void 0:g(!1)}function r(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=d.getPooled(),this.reconcileTransaction=S.ReactReconcileTransaction.getPooled(!0)}function o(e,t,n,r,o,a){i(),x.batchedUpdates(e,t,n,r,o,a)}function a(e,t){return e._mountOrder-t._mountOrder}function s(e){var t=e.dirtyComponentsLength;t!==v.length?g(!1):void 0,v.sort(a),y++;for(var n=0;n<t;n++){var i=v[n],r=i._pendingCallbacks;i._pendingCallbacks=null;var o;if(h.logTopLevelRenders){var s=i;i._currentElement.props===i._renderedComponent._currentElement&&(s=i._renderedComponent),o="React update: "+s.getName()}if(f.performUpdateIfNecessary(i,e.reconcileTransaction,y),r)for(var l=0;l<r.length;l++)e.callbackQueue.enqueue(r[l],i.getPublicInstance())}}function l(e){return i(),x.isBatchingUpdates?(v.push(e),void(null==e._updateBatchNumber&&(e._updateBatchNumber=y+1))):void x.batchedUpdates(l,e)}function c(e,t){x.isBatchingUpdates?void 0:g(!1),b.enqueue(e,t),k=!0}var u=e("object-assign"),d=e("./CallbackQueue"),p=e("./PooledClass"),h=e("./ReactFeatureFlags"),f=(e("./ReactInstrumentation"),e("./ReactReconciler")),m=e("./Transaction"),g=e("fbjs/lib/invariant"),v=[],y=0,b=d.getPooled(),k=!1,x=null,w={initialize:function(){this.dirtyComponentsLength=v.length},close:function(){this.dirtyComponentsLength!==v.length?(v.splice(0,this.dirtyComponentsLength),P()):v.length=0}},E={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},C=[w,E];u(r.prototype,m.Mixin,{getTransactionWrappers:function(){return C},destructor:function(){this.dirtyComponentsLength=null,d.release(this.callbackQueue),this.callbackQueue=null,S.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return m.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),p.addPoolingTo(r);var P=function(){for(;v.length||k;){if(v.length){var e=r.getPooled();e.perform(s,null,e),r.release(e)}if(k){k=!1;var t=b;b=d.getPooled(),t.notifyAll(),d.release(t)}}},T={injectReconcileTransaction:function(e){e?void 0:g(!1),S.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e?void 0:g(!1),"function"!=typeof e.batchedUpdates?g(!1):void 0,"boolean"!=typeof e.isBatchingUpdates?g(!1):void 0,x=e}},S={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:l,flushBatchedUpdates:P,injection:T,asap:c};t.exports=S},{"./CallbackQueue":82,"./PooledClass":102,"./ReactFeatureFlags":143,"./ReactInstrumentation":147,"./ReactReconciler":162,"./Transaction":184,"fbjs/lib/invariant":53,"object-assign":68}],167:[function(e,t,n){"use strict";t.exports="15.1.0"},{}],168:[function(e,t,n){"use strict";var i={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},r={accentHeight:"accent-height",accumulate:0,additive:0,alignmentBaseline:"alignment-baseline",allowReorder:"allowReorder",alphabetic:0,amplitude:0,arabicForm:"arabic-form",ascent:0,attributeName:"attributeName",attributeType:"attributeType",autoReverse:"autoReverse",azimuth:0,baseFrequency:"baseFrequency",baseProfile:"baseProfile",baselineShift:"baseline-shift",bbox:0,begin:0,bias:0,by:0,calcMode:"calcMode",capHeight:"cap-height",clip:0,clipPath:"clip-path",clipRule:"clip-rule",clipPathUnits:"clipPathUnits",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",contentScriptType:"contentScriptType",contentStyleType:"contentStyleType",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:"diffuseConstant",direction:0,display:0,divisor:0,dominantBaseline:"dominant-baseline",dur:0,dx:0,dy:0,edgeMode:"edgeMode",elevation:0,enableBackground:"enable-background",end:0,exponent:0,externalResourcesRequired:"externalResourcesRequired",fill:0,fillOpacity:"fill-opacity",fillRule:"fill-rule",filter:0,filterRes:"filterRes",filterUnits:"filterUnits",floodColor:"flood-color",floodOpacity:"flood-opacity",focusable:0,fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",glyphRef:"glyphRef",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",hanging:0,horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",ideographic:0,imageRendering:"image-rendering",in:0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:"kernelMatrix",kernelUnitLength:"kernelUnitLength",kerning:0,keyPoints:"keyPoints",keySplines:"keySplines",keyTimes:"keyTimes",lengthAdjust:"lengthAdjust",letterSpacing:"letter-spacing",lightingColor:"lighting-color",limitingConeAngle:"limitingConeAngle",local:0,markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",markerHeight:"markerHeight",markerUnits:"markerUnits",markerWidth:"markerWidth",mask:0,maskContentUnits:"maskContentUnits",maskUnits:"maskUnits",mathematical:0,mode:0,numOctaves:"numOctaves",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pathLength:"pathLength",patternContentUnits:"patternContentUnits",patternTransform:"patternTransform",patternUnits:"patternUnits",pointerEvents:"pointer-events",points:0,pointsAtX:"pointsAtX",pointsAtY:"pointsAtY",pointsAtZ:"pointsAtZ",preserveAlpha:"preserveAlpha",preserveAspectRatio:"preserveAspectRatio",primitiveUnits:"primitiveUnits",r:0,radius:0,refX:"refX",refY:"refY",renderingIntent:"rendering-intent",repeatCount:"repeatCount",repeatDur:"repeatDur",requiredExtensions:"requiredExtensions",requiredFeatures:"requiredFeatures",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:"shape-rendering",slope:0,spacing:0,specularConstant:"specularConstant",specularExponent:"specularExponent",speed:0,spreadMethod:"spreadMethod",startOffset:"startOffset",stdDeviation:"stdDeviation",stemh:0,stemv:0,stitchTiles:"stitchTiles",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",string:0,stroke:0,strokeDasharray:"stroke-dasharray",strokeDashoffset:"stroke-dashoffset",strokeLinecap:"stroke-linecap",strokeLinejoin:"stroke-linejoin",strokeMiterlimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",surfaceScale:"surfaceScale",systemLanguage:"systemLanguage",tableValues:"tableValues",targetX:"targetX",targetY:"targetY",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",textLength:"textLength",to:0,transform:0,u1:0,u2:0,underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicode:0,unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",values:0,vectorEffect:"vector-effect",version:0,vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",viewBox:"viewBox",viewTarget:"viewTarget",visibility:0,widths:0,wordSpacing:"word-spacing",writingMode:"writing-mode",x:0,xHeight:"x-height",x1:0,x2:0,xChannelSelector:"xChannelSelector",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlLang:"xml:lang",xmlSpace:"xml:space",y:0,y1:0,y2:0,yChannelSelector:"yChannelSelector",z:0,zoomAndPan:"zoomAndPan"},o={Properties:{},DOMAttributeNamespaces:{xlinkActuate:i.xlink,xlinkArcrole:i.xlink,xlinkHref:i.xlink,xlinkRole:i.xlink,xlinkShow:i.xlink,xlinkTitle:i.xlink,xlinkType:i.xlink,xmlBase:i.xml,xmlLang:i.xml,xmlSpace:i.xml},DOMAttributeNames:{}};Object.keys(r).forEach(function(e){o.Properties[e]=0,r[e]&&(o.DOMAttributeNames[e]=r[e])}),t.exports=o},{}],169:[function(e,t,n){"use strict";function i(e){if("selectionStart"in e&&c.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function r(e,t){if(x||null==y||y!==d())return null;var n=i(y);if(!k||!f(k,n)){k=n;var r=u.getPooled(v.select,b,e,t);return r.type="select",r.target=y,a.accumulateTwoPhaseDispatches(r),r}return null}var o=e("./EventConstants"),a=e("./EventPropagators"),s=e("fbjs/lib/ExecutionEnvironment"),l=e("./ReactDOMComponentTree"),c=e("./ReactInputSelection"),u=e("./SyntheticEvent"),d=e("fbjs/lib/getActiveElement"),p=e("./isTextInputElement"),h=e("fbjs/lib/keyOf"),f=e("fbjs/lib/shallowEqual"),m=o.topLevelTypes,g=s.canUseDOM&&"documentMode"in document&&document.documentMode<=11,v={select:{phasedRegistrationNames:{bubbled:h({onSelect:null}),captured:h({onSelectCapture:null})},dependencies:[m.topBlur,m.topContextMenu,m.topFocus,m.topKeyDown,m.topMouseDown,m.topMouseUp,m.topSelectionChange]}},y=null,b=null,k=null,x=!1,w=!1,E=h({onSelect:null}),C={eventTypes:v,extractEvents:function(e,t,n,i){if(!w)return null;var o=t?l.getNodeFromInstance(t):window;switch(e){case m.topFocus:(p(o)||"true"===o.contentEditable)&&(y=o,b=t,k=null);break;case m.topBlur:y=null,b=null,k=null;break;case m.topMouseDown:x=!0;break;case m.topContextMenu:case m.topMouseUp:return x=!1,r(n,i);case m.topSelectionChange:if(g)break;case m.topKeyDown:case m.topKeyUp:return r(n,i)}return null},didPutListener:function(e,t,n){t===E&&(w=!0)}};t.exports=C},{"./EventConstants":93,"./EventPropagators":97,"./ReactDOMComponentTree":118,"./ReactInputSelection":145,"./SyntheticEvent":175,"./isTextInputElement":206,"fbjs/lib/ExecutionEnvironment":39,"fbjs/lib/getActiveElement":48,"fbjs/lib/keyOf":57,"fbjs/lib/shallowEqual":62}],170:[function(e,t,n){"use strict";var i=e("./EventConstants"),r=e("fbjs/lib/EventListener"),o=e("./EventPropagators"),a=e("./ReactDOMComponentTree"),s=e("./SyntheticAnimationEvent"),l=e("./SyntheticClipboardEvent"),c=e("./SyntheticEvent"),u=e("./SyntheticFocusEvent"),d=e("./SyntheticKeyboardEvent"),p=e("./SyntheticMouseEvent"),h=e("./SyntheticDragEvent"),f=e("./SyntheticTouchEvent"),m=e("./SyntheticTransitionEvent"),g=e("./SyntheticUIEvent"),v=e("./SyntheticWheelEvent"),y=e("fbjs/lib/emptyFunction"),b=e("./getEventCharCode"),k=e("fbjs/lib/invariant"),x=e("fbjs/lib/keyOf"),w=i.topLevelTypes,E={abort:{phasedRegistrationNames:{bubbled:x({onAbort:!0}),captured:x({onAbortCapture:!0})}},animationEnd:{phasedRegistrationNames:{bubbled:x({onAnimationEnd:!0}),captured:x({onAnimationEndCapture:!0})}},animationIteration:{phasedRegistrationNames:{bubbled:x({onAnimationIteration:!0}),captured:x({onAnimationIterationCapture:!0})}},animationStart:{phasedRegistrationNames:{bubbled:x({onAnimationStart:!0}),captured:x({onAnimationStartCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:x({onBlur:!0}),captured:x({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:x({onCanPlay:!0}),captured:x({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:x({onCanPlayThrough:!0}),captured:x({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:x({onClick:!0}),captured:x({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:x({onContextMenu:!0}),captured:x({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:x({onCopy:!0}),captured:x({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:x({onCut:!0}),captured:x({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:x({onDoubleClick:!0}),captured:x({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:x({onDrag:!0}),captured:x({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:x({onDragEnd:!0}),captured:x({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:x({onDragEnter:!0}),captured:x({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:x({onDragExit:!0}),captured:x({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:x({onDragLeave:!0}),captured:x({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:x({onDragOver:!0}),captured:x({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:x({onDragStart:!0}),captured:x({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:x({onDrop:!0}),captured:x({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:x({onDurationChange:!0}),captured:x({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:x({onEmptied:!0}),captured:x({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:x({onEncrypted:!0}),captured:x({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:x({onEnded:!0}),captured:x({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:x({onError:!0}),captured:x({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:x({onFocus:!0}),captured:x({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:x({onInput:!0}),captured:x({onInputCapture:!0})}},invalid:{phasedRegistrationNames:{bubbled:x({onInvalid:!0}),captured:x({onInvalidCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:x({onKeyDown:!0}),captured:x({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:x({onKeyPress:!0}),captured:x({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:x({onKeyUp:!0}),captured:x({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:x({onLoad:!0}),captured:x({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:x({onLoadedData:!0}),captured:x({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:x({onLoadedMetadata:!0}),captured:x({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:x({onLoadStart:!0}),captured:x({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:x({onMouseDown:!0}),captured:x({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:x({onMouseMove:!0}),captured:x({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:x({onMouseOut:!0}),captured:x({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:x({onMouseOver:!0}),captured:x({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:x({onMouseUp:!0}),captured:x({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:x({onPaste:!0}),captured:x({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:x({onPause:!0}),captured:x({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:x({onPlay:!0}),captured:x({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:x({onPlaying:!0}),captured:x({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:x({onProgress:!0}),captured:x({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:x({onRateChange:!0}),captured:x({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:x({onReset:!0}),captured:x({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:x({onScroll:!0}),captured:x({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:x({onSeeked:!0}),captured:x({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:x({onSeeking:!0}),captured:x({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:x({onStalled:!0}),captured:x({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:x({onSubmit:!0}),captured:x({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:x({onSuspend:!0}),captured:x({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:x({onTimeUpdate:!0}),captured:x({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:x({onTouchCancel:!0}),captured:x({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:x({onTouchEnd:!0}),captured:x({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:x({onTouchMove:!0}),captured:x({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:x({onTouchStart:!0}),captured:x({onTouchStartCapture:!0})}},transitionEnd:{phasedRegistrationNames:{bubbled:x({onTransitionEnd:!0}),captured:x({onTransitionEndCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:x({onVolumeChange:!0}),captured:x({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:x({onWaiting:!0}),captured:x({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:x({onWheel:!0}),captured:x({onWheelCapture:!0})}}},C={topAbort:E.abort,topAnimationEnd:E.animationEnd,topAnimationIteration:E.animationIteration,topAnimationStart:E.animationStart,topBlur:E.blur,topCanPlay:E.canPlay,topCanPlayThrough:E.canPlayThrough,topClick:E.click,topContextMenu:E.contextMenu,topCopy:E.copy,topCut:E.cut,topDoubleClick:E.doubleClick,topDrag:E.drag,topDragEnd:E.dragEnd,topDragEnter:E.dragEnter,topDragExit:E.dragExit,topDragLeave:E.dragLeave,topDragOver:E.dragOver,topDragStart:E.dragStart,topDrop:E.drop,topDurationChange:E.durationChange,topEmptied:E.emptied,topEncrypted:E.encrypted,topEnded:E.ended,topError:E.error,topFocus:E.focus,topInput:E.input,topInvalid:E.invalid,topKeyDown:E.keyDown,topKeyPress:E.keyPress,topKeyUp:E.keyUp,topLoad:E.load,topLoadedData:E.loadedData,topLoadedMetadata:E.loadedMetadata,topLoadStart:E.loadStart,topMouseDown:E.mouseDown,topMouseMove:E.mouseMove,topMouseOut:E.mouseOut,topMouseOver:E.mouseOver,topMouseUp:E.mouseUp,topPaste:E.paste,topPause:E.pause,topPlay:E.play,topPlaying:E.playing,topProgress:E.progress,topRateChange:E.rateChange,topReset:E.reset,topScroll:E.scroll,topSeeked:E.seeked,topSeeking:E.seeking,topStalled:E.stalled,topSubmit:E.submit,topSuspend:E.suspend,topTimeUpdate:E.timeUpdate,topTouchCancel:E.touchCancel,topTouchEnd:E.touchEnd,topTouchMove:E.touchMove,topTouchStart:E.touchStart,topTransitionEnd:E.transitionEnd,topVolumeChange:E.volumeChange,topWaiting:E.waiting,topWheel:E.wheel};for(var P in C)C[P].dependencies=[P];var T=x({onClick:null}),S={},_={eventTypes:E,extractEvents:function(e,t,n,i){var r=C[e];if(!r)return null;var a;switch(e){case w.topAbort:case w.topCanPlay:case w.topCanPlayThrough:case w.topDurationChange:case w.topEmptied:case w.topEncrypted:case w.topEnded:case w.topError:case w.topInput:case w.topInvalid:case w.topLoad:case w.topLoadedData:case w.topLoadedMetadata:case w.topLoadStart:case w.topPause:case w.topPlay:case w.topPlaying:case w.topProgress:case w.topRateChange:case w.topReset:case w.topSeeked:case w.topSeeking:case w.topStalled:case w.topSubmit:case w.topSuspend:case w.topTimeUpdate:case w.topVolumeChange:case w.topWaiting:a=c;break;case w.topKeyPress:if(0===b(n))return null;case w.topKeyDown:case w.topKeyUp:a=d;break;case w.topBlur:case w.topFocus:a=u;break;case w.topClick:if(2===n.button)return null;case w.topContextMenu:case w.topDoubleClick:case w.topMouseDown:case w.topMouseMove:case w.topMouseOut:case w.topMouseOver:case w.topMouseUp:a=p;break;case w.topDrag:case w.topDragEnd:case w.topDragEnter:case w.topDragExit:case w.topDragLeave:case w.topDragOver:case w.topDragStart:case w.topDrop:a=h;break;case w.topTouchCancel:case w.topTouchEnd:case w.topTouchMove:case w.topTouchStart:a=f;break;case w.topAnimationEnd:case w.topAnimationIteration:case w.topAnimationStart:a=s;break;case w.topTransitionEnd:a=m;break;case w.topScroll:a=g;break;case w.topWheel:a=v;break;case w.topCopy:case w.topCut:case w.topPaste:a=l}a?void 0:k(!1);var y=a.getPooled(r,t,n,i);return o.accumulateTwoPhaseDispatches(y),y},didPutListener:function(e,t,n){if(t===T){var i=e._rootNodeID,o=a.getNodeFromInstance(e);S[i]||(S[i]=r.listen(o,"click",y))}},willDeleteListener:function(e,t){if(t===T){var n=e._rootNodeID;S[n].remove(),delete S[n]}}};t.exports=_},{"./EventConstants":93,"./EventPropagators":97,"./ReactDOMComponentTree":118,"./SyntheticAnimationEvent":171,"./SyntheticClipboardEvent":172,"./SyntheticDragEvent":174,"./SyntheticEvent":175,"./SyntheticFocusEvent":176,"./SyntheticKeyboardEvent":178,"./SyntheticMouseEvent":179,"./SyntheticTouchEvent":180,"./SyntheticTransitionEvent":181,"./SyntheticUIEvent":182,"./SyntheticWheelEvent":183,"./getEventCharCode":195,"fbjs/lib/EventListener":38,"fbjs/lib/emptyFunction":45,"fbjs/lib/invariant":53,"fbjs/lib/keyOf":57}],171:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o={animationName:null,elapsedTime:null,pseudoElement:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticEvent":175}],172:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};r.augmentClass(i,o),t.exports=i},{"./SyntheticEvent":175}],173:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticEvent":175}],174:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticMouseEvent"),o={dataTransfer:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticMouseEvent":179}],175:[function(e,t,n){"use strict";function i(e,t,n,i){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n;var r=this.constructor.Interface;for(var o in r)if(r.hasOwnProperty(o)){var s=r[o];s?this[o]=s(n):"target"===o?this.target=i:this[o]=n[o]}var l=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;return l?this.isDefaultPrevented=a.thatReturnsTrue:this.isDefaultPrevented=a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse,this}var r=e("object-assign"),o=e("./PooledClass"),a=e("fbjs/lib/emptyFunction"),s=(e("fbjs/lib/warning"),"function"==typeof Proxy,["dispatchConfig","_targetInst","nativeEvent","isDefaultPrevented","isPropagationStopped","_dispatchListeners","_dispatchInstances"]),l={type:null,target:null,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};r(i.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=a.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=a.thatReturnsTrue)},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;for(var n=0;n<s.length;n++)this[s[n]]=null}}),i.Interface=l,i.augmentClass=function(e,t){var n=this,i=function(){};i.prototype=n.prototype;var a=new i;r(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=r({},n.Interface,t),e.augmentClass=n.augmentClass,o.addPoolingTo(e,o.fourArgumentPooler)},o.addPoolingTo(i,o.fourArgumentPooler),t.exports=i},{"./PooledClass":102,"fbjs/lib/emptyFunction":45,"fbjs/lib/warning":63,"object-assign":68}],176:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticUIEvent"),o={relatedTarget:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticUIEvent":182}],177:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticEvent":175}],178:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticUIEvent"),o=e("./getEventCharCode"),a=e("./getEventKey"),s=e("./getEventModifierState"),l={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:s,charCode:function(e){return"keypress"===e.type?o(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?o(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};r.augmentClass(i,l),t.exports=i},{"./SyntheticUIEvent":182,"./getEventCharCode":195,"./getEventKey":196,"./getEventModifierState":197}],179:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticUIEvent"),o=e("./ViewportMetrics"),a=e("./getEventModifierState"),s={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};r.augmentClass(i,s),t.exports=i},{"./SyntheticUIEvent":182,"./ViewportMetrics":185,"./getEventModifierState":197}],180:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticUIEvent"),o=e("./getEventModifierState"),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};r.augmentClass(i,a),t.exports=i},{"./SyntheticUIEvent":182,"./getEventModifierState":197}],181:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o={propertyName:null,elapsedTime:null,pseudoElement:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticEvent":175}],182:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticEvent"),o=e("./getEventTarget"),a={view:function(e){if(e.view)return e.view;var t=o(e);if(null!=t&&t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};r.augmentClass(i,a),t.exports=i},{"./SyntheticEvent":175,"./getEventTarget":198}],183:[function(e,t,n){"use strict";function i(e,t,n,i){return r.call(this,e,t,n,i)}var r=e("./SyntheticMouseEvent"),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};r.augmentClass(i,o),t.exports=i},{"./SyntheticMouseEvent":179}],184:[function(e,t,n){"use strict";var i=e("fbjs/lib/invariant"),r={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,n,r,o,a,s,l){this.isInTransaction()?i(!1):void 0;var c,u;try{this._isInTransaction=!0,c=!0,this.initializeAll(0),u=e.call(t,n,r,o,a,s,l),c=!1}finally{try{if(c)try{this.closeAll(0)}catch(e){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return u},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var i=t[n];try{this.wrapperInitData[n]=o.OBSERVED_ERROR,this.wrapperInitData[n]=i.initialize?i.initialize.call(this):null;
}finally{if(this.wrapperInitData[n]===o.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(e){}}}},closeAll:function(e){this.isInTransaction()?void 0:i(!1);for(var t=this.transactionWrappers,n=e;n<t.length;n++){var r,a=t[n],s=this.wrapperInitData[n];try{r=!0,s!==o.OBSERVED_ERROR&&a.close&&a.close.call(this,s),r=!1}finally{if(r)try{this.closeAll(n+1)}catch(e){}}}this.wrapperInitData.length=0}},o={Mixin:r,OBSERVED_ERROR:{}};t.exports=o},{"fbjs/lib/invariant":53}],185:[function(e,t,n){"use strict";var i={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){i.currentScrollLeft=e.x,i.currentScrollTop=e.y}};t.exports=i},{}],186:[function(e,t,n){"use strict";function i(e,t){if(null==t?r(!1):void 0,null==e)return t;var n=Array.isArray(e),i=Array.isArray(t);return n&&i?(e.push.apply(e,t),e):n?(e.push(t),e):i?[e].concat(t):[e,t]}var r=e("fbjs/lib/invariant");t.exports=i},{"fbjs/lib/invariant":53}],187:[function(e,t,n){"use strict";function i(e){for(var t=1,n=0,i=0,o=e.length,a=o&-4;i<a;){for(var s=Math.min(i+4096,a);i<s;i+=4)n+=(t+=e.charCodeAt(i))+(t+=e.charCodeAt(i+1))+(t+=e.charCodeAt(i+2))+(t+=e.charCodeAt(i+3));t%=r,n%=r}for(;i<o;i++)n+=t+=e.charCodeAt(i);return t%=r,n%=r,t|n<<16}var r=65521;t.exports=i},{}],188:[function(e,t,n){"use strict";var i=!1;t.exports=i},{}],189:[function(e,t,n){"use strict";var i=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,i,r){MSApp.execUnsafeLocalFunction(function(){return e(t,n,i,r)})}:e};t.exports=i},{}],190:[function(e,t,n){"use strict";function i(e,t,n){var i=null==t||"boolean"==typeof t||""===t;if(i)return"";var r=isNaN(t);if(r||0===t||o.hasOwnProperty(e)&&o[e])return""+t;if("string"==typeof t){t=t.trim()}return t+"px"}var r=e("./CSSProperty"),o=(e("fbjs/lib/warning"),r.isUnitlessNumber);t.exports=i},{"./CSSProperty":80,"fbjs/lib/warning":63}],191:[function(e,t,n){"use strict";function i(e){return o[e]}function r(e){return(""+e).replace(a,i)}var o={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},a=/[&><"']/g;t.exports=r},{}],192:[function(e,t,n){"use strict";function i(e){if(null==e)return null;if(1===e.nodeType)return e;var t=o.get(e);return t?(t=a(t),t?r.getNodeFromInstance(t):null):void s(("function"==typeof e.render,!1))}var r=(e("./ReactCurrentOwner"),e("./ReactDOMComponentTree")),o=e("./ReactInstanceMap"),a=e("./getNativeComponentFromComposite"),s=e("fbjs/lib/invariant");e("fbjs/lib/warning");t.exports=i},{"./ReactCurrentOwner":113,"./ReactDOMComponentTree":118,"./ReactInstanceMap":146,"./getNativeComponentFromComposite":200,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],193:[function(e,t,n){"use strict";function i(e,t,n){var i=e,r=void 0===i[n];r&&null!=t&&(i[n]=t)}function r(e){if(null==e)return e;var t={};return o(e,i,t),t}var o=(e("./KeyEscapeUtils"),e("./traverseAllChildren"));e("fbjs/lib/warning");t.exports=r},{"./KeyEscapeUtils":100,"./traverseAllChildren":213,"fbjs/lib/warning":63}],194:[function(e,t,n){"use strict";var i=function(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)};t.exports=i},{}],195:[function(e,t,n){"use strict";function i(e){var t,n=e.keyCode;return"charCode"in e?(t=e.charCode,0===t&&13===n&&(t=13)):t=n,t>=32||13===t?t:0}t.exports=i},{}],196:[function(e,t,n){"use strict";function i(e){if(e.key){var t=o[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n=r(e);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?a[e.keyCode]||"Unidentified":""}var r=e("./getEventCharCode"),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},a={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=i},{"./getEventCharCode":195}],197:[function(e,t,n){"use strict";function i(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var i=o[e];return!!i&&!!n[i]}function r(e){return i}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};t.exports=r},{}],198:[function(e,t,n){"use strict";function i(e){var t=e.target||e.srcElement||window;return t.correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}t.exports=i},{}],199:[function(e,t,n){"use strict";function i(e){var t=e&&(r&&e[r]||e[o]);if("function"==typeof t)return t}var r="function"==typeof Symbol&&Symbol.iterator,o="@@iterator";t.exports=i},{}],200:[function(e,t,n){"use strict";function i(e){for(var t;(t=e._renderedNodeType)===r.COMPOSITE;)e=e._renderedComponent;return t===r.NATIVE?e._renderedComponent:t===r.EMPTY?null:void 0}var r=e("./ReactNodeTypes");t.exports=i},{"./ReactNodeTypes":155}],201:[function(e,t,n){"use strict";function i(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function r(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function o(e,t){for(var n=i(e),o=0,a=0;n;){if(3===n.nodeType){if(a=o+n.textContent.length,o<=t&&a>=t)return{node:n,offset:t-o};o=a}n=i(r(n))}}t.exports=o},{}],202:[function(e,t,n){"use strict";function i(){return!o&&r.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var r=e("fbjs/lib/ExecutionEnvironment"),o=null;t.exports=i},{"fbjs/lib/ExecutionEnvironment":39}],203:[function(e,t,n){"use strict";function i(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function r(e){if(s[e])return s[e];if(!a[e])return e;var t=a[e];for(var n in t)if(t.hasOwnProperty(n)&&n in l)return s[e]=t[n];return""}var o=e("fbjs/lib/ExecutionEnvironment"),a={animationend:i("Animation","AnimationEnd"),animationiteration:i("Animation","AnimationIteration"),animationstart:i("Animation","AnimationStart"),transitionend:i("Transition","TransitionEnd")},s={},l={};o.canUseDOM&&(l=document.createElement("div").style,"AnimationEvent"in window||(delete a.animationend.animation,delete a.animationiteration.animation,delete a.animationstart.animation),"TransitionEvent"in window||delete a.transitionend.transition),t.exports=r},{"fbjs/lib/ExecutionEnvironment":39}],204:[function(e,t,n){"use strict";function i(e){return"function"==typeof e&&"undefined"!=typeof e.prototype&&"function"==typeof e.prototype.mountComponent&&"function"==typeof e.prototype.receiveComponent}function r(e){var t,n=null===e||e===!1;if(n)t=s.create(r);else if("object"==typeof e){var o=e;!o||"function"!=typeof o.type&&"string"!=typeof o.type?c(!1):void 0,t="string"==typeof o.type?l.createInternalComponent(o):i(o.type)?new o.type(o):new u(o)}else"string"==typeof e||"number"==typeof e?t=l.createInstanceForText(e):c(!1);t._mountIndex=0,t._mountImage=null;return t}var o=e("object-assign"),a=e("./ReactCompositeComponent"),s=e("./ReactEmptyComponent"),l=e("./ReactNativeComponent"),c=(e("./ReactInstrumentation"),e("fbjs/lib/invariant")),u=(e("fbjs/lib/warning"),function(e){this.construct(e)});o(u.prototype,a.Mixin,{_instantiateReactComponent:r});t.exports=r},{"./ReactCompositeComponent":112,"./ReactEmptyComponent":139,"./ReactInstrumentation":147,"./ReactNativeComponent":153,"fbjs/lib/invariant":53,"fbjs/lib/warning":63,"object-assign":68}],205:[function(e,t,n){"use strict";function i(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,i=n in document;if(!i){var a=document.createElement("div");a.setAttribute(n,"return;"),i="function"==typeof a[n]}return!i&&r&&"wheel"===e&&(i=document.implementation.hasFeature("Events.wheel","3.0")),i}var r,o=e("fbjs/lib/ExecutionEnvironment");o.canUseDOM&&(r=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=i},{"fbjs/lib/ExecutionEnvironment":39}],206:[function(e,t,n){"use strict";function i(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&r[e.type]||"textarea"===t)}var r={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=i},{}],207:[function(e,t,n){"use strict";function i(e){return r.isValidElement(e)?void 0:o(!1),e}var r=e("./ReactElement"),o=e("fbjs/lib/invariant");t.exports=i},{"./ReactElement":137,"fbjs/lib/invariant":53}],208:[function(e,t,n){"use strict";function i(e){return'"'+r(e)+'"'}var r=e("./escapeTextContentForBrowser");t.exports=i},{"./escapeTextContentForBrowser":191}],209:[function(e,t,n){"use strict";var i=e("./ReactMount");t.exports=i.renderSubtreeIntoContainer},{"./ReactMount":150}],210:[function(e,t,n){"use strict";var i=e("fbjs/lib/ExecutionEnvironment"),r=/^[ \r\n\t\f]/,o=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,a=e("./createMicrosoftUnsafeLocalFunction"),s=a(function(e,t){e.innerHTML=t});if(i.canUseDOM){var l=document.createElement("div");l.innerHTML=" ",""===l.innerHTML&&(s=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),r.test(t)||"<"===t[0]&&o.test(t)){e.innerHTML=String.fromCharCode(65279)+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t}),l=null}t.exports=s},{"./createMicrosoftUnsafeLocalFunction":189,"fbjs/lib/ExecutionEnvironment":39}],211:[function(e,t,n){"use strict";var i=e("fbjs/lib/ExecutionEnvironment"),r=e("./escapeTextContentForBrowser"),o=e("./setInnerHTML"),a=function(e,t){e.textContent=t};i.canUseDOM&&("textContent"in document.documentElement||(a=function(e,t){o(e,r(t))})),t.exports=a},{"./escapeTextContentForBrowser":191,"./setInnerHTML":210,"fbjs/lib/ExecutionEnvironment":39}],212:[function(e,t,n){"use strict";function i(e,t){var n=null===e||e===!1,i=null===t||t===!1;if(n||i)return n===i;var r=typeof e,o=typeof t;return"string"===r||"number"===r?"string"===o||"number"===o:"object"===o&&e.type===t.type&&e.key===t.key}t.exports=i},{}],213:[function(e,t,n){"use strict";function i(e,t){return e&&"object"==typeof e&&null!=e.key?c.escape(e.key):t.toString(36)}function r(e,t,n,o){var p=typeof e;if("undefined"!==p&&"boolean"!==p||(e=null),null===e||"string"===p||"number"===p||a.isValidElement(e))return n(o,e,""===t?u+i(e,0):t),1;var h,f,m=0,g=""===t?u:t+d;if(Array.isArray(e))for(var v=0;v<e.length;v++)h=e[v],f=g+i(h,v),m+=r(h,f,n,o);else{var y=s(e);if(y){var b,k=y.call(e);if(y!==e.entries)for(var x=0;!(b=k.next()).done;)h=b.value,f=g+i(h,x++),m+=r(h,f,n,o);else for(;!(b=k.next()).done;){var w=b.value;w&&(h=w[1],f=g+c.escape(w[0])+d+i(h,0),m+=r(h,f,n,o))}}else if("object"===p){String(e);l(!1)}}return m}function o(e,t,n){return null==e?0:r(e,"",t,n)}var a=(e("./ReactCurrentOwner"),e("./ReactElement")),s=e("./getIteratorFn"),l=e("fbjs/lib/invariant"),c=e("./KeyEscapeUtils"),u=(e("fbjs/lib/warning"),"."),d=":";t.exports=o},{"./KeyEscapeUtils":100,"./ReactCurrentOwner":113,"./ReactElement":137,"./getIteratorFn":199,"fbjs/lib/invariant":53,"fbjs/lib/warning":63}],214:[function(e,t,n){"use strict";var i=(e("object-assign"),e("fbjs/lib/emptyFunction")),r=(e("fbjs/lib/warning"),i);t.exports=r},{"fbjs/lib/emptyFunction":45,"fbjs/lib/warning":63,"object-assign":68}],215:[function(e,t,n){"use strict";t.exports=e("./lib/React")},{"./lib/React":103}],216:[function(e,t,n){arguments[4][36][0].apply(n,arguments)},{"./lib/type":217,dup:36}],217:[function(e,t,n){function i(e){var t=Object.prototype.toString.call(e).match(o)[1].toLowerCase();return"function"==typeof Promise&&e instanceof Promise?"promise":null===e?"null":void 0===e?"undefined":t}function r(){return this instanceof r?void(this.tests={}):new r}var n=t.exports=i,o=/^\[object (.*)\]$/;n.Library=r,r.prototype.of=i,r.prototype.define=function(e,t){return 1===arguments.length?this.tests[e]:(this.tests[e]=t,this)},r.prototype.test=function(e,t){if(t===i(e))return!0;var n=this.tests[t];if(n&&"regexp"===i(n))return n.test(e);if(n&&"function"===i(n))return n(e);throw new ReferenceError('Type test "'+t+'" not defined or invalid.')}},{}],218:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,t){var n=t,i=void 0;switch(n.siteHeader={activePage:n.activePage,loginAccount:n.loginAccount,positionsSummary:n.marketsTotals.positionsSummary,transactionsTotals:n.transactionsTotals,isTransactionsWorking:n.isTransactionsWorking,marketsLink:n.links&&n.links.marketsLink||void 0,positionsLink:n.links&&n.links.positionsLink||void 0,transactionsLink:n.links&&n.links.transactionsLink||void 0,authLink:n.links&&n.links.authLink||void 0},n.activePage){case l.REGISTER:case l.LOGIN:case l.LOGOUT:i=o.default.createElement(g.default,{siteHeader:n.siteHeader,authForm:n.authForm});break;case s.MAKE:i=o.default.createElement(f.default,{siteHeader:n.siteHeader,createMarketForm:n.createMarketForm});break;case s.POSITIONS:i=o.default.createElement(y.default,{siteHeader:n.siteHeader,positionsSummary:n.marketsTotals.positionsSummary,markets:n.markets});break;case s.TRANSACTIONS:i=o.default.createElement(k.default,{siteHeader:n.siteHeader,transactions:n.transactions,transactionsTotals:n.transactionsTotals});break;case s.M:i=o.default.createElement(p.default,{siteHeader:n.siteHeader,sideOptions:n.sideOptions,updateSelectedOutcome:n.selectedOutcome.updateSelectedOutcome,selectedOutcomeID:n.selectedOutcome.selectedOutcomeID,market:n.market,numPendingReports:n.marketsTotals.numPendingReports});break;default:i=o.default.createElement(u.default,{siteHeader:n.siteHeader,createMarketLink:(n.links||{}).createMarketLink,keywords:n.keywords&&n.keywords.value,onChangeKeywords:n.keywords&&n.keywords.onChangeKeywords,markets:n.markets,marketsHeader:n.marketsHeader,favoriteMarkets:n.favoriteMarkets,filters:n.filters,pagination:n.pagination,selectedSort:n.searchSort.selectedSort,sortOptions:n.searchSort.sortOptions,onChangeSort:n.searchSort.onChangeSort})}(0,a.render)(i,e)};var r=e("react"),o=i(r),a=e("react-dom"),s=e("./modules/site/constants/pages"),l=e("./modules/auth/constants/auth-types"),c=e("./modules/markets/components/markets-page"),u=i(c),d=e("./modules/market/components/market-page"),p=i(d),h=e("./modules/create-market/components/create-market-page"),f=i(h),m=e("./modules/auth/components/auth-page"),g=i(m),v=e("./modules/positions/components/positions-page"),y=i(v),b=e("./modules/transactions/components/transactions-page"),k=i(b)},{"./modules/auth/components/auth-page":221,"./modules/auth/constants/auth-types":222,"./modules/create-market/components/create-market-page":241,"./modules/market/components/market-page":249,"./modules/markets/components/markets-page":253,"./modules/positions/components/positions-page":259,"./modules/site/constants/pages":266,"./modules/transactions/components/transactions-page":270,react:215,"react-dom":76}],219:[function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.assertions=n.App=void 0;var o=e("./app"),a=r(o),s=e("../test/assertions/"),l=i(s),c={App:a.default,assertions:l};n.default=c,n.App=a.default,n.assertions=l},{"../test/assertions/":283,"./app":218}],220:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=e("classnames"),d=i(u),p=e("../../link/components/link"),h=i(p),f=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.handleSubmit=function(e){e.preventDefault(),n.setState({msg:void 0}),setTimeout(function(){return n.props.onSubmit(n.refs.username&&n.refs.username.value,n.refs.password&&n.refs.password.value,n.refs.password2&&n.refs.password2.value)},100)},n.handleSubmit=n.handleSubmit.bind(n),n.state={msg:n.props.msg},n}return a(t,e),s(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({msg:e.msg})}},{key:"componentDidUpdate",value:function(){this.props.clearUsername&&(this.refs.username.value=""),this.props.clearPassword&&(this.refs.password.value="",this.refs.password2.value=""),this.props.clearCode&&(this.refs.code.value="")}},{key:"render",value:function(){var e=this.props;return c.default.createElement("form",{className:e.className,onSubmit:this.handleSubmit},c.default.createElement("h1",{className:"title"},e.title,e.topLinkText&&c.default.createElement(h.default,{className:"top-link",href:e.topLink.href,onClick:e.topLink.onClick},e.topLinkText)),this.state.msg&&c.default.createElement("span",{className:(0,d.default)("msg",e.msgClass)},this.state.msg),c.default.createElement("input",{ref:"username",className:(0,d.default)("auth-input",{displayNone:!e.isVisibleUsername}),type:"text",placeholder:"name",maxLength:"30",autoFocus:"autofocus"}),c.default.createElement("input",{ref:"password",className:(0,d.default)("auth-input",{displayNone:!e.isVisiblePassword}),type:"password",placeholder:e.passwordPlaceholder||"password",maxLength:"256"}),c.default.createElement("input",{ref:"password2",className:(0,d.default)("auth-input",{displayNone:!e.isVisiblePassword2}),type:"password",placeholder:e.password2Placeholder||"confirm password",maxLength:"256"}),e.bottomLinkText&&c.default.createElement(h.default,{className:"bottom-link",href:e.bottomLinkHref,onClick:e.onClickBottomLink},e.bottomLinkText),c.default.createElement("input",{className:(0,d.default)("button","submit-button",e.submitButtonClass),type:"submit",value:e.submitButtonText}),c.default.createElement(h.default,{type:"button",className:"button x-button",title:"Close",href:e.closeLink.href,onClick:e.closeLink.onClick},""))}}]),t}(l.Component);f.propTypes={className:l.PropTypes.string,title:l.PropTypes.string,passwordPlaceholder:l.PropTypes.string,password2Placeholder:l.PropTypes.string,isVisibleUsername:l.PropTypes.bool,isVisiblePassword:l.PropTypes.bool,isVisiblePassword2:l.PropTypes.bool,clearUsername:l.PropTypes.bool,clearPassword:l.PropTypes.bool,clearCode:l.PropTypes.bool,msg:l.PropTypes.string,msgClass:l.PropTypes.string,topLinkText:l.PropTypes.string,topLink:l.PropTypes.object,botttomLinkText:l.PropTypes.string,botttomLink:l.PropTypes.object,closeLink:l.PropTypes.object,submitButtonText:l.PropTypes.string,submitButtonClass:l.PropTypes.string,onSubmit:l.PropTypes.func},n.default=f},{"../../link/components/link":244,classnames:33,react:215}],221:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../site/components/site-header"),l=i(s),c=e("../../site/components/site-footer"),u=i(c),d=e("../../auth/components/auth-form"),p=i(d),h=function(e){return a.default.createElement("main",{className:"page auth"},a.default.createElement(l.default,e.siteHeader),a.default.createElement("header",{className:"page-header"},a.default.createElement("div",{className:"l-container"},a.default.createElement("span",{className:"big-line"},"Augur is a completely decentralized system")," including user accounts. Your credentials never leave the browser, and you are responsible for keeping them safe.",a.default.createElement("br",null),a.default.createElement("b",null,a.default.createElement("i",{className:"negative"},"It is impossible to recover your account if your credentials get lost!")))),a.default.createElement(p.default,r({className:"auth-form"},e.authForm)),a.default.createElement(u.default,null))};h.propTypes={className:o.PropTypes.string,siteHeader:o.PropTypes.object,authForm:o.PropTypes.object},n.default=h},{"../../auth/components/auth-form":220,"../../site/components/site-footer":264,"../../site/components/site-header":265,react:215}],222:[function(e,t,n){"use strict";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(n,"__esModule",{value:!0});var r,o=n.REGISTER="register",a=n.LOGIN="login",s=n.LOGOUT="logout";n.AUTH_TYPES=(r={},i(r,o,o),i(r,a,a),i(r,s,s),r),n.DEFAULT_AUTH_TYPE=o},{}],223:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../common/components/clickable"),l=i(s),c=e("../../common/components/value-denomination"),u=i(c),d=function(e){return a.default.createElement("div",{className:"order-book"},a.default.createElement("div",{className:"bids"},a.default.createElement("h5",null,"Bids"),e.bids.map(function(t,n){return a.default.createElement("article",{key:t.price.full,className:"bid-ask bid"},a.default.createElement(l.default,{onClick:function(){e.updateTradeOrder(e.outcome.id,t.shares.value,t.price.value,"ask")}},a.default.createElement(u.default,r({className:"shares"},t.shares))),a.default.createElement(l.default,{onClick:function(){e.updateTradeOrder(e.outcome.id,0,t.price.value)}},a.default.createElement(u.default,r({className:"price"},t.price))))}),!e.bids.length&&a.default.createElement("article",{className:"bid-ask ask"},a.default.createElement(u.default,{className:"price"}),a.default.createElement(u.default,{className:"shares",formatted:"-"}))),a.default.createElement("div",{className:"asks"},a.default.createElement("h5",null,"Asks"),e.asks.map(function(t,n){return a.default.createElement("article",{key:t.price.full,className:"bid-ask ask"},a.default.createElement(l.default,{onClick:function(){e.updateTradeOrder(e.outcome.id,0,t.price.value)}},a.default.createElement(u.default,r({className:"price"},t.price))),a.default.createElement(l.default,{onClick:function(){e.updateTradeOrder(e.outcome.id,t.shares.value,t.price.value,"bid")}},a.default.createElement(u.default,r({className:"shares"},t.shares))))}),!e.asks.length&&a.default.createElement("article",{className:"bid-ask ask"},a.default.createElement(u.default,{className:"price",formatted:"-"}),a.default.createElement(u.default,{className:"shares"}))))};d.propTypes={outcome:o.PropTypes.object,updateTradeOrder:o.PropTypes.func,bids:o.PropTypes.array,asks:o.PropTypes.array},n.default=d},{"../../common/components/clickable":225,"../../common/components/value-denomination":231,react:215}],224:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("classnames"),s=i(a),l=function(e){return o.default.createElement("span",{className:(0,s.default)("checkbox",e.className,{checked:e.isChecked}),title:e.title},o.default.createElement("span",{className:"checkbox-box",onClick:e.onClick}),o.default.createElement("span",{className:"checkbox-label",tabIndex:e.tabIndex,onClick:e.onClick},e.text),null!=e.text2&&o.default.createElement("span",{className:"checkbox-label2",onClick:e.onClick},e.text2))};l.propTypes={className:r.PropTypes.string,title:r.PropTypes.string,text:r.PropTypes.string,text2:r.PropTypes.string,isChecked:r.PropTypes.bool,tabIndex:r.PropTypes.number,onClick:r.PropTypes.func},n.default=l},{classnames:33,react:215}],225:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.onClick=function(){"function"==typeof n.props.onClick&&n.props.onClick()},n.onClick=n.onClick.bind(n),n}return a(t,e),s(t,[{key:"render",value:function(){return c.default.createElement(this.props.component,{className:"clickable",onClick:this.onClick},this.props.children)}}]),t}(l.Component);u.propTypes={onClick:l.PropTypes.func,component:l.PropTypes.any,children:l.PropTypes.any},u.defaultProps={component:"span"},n.default=u},{react:215}],226:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("classnames"),s=i(a),l=function(e){return o.default.createElement(e.component,{className:(0,s.default)("collapse",{displayNone:!e.isOpen})},e.children)};l.propTypes={isOpen:r.PropTypes.bool,component:r.PropTypes.any,children:r.PropTypes.any},l.defaultProps={component:"div"},n.default=l},{classnames:33,react:215}],227:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("react-datetime"),s=i(a),l=function(e){var t=s.default.moment().subtract(1,"day"),n=function(e){return e.isAfter(t)},i=e.endDate?e.endDate:null;return o.default.createElement(s.default,{isValidDate:n,dateFormat:"YYYY/MM/DD",timeFormat:"hh:mm:ss a",defaultValue:i,onChange:function(t){return e.onValuesUpdated({endDate:new Date(t)})},open:!0,inputProps:{placeholder:"YYYY/MM/DD hh:mm:ss a"}})};l.propTypes={onValuesUpdated:r.PropTypes.func,endDate:r.PropTypes.object},n.default=l},{react:215,"react-datetime":69}],228:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("classnames"),s=i(a),l=function(e){return o.default.createElement("span",{className:(0,s.default)("drop-down",e.className)},!!e.selected&&o.default.createElement("span",{className:"selected"},e.selected.label),o.default.createElement("ul",{className:"options"},e.options.filter(function(t){return t.value!==e.selected.value}).map(function(t){return o.default.createElement("li",{key:t.value,className:"option",onClick:function(){return e.onChange(t.value)}},t.label)})))};l.propTypes={className:r.PropTypes.string,selected:r.PropTypes.object,options:r.PropTypes.array,onChange:r.PropTypes.func},n.default=l},{classnames:33,react:215}],229:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=e("classnames"),d=i(u),p=e("../../common/components/input"),h=i(p),f=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.handleChange=function(e,t){var i=(n.state.list||[]).slice();t&&t.length||n.props.listMinElements&&!(e>=n.props.listMinElements)?i[e]=t:i.splice(e,1),n.state.timeoutID&&clearTimeout(n.state.timeoutID),n.setState({timeoutID:setTimeout(function(){return n.props.onChange(i)},750),list:i})},n.fillMinElements=function(){var e=arguments.length<=0||void 0===arguments[0]?[]:arguments[0],t=arguments[1],n=void 0,i=void 0,r=e;if(t&&e.length<t)for(r=r.slice(),n=t-r.length,i=0;i<n;i++)r.push("");return r},n.handleChange=n.handleChange.bind(n),n.fillMinElements=n.fillMinElements.bind(n),n.state={list:n.fillMinElements(n.props.list,n.props.listMinElements),timeoutID:""},n}return a(t,e),s(t,[{key:"render",value:function(){var e=this,t=this.props,n=this.state,i=n.list;return(!t.listMaxElements||i.length<t.listMaxElements)&&(i=i.slice(),i.push("")),c.default.createElement("div",{className:(0,d.default)("input-list",t.className)},i.map(function(n,r){return c.default.createElement("div",{key:r,className:(0,d.default)("item",{"new-item":!(r!==i.length-1||n&&n.length)})},c.default.createElement(h.default,{type:"text",maxLength:t.itemMaxLength,value:n,debounceMS:0,onChange:function(t){return e.handleChange(r,t)}}),t.errors&&t.errors[r]&&t.errors[r].length&&c.default.createElement("span",{className:"error-message"},t.errors[r]))}))}}]),t}(l.Component);f.propTypes={className:l.PropTypes.string,list:l.PropTypes.array,errors:l.PropTypes.array,listMinElements:l.PropTypes.number,listMaxElements:l.PropTypes.number,itemMaxLength:l.PropTypes.number,onChange:l.PropTypes.func},n.default=f},{"../../common/components/input":230,classnames:33,react:215}],230:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("classnames"),p=i(d),h=e("../../../utils/should-component-update-pure"),f=i(h),m=function(e){
function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.handleOnChange=function(e){var t=e.target.value;0!==n.props.debounceMS?(clearTimeout(n.state.timeoutID),n.setState({timeoutID:setTimeout(function(){return n.sendValue(t)},n.props.debounceMS||750)})):n.sendValue(t),n.setState({value:t})},n.handleOnBlur=function(){0!==n.props.debounceMS&&(clearTimeout(n.state.timeoutID),n.sendValue(n.state.value))},n.handleClear=function(){n.setState({value:""}),n.sendValue("")},n.sendValue=function(e){n.props.onChange(e)},n.state={value:n.props.value||"",timeoutID:""},n.shouldComponentUpdate=f.default,n.componentWillReceiveProps=function(e){!e.value&&0!==e.value||e.value===n.state.value||e.value===n.props.value||n.setState({value:e.value})},n.handleOnChange=n.handleOnChange.bind(n),n.handleOnBlur=n.handleOnBlur.bind(n),n.handleClear=n.handleClear.bind(n),n.sendValue=n.sendValue.bind(n),n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props,t=this.state;return u.default.createElement("div",{className:(0,p.default)("input",{clearable:e.isClearable!==!1},this.props.className)},!e.isMultiline&&u.default.createElement("input",s({},e,{className:"box",value:t.value,onChange:this.handleOnChange,onBlur:this.handleOnBlur})),e.isMultiline&&u.default.createElement("textarea",s({},e,{className:"box",value:t.value,onChange:this.handleOnChange,onBlur:this.handleOnBlur})),!e.isMultiline&&e.isClearable!==!1&&u.default.createElement("button",{className:"clear",onClick:this.handleClear},""))}}]),t}(c.Component);m.propTypes={type:c.PropTypes.string,className:c.PropTypes.string,value:c.PropTypes.any,isMultiline:c.PropTypes.bool,isClearable:c.PropTypes.bool,debounceMS:c.PropTypes.number,onChange:c.PropTypes.func},n.default=m},{"../../../utils/should-component-update-pure":274,classnames:33,react:215}],231:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("classnames"),s=i(a),l=function(e){return o.default.createElement("span",{className:(0,s.default)("value-denomination",e.className,{positive:e.formattedValue>0,negative:e.formattedValue<0})},e.formatted&&o.default.createElement("span",{className:"value"},e.formatted),e.denomination&&o.default.createElement("span",{className:"denomination"},e.denomination))};l.propTypes={className:r.PropTypes.string,value:r.PropTypes.number,formattedValue:r.PropTypes.number,formatted:r.PropTypes.string,denomination:r.PropTypes.string},n.default=l},{classnames:33,react:215}],232:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../markets/constants/market-types"),s=function(e){return o.default.createElement("div",{className:"step-1"},o.default.createElement("h1",null,"Select the type of market you want to create"),o.default.createElement("hr",null),o.default.createElement("div",{className:"market-types"},o.default.createElement("div",{className:"market-type binary"},o.default.createElement("h4",null,"A market with a YES or NO outcome"),o.default.createElement("button",{className:"button select",onClick:function(){return e.onValuesUpdated({type:a.BINARY,step:2})}},"Yes / No"),o.default.createElement("p",null,"Ask a question that has a simple YES or NO answer")),o.default.createElement("hr",null),o.default.createElement("div",{className:"market-type categorical"},o.default.createElement("h4",null,"A market with a MULTIPLE CHOICE outcome"),o.default.createElement("button",{className:"button select",onClick:function(){return e.onValuesUpdated({type:a.CATEGORICAL,step:2})}},"Multiple Choice"),o.default.createElement("p",null,"Ask a question and provide a set of multiple choice answers")),o.default.createElement("hr",null),o.default.createElement("div",{className:"market-type scalar"},o.default.createElement("h4",null,"A market with a NUMERIC outcome"),o.default.createElement("button",{className:"button select",onClick:function(){return e.onValuesUpdated({type:a.SCALAR,step:2})}},"Numeric"),o.default.createElement("p",null,"Ask a question that has an answer within a range of numbers"))),o.default.createElement("hr",null),o.default.createElement("div",{className:"important-message"},o.default.createElement("h4",null,"Important:"),o.default.createElement("p",null,"There is a 30.00 ETH bond charged to your account when you create a new market. If the outcome of your market cannot be determined (and the market cannot be expired as a result) or if your market is ruled unethical, this bond will be forfeited. If your market is expired the bond will be returned to you in full.")))};s.propTypes={onValuesUpdated:r.PropTypes.func},n.default=s},{"../../markets/constants/market-types":256,react:215}],233:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../common/components/input-list"),s=i(a),l=function(e){return o.default.createElement("div",{className:"categorical"},o.default.createElement("h4",null,"What are the possible answers to your question? (required)"),o.default.createElement("p",null,'All possible outcomes to your question must be covered by these answers. You can add an "any other outcome" type answer at the end to ensure everything is covered.'),o.default.createElement(s.default,{className:"categorical-list",list:e.categoricalOutcomes,errors:e.errors&&e.errors.categoricalOutcomes||[],listMinElements:e.categoricalOutcomesMinNum,listMaxElements:e.categoricalOutcomesMaxNum,itemMaxLength:e.categoricalOutcomeMaxLength,onChange:function(t){return e.onValuesUpdated({categoricalOutcomes:t})}}))};l.propTypes={categoricalOutcomes:r.PropTypes.array,errors:r.PropTypes.object,categoricalOutcomesMinNum:r.PropTypes.number,categoricalOutcomesMaxNum:r.PropTypes.number,categoricalOutcomeMaxLength:r.PropTypes.number,onValuesUpdated:r.PropTypes.func},n.default=l},{"../../common/components/input-list":229,react:215}],234:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../common/components/input"),s=i(a),l=function(e){return o.default.createElement("div",{className:"scalar"},o.default.createElement("h4",null,"What are the minimum and maximum values allowed when answering?"),o.default.createElement("p",null,"The answer to your question must be a number that falls between the minimum and maximum values you're about to set."),o.default.createElement("div",{className:"scalar-num min"},o.default.createElement("label",null,"Minimum"),o.default.createElement(s.default,{type:"text",value:e.scalarSmallNum,placeholder:"Minimum answer",maxLength:6,onChange:function(t){return e.onValuesUpdated({scalarSmallNum:t})}}),e.errors.scalarSmallNum&&o.default.createElement("span",{className:"error-message"},e.errors.scalarSmallNum)),o.default.createElement("div",{className:"scalar-num min"},o.default.createElement("label",null,"Maximum"),o.default.createElement(s.default,{type:"text",value:e.scalarBigNum,placeholder:"Maximum answer",maxLength:6,onChange:function(t){return e.onValuesUpdated({scalarBigNum:t})}}),e.errors.scalarBigNum&&o.default.createElement("span",{className:"error-message"},e.errors.scalarBigNum)))};l.propTypes={scalarSmallNum:r.PropTypes.string,scalarBigNum:r.PropTypes.string,onValuesUpdated:r.PropTypes.func},n.default=l},{"../../common/components/input":230,react:215}],235:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../markets/constants/market-types"),s=e("./create-market-form-2-categorical"),l=i(s),c=e("./create-market-form-2-scalar"),u=i(c),d=e("../../create-market/components/create-market-form-buttons"),p=i(d),h=e("../../common/components/input"),f=i(h),m=e("../../common/components/datepicker"),g=i(m),v=function(e){var t=void 0;switch(e.type){case a.CATEGORICAL:t=o.default.createElement(l.default,e);break;case a.SCALAR:t=o.default.createElement(u.default,e)}return o.default.createElement("div",{className:"step-2"},o.default.createElement("div",{className:"description"},o.default.createElement("h1",null,"What do you want to ask?"),o.default.createElement(f.default,{type:"text",value:e.description,placeholder:e.descriptionPlaceholder,maxLength:e.descriptionMaxLength,onChange:function(t){return e.onValuesUpdated({description:t})}}),e.errors.description&&o.default.createElement("span",{className:"error-message"},e.errors.description)),t,o.default.createElement("div",{className:"end-date"},o.default.createElement("h4",null,"What's the end date for your question?"),o.default.createElement(g.default,{endDate:e.endDate,onValuesUpdated:e.onValuesUpdated}),e.errors.endDate&&o.default.createElement("span",{className:"error-message"},e.errors.endDate)),o.default.createElement(p.default,{disabled:!e.isValid,onNext:function(){return e.onValuesUpdated({step:e.step+1})},onPrev:function(){return e.onValuesUpdated({step:e.step-1})}}))};v.propTypes={type:r.PropTypes.string,description:r.PropTypes.string,endDate:r.PropTypes.object,descriptionPlaceholder:r.PropTypes.string,descriptionMaxLength:r.PropTypes.number,minEndDate:r.PropTypes.object,isValid:r.PropTypes.bool,errors:r.PropTypes.object,onValuesUpdated:r.PropTypes.func},n.default=v},{"../../common/components/datepicker":227,"../../common/components/input":230,"../../create-market/components/create-market-form-buttons":239,"../../markets/constants/market-types":256,"./create-market-form-2-categorical":233,"./create-market-form-2-scalar":234,react:215}],236:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("classnames"),s=i(a),l=e("../../create-market/constants/market-values-constraints"),c=e("../../common/components/input-list"),u=i(c),d=e("../../create-market/components/create-market-form-buttons"),p=i(d),h=e("../../common/components/input"),f=i(h),m=function(e){return o.default.createElement("div",{className:"step-3"},o.default.createElement("h1",null,"Additional market information"),o.default.createElement("div",{className:"expiry"},o.default.createElement("h4",null,"What is the source of expiry information for your question?"),o.default.createElement("span",{className:"expiry-source-option"},o.default.createElement("input",{value:l.EXPIRY_SOURCE_GENERIC,type:"radio",checked:e.expirySource===l.EXPIRY_SOURCE_GENERIC,onChange:function(){return e.onValuesUpdated({expirySource:l.EXPIRY_SOURCE_GENERIC})}}),o.default.createElement("span",null,"Outcome will be covered by local, national or international news media.")),o.default.createElement("span",{className:"expiry-source-option"},o.default.createElement("input",{value:l.EXPIRY_SOURCE_SPECIFIC,type:"radio",checked:e.expirySource===l.EXPIRY_SOURCE_SPECIFIC,onChange:function(){return e.onValuesUpdated({expirySource:l.EXPIRY_SOURCE_SPECIFIC})}}),o.default.createElement("span",null,"Outcome will be detailed on a specific publicly available website:")),o.default.createElement("div",{className:(0,s.default)("expiry-source-url",{displayNone:e.expirySource!==l.EXPIRY_SOURCE_SPECIFIC})},o.default.createElement(f.default,{type:"text",value:e.expirySourceUrl,placeholder:"http://www.boxofficemojo.com",onChange:function(t){return e.onValuesUpdated({expirySourceUrl:t})}})),(e.errors.expirySource||e.errors.expirySourceUrl)&&o.default.createElement("span",{className:"error-message"},e.errors.expirySource||e.errors.expirySourceUrl)),o.default.createElement("div",{className:"tags"},o.default.createElement("h4",null,"Add some tags to your market (optional)"),o.default.createElement("p",null,"Up to three tags can be added to categorize your market. For example: politics, sports, entertainment or technology."),o.default.createElement(u.default,{className:"tags-list",list:e.tags,errors:e.errors&&e.errors.tags,listMaxElements:e.tagsMaxNum,itemMaxLength:e.tagMaxLength,onChange:function(t){return e.onValuesUpdated({tags:t})}})),o.default.createElement("div",{className:"details-text"},o.default.createElement("h4",null,"Does your question need further explanation? (optional)"),o.default.createElement("p",null,"Your question: ",e.description),o.default.createElement(f.default,{className:"details-text-input",value:e.detailsText,isMultiline:!0,maxLength:500,placeholder:"Optional: enter a more detailed description of your market.",onChange:function(t){return e.onValuesUpdated({detailsText:t})}})),o.default.createElement(p.default,{disabled:!e.isValid,onNext:function(){return e.onValuesUpdated({step:e.step+1})},onPrev:function(){return e.onValuesUpdated({step:e.step-1})}}))};m.propTypes={expirySource:r.PropTypes.string,expirySourceUrl:r.PropTypes.string,tags:r.PropTypes.array,tagsMaxNum:r.PropTypes.number,tagMaxLength:r.PropTypes.number,description:r.PropTypes.string,detailsText:r.PropTypes.string,isValid:r.PropTypes.bool,errors:r.PropTypes.object,onValuesUpdated:r.PropTypes.func},n.default=m},{"../../common/components/input":230,"../../common/components/input-list":229,"../../create-market/components/create-market-form-buttons":239,"../../create-market/constants/market-values-constraints":242,classnames:33,react:215}],237:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../../utils/get"),u=e("../../create-market/components/create-market-form-buttons"),d=i(u),p=e("../../common/components/input"),h=i(p),f=function(e){var t=e.showAdvancedMarketParams?"▲":"▼";return a.default.createElement("div",{className:"step-4"},a.default.createElement("div",{className:"fee"},a.default.createElement("h4",null,"Set the trading fee for your market"),a.default.createElement("p",null,"The Trading Fee is a percentage fee charged against the value of any trade made in the market. You'll receive 50% of all fees charged during the lifetime of your market - with the other 50% being awarded to those reporting the outcome."),a.default.createElement(h.default,{type:"text",value:e.takerFee,isClearable:!1,onChange:function(t){return e.onValuesUpdated({takerFee:t})}}),a.default.createElement("span",{className:"denomination"},"%"),e.errors.takerFee&&a.default.createElement("span",{className:"error-message"},e.errors.takerFee)),a.default.createElement("div",{className:"fee"},a.default.createElement("h4",null,"Set the maker's share of the trading fee"),a.default.createElement("p",null,"The Maker Fee is the percentage split the 'Maker' of an order must pay of the trading fee with the remaining percentage being paid by the 'Taker'."),a.default.createElement(h.default,{type:"text",value:e.makerFee,isClearable:!1,onChange:function(t){return e.onValuesUpdated({makerFee:t})}}),a.default.createElement("span",{className:"denomination"},"%"),e.errors.makerFee&&a.default.createElement("span",{className:"error-message"},e.errors.makerFee)),a.default.createElement("div",{className:"liquidity"},a.default.createElement("h4",null,"Set the amount of initial liquidity"),a.default.createElement("p",null,"Initial liquidity is the amount of ether you're putting into the market to get trading started. The Market Maker will use these funds to buy shares - which are then sold back to those wanting to trade your market when the market opens. Any initial liquidity remaining when the market is expired will be returned to you (along with any profit generated by the Market Maker from selling shares)."),a.default.createElement(h.default,{type:"text",value:e.initialLiquidity,isClearable:!1,onChange:function(t){return e.onValuesUpdated({initialLiquidity:t})}}),a.default.createElement("span",{className:"denomination"},"ETH"),e.errors.initialLiquidity&&a.default.createElement("span",{className:"error-message"},e.errors.initialLiquidity)),a.default.createElement("div",{className:"advanced-market-params"},a.default.createElement("h6",{className:"horizontal-divider",onClick:function(){e.onValuesUpdated({showAdvancedMarketParams:!e.showAdvancedMarketParams})}},a.default.createElement("span",null,t)," Advanced ",a.default.createElement("span",null,t)),a.default.createElement("div",{className:(0,l.default)({displayNone:!e.showAdvancedMarketParams})},a.default.createElement("div",null,a.default.createElement("h4",null,"Initial Fair Price"),a.default.createElement("p",null,"This establishes the initial price for each respective outcome."),e.initialFairPrices.values.map(function(t,n){return a.default.createElement("div",{key:"initialFairPrice"+n},a.default.createElement(h.default,{type:"text",value:e.initialFairPrices.values[n].value,isClearable:!1,onChange:function(t){var i=e.initialFairPrices.values,o=e.initialFairPrices.raw;i[n].value=t,o[n]=t,e.onValuesUpdated({initialFairPrices:r({},e.initialFairPrices,{values:i,raw:o})})}}),a.default.createElement("span",{className:"denomination"},"ETH | ",t.label),!!(0,c.get)(e.errors,"initialFairPrice."+n)&&a.default.createElement("span",{className:"error-message"},e.errors.initialFairPrice[""+n]))})),a.default.createElement("div",null,a.default.createElement("h4",null,"Best Bid/Ask Quantity"),a.default.createElement("p",null,"This defines the number of shares applied to the best bid and ask orders."),a.default.createElement(h.default,{type:"text",value:e.bestStartingQuantity,isClearable:!1,onChange:function(t){return e.onValuesUpdated({bestStartingQuantity:t})}}),a.default.createElement("span",{className:"denomination"},"Shares"),e.errors.bestStartingQuantity&&a.default.createElement("span",{className:"error-message"},e.errors.bestStartingQuantity)),a.default.createElement("div",null,a.default.createElement("h4",null,"Starting Quantity"),a.default.createElement("p",null,"This is the number of shares in each order."),a.default.createElement(h.default,{type:"text",value:e.startingQuantity,isClearable:!1,onChange:function(t){return e.onValuesUpdated({startingQuantity:t})}}),a.default.createElement("span",{className:"denomination"},"Shares"),e.errors.startingQuantity&&a.default.createElement("span",{className:"error-message"},e.errors.startingQuantity)),a.default.createElement("div",null,a.default.createElement("h4",null,"Price Width"),a.default.createElement("p",null,"This defines the spread between the initial best bid and ask orders."),a.default.createElement(h.default,{type:"text",value:e.priceWidth,isClearable:!1,onChange:function(t){return e.onValuesUpdated({priceWidth:t})}}),a.default.createElement("span",{className:"denomination"},"ETH"),e.errors.priceWidth&&a.default.createElement("span",{className:"error-message"},e.errors.priceWidth)))),a.default.createElement(d.default,{disabled:!e.isValid,nextLabel:"review",onNext:function(){return e.onValuesUpdated({step:e.step+1})},onPrev:function(){return e.onValuesUpdated({step:e.step-1})}}))};f.propTypes={onValuesUpdated:o.PropTypes.func,errors:o.PropTypes.object,isValid:o.PropTypes.bool,takerFee:o.PropTypes.number,makerFee:o.PropTypes.number,initialLiquidity:o.PropTypes.any,showAdvancedMarketParams:o.PropTypes.bool,initialFairPrices:o.PropTypes.object,bestStartingQuantity:o.PropTypes.any,startingQuantity:o.PropTypes.any,priceWidth:o.PropTypes.any,priceDepth:o.PropTypes.any},n.default=f},{"../../../utils/get":273,"../../common/components/input":230,"../../create-market/components/create-market-form-buttons":239,classnames:33,react:215}],238:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../market/components/market-item"),s=i(a),l=e("../../create-market/components/create-market-form-buttons"),c=i(l),u=function(e){return o.default.createElement("div",{className:"step-5"},o.default.createElement("h1",null,"Review and submit your new market"),o.default.createElement(s.default,e),o.default.createElement(c.default,{nextLabel:"submit new market",onNext:e.onSubmit,onPrev:function(){return e.onValuesUpdated({step:e.step-1})}}))};u.propTypes={onSubmit:r.PropTypes.func},n.default=u},{"../../create-market/components/create-market-form-buttons":239,"../../market/components/market-item":248,react:215}],239:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=function(e){return o.default.createElement("div",{className:"buttons"},o.default.createElement("button",{className:"button prev",type:"button",onClick:e.onPrev},e.prevLabel||"back"),o.default.createElement("button",{className:"button next",type:"button",disabled:e.disabled,onClick:!e.disabled&&e.onNext},e.nextLabel||"Next"))};a.propTypes={disabled:r.PropTypes.bool,nextLabel:r.PropTypes.string,prevLabel:r.PropTypes.string,onPrev:r.PropTypes.func,onNext:r.PropTypes.func},n.default=a},{react:215}],240:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("./create-market-form-1"),s=i(a),l=e("./create-market-form-2"),c=i(l),u=e("./create-market-form-3"),d=i(u),p=e("./create-market-form-4"),h=i(p),f=e("./create-market-form-5"),m=i(f),g=function(e){var t=void 0;switch(e.step){case 1:default:t=o.default.createElement(s.default,e);break;case 2:t=o.default.createElement(c.default,e);break;case 3:t=o.default.createElement(d.default,e);break;case 4:t=o.default.createElement(h.default,e);break;case 5:t=o.default.createElement(m.default,e)}return o.default.createElement("section",{className:e.className},t)};g.propTypes={className:r.PropTypes.string,step:r.PropTypes.number},n.default=g},{"./create-market-form-1":232,"./create-market-form-2":235,"./create-market-form-3":236,"./create-market-form-4":237,"./create-market-form-5":238,react:215}],241:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../site/components/site-header"),l=i(s),c=e("../../site/components/site-footer"),u=i(c),d=e("../../create-market/components/create-market-form"),p=i(d),h=function(e){return a.default.createElement("main",{className:"page create-market"},a.default.createElement(l.default,e.siteHeader),a.default.createElement("header",{className:"page-header"},a.default.createElement("div",{className:"l-container"},a.default.createElement("span",{className:"big-line"},"Be the market maker"),". Earn fees by making markets for people to trade. The more people ",a.default.createElement("b",null,a.default.createElement("i",null,"trade"))," your markets, the more fees you will ",a.default.createElement("b",null,a.default.createElement("i",null,"make")),".")),a.default.createElement("div",{className:"page-content"},a.default.createElement("div",{className:"l-container"},a.default.createElement(p.default,r({className:"create-market-content"},e.createMarketForm)))),a.default.createElement(u.default,null))};h.propTypes={className:o.PropTypes.string,siteHeader:o.PropTypes.object,createMarketForm:o.PropTypes.object},n.default=h},{"../../create-market/components/create-market-form":240,"../../site/components/site-footer":264,"../../site/components/site-header":265,react:215}],242:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.DESCRIPTION_MIN_LENGTH=1,n.DESCRIPTION_MAX_LENGTH=256,n.CATEGORICAL_OUTCOMES_MIN_NUM=2,n.CATEGORICAL_OUTCOMES_MAX_NUM=8,n.CATEGORICAL_OUTCOME_MAX_LENGTH=250,n.TAGS_MAX_NUM=3,n.TAGS_MAX_LENGTH=25,n.RESOURCES_MAX_NUM=5,n.RESOURCES_MAX_LENGTH=1250,n.EXPIRY_SOURCE_GENERIC="generic",n.EXPIRY_SOURCE_SPECIFIC="specific",n.INITIAL_LIQUIDITY_DEFAULT=500,n.INITIAL_LIQUIDITY_MIN=50,n.TAKER_FEE_DEFAULT=2,n.TAKER_FEE_MIN=1,n.TAKER_FEE_MAX=12.5,n.MAKER_FEE_DEFAULT=1,n.MAKER_FEE_MIN=0,n.STARTING_QUANTITY_DEFAULT=10,n.STARTING_QUANTITY_MIN=.1,n.BEST_STARTING_QUANTITY_DEFAULT=20,n.BEST_STARTING_QUANTITY_MIN=.1,n.PRICE_WIDTH_DEFAULT=.1,n.PRICE_WIDTH_MIN=.01,n.PRICE_DEPTH_DEFAULT=.1,n.IS_SIMULATION=!1},{}],243:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../common/components/checkbox"),s=i(a),l=function(e){return o.default.createElement("aside",{className:"filters"},e.filters.map(function(e){return o.default.createElement("div",{key:e.title,className:"filters-group"},o.default.createElement("span",{className:"title"},e.title),e.options.map(function(e){return o.default.createElement(s.default,{key:e.value,className:"filter",text:e.name,text2:"("+e.numMatched+")",isChecked:e.isSelected,onClick:e.onClick})}))}))};l.propTypes={filters:r.PropTypes.array},n.default=l},{"../../common/components/checkbox":224,react:215}],244:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.handleClick=function(e){n.props.target||n.props.href&&0===n.props.href.indexOf("mailto:")||0===!e.button||e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||(e.preventDefault(),n.props.onClick&&n.props.onClick(n.props.href))},n.handleClick=n.handleClick.bind(n),n}return a(t,e),l(t,[{key:"render",value:function(){return u.default.createElement("a",s({},this.props,{href:this.props.href,className:"link "+this.props.className,onClick:this.handleClick}))}}]),t}(c.Component);d.propTypes={className:c.PropTypes.string,href:c.PropTypes.string,target:c.PropTypes.string,onClick:c.PropTypes.func},n.default=d},{react:215}],245:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../common/components/value-denomination"),l=i(s),c=function(e){return a.default.createElement("section",{className:"advanced"},a.default.createElement("ul",{className:"properties"},a.default.createElement("li",{className:"property fee"},a.default.createElement("span",{className:"property-label"},"initial prices: "),a.default.createElement("span",null,e.initialFairPrices.values.map(function(t,n,i){return a.default.createElement("div",{key:""+t+n,className:"distinct"},a.default.createElement(l.default,r({className:"property-value"},e.initialFairPrices.formatted[""+n])))}))),a.default.createElement("li",{className:"property"},a.default.createElement("span",{className:"property-label"},"best starting quantity"),a.default.createElement(l.default,r({className:"property-value"},e.bestStartingQuantityFormatted))),a.default.createElement("li",{className:"property"},a.default.createElement("span",{className:"property-label"},"starting quantity"),a.default.createElement(l.default,r({className:"property-value"},e.startingQuantityFormatted))),a.default.createElement("li",{className:"property"},a.default.createElement("span",{className:"property-label"},"price width"),a.default.createElement(l.default,r({className:"property-value"},e.priceWidthFormatted)))))};c.propTypes={initialFairPrices:o.PropTypes.object,bestStartingQuantityFormatted:o.PropTypes.any,startingQuantityFormatted:o.PropTypes.any,priceWidthFormatted:o.PropTypes.any},n.default=c},{"../../common/components/value-denomination":231,react:215}],246:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../common/components/value-denomination"),l=i(s),c=e("classnames"),u=i(c),d=function(e){return a.default.createElement("section",{className:"basics"},!!e.tags&&!!e.tags.length&&a.default.createElement("ul",{className:"tags"},e.tags.map(function(e,t){return a.default.createElement("li",{key:t,className:(0,u.default)("tag",{link:!!e.name}),onClick:!!e.onClick&&e.onClick},e.name?e.name:e)})),a.default.createElement("span",{className:"description",title:e.description},e.description),a.default.createElement("ul",{className:"properties"},!!e.endDate&&a.default.createElement("li",{className:"property end-date",title:e.endDateLabel+": "+e.endDate.full},a.default.createElement("span",{className:"property-label"},e.endDateLabel),a.default.createElement(l.default,r({className:"property-value"},e.endDate))),a.default.createElement("li",{className:"property fee",title:e.makerFeePercent.full+" discounted fee for placing bids or asks on the books"},a.default.createElement("span",{className:"property-label"},"maker fee"),a.default.createElement(l.default,r({className:"property-value"},e.makerFeePercent))),a.default.createElement("li",{className:"property fee",title:e.takerFeePercent.full+" fee for taking bids or asks from the books"},a.default.createElement("span",{className:"property-label"},"taker fee"),a.default.createElement(l.default,r({className:"property-value"},e.takerFeePercent))),a.default.createElement("li",{className:"property volume",title:e.volume.rounded+" total "+e.volume.denomination+" traded"},a.default.createElement("span",{className:"property-label"},"volume"),a.default.createElement(l.default,r({className:"property-value"},e.volume,{formatted:e.volume.rounded})))))};d.propTypes={description:o.PropTypes.string,endDate:o.PropTypes.object,makerFeePercent:o.PropTypes.object,takerFeePercent:o.PropTypes.object,volume:o.PropTypes.object,tags:o.PropTypes.array},n.default=d},{"../../common/components/value-denomination":231,classnames:33,react:215}],247:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){
for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=e("../../../utils/should-component-update-pure"),d=i(u),p=e("react-highcharts"),h=i(p),f=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=d.default,n}return a(t,e),s(t,[{key:"render",value:function(){var e=this.props,t={title:{text:"Price history"},rangeSelector:{selected:1},xAxis:{type:"datetime"},yAxis:{title:{text:"price"},min:0,max:1},legend:{enabled:!0},tooltip:{pointFormat:'<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',valueDecimals:2},series:e.series};return c.default.createElement("div",{className:"price-history-chart"},c.default.createElement(h.default,{config:t}))}}]),t}(l.Component);f.propTypes={series:l.PropTypes.array},n.default=f},{"../../../utils/should-component-update-pure":274,react:215,"react-highcharts":77}],248:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("classnames"),p=i(d),h=e("../../../utils/should-component-update-pure"),f=i(h),m=e("../../market/components/basics"),g=i(m),v=e("../../market/components/outcomes"),y=i(v),b=e("../../link/components/link"),k=i(b),x=e("../../market/components/advanced"),w=i(x),E=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=f.default,n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props,t=e.showAdvancedMarketParams?"▲":"▼";return u.default.createElement("article",{className:"market-item"},u.default.createElement("div",{className:"basics-container"},u.default.createElement(g.default,e),!!e.creatingMarket&&u.default.createElement("div",{className:"advanced-market-params"},u.default.createElement("h6",{className:"horizontal-divider",onClick:function(){e.onValuesUpdated({showAdvancedMarketParams:!e.showAdvancedMarketParams})}},u.default.createElement("span",null,t)," Advanced ",u.default.createElement("span",null,t)),u.default.createElement("div",{className:(0,p.default)({displayNone:!e.showAdvancedMarketParams})},u.default.createElement(w.default,e))),!!e.marketLink&&u.default.createElement("div",{className:"buttons"},u.default.createElement(k.default,s({},e.marketLink,{className:(0,p.default)("button",e.marketLink.className)}),e.marketLink.text))),e.outcomes&&u.default.createElement(y.default,{outcomes:e.outcomes}),e.onClickToggleFavorite&&u.default.createElement("button",{className:(0,p.default)("button","favorite-button",{on:e.isFavorite}),onClick:e.onClickToggleFavorite},""))}}]),t}(c.Component);E.propTypes={description:c.PropTypes.string,outcomes:c.PropTypes.array,isOpen:c.PropTypes.bool,isFavorite:c.PropTypes.bool,isPendingReport:c.PropTypes.bool,endDate:c.PropTypes.object,tradingFeePercent:c.PropTypes.object,volume:c.PropTypes.object,tags:c.PropTypes.array,marketLink:c.PropTypes.object,onClickToggleFavorite:c.PropTypes.func},n.default=E},{"../../../utils/should-component-update-pure":274,"../../link/components/link":244,"../../market/components/advanced":245,"../../market/components/basics":246,"../../market/components/outcomes":251,classnames:33,react:215}],249:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("../../../utils/should-component-update-pure"),p=i(d),h=e("../../site/components/site-header"),f=i(h),m=e("../../site/components/site-footer"),g=i(m),v=e("../../market/components/basics"),y=i(v),b=e("../../trade/components/trade-panel"),k=i(b),x=e("../../reports/components/report-panel"),w=i(x),E=e("../../market/components/market-positions"),C=i(E),P=e("../../market/components/chart"),T=i(P),S=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=p.default,n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props,t=[];return e.market&&e.market.id?(t.push(u.default.createElement(y.default,s({key:"basics"},e.market))),e.market.isPendingReport?t.push(u.default.createElement(w.default,s({key:"report-panel"},e.market,e.market.report,{numPendingReports:e.numPendingReports}))):e.market.isOpen&&(t.push(u.default.createElement(k.default,s({key:"trade-panel",sideOptions:e.sideOptions,updateSelectedOutcome:e.updateSelectedOutcome,selectedOutcomeID:e.selectedOutcomeID},e.market,e.market.tradeSummary))),e.market.positionsSummary&&e.market.positionsSummary.numPositions&&e.market.positionsSummary.numPositions.value&&t.push(u.default.createElement(C.default,{key:"market-positions",className:"market-positions",positionsSummary:e.market.positionsSummary,positionOutcomes:e.market.positionOutcomes})),t.push(u.default.createElement(T.default,{key:"chart",series:e.market.priceTimeSeries})))):t.push(u.default.createElement("section",{key:"no-market",className:"basics"},u.default.createElement("span",{className:"description"},"No market"))),u.default.createElement("main",{className:"page market"},u.default.createElement(f.default,e.siteHeader),u.default.createElement("article",{className:"page-content"},u.default.createElement("div",{className:"l-container"},t)),u.default.createElement(g.default,null))}}]),t}(c.Component);S.propTypes={className:c.PropTypes.string,siteHeader:c.PropTypes.object,market:c.PropTypes.object,priceTimeSeries:c.PropTypes.array,numPendingReports:c.PropTypes.number},n.default=S},{"../../../utils/should-component-update-pure":274,"../../market/components/basics":246,"../../market/components/chart":247,"../../market/components/market-positions":250,"../../reports/components/report-panel":263,"../../site/components/site-footer":264,"../../site/components/site-header":265,"../../trade/components/trade-panel":268,react:215}],250:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("../../../utils/should-component-update-pure"),p=i(d),h=e("../../positions/components/positions"),f=i(h),m=e("../../positions/components/positions-summary"),g=i(m),v=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=p.default,n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("section",{className:"market-positions"},u.default.createElement(g.default,s({},e.positionsSummary,{className:"market-section-header"})),u.default.createElement(f.default,{outcomes:e.positionOutcomes}))}}]),t}(c.Component);v.propTypes={positionsSummary:c.PropTypes.object,positionOutcomes:c.PropTypes.array},n.default=v},{"../../../utils/should-component-update-pure":274,"../../positions/components/positions":261,"../../positions/components/positions-summary":260,react:215}],251:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("../../../utils/should-component-update-pure"),p=i(d),h=e("../../common/components/value-denomination"),f=i(h),m=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=p.default,n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",{className:"outcomes"},e.outcomes.map(function(e,t){return u.default.createElement("div",{key:e.id,className:"outcome"},!!e.lastPricePercent&&u.default.createElement(f.default,s({className:"outcome-price"},e.lastPricePercent,{formatted:e.lastPricePercent.rounded,formattedValue:e.lastPricePercent.roundedValue})),u.default.createElement("span",{className:"outcome-name"},e.name))}))}}]),t}(c.Component);m.propTypes={outcomes:c.PropTypes.array},n.default=m},{"../../../utils/should-component-update-pure":274,"../../common/components/value-denomination":231,react:215}],252:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=e("classnames"),d=i(u),p=e("../../../utils/should-component-update-pure"),h=i(p),f=e("../../markets/constants/markets-headers"),m=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=h.default,n}return a(t,e),s(t,[{key:"render",value:function(){var e=this.props;return c.default.createElement("header",{className:"markets-header"},c.default.createElement("div",{className:(0,d.default)("markets-header-item","all-markets",{active:!e.selectedMarketsHeader}),onClick:e.onClickAllMarkets},c.default.createElement("span",{className:"name"},"Markets"),(!!e.numMarkets||0===e.numMarkets)&&c.default.createElement("span",{className:"num"},"("+e.numMarkets+")")),!!e.numPendingReports&&c.default.createElement("div",{className:(0,d.default)("markets-header-item","pending-reports",{active:e.selectedMarketsHeader===f.PENDING_REPORTS}),onClick:e.onClickPendingReports},c.default.createElement("span",{className:"name"},"Pending Reports"),c.default.createElement("span",{className:"num"},""+e.numPendingReports)),c.default.createElement("div",{className:(0,d.default)("markets-header-item","favorites",{active:e.selectedMarketsHeader===f.FAVORITES}),onClick:e.onClickFavorites},c.default.createElement("span",{className:"name"},"Favorites"),(!!e.numFavorites||0===e.numFavorites)&&c.default.createElement("span",{className:"num"},"("+e.numFavorites+")")))}}]),t}(l.Component);m.propTypes={selectedMarketsHeader:l.PropTypes.string,numMarkets:l.PropTypes.number,numFavorites:l.PropTypes.number,numPendingReports:l.PropTypes.number,onClickAllMarkets:l.PropTypes.func,onClickFavorites:l.PropTypes.func,onClickPendingReports:l.PropTypes.func},n.default=m},{"../../../utils/should-component-update-pure":274,"../../markets/constants/markets-headers":257,classnames:33,react:215}],253:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=e("react"),u=i(c),d=e("../../../utils/should-component-update-pure"),p=i(d),h=e("../../site/components/site-header"),f=i(h),m=e("../../site/components/site-footer"),g=i(m),v=e("../../markets/components/search-sort"),y=i(v),b=e("../../markets/components/markets"),k=i(b),x=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.shouldComponentUpdate=p.default,n}return a(t,e),l(t,[{key:"render",value:function(){var e=this.props;return u.default.createElement("div",{className:"page markets"},u.default.createElement(f.default,e.siteHeader),u.default.createElement("header",{className:"page-header"},u.default.createElement("div",{className:"l-container"},u.default.createElement("span",{className:"big-line"},"Augur lets you trade any market"),". Find a market you can beat, and buy shares on the side that ",u.default.createElement("b",null,u.default.createElement("i",null,"you think"))," should go up. When you're right, you make money.")),u.default.createElement("div",{className:"page-content"},u.default.createElement(y.default,{keywords:e.keywords,selectedSort:e.selectedSort,sortOptions:e.sortOptions,onChangeKeywords:e.onChangeKeywords,onChangeSort:e.onChangeSort}),u.default.createElement(k.default,s({className:"page-content markets-content"},e))),u.default.createElement(g.default,null))}}]),t}(c.Component);x.propTypes={className:c.PropTypes.string,siteHeader:c.PropTypes.object,createMarketLink:c.PropTypes.object,markets:c.PropTypes.array,favoriteMarkets:c.PropTypes.array,marketsHeader:c.PropTypes.object,keywords:c.PropTypes.string,filters:c.PropTypes.array,pagination:c.PropTypes.object,selectedSort:c.PropTypes.object,sortOptions:c.PropTypes.array,onChangeKeywords:c.PropTypes.func,onChangeSort:c.PropTypes.func},n.default=x},{"../../../utils/should-component-update-pure":274,"../../markets/components/markets":254,"../../markets/components/search-sort":255,"../../site/components/site-footer":264,"../../site/components/site-header":265,react:215}],254:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../markets/components/markets-header"),l=i(s),c=e("../../filters/components/filters"),u=i(c),d=e("../../market/components/market-item"),p=i(d),h=e("../../link/components/link"),f=i(h),m=function(e){return a.default.createElement("section",{className:e.className},a.default.createElement("div",{className:"markets-header-bar"},a.default.createElement(f.default,r({className:"button make"},e.createMarketLink),"Make a Market"),a.default.createElement(l.default,e.marketsHeader)),a.default.createElement(u.default,{filters:e.filters}),a.default.createElement("div",{className:"markets-list"},(e.markets||[]).map(function(e){return a.default.createElement(p.default,r({key:e.id},e))}),!!e.pagination&&!!e.pagination.numUnpaginated&&a.default.createElement("div",{className:"pagination"},!!e.pagination&&!!e.pagination.previousPageNum&&a.default.createElement("span",{className:"button-container prev",onClick:function(){return e.pagination.onUpdateSelectedPageNum(e.pagination.previousPageNum)}},a.default.createElement("button",{className:"button prev"},"")),a.default.createElement("span",{className:"displaying"},e.pagination.startItemNum+"- "+e.pagination.endItemNum+" of "+e.pagination.numUnpaginated),!!e.pagination&&!!e.pagination.nextPageNum&&a.default.createElement("span",{className:"button-container next",onClick:function(){return e.pagination.onUpdateSelectedPageNum(e.pagination.nextPageNum)}},a.default.createElement("button",{className:"button next"},"")))))};m.propTypes={className:a.default.PropTypes.string,marketsHeader:a.default.PropTypes.object,markets:a.default.PropTypes.array,filters:a.default.PropTypes.array,pagination:a.default.PropTypes.object,sortOptions:a.default.PropTypes.array},n.default=m},{"../../filters/components/filters":243,"../../link/components/link":244,"../../market/components/market-item":248,"../../markets/components/markets-header":252,react:215}],255:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../common/components/input"),s=i(a),l=e("../../common/components/dropdown"),c=i(l),u=function(e){return o.default.createElement("div",{className:"search-sort"},o.default.createElement("div",{className:"search-sort-content"},o.default.createElement(s.default,{className:"search-bar",value:e.keywords,placeholder:"Search",onChange:e.onChangeKeywords}),o.default.createElement("div",{className:"sort-container"},o.default.createElement("span",{className:"title"},"Sort By"),o.default.createElement(c.default,{className:"sort",selected:e.sortOptions.find(function(t){return t.value===e.selectedSort.prop}),options:e.sortOptions,onChange:function(t){var n=e.sortOptions.find(function(e){return e.value===t});e.onChangeSort(n.value,n.isDesc)}}),o.default.createElement("button",{className:"sort-direction-button",title:e.selectedSort.isDesc?"descending selected":"ascending selected",onClick:function(){return e.onChangeSort(e.selectedSort.prop,!e.selectedSort.isDesc)}},e.selectedSort.isDesc?o.default.createElement("span",null,""):o.default.createElement("span",null,"")))))};u.propTypes={keywords:o.default.PropTypes.string,selectedSort:o.default.PropTypes.object,sortOptions:o.default.PropTypes.array,onChangeKeywords:o.default.PropTypes.func,onChangeSort:o.default.PropTypes.func},n.default=u},{"../../common/components/dropdown":228,"../../common/components/input":230,react:215}],256:[function(e,t,n){"use strict";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(n,"__esModule",{value:!0});var r,o=n.BINARY="binary",a=n.CATEGORICAL="categorical",s=n.SCALAR="scalar";n.MARKET_TYPES=(r={},i(r,o,o),i(r,a,a),i(r,s,s),r)},{}],257:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.FAVORITES="favorites",n.PENDING_REPORTS="pending reports"},{}],258:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("../../common/components/value-denomination"),l=i(s),c=function(e){return a.default.createElement("div",{className:"position"},a.default.createElement("div",{className:"main-group"},a.default.createElement("span",{className:"position-name"},e.name),a.default.createElement(l.default,e.qtyShares),a.default.createElement("div",{className:"position-pair gain-percent"},a.default.createElement(l.default,r({},e.gainPercent,{formatted:e.gainPercent.minimized}))," ",a.default.createElement("span",{className:"title"},e.gainPercent.value>0?"gain":"loss"))),a.default.createElement("div",{className:"position-group"},a.default.createElement("div",{className:"position-pair per-share-gain"},a.default.createElement("span",{className:"title"},"per share gain/loss"),a.default.createElement(l.default,e.shareChange)),a.default.createElement("div",{className:"position-pair last-price"},a.default.createElement("span",{className:"title"},"last trade price"),a.default.createElement(l.default,e.lastPrice)),a.default.createElement("div",{className:"position-pair purchase-price"},a.default.createElement("span",{className:"title"},"avg. purchase price"),a.default.createElement(l.default,e.purchasePrice))),a.default.createElement("div",{className:"position-group"},a.default.createElement("div",{className:"position-pair net-change"},a.default.createElement("span",{className:"title"},"net gain/loss"),a.default.createElement(l.default,e.netChange)),a.default.createElement("div",{className:"position-pair total-value"},a.default.createElement("span",{className:"title"},"total value"),a.default.createElement(l.default,e.totalValue)),a.default.createElement("div",{className:"position-pair total-cost"},a.default.createElement("span",{className:"title"},"total cost"),a.default.createElement(l.default,e.totalCost))))};c.propTypes={name:a.default.PropTypes.string,qtyShares:a.default.PropTypes.object,totalValue:a.default.PropTypes.object,gainPercent:a.default.PropTypes.object,lastPrice:a.default.PropTypes.object,purchasePrice:a.default.PropTypes.object,shareChange:a.default.PropTypes.object,totalCost:a.default.PropTypes.object,netChange:a.default.PropTypes.object},n.default=c},{"../../common/components/value-denomination":231,react:215}],259:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../site/components/site-header"),s=i(a),l=e("../../site/components/site-footer"),c=i(l),u=e("../../positions/components/positions"),d=i(u),p=e("../../positions/components/positions-summary"),h=i(p),f=function(e){return o.default.createElement("main",{className:"page positions-page"},o.default.createElement(s.default,e.siteHeader),o.default.createElement("header",{className:"page-header"},o.default.createElement("div",{className:"l-container"},o.default.createElement(h.default,e.positionsSummary))),o.default.createElement("section",{className:"page-content"},o.default.createElement("div",{className:"l-container"},!!e.markets&&!!e.markets.length&&e.markets.map(function(e){return o.default.createElement("div",{key:e.id,className:"positions-container"},o.default.createElement("span",{className:"description"},e.description),!!e.positionOutcomes&&!!e.positionOutcomes.length&&o.default.createElement(d.default,{className:"page-content positions-content",outcomes:e.positionOutcomes}))}))),o.default.createElement(c.default,null))};f.propTypes={className:o.default.PropTypes.string,siteHeader:o.default.PropTypes.object,positionsSummary:o.default.PropTypes.object,markets:o.default.PropTypes.array},n.default=f},{"../../positions/components/positions":261,"../../positions/components/positions-summary":260,"../../site/components/site-footer":264,"../../site/components/site-header":265,react:215}],260:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../common/components/value-denomination"),u=i(c),d=function(e){return a.default.createElement("div",{className:(0,l.default)("positions-summary",e.className)},!!e.numPositions&&a.default.createElement(u.default,r({},e.numPositions,{className:"num-positions"})),e.totalValue&&a.default.createElement(u.default,r({},e.totalValue,{className:"total-value"})),e.gainPercent&&a.default.createElement(u.default,r({},e.gainPercent,{className:"gain-percent",formatted:e.gainPercent.formatted})))};d.propTypes={className:a.default.PropTypes.string},n.default=d},{"../../common/components/value-denomination":231,classnames:33,react:215}],261:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("./position"),l=i(s),c=function(e){return a.default.createElement("section",{className:"positions-list"},(e.outcomes||[]).map(function(e){return a.default.createElement(l.default,r({key:e.id},e,e.position))}))};c.propTypes={className:a.default.PropTypes.string,outcomes:a.default.PropTypes.array},n.default=c},{"./position":258,react:215}],262:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(n,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=e("react"),c=i(l),u=e("classnames"),d=i(u),p=e("../../common/components/checkbox"),h=i(p),f=function(e){function t(e){r(this,t);var n=o(this,Object.getPrototypeOf(t).call(this,e));return n.handleOutcomeChange=function(e){return n.setState({reportedOutcomeID:e.target.value})},n.state={reportedOutcomeID:e.reportedOutcomeID,isUnethical:e.isUnethical,isReported:e.isReported},n.handleSubmit=n.handleSubmit.bind(n),n.handleOutcomeChange=n.handleOutcomeChange.bind(n),n}return a(t,e),s(t,[{key:"componentWillReceiveProps",value:function(e){e.isReported!==this.state.isReported&&this.setState({isReported:e.isReported})}},{key:"handleSubmit",value:function(){this.props.onClickSubmit(this.state.reportedOutcomeID,this.state.isUnethical),this.setState({reportedOutcomeID:null,isUnethical:null,isReported:!1})}},{key:"render",value:function(){var e=this,t=this.props,n=this.state;return c.default.createElement("section",{className:(0,d.default)("report-form",{reported:n.isReported})},c.default.createElement("div",{ref:"outcomeOptions",className:"outcome-options"},c.default.createElement("h4",null,n.isReported?"Outcome Reported":"Report the outcome"),(t.reportableOutcomes||[]).map(function(t){return c.default.createElement("label",{key:t.id,className:(0,d.default)("outcome-option",{disabled:n.isReported})},c.default.createElement("input",{type:"radio",className:"outcome-option-radio",name:"outcome-option-radio",value:t.id,checked:n.reportedOutcomeID===t.id,disabled:n.isReported,onChange:e.handleOutcomeChange}),t.name)})),c.default.createElement("div",{className:"unethical"},c.default.createElement("h4",null,"Is this question unethical?"),c.default.createElement(h.default,{ref:"unethical",className:(0,d.default)("unethical-checkbox",{disabled:n.isReported}),text:"Yes, this question is unethical",isChecked:!!n.isUnethical,onClick:!n.isReported&&function(){return e.setState({isUnethical:!n.isUnethical})}||null}),c.default.createElement("span",{className:"unethical-message"},"The consensus answer to this question will be over-ridden if the question is reported as unethical by 60% (or more) of those reporting this market.")),!n.isReported&&c.default.createElement("button",{className:"button report",disabled:!n.reportedOutcomeID,onClick:!!n.reportedOutcomeID&&!n.isReported&&this.handleSubmit||null},"Submit Report"),n.isReported&&c.default.createElement("button",{className:"button report-again",onClick:function(){return e.setState({isReported:!1})}},"Report Again"))}}]),t}(c.default.Component);f.propTypes={reportableOutcomes:c.default.PropTypes.array,reportedOutcomeID:c.default.PropTypes.any,isUnethical:c.default.PropTypes.bool,isReported:c.default.PropTypes.bool,onClickSubmit:c.default.PropTypes.func},n.default=f},{"../../common/components/checkbox":224,classnames:33,react:215}],263:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];
for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../reports/components/report-form"),u=i(c),d=function(e){return a.default.createElement("section",{className:(0,l.default)("report-panel",e.className)},a.default.createElement("span",{className:"num-total-reports"},e.numPendingReports),a.default.createElement(u.default,r({},e,{isReported:e.isReported||e.isReportSubmitted,onClickSubmit:e.onSubmitReport})))};d.propTypes={className:a.default.PropTypes.string,numPendingReports:a.default.PropTypes.number,outcomes:a.default.PropTypes.array,reportedOutcomeID:a.default.PropTypes.any,isUnethical:a.default.PropTypes.bool,isReported:a.default.PropTypes.bool,isReportSubmitted:a.default.PropTypes.bool,onSubmitReport:a.default.PropTypes.func},n.default=d},{"../../reports/components/report-form":262,classnames:33,react:215}],264:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=function(e){return o.default.createElement("div",{className:"site-footer"},o.default.createElement("a",{className:"link",href:"https://sale.augur.net",target:"_blank"},"REP Login"),o.default.createElement("a",{className:"link",href:"http://docs.augur.net",target:"_blank"},"Documentation"),o.default.createElement("a",{className:"link",href:"http://blog.augur.net",target:"_blank"},"Blog"),o.default.createElement("a",{className:"link",href:"https://github.com/AugurProject",target:"_blank"},"Github"),o.default.createElement("a",{className:"link",href:"https://augur.zendesk.com/hc/en-us",target:"_blank"},"FAQ"),o.default.createElement("a",{className:"link",href:"http://augur.strikingly.com",target:"_blank"},"About"),o.default.createElement("a",{className:"link",href:"https://www.hamsterpad.com/chat/dyffy",target:"_blank"},"Slack"),o.default.createElement("a",{className:"link",href:"http://augur.link/augur-beta-ToS-v2.pdf",target:"_blank"},"Terms of Service"))};n.default=a},{react:215}],265:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../site/constants/pages"),u=e("../../auth/constants/auth-types"),d=e("../../link/components/link"),p=i(d),h=e("../../common/components/value-denomination"),f=i(h),m=function(e){return a.default.createElement("header",{className:"site-header"},a.default.createElement("nav",{className:"site-nav"},a.default.createElement(p.default,r({className:(0,l.default)("site-nav-link","augur",{active:e.activePage===c.MARKETS})},e.marketsLink),"augur"),a.default.createElement("span",{className:"spacer"}," "),!!e.loginAccount&&!!e.loginAccount.id&&a.default.createElement(p.default,r({className:(0,l.default)("site-nav-link",c.POSITIONS,{active:e.activePage===c.POSITIONS})},e.positionsLink),!!e.positionsSummary&&!!e.positionsSummary.numPositions&&a.default.createElement(f.default,r({className:"positions-num"},e.positionsSummary.numPositions,{formatted:e.positionsSummary.numPositions.rounded,formattedValue:e.positionsSummary.numPositions.roundedValue})),!!e.positionsSummary&&!!e.positionsSummary.gainPercent&&e.positionsSummary.numPositions.roundedValue>0&&a.default.createElement(f.default,r({className:"positions-gain"},e.positionsSummary.gainPercent,{formatted:e.positionsSummary.gainPercent.rounded,formattedValue:e.positionsSummary.gainPercent.roundedValue}))),!!e.loginAccount&&!!e.loginAccount.id&&a.default.createElement(p.default,r({className:(0,l.default)("site-nav-link",c.TRANSACTIONS,{active:e.activePage===c.TRANSACTIONS},{working:e.isTransactionsWorking}),title:e.loginAccount.realEther&&"real ether: "+e.loginAccount.realEther.full},e.transactionsLink),(!e.isTransactionsWorking||e.activePage===c.TRANSACTIONS)&&a.default.createElement(f.default,r({},e.loginAccount.rep||{},{formatted:e.loginAccount.rep&&e.loginAccount.rep.rounded,formattedValue:e.loginAccount.rep&&e.loginAccount.rep.roundedValue})),(!e.isTransactionsWorking||e.activePage===c.TRANSACTIONS)&&a.default.createElement(f.default,r({},e.loginAccount.ether||{},{formatted:e.loginAccount.ether&&e.loginAccount.ether.rounded,formattedValue:e.loginAccount.ether&&e.loginAccount.ether.roundedValue})),e.isTransactionsWorking&&e.activePage!==c.TRANSACTIONS&&a.default.createElement("span",{className:"link-text"},e.transactionsTotals.title)),a.default.createElement(p.default,r({className:(0,l.default)("site-nav-link",u.AUTH_TYPES[e.activePage],{active:!!u.AUTH_TYPES[e.activePage]})},e.authLink),e.loginAccount&&e.loginAccount.id?"Sign Out":"Sign Up / Login")))};m.propTypes={activePage:a.default.PropTypes.string,loginAccount:a.default.PropTypes.object,positionsSummary:a.default.PropTypes.object,transactionsTotals:a.default.PropTypes.object,isTransactionsWorking:a.default.PropTypes.bool,marketsLink:a.default.PropTypes.object,positionsLink:a.default.PropTypes.object,transactionsLink:a.default.PropTypes.object,authLink:a.default.PropTypes.object},n.default=m},{"../../auth/constants/auth-types":222,"../../common/components/value-denomination":231,"../../link/components/link":244,"../../site/constants/pages":266,classnames:33,react:215}],266:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=n.MARKETS="markets";n.MAKE="make",n.POSITIONS="positions",n.TRANSACTIONS="transactions",n.M="m",n.DEFAULT_PAGE=i},{}],267:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../common/components/value-denomination"),u=i(c),d=e("../../common/components/input"),p=i(d),h=e("../../common/components/dropdown"),f=i(h),m=e("../../common/components/clickable"),g=i(m),v=e("../../common/components/collapse"),y=i(v),b=e("../../bids-asks/components/order-book"),k=i(b),x=function(e){var t=e.selectedOutcomeID===e.id;return a.default.createElement("div",{className:(0,l.default)("trade-panel-item",e.className,{active:t})},a.default.createElement(g.default,{onClick:function(){e.updateSelectedOutcome(e.id)}},a.default.createElement("div",{className:"trade-panel-item-content"},a.default.createElement("span",{className:"outcome-name"},e.name),a.default.createElement(u.default,r({className:"last-price"},e.lastPrice)),a.default.createElement(g.default,{onClick:function(){e.updateTradeOrder(e.id,void 0,e.topBid.value)}},a.default.createElement(u.default,r({className:"top-bid"},e.topBid))),a.default.createElement(g.default,{onClick:function(){e.updateTradeOrder(e.id,void 0,e.topAsk.value)}},a.default.createElement(u.default,r({className:"top-ask"},e.topAsk))),a.default.createElement(f.default,{selected:e.sideOptions.find(function(t){return t.value===e.side}),options:e.sideOptions,onChange:function(t){e.updateTradeOrder(e.id,void 0,void 0,t)}}),a.default.createElement(p.default,{className:"num-shares",type:"text",value:e.numShares,isClearable:!1,onChange:function(t){return e.updateTradeOrder(e.id,parseFloat(t)||0,void 0)}}),a.default.createElement(p.default,{className:"limit-price",type:"text",value:e.limitPrice,isClearable:!1,onChange:function(t){return e.updateTradeOrder(e.id,void 0,parseFloat(t)||0)}}),a.default.createElement(u.default,r({className:"fee-to-pay"},e.feeToPay)),a.default.createElement(u.default,r({className:"total-cost"},e.profitLoss)))),a.default.createElement("div",null,a.default.createElement(y.default,{isOpen:t},a.default.createElement(k.default,{key:"order-book-"+e.id,outcome:e,updateTradeOrder:e.trade.updateTradeOrder,bids:e.orderBook.bids,asks:e.orderBook.asks}))))};x.propTypes={className:o.PropTypes.string,name:o.PropTypes.string,numShares:o.PropTypes.number,limitPrice:o.PropTypes.number,sideOptions:o.PropTypes.array,lastPrice:o.PropTypes.object,topBid:o.PropTypes.object,topAsk:o.PropTypes.object,feeToPay:o.PropTypes.object,tradeSummary:o.PropTypes.object,sharesOwned:o.PropTypes.number,etherAvailable:o.PropTypes.number,updateTradeOrder:o.PropTypes.func},n.default=x},{"../../bids-asks/components/order-book":223,"../../common/components/clickable":225,"../../common/components/collapse":226,"../../common/components/dropdown":228,"../../common/components/input":230,"../../common/components/value-denomination":231,classnames:33,react:215}],268:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("./trade-panel-item"),l=i(s),c=e("../../transactions/components/transaction"),u=i(c),d=function(e){return a.default.createElement("section",{className:"trade-panel"},a.default.createElement("div",{className:"trade-builder"},a.default.createElement("div",{className:"trade-panel-item-header"},a.default.createElement("span",{className:"outcome-name"}," "),a.default.createElement("span",{className:"last-price"},"Last"),a.default.createElement("span",{className:"top-bid"},"Top Bid"),a.default.createElement("span",{className:"top-ask"},"Top Ask"),a.default.createElement("span",{className:"num-shares"},"Side"),a.default.createElement("span",{className:"num-shares"},"Shares"),a.default.createElement("span",{className:"limit-price"},"Limit"),a.default.createElement("span",{className:"fee-to-pay"},"Fee"),a.default.createElement("span",{className:"total-cost"},"Profit/Loss")),e.outcomes&&e.outcomes.map(function(t){return a.default.createElement(l.default,r({key:t.id,sideOptions:e.sideOptions,updateSelectedOutcome:e.updateSelectedOutcome,selectedOutcomeID:e.selectedOutcomeID},t,t.trade))})),e.tradeOrders&&!!e.tradeOrders.length&&a.default.createElement("div",{className:"trade-orders"},a.default.createElement("h5",null,"Trade Summary"),e.tradeOrders&&e.tradeOrders.map(function(e,t){return a.default.createElement(u.default,r({key:t,className:"order"},e,{status:void 0}))}),a.default.createElement(u.default,{type:"trade_summary",shares:e.totalShares,className:"order total",ether:e.totalEther,gas:e.totalGas,status:void 0})),a.default.createElement("div",{className:"place-trade-container"},a.default.createElement("button",{className:"button place-trade",disabled:!e.tradeOrders||!e.tradeOrders.length,onClick:e.onSubmitPlaceTrade},"Place Trade")))};d.propTypes={outcomes:a.default.PropTypes.array,tradeOrders:a.default.PropTypes.array,onSubmitPlaceTrade:a.default.PropTypes.func},n.default=d},{"../../transactions/components/transaction":269,"./trade-panel-item":267,react:215}],269:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("../../transactions/constants/types"),u=e("../../auth/constants/auth-types"),d=e("../../common/components/value-denomination"),p=i(d),h=function(e){var t={};switch(e.type){case c.BUY_SHARES:case c.BID_SHARES:case c.SELL_SHARES:case c.ASK_SHARES:switch(e.type){case c.BUY_SHARES:t.action="BUY";break;case c.BID_SHARES:t.action="BID";break;case c.SELL_SHARES:t.action="SELL";break;case c.ASK_SHARES:t.action="ASK"}t.description=a.default.createElement("span",{className:"description"},a.default.createElement("span",{className:"action"},t.action),a.default.createElement(p.default,r({className:"shares"},e.shares)),a.default.createElement("span",{className:"at"},"at"),a.default.createElement(p.default,r({className:"avgPrice"},e.data.avgPrice)),a.default.createElement("span",{className:"of"},"of"),a.default.createElement("span",{className:"outcome-name"},e.data.outcomeName.substring(0,35)+(e.data.outcomeName.length>35&&"..."||"")),a.default.createElement("br",null),a.default.createElement("span",{className:"market-description",title:e.data.marketDescription},e.data.marketDescription.substring(0,100)+(e.data.marketDescription.length>100&&"..."||""))),e.type===c.BUY_SHARES?t.valueChange=a.default.createElement("span",{className:"value-change"},!!e.shares&&!!e.shares.value&&a.default.createElement(p.default,r({className:"value-change shares"},e.shares)),!!e.etherNegative&&!!e.etherNegative.value&&a.default.createElement(p.default,r({className:"value-change ether"},e.etherNegative))):t.valueChange=a.default.createElement("span",{className:"value-change"},!!e.sharesNegative&&!!e.sharesNegative.value&&a.default.createElement(p.default,r({className:"value-change shares"},e.sharesNegative)),!!e.ether&&!!e.ether.value&&a.default.createElement(p.default,r({className:"value-change ether"},e.ether)));break;case c.TRADE_SUMMARY:t.description=a.default.createElement("span",{className:"description"}," "),t.valueChange=a.default.createElement("span",{className:"value-change"},!!e.shares&&!!e.shares.value&&a.default.createElement(p.default,r({className:"value-change shares"},e.shares)),!!e.ether&&!!e.ether.value&&a.default.createElement(p.default,r({className:"value-change ether"},e.ether)));break;case u.LOGIN:t.description=a.default.createElement("span",{className:"description"},"Login");break;case u.REGISTER:t.description=a.default.createElement("span",{className:"description"},"Load free beta assets");break;case c.CREATE_MARKET:t.description=a.default.createElement("span",{className:"description"},a.default.createElement("span",null,"Make"),a.default.createElement("strong",null,e.data.type),a.default.createElement("span",null,"market"),a.default.createElement("br",null),a.default.createElement("span",{className:"market-description",title:e.data.description},e.data.description.substring(0,100)+(e.data.description.length>100&&"..."||"")));break;case c.SUBMIT_REPORT:t.description=a.default.createElement("span",{className:"description"},a.default.createElement("span",null,"Report"),a.default.createElement("strong",null,e.data.outcome.name.substring(0,35)+(e.data.outcome.name.length>35&&"..."||"")),!!e.data.isUnethical&&a.default.createElement("strong",{className:"unethical"}," and Unethical"),a.default.createElement("br",null),a.default.createElement("span",{className:"market-description",title:e.data.market.description},e.data.market.description.substring(0,100)+(e.data.market.description.length>100&&"..."||"")));break;case c.GENERATE_ORDER_BOOK:t.description=a.default.createElement("span",{className:"description"},a.default.createElement("span",null,"Generate Order Book"),a.default.createElement("br",null),a.default.createElement("span",{className:"market-description",title:e.data.description},e.data.description.substring(0,100)+(e.data.description.length>100&&"..."||"")));break;default:t.description=a.default.createElement("span",{className:"description"},e.type),t.valueChange=a.default.createElement("span",{className:"value-change"},!!e.shares&&!!e.shares.value&&a.default.createElement(p.default,r({className:"value-change shares"},e.shares)),!!e.ether&&!!e.ether.value&&a.default.createElement(p.default,r({className:"value-change ether"},e.ether)))}return a.default.createElement("article",{className:(0,l.default)("transaction-item",e.className,e.status)},e.index&&a.default.createElement("span",{className:"index"},e.index+"."),t.description,t.valueChange,e.status&&a.default.createElement("div",{className:"status-and-message"},a.default.createElement("span",{className:"status"},e.status),a.default.createElement("br",null),a.default.createElement("span",{className:"message"},e.message)))};h.propTypes={className:a.default.PropTypes.string,index:a.default.PropTypes.number,type:a.default.PropTypes.string,status:a.default.PropTypes.string,data:a.default.PropTypes.object,shares:a.default.PropTypes.object,ether:a.default.PropTypes.object,asksToBuy:a.default.PropTypes.array},n.default=h},{"../../auth/constants/auth-types":222,"../../common/components/value-denomination":231,"../../transactions/constants/types":272,classnames:33,react:215}],270:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=e("react"),o=i(r),a=e("../../site/components/site-header"),s=i(a),l=e("../../site/components/site-footer"),c=i(l),u=e("../../transactions/components/transactions"),d=i(u),p=function(e){return o.default.createElement("main",{className:"page transactions"},o.default.createElement(s.default,e.siteHeader),o.default.createElement("header",{className:"page-header"},o.default.createElement("div",{className:"l-container"},o.default.createElement("span",{className:"big-line"},e.transactionsTotals.title))),o.default.createElement("div",{className:"page-content"},o.default.createElement("div",{className:"l-container"},o.default.createElement(d.default,{className:"transactions-content",transactions:e.transactions}))),o.default.createElement(c.default,null))};p.propTypes={className:o.default.PropTypes.string,siteHeader:o.default.PropTypes.object,transactions:o.default.PropTypes.array,transactionsTotals:o.default.PropTypes.object},n.default=p},{"../../site/components/site-footer":264,"../../site/components/site-header":265,"../../transactions/components/transactions":271,react:215}],271:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},o=e("react"),a=i(o),s=e("classnames"),l=i(s),c=e("./transaction"),u=i(c),d=function(e){return a.default.createElement("section",{className:(0,l.default)(e.className)},(e.transactions||[]).map(function(t,n){return a.default.createElement(u.default,r({key:t.id},t,{index:e.transactions.length-n}))}),!!e.transactions.length&&a.default.createElement("span",{className:"feel-free"},"You can continue using the site and placing trades while transactions are running. Just don't close the browser before they're done!"))};d.propTypes={className:a.default.PropTypes.string,transactions:a.default.PropTypes.array},n.default=d},{"./transaction":269,classnames:33,react:215}],272:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.BUY_SHARES="buy_shares",n.SELL_SHARES="sell_shares",n.TRADE_SUMMARY="trade_summary",n.BID_SHARES="bid_shares",n.ASK_SHARES="ask_shares",n.CREATE_MARKET="create_market",n.SUBMIT_REPORT="submit_report",n.REGISTER_ACCOUNT="register_account",n.GENERATE_ORDER_BOOK="generate_order_book"},{}],273:[function(e,t,n){"use strict";function i(e,t){return t.split(".").reduce(function(e,t){return"undefined"==typeof e||null===e?e:e[t]},e)}Object.defineProperty(n,"__esModule",{value:!0}),n.get=i},{}],274:[function(e,t,n){"use strict";function i(e,t){return r(e,this.props,!0)||r(t,this.state,!0)}function r(e,t,n){if(e===t)return!1;if("object"!==("undefined"==typeof e?"undefined":o(e))||null===e||"object"!==("undefined"==typeof t?"undefined":o(t))||null===t)return!0;var i=Object.keys(e),r=Object.keys(t),a=i.length;if(a!==r.length)return!0;for(var s=0;s<a;s++)if(e[i[s]]!==t[i[s]]&&"function"!=typeof e[i[s]])return!0;return!1}Object.defineProperty(n,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};n.default=function(e,t){return r(e,this.props)||r(t,this.state)},n.shouldComponentUpdateLog=i,n.isShallowUnEqual=r},{}],275:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"activePage isn't defined"),r.isString(e,"activePage isn't a string")}var r=e("chai").assert;t.exports=i},{chai:4}],276:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"authForm isn't defined"),r.isObject(e,"authForm isn't an object"),r.isDefined(e.closeLink,"authFrom.closeLink isn't defined"),r.isObject(e.closeLink,"authFrom.closeLink isn't an object"),r.isDefined(e.closeLink.href,"authForm.closeLink.href isn't defined"),r.isString(e.closeLink.href,"authForm.closeLink.href isn't a string"),r.isDefined(e.closeLink.onClick,"authForm.closeLink.onClick isn't defined"),r.isFunction(e.closeLink.onClick,"authForm.closeLink.onClick isn't a function"),void 0!==e.title&&(r.isDefined(e.title,"authForm.title isn't defined"),r.isString(e.title,"authForm.title isn't a string"),r.isDefined(e.isVisibleUsername,"authForm.isVisibleUsername isn't defined"),r.isBoolean(e.isVisibleUsername,"authForm.isVisibleUsername isn't a boolean"),r.isDefined(e.isVisiblePassword,"authForm.isVisiblePassword isn't defined"),r.isBoolean(e.isVisiblePassword,"authForm.isVisiblePassword isn't a boolean"),r.isDefined(e.isVisiblePassword2,"authForm.isVisiblePassword2 isn't defined"),r.isBoolean(e.isVisiblePassword2,"authForm.isVisiblePassword2 isn't a boolean"),r.isDefined(e.msgClass,"authForm.msgClass isn't defined"),r.isString(e.msgClass,"authForm.msgClass isn't a string"),r.isDefined(e.topLinkText,"authForm.topLinkText isn't defined"),r.isString(e.topLinkText,"authForm.topLinkText isn't a string"),r.isDefined(e.topLink,"authForm.topLink isn't defined"),r.isObject(e.topLink,"authForm.topLink isn't an object"),r.isDefined(e.topLink.href,"authForm.topLink.href isn't defined"),r.isString(e.topLink.href,"authForm.topLink.href isn't a string"),r.isDefined(e.topLink.onClick,"authForm.topLink.onClick isn't defined"),r.isFunction(e.topLink.onClick,"authForm.topLink.onClick isn't a function"),r.isDefined(e.submitButtonText,"authForm.submitButtonText isn't defined"),r.isString(e.submitButtonText,"authForm.submitButtonText isn't a string"),r.isDefined(e.submitButtonClass,"authForm.submitButtonClass isn't defined"),r.isString(e.submitButtonClass,"authForm.submitButtonClass isn't a string"),r.isDefined(e.onSubmit,"authForm.onSubmit isn't defined"),r.isFunction(e.onSubmit,"authForm.onSubmit isn't a function")),"error"===e.msgClass&&(r.isDefined(e.msg,"error was thrown but authForm.msg isn't defined to display"),r.isString(e.msg,"error was thrown but authForm.msg isn't a string"))}var r=e("chai").assert;t.exports=i},{chai:4}],277:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){i.assert.isDefined(e.value,"endDate.value is not defined"),i.assert.instanceOf(e.value,Date,"endDate.value is not a date"),i.assert.isDefined(e.formatted,"endDate.formatted is not defined"),i.assert.isString(e.formatted,"endDate.formatted is not a string"),i.assert.isDefined(e.full,"endDate.full is not defined"),i.assert.isString(e.full,"endDate.full is not a string")};var i=e("chai")},{chai:4}],278:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){i.assert.isDefined(e.type,"initialFairPrices.type is not defined"),i.assert.isString(e.type,"initialFairPrices.type is not a string"),i.assert.isDefined(e.values,"initialFairPrices.values is not defined"),i.assert.isArray(e.values,"initialFairPrices.values is not an array"),i.assert.isDefined(e.raw,"initialFairPrices.raw is not defined"),i.assert.isArray(e.raw,"initialFairPrices.raw is not an array")};var i=e("chai")},{chai:4}],279:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){i.assert.isDefined(e,"formatted number doesn't exist"),i.assert.isObject(e,"formatted number isn't an object"),i.assert.isDefined(e.value,"volume formatted number value isn't defined"),i.assert.isNumber(e.value,"volume formatted number value isn't a number"),i.assert.isDefined(e.formattedValue,"volume formatted number formattedValue isn't defined"),i.assert.isNumber(e.formattedValue,"volume formatted number formattedValue isn't a number"),i.assert.isDefined(e.formatted,"volume formatted number formatted isn't defined"),i.assert.isString(e.formatted,"volume formatted number formatted isn't a string"),i.assert.isDefined(e.roundedValue,"volume formatted number roundedValue isn't defined"),i.assert.isNumber(e.roundedValue,"volume formatted number roundedValue isn't a number"),i.assert.isDefined(e.rounded,"volume formatted number rounded isn't defined"),i.assert.isString(e.rounded,"volume formatted number rounded isn't a string"),i.assert.isDefined(e.minimized,"volume formatted number minimized isn't defined"),i.assert.isString(e.minimized,"volume formatted number minimized isn't a string"),i.assert.isDefined(e.denomination,"volume formatted number denomination isn't defined"),i.assert.isString(e.denomination,"volume formatted number denomination isn't a String"),i.assert.isDefined(e.full,"volume formatted number full isn't defined"),i.assert.isString(e.full,"volume formatted number full isn't a string")};var i=e("chai")},{chai:4}],280:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){i.assert.isDefined(e,"percent formatted number doesn't exist"),i.assert.isObject(e,"percent formatted number isn't an object"),i.assert.isDefined(e.value,"percent formatted number value isn't defined"),i.assert.isNumber(e.value,"percent formatted number value isn't a number"),i.assert.isDefined(e.formattedValue,"percent formatted number formattedValue isn't defined"),i.assert.isNumber(e.formattedValue,"percent formatted number formattedValue isn't a number"),i.assert.isDefined(e.formatted,"percent formatted number formatted isn't defined"),i.assert.isString(e.formatted,"percent formatted number formatted isn't a string"),i.assert.isDefined(e.roundedValue,"percent formatted number roundedValue isn't defined"),i.assert.isNumber(e.roundedValue,"percent formatted number roundedValue isn't a number"),i.assert.isDefined(e.rounded,"percent formatted number rounded isn't defined"),i.assert.isString(e.rounded,"percent formatted number rounded isn't a string"),i.assert.isDefined(e.minimized,"percent formatted number minimized isn't defined"),i.assert.isString(e.minimized,"percent formatted number minimized isn't a string"),i.assert.isDefined(e.denomination,"percent formatted number denomination isn't defined"),i.assert.isString(e.denomination,"percent formatted number denomination isn't a String"),i.assert.isDefined(e.full,"percent formatted number full isn't defined"),i.assert.isString(e.full,"percent formatted number full isn't a string")};var i=e("chai")},{chai:4}],281:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){describe("augur-ui-react-components createMarketForm step-1 initial state",function(){it("should receive step and be a number",function(){c.assert.isDefined(e.step,"step is not defined"),c.assert.isNumber(e.step,"step is not a number")}),it("should receive creatingMarket and be a boolean",function(){c.assert.isDefined(e.creatingMarket,"creatingMarket is not defined"),c.assert.isBoolean(e.creatingMarket,"creatingMarket is not a boolean")}),it("should receive errors and be an object",function(){c.assert.isDefined(e.errors,"errors is not defined"),c.assert.isObject(e.errors,"errors is not an object")}),it("should receive onValuesUpdated and be a function",function(){c.assert.isDefined(e.onValuesUpdated,"onValuesUpdated is not defined"),c.assert.isFunction(e.onValuesUpdated,"onValuesUpdated is not a function")})})}function o(e){describe("augur-ui-react-components createMarketForm step-2 "+e.type+" market initial state",function(){switch(it("should receive type and be a string",function(){c.assert.isDefined(e.type,"type is not defined"),c.assert.isString(e.type,"type is not a string")}),it("should receive initialFairPrices and be an object with correct shape",function(){c.assert.isDefined(e.initialFairPrices,"initialFairPrices is not defined"),c.assert.isObject(e.initialFairPrices,"initialFairPrices is not an object"),(0,h.default)(e.initialFairPrices)}),it("should receive descriptionPlaceholder and be a string",function(){c.assert.isDefined(e.descriptionPlaceholder,"descriptionPlaceholder is not defined"),c.assert.isString(e.descriptionPlaceholder,"descriptionPlaceholder is not a string")}),it("should receive descriptionMaxLength and be a number",function(){c.assert.isDefined(e.descriptionMaxLength,"descriptionMaxLength is not defined"),c.assert.isNumber(e.descriptionMaxLength,"descriptionMaxLength is not a number")}),e.type){case"categorical":it("should receive categoricalOutcomesMinNum and be a number",function(){c.assert.isDefined(e.categoricalOutcomesMinNum,"categoricalOutcomesMinNum is not defined"),c.assert.isNumber(e.categoricalOutcomesMinNum,"categoricalOutcomesMinNum is not a number")}),it("should receive categoricalOutcomesMaxNum and be a number",function(){c.assert.isDefined(e.categoricalOutcomesMaxNum,"categoricalOutcomesMaxNum is not defined"),c.assert.isNumber(e.categoricalOutcomesMaxNum,"categoricalOutcomesMaxNum is not a number")}),it("should receive categoricalOutcomeMaxLength and be a number",function(){c.assert.isDefined(e.categoricalOutcomeMaxLength,"categoricalOutcomeMaxLength is not defined"),c.assert.isNumber(e.categoricalOutcomeMaxLength,"categoricalOutcomeMaxLength is not a number")});break;case"scalar":it("should receive scalarSmallNum and be a number",function(){c.assert.isDefined(e.scalarSmallNum,"scalarSmallNum is not defined"),c.assert.isNumber(e.scalarSmallNum,"scalarSmallNum is not a number")}),it("should receive scalarBigNum and be a number",function(){c.assert.isDefined(e.scalarBigNum,"scalarBigNum is not defined"),c.assert.isNumber(e.scalarBigNum,"scalarBigNum is not a number")})}})}function a(e){describe("augur-ui-react-components createMarketForm step-3 initial state",function(){it("should receive description and be a string",function(){c.assert.isDefined(e.description,"description is not defined"),c.assert.isString(e.description,"description is not a string")}),it("should receive tagMaxNum and be a number",function(){c.assert.isDefined(e.tagsMaxNum,"tagsMaxNum is not defined"),c.assert.isNumber(e.tagsMaxNum,"tagsMaxNum is not a number")}),it("should receive tagsMaxLength and be a number",function(){c.assert.isDefined(e.tagMaxLength,"tagsMaxLength is not defined"),c.assert.isNumber(e.tagMaxLength,"tagsMaxLength is not a number")})})}function s(e){describe("augur-ui-react-components createMarketForm step-4 initial state",function(){it("should receive takerFee and be a number",function(){c.assert.isDefined(e.takerFee,"makerFee is not defined"),c.assert.isNumber(e.takerFee,"makerFee is not a number")}),it("should receive makerFee and be a number",function(){c.assert.isDefined(e.makerFee,"makerFee is not defined"),c.assert.isNumber(e.makerFee,"makerFee is not a number")}),it("should receive initialLiquidity and be a number",function(){c.assert.isDefined(e.initialLiquidity,"initialLiquidity is not defined"),c.assert.isNumber(e.initialLiquidity,"initialLiquidity is not a number")}),it("should receive initialFairPrices and be an object with correct shape",function(){c.assert.isDefined(e.initialFairPrices,"initialFairPrices is not defined"),c.assert.isObject(e.initialFairPrices,"initialFairPrices is not an object"),(0,h.default)(e.initialFairPrices)}),it("should receive bestStartingQuantity and be a number",function(){c.assert.isDefined(e.bestStartingQuantity,"bestStartingQuantity is not defined"),c.assert.isNumber(e.bestStartingQuantity,"bestStartingQuantity is not a number")}),it("should receive startingQuantity and be a number",function(){c.assert.isDefined(e.startingQuantity,"startingQuantity is not defined"),c.assert.isNumber(e.startingQuantity,"startingQuantity is not a number");
}),it("should receive priceWidth and be a number",function(){c.assert.isDefined(e.priceWidth,"priceWidth is not defined"),c.assert.isNumber(e.priceWidth,"priceWidth is not a number")}),it("should receive priceDepth and be a number",function(){c.assert.isDefined(e.priceDepth,"priceDepth is not defined"),c.assert.isNumber(e.priceDepth,"priceDepth is not a number")})})}function l(e){describe("augur-ui-react-components createMarketForm step-5 initial state",function(){it("should receive description and be a string",function(){c.assert.isDefined(e.description,"description is not defined"),c.assert.isString(e.description,"description is not a string")}),it("should receive outcomes and be an array",function(){c.assert.isDefined(e.outcomes,"outcomes is not defined"),c.assert.isArray(e.outcomes,"outcomes is not an array")}),it("should receive endDate and be an object with correct shape",function(){c.assert.isDefined(e.endDate,"endDate is not defined"),c.assert.isObject(e.endDate,"endDate is not an array"),(0,d.default)(e.endDate)}),it("should receive takerFeePercent and be an object with correct shape",function(){c.assert.isDefined(e.takerFeePercent,"takerFeePercent is not defined"),c.assert.isObject(e.takerFeePercent,"takerFeePercent is not an object"),(0,m.default)(e.takerFeePercent)}),it("should receive makerFeePercent and be an object with correct shape",function(){c.assert.isDefined(e.makerFeePercent,"makerFeePercent is not defined"),c.assert.isObject(e.makerFeePercent,"makerFeePercent is not an object"),(0,m.default)(e.makerFeePercent)}),it("should receive creatingMarket and be a boolean",function(){c.assert.isDefined(e.creatingMarket,"creatingMarket is not defined"),c.assert.isBoolean(e.creatingMarket,"creatingMarket is not a boolean")}),it("should receive volume and be an object with correct shape",function(){c.assert.isDefined(e.volume,"volume is not defined"),c.assert.isObject(e.volume,"volume is not an object"),(0,v.default)(e.volume)}),it("should receive initialFairPrices and be an object with correct shape",function(){c.assert.isDefined(e.initialFairPrices,"initialFairPrices is not defined"),c.assert.isObject(e.initialFairPrices,"initialFairPrices is not an object"),(0,h.default)(e.initialFairPrices)}),it("should receive bestStartingQuantityFormatted and be an object with correct shape",function(){c.assert.isDefined(e.bestStartingQuantityFormatted,"bestStartingQuantityFormatted is not defined"),c.assert.isObject(e.bestStartingQuantityFormatted,"bestStartingQuantityFormatted is not an object"),(0,v.default)(e.bestStartingQuantityFormatted)}),it("should receive startingQuantityFormatted and be an object with correct shape",function(){c.assert.isDefined(e.startingQuantityFormatted,"startingQuantityFormatted is not defined"),c.assert.isObject(e.startingQuantityFormatted,"startingQuantityFormatted is not an object"),(0,v.default)(e.startingQuantityFormatted)}),it("should receive priceWidthFormatted and be an object with correct shape",function(){c.assert.isDefined(e.priceWidthFormatted,"priceWidthFormatted is not defined"),c.assert.isObject(e.priceWidthFormatted,"priceWidthFormatted is not an object"),(0,v.default)(e.priceWidthFormatted)})})}var c=e("chai"),u=e("../../test/assertions/common/endDateShape"),d=i(u),p=e("../../test/assertions/common/initialFairPricesShape"),h=i(p),f=e("../../test/assertions/common/percentNumberShape"),m=i(f),g=e("../../test/assertions/common/numberShape"),v=i(g);t.exports={step1:r,step2:o,step3:a,step4:s,step5:l}},{"../../test/assertions/common/endDateShape":277,"../../test/assertions/common/initialFairPricesShape":278,"../../test/assertions/common/numberShape":279,"../../test/assertions/common/percentNumberShape":280,chai:4}],282:[function(e,t,n){"use strict";function i(e){var t=e[0];r.isDefined(e,"filters isn't defined"),r.isArray(e,"filters isn't an array"),r.equal(e.length,1,"filters array isn't the expected length"),r.isObject(t,"filters[0] isn't an object"),r.isDefined(t,"filters[0] isn't defined"),r.isObject(t,"filters[0] isn't an object"),r.isDefined(t.title,"filters[0].title isn't defined"),r.isString(t.title,"filters[0].title isn't a string"),r.equal(t.title,"Tags","filters[0].title should equal 'Status'"),r.isDefined(t.options,"filters[0].options isn't defined"),r.isArray(t.options,"filters[0].options isn't an array"),r.isDefined(t.options[0],"filters[0].options[0] isn't defined"),r.isObject(t.options[0],"filters[0].options[0] isn't an object"),r.isDefined(t.options[0],"[0].options[0] isn't defined"),r.isObject(t.options[0],"[0].options[0] isn't a object"),r.isDefined(t.options[0].name,"[0].options[0].name isn't defined"),r.isString(t.options[0].name,"[0].options[0].name isn't a string"),r.isDefined(t.options[0].value,"[0].options[0].value isn't defined"),r.isString(t.options[0].value,"[0].options[0].value isn't a string"),r.isDefined(t.options[0].numMatched,"[0].options[0].numMatched isn't defined"),r.isNumber(t.options[0].numMatched,"[0].options[0].numMatched isn't a number"),r.isDefined(t.options[0].isSelected,"[0].options[0].isSelected isn't defined"),r.isBoolean(t.options[0].isSelected,"[0].options[0].isSelected isn't a boolean"),r.isDefined(t.options[0].onClick,"[0].options[0].onClick isn't defined"),r.isFunction(t.options[0].onClick,"[0].options[0].onClick isn't a function")}var r=e("chai").assert;t.exports=i},{chai:4}],283:[function(e,t,n){"use strict";var i=e("./activePage"),r=e("./authForm"),o=e("./createMarketForm"),a=e("./filters"),s=e("./isTransactionsWorking"),l=e("./keywords"),c=e("./links"),u=e("./loginAccount"),d=e("./market"),p=e("./markets"),h=e("./marketsHeader"),f=e("./marketsTotals"),m=e("./onChangeSort"),g=e("./pagination"),v=e("./searchSort"),y=e("./siteHeader"),b=e("./transactions"),k=e("./transactionsTotals"),x=e("./update");t.exports={activePage:i,authForm:r,createMarketForm:o,filters:a,isTransactionsWorking:s,keywords:l,links:c,loginAccount:u,market:d,markets:p,marketsHeader:h,marketsTotals:f,onChangeSort:m,pagination:g,searchSort:v,siteHeader:y,transactions:b,transactionsTotals:k,update:x}},{"./activePage":275,"./authForm":276,"./createMarketForm":281,"./filters":282,"./isTransactionsWorking":284,"./keywords":285,"./links":286,"./loginAccount":287,"./market":288,"./markets":289,"./marketsHeader":290,"./marketsTotals":291,"./onChangeSort":292,"./pagination":293,"./searchSort":294,"./siteHeader":295,"./transactions":296,"./transactionsTotals":297,"./update":298}],284:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"isTransactionsWorking isn't defined"),r.isBoolean(e,"isTransactionsWorking isn't a boolean")}var r=e("chai").assert;t.exports=i},{chai:4}],285:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"keywords isn't defined"),r.isObject(e,"keywords isn't an object"),r.isDefined(e.value,"keywords.value isn't defined"),r.isString(e.value,"keywords.value isn't a string"),r.isDefined(e.onChangeKeywords,"keywords.onChangeKeywords isn't defined"),r.isFunction(e.onChangeKeywords,"keywords.onChangeKeywords isn't a function")}var r=e("chai").assert;t.exports=i},{chai:4}],286:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"links isn't defined"),r.isObject(e,"links isn't an object");var t=e.authLink;r.isDefined(t,"links.authLink isn't defined"),r.isObject(t,"links.authLink isn't an object"),r.isDefined(t.href,"links.authLink.href isn't defined"),r.isString(t.href,"links.authLink.href isn't a string"),r.isDefined(t.onClick,"links.authLink.onClick isn't defined"),r.isFunction(t.onClick,"links.authLink.onClick isn't a function");var n=e.marketsLink;r.isDefined(n,"links.marketsLink isn't defined"),r.isObject(n,"links.marketsLink isn't an object"),r.isDefined(n.href,"links.marketsLink.href isn't defined"),r.isString(n.href,"links.marketsLink.href isn't a string"),r.isDefined(n.onClick,"links.marketsLink.onClick isn't defined"),r.isFunction(n.onClick,"links.marketsLink.onClick isn't a function");var i=e.positionsLink;r.isDefined(i,"links.positionsLink isn't defined"),r.isObject(i,"links.positionsLink isn't an object"),r.isDefined(i.href,"links.positionsLink.href isn't defined"),r.isString(i.href,"links.positionsLink.href isn't a string"),r.isDefined(i.onClick,"links.positionsLink.onClick isn't defined"),r.isFunction(i.onClick,"links.positionsLink.onClick isn't a function");var o=e.transactionsLink;r.isDefined(o,"links.transactionsLink isn't defined"),r.isObject(o,"links.transactionsLink isn't an object"),r.isDefined(o.href,"links.transactionsLink.href isn't defined"),r.isString(o.href,"links.transactionsLink.href isn't a string"),r.isDefined(o.onClick,"links.transactionsLink.onClick isn't defined"),r.isFunction(o.onClick,"links.transactionsLink.onClick isn't a function");var a=e.marketLink;r.isDefined(a,"links.marketLink isn't defined"),r.isObject(a,"links.marketLink isn't an object"),r.isDefined(a.href,"links.marketLink.href isn't defined"),r.isString(a.href,"links.marketLink.href isn't a string"),r.isDefined(a.onClick,"links.marketLink.onClick isn't defined"),r.isFunction(a.onClick,"links.marketLink.onClick isn't a function");var s=e.previousLink;r.isDefined(s,"links.previousLink isn't defined"),r.isObject(s,"links.previousLink isn't an object"),r.isDefined(s.href,"links.previousLink.href isn't defined"),r.isString(s.href,"links.previousLink.href isn't a string"),r.isDefined(s.onClick,"links.previousLink.onClick isn't defined"),r.isFunction(s.onClick,"links.previousLink.onClick isn't a function");var l=e.createMarketLink;r.isDefined(l,"links.createMarketLink isn't defined"),r.isObject(l,"links.createMarketLink isn't an object"),r.isDefined(l.href,"links.createMarketLink.href isn't defined"),r.isString(l.href,"links.createMarketLink.href isn't a string"),r.isDefined(l.onClick,"links.createMarketLink.onClick isn't defined"),r.isFunction(l.onClick,"links.createMarketLink.onClick isn't a function")}var r=e("chai").assert;t.exports=i},{chai:4}],287:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"loginAccount isn't defined"),r.isObject(e,"loginAccount isn't an object"),r.isDefined(e.id,"loginAccount.id isn't defined"),r.isString(e.id,"loginAccount.id isn't a string"),r.isDefined(e.handle,"loginAccount.handle isn't defined"),r.isString(e.handle,"loginAccount.handle isn't a string"),r.isDefined(e.rep,"loginAccount.rep isn't defined"),r.isObject(e.rep,"loginAccount.rep isn't an object"),r.isDefined(e.rep.value,"loginAccount.rep.value isn't defined"),r.isNumber(e.rep.value,"loginAccount.rep.value isn't a number"),r.isDefined(e.rep.formattedValue,"loginAccount.rep.formattedValue isn't defined"),r.isNumber(e.rep.formattedValue,"loginAccount.rep.formattedValue isn't a number"),r.isDefined(e.rep.formatted,"loginAccount.rep.formatted isn't defined"),r.isString(e.rep.formatted,"loginAccount.rep.formatted isn't a string"),r.isDefined(e.rep.rounded,"loginAccount.rep.rounded isn't defined"),r.isString(e.rep.rounded,"loginAccount.rep.rounded isn't a string"),r.isDefined(e.rep.minimized,"loginAccount.rep.minimized isn't defined"),r.isString(e.rep.minimized,"loginAccount.rep.minimized isn't a string"),r.isDefined(e.rep.full,"loginAccount.rep.full isn't defined"),r.isString(e.rep.full,"loginAccount.rep.full isn't a string"),r.isDefined(e.rep.denomination,"loginAccount.rep.denomination isn't defined"),r.isString(e.rep.denomination,"loginAccount.rep.denomination isn't a string"),r.isDefined(e.ether,"loginAccount.ether isn't defined"),r.isObject(e.ether,"loginAccount.ether isn't an object"),r.isDefined(e.ether.value,"loginAccount.ether.value isn't defined"),r.isNumber(e.ether.value,"loginAccount.ether.value isn't a number"),r.isDefined(e.ether.formattedValue,"loginAccount.ether.formattedValue isn't defined"),r.isNumber(e.ether.formattedValue,"loginAccount.ether.formattedValue isn't a number"),r.isDefined(e.ether.formatted,"loginAccount.ether.formatted isn't defined"),r.isString(e.ether.formatted,"loginAccount.ether.formatted isn't a string"),r.isDefined(e.ether.rounded,"loginAccount.ether.rounded isn't defined"),r.isString(e.ether.rounded,"loginAccount.ether.rounded isn't a string"),r.isDefined(e.ether.minimized,"loginAccount.ether.minimized isn't defined"),r.isString(e.ether.minimized,"loginAccount.ether.minimized isn't a string"),r.isDefined(e.ether.full,"loginAccount.ether.full isn't defined"),r.isString(e.ether.full,"loginAccount.ether.full isn't a string"),r.isDefined(e.ether.denomination,"loginAccount.ether.denomination isn't defined"),r.isString(e.ether.denomination,"loginAccount.ether.denomination isn't a string"),r.isDefined(e.realEther,"loginAccount.realEther isn't defined"),r.isObject(e.realEther,"loginAccount.realEther isn't an object"),r.isDefined(e.realEther.value,"loginAccount.realEther.value isn't defined"),r.isNumber(e.realEther.value,"loginAccount.realEther.value isn't a number"),r.isDefined(e.realEther.formattedValue,"loginAccount.realEther.formattedValue isn't defined"),r.isNumber(e.realEther.formattedValue,"loginAccount.realEther.formattedValue isn't a number"),r.isDefined(e.realEther.formatted,"loginAccount.realEther.formatted isn't defined"),r.isString(e.realEther.formatted,"loginAccount.realEther.formatted isn't a string"),r.isDefined(e.realEther.rounded,"loginAccount.realEther.rounded isn't defined"),r.isString(e.realEther.rounded,"loginAccount.realEther.rounded isn't a string"),r.isDefined(e.realEther.minimized,"loginAccount.realEther.minimized isn't defined"),r.isString(e.realEther.minimized,"loginAccount.realEther.minimized isn't a string"),r.isDefined(e.realEther.full,"loginAccount.realEther.full isn't defined"),r.isString(e.realEther.full,"loginAccount.realEther.full isn't a string"),r.isDefined(e.realEther.denomination,"loginAccount.realEther.denomination isn't defined"),r.isString(e.realEther.denomination,"loginAccount.realEther.denomination isn't a string")}var r=e("chai").assert;t.exports=i},{chai:4}],288:[function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){d.isDefined(e,"markets is empty."),d.isObject(e,"markets[0] (market) isn't an object"),d.isDefined(e.id,"market.id isn't defined."),d.isString(e.id,"market.id isn't a string"),d.isDefined(e.type,"market.type isn't defined."),d.isString(e.type,"market.type isn't a string"),d.isDefined(e.description,"market.description isn't defined"),d.isString(e.description,"market.description isn't a string"),d.isDefined(e.endDate,"market.endDate isn't defined"),d.isObject(e.endDate,"market.endDate isn't an object"),d.isDefined(e.endDateLabel,"market.endDateLabel isn't defined"),d.isString(e.endDateLabel,"market.endDateLabel isn't an string"),d.isDefined(e.takerFeePercent,"market.takerFeePercent isn't defined"),d.isObject(e.takerFeePercent,"market.takerFeePercent isn't an object"),(0,l.default)(e.takerFeePercent),d.isDefined(e.makerFeePercent,"market.makerFeePercent isn't defined"),d.isObject(e.makerFeePercent,"market.makerFeePercent isn't an object"),(0,l.default)(e.makerFeePercent),d.isDefined(e.volume,"market.volume isn't defined"),d.isObject(e.volume,"market.volume isn't an object"),(0,u.default)(e.volume),d.isDefined(e.isOpen,"market.isOpen isn't defined"),d.isBoolean(e.isOpen,"market.isOpen isn't a boolean"),d.isDefined(e.isPendingReport,"market.isPendingReport isn't defined"),d.isBoolean(e.isPendingReport,"market.isPendingReport isn't a boolean"),d.isDefined(e.marketLink,"market.marketLink isn't defined"),d.isObject(e.marketLink,"market.marketLink isn't an object"),a(e.marketLink),d.isDefined(e.tags,"market.tags isn't defined"),d.isArray(e.tags,"market.tags isn't an array"),d.isDefined(e.outcomes,"market.outcomes isn't defined"),d.isArray(e.outcomes,"market.outcomes isn't an array"),d.isDefined(e.reportableOutcomes,"market.reportableOutcomes isn't defined"),d.isArray(e.reportableOutcomes,"market.reportableOutcomes isn't an array"),d.isDefined(e.tradeSummary,"market.tradeSummary isn't defined"),d.isObject(e.tradeSummary,"market.tradeSummary isn't a object"),d.isDefined(e.priceTimeSeries,"market.priceTimeSeries isn't defined"),d.isArray(e.priceTimeSeries,"market.priceTimeSeries isn't an array"),d.isDefined(e.positionsSummary,"market.positionsSummary isn't defined"),d.isObject(e.positionsSummary,"market.positionsSummary isn't an object"),d.isDefined(e.report,"market.report isn't defined"),d.isObject(e.report,"market.report isn't an object"),o(e.report),d.isDefined(e.orderBook,"market.orderBook isn't defined"),d.isObject(e.orderBook,"market.orderBook isn't an object")}function o(e){d.isDefined(e,"market doesn't have a report object"),d.isObject(e,"market.report isn't an object"),d.isDefined(e.isUnethical,"market.report.isUnethical isn't defined"),d.isBoolean(e.isUnethical,"market.report.isUnethical isn't a boolean"),d.isDefined(e.onSubmitReport,"market.report.onSubmitReport isn't defined"),d.isFunction(e.onSubmitReport,"market.report.onSubmitReport isn't a function")}function a(e){d.isDefined(e,"market.marketLink isn't defined"),d.isObject(e,"market.marketLink isn't an object"),d.isDefined(e.text,"market.marketLink.text isn't defined"),d.isString(e.text,"market.marketLink.text isn't a string"),d.isDefined(e.className,"market.marketLink.className isn't defined"),d.isString(e.className,"market.marketLink.className isn't a string"),d.isDefined(e.onClick,"market.marketLink.onClick isn't defined"),d.isFunction(e.onClick,"market.marketLink.onClick isn't a function")}var s=e("../../test/assertions/common/percentNumberShape"),l=i(s),c=e("../../test/assertions/common/numberShape"),u=i(c),d=e("chai").assert;t.exports={marketAssertion:r,reportAssertion:o,marketLinkAssertion:a}},{"../../test/assertions/common/numberShape":279,"../../test/assertions/common/percentNumberShape":280,chai:4}],289:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"markets is not defined"),r.isArray(e,"markets isn't an array")}var r=e("chai").assert;t.exports=i},{chai:4}],290:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"marketsHeader isn't defined"),r.isObject(e,"marketsHeader isn't an object")}var r=e("chai").assert;t.exports=i},{chai:4}],291:[function(e,t,n){"use strict";function i(e,t){s.isDefined(e,"marketsTotals."+t+" isn't defined"),s.isNumber(e,"marketsTotals."+t+" isn't a number")}function r(e,t){s.isDefined(e,"positionsSummary."+t+" isn't defined"),s.isObject(e,"positionsSummary."+t+" isn't a object"),s.isDefined(e.value,t+".value isn't defined"),s.isNumber(e.value,t+".value isn't a number"),s.isDefined(e.formattedValue,t+".formattedValue isn't defined"),s.isNumber(e.formattedValue,t+".formattedValue isn't a number"),s.isDefined(e.formatted,t+".formatted isn't defined"),s.isString(e.formatted,t+".formatted isn't a string"),s.isDefined(e.roundedValue,t+".roundedValue isn't defined"),s.isNumber(e.roundedValue,t+".roundedValue isn't a number"),s.isDefined(e.rounded,t+".rounded isn't defined"),s.isString(e.rounded,t+".rounded isn't a string"),s.isDefined(e.minimized,t+".minimized isn't defined"),s.isString(e.minimized,t+".minimized isn't a string"),s.isDefined(e.denomination,t+".denomination isn't defined"),s.isString(e.denomination,t+".denomination isn't a string"),s.isDefined(e.full,t+".full isn't defined"),s.isString(e.full,t+".full isn't a string")}function o(e){s.isDefined(e,"marketsTotals isn't defined"),s.isObject(e,"marketsTotals isn't an object"),i(e.numAll,"numAll"),i(e.numFavorites,"numFavorites"),i(e.numFiltered,"numFiltered"),i(e.numPendingReports,"numPendingReports"),i(e.numUnpaginated,"numUnpaginated"),s.isDefined(e.positionsSummary,"marketsTotals.positionsSummary isn't defined"),s.isObject(e.positionsSummary,"marketsTotals.positionsSummary isn't an object as expected")}function a(e){s.isDefined(e,"positionsSummary isn't defined"),s.isObject(e,"positionsSummary isn't an object"),r(e.gainPercent,"gainPercent"),r(e.netChange,"netChange"),r(e.numPositions,"numPositions"),r(e.purchasePrice,"purchasePrice"),r(e.qtyShares,"qtyShares"),r(e.shareChange,"shareChange"),r(e.totalCost,"totalCost"),r(e.totalValue,"totalValue")}var s=e("chai").assert;t.exports={marketsTotalsAssertion:o,positionsSummaryAssertion:a}},{chai:4}],292:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"onChangeSort isn't defined"),r.isFunction(e,"onChangeSort isn't a function")}var r=e("chai").assert;t.exports=i},{chai:4}],293:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"pagination isn't defined"),r.isObject(e,"pagination isn't an object"),r.isDefined(e.numPerPage,"pagination.numPerPage isn't defined"),r.isNumber(e.numPerPage,"pagination.numPerPage isn't a Number"),r.isDefined(e.numPages,"pagination.numPages isn't defined"),r.isNumber(e.numPages,"pagination.numPages isn't a Number"),r.isDefined(e.selectedPageNum,"pagination.selectedPageNum isn't defined"),r.isNumber(e.selectedPageNum,"pagination.selectedPageNum isn't a Number"),r.isDefined(e.nextPageNum,"pagination.nextPageNum isn't defined"),r.isNumber(e.nextPageNum,"pagination.nextPageNum isn't a Number"),r.isDefined(e.startItemNum,"pagination.startItemNum isn't defined"),r.isNumber(e.startItemNum,"pagination.startItemNum isn't a Number"),r.isDefined(e.endItemNum,"pagination.endItemNum isn't defined"),r.isNumber(e.endItemNum,"pagination.endItemNum isn't a Number"),r.isDefined(e.numUnpaginated,"pagination.numUnpaginated isn't defined"),r.isNumber(e.numUnpaginated,"pagination.numUnpaginated isn't a Number"),r.isDefined(e.nextItemNum,"pagination.nextItemNum isn't defined"),r.isNumber(e.nextItemNum,"pagination.nextItemNum isn't a Number"),r.isDefined(e.onUpdateSelectedPageNum,"pagination.onUpdateSelectedPageNum isn't defined"),r.isFunction(e.onUpdateSelectedPageNum,"pagination.onUpdateSelectedPageNum isn't a Function")}var r=e("chai").assert;t.exports=i},{chai:4}],294:[function(e,t,n){"use strict";function i(e){a.isDefined(e,"searchSort isn't defined"),a.isObject(e,"searchSort isn't an object"),a.isDefined(e.onChangeSort,"searchSort.onChangeSort isn't defined"),a.isFunction(e.onChangeSort,"searchSort.onChangeSort isn't a function"),r(e.selectedSort),o(e.sortOptions)}function r(e){a.isDefined(e,"selectedSort isn't defined"),a.isObject(e,"selectedSort isn't an Object"),a.isDefined(e.prop,"selectedSort.prop isn't defined"),a.isString(e.prop,"selectedSort.prop isn't a string"),a.isDefined(e.isDesc,"selectedSort.isDesc isn't defined"),a.isBoolean(e.isDesc,"selectedSort.isDesc isn't a boolean")}function o(e){a.isDefined(e,"sortOptions isn't defined"),a.isArray(e,"sortOptions isn't an array"),a.isDefined(e[0],"sortOptions[0] doesn't exist"),a.isObject(e[0],"sortOptions[0] isn't an object"),a.isDefined(e[0].label,"sortOptions[0].label isn't defined"),a.isString(e[0].label,"sortOptions[0].label isn't a string"),a.isDefined(e[0].value,"sortOptions[0].value isn't defined"),a.isString(e[0].value,"sortOptions[0].value isn't a string")}var a=e("chai").assert;t.exports=i},{chai:4}],295:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"siteHeader isn't defined"),r.isObject(e,"siteHeader isn't a object"),a(e.activePage),o(e.loginAccount),s(e.positionsSummary),l(e.transactionsTotals),c(e.isTransactionsWorking)}var r=e("chai").assert,o=e("./loginAccount"),a=e("./activePage"),s=e("./marketsTotals").positionsSummaryAssertion,l=e("./transactionsTotals"),c=e("./isTransactionsWorking");t.exports=i},{"./activePage":275,"./isTransactionsWorking":284,"./loginAccount":287,"./marketsTotals":291,"./transactionsTotals":297,chai:4}],296:[function(e,t,n){"use strict";function i(e){o.isDefined(e.id,"transactions[0].id isn't defined"),o.isString(e.id,"transactions[0].id isn't a string"),o.isDefined(e.type,"transactions[0].type isn't defined"),o.isString(e.type,"transactions[0].type isn't a string"),o.isDefined(e.status,"transactions[0].status isn't defined"),o.isString(e.status,"transcations[0].status isn't a string"),o.isDefined(e.message,"transactions[0].message isn't defined"),o.isString(e.message,"transactions[0].message isn't a string")}function r(e){o.isDefined(e,"transactions isn't defined"),o.isArray(e,"transactions isn't an array"),void 0!==e[0]&&(o.isDefined(e[0],"transactions[0] isn't defined"),o.isObject(e[0],"transactions[0] isn't an object"),i(e[0]))}var o=e("chai").assert;t.exports=r},{chai:4}],297:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"transactionsTotals isn't defined"),r.isObject(e,"transactionsTotals isn't an object as expected"),r.isDefined(e.title,"transactionsTotals.title isn't defined"),r.isString(e.title,"transactionsTotals.title isn't a string")}var r=e("chai").assert;t.exports=i},{chai:4}],298:[function(e,t,n){"use strict";function i(e){r.isDefined(e,"update isn't defined"),r.isFunction(e,"update isn't a function")}var r=e("chai").assert;t.exports=i},{chai:4}]},{},[219])(219)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
(function (process,global){
/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
 */
(function () {

    var async = {};
    function noop() {}
    function identity(v) {
        return v;
    }
    function toBool(v) {
        return !!v;
    }
    function notId(v) {
        return !v;
    }

    // global on the server, window in the browser
    var previous_async;

    // Establish the root object, `window` (`self`) in the browser, `global`
    // on the server, or `this` in some virtual machines. We use `self`
    // instead of `window` for `WebWorker` support.
    var root = typeof self === 'object' && self.self === self && self ||
            typeof global === 'object' && global.global === global && global ||
            this;

    if (root != null) {
        previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        return function() {
            if (fn === null) throw new Error("Callback was already called.");
            fn.apply(this, arguments);
            fn = null;
        };
    }

    function _once(fn) {
        return function() {
            if (fn === null) return;
            fn.apply(this, arguments);
            fn = null;
        };
    }

    //// cross-browser compatiblity functions ////

    var _toString = Object.prototype.toString;

    var _isArray = Array.isArray || function (obj) {
        return _toString.call(obj) === '[object Array]';
    };

    // Ported from underscore.js isObject
    var _isObject = function(obj) {
        var type = typeof obj;
        return type === 'function' || type === 'object' && !!obj;
    };

    function _isArrayLike(arr) {
        return _isArray(arr) || (
            // has a positive integer length property
            typeof arr.length === "number" &&
            arr.length >= 0 &&
            arr.length % 1 === 0
        );
    }

    function _arrayEach(arr, iterator) {
        var index = -1,
            length = arr.length;

        while (++index < length) {
            iterator(arr[index], index, arr);
        }
    }

    function _map(arr, iterator) {
        var index = -1,
            length = arr.length,
            result = Array(length);

        while (++index < length) {
            result[index] = iterator(arr[index], index, arr);
        }
        return result;
    }

    function _range(count) {
        return _map(Array(count), function (v, i) { return i; });
    }

    function _reduce(arr, iterator, memo) {
        _arrayEach(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    }

    function _forEachOf(object, iterator) {
        _arrayEach(_keys(object), function (key) {
            iterator(object[key], key);
        });
    }

    function _indexOf(arr, item) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] === item) return i;
        }
        return -1;
    }

    var _keys = Object.keys || function (obj) {
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    function _keyIterator(coll) {
        var i = -1;
        var len;
        var keys;
        if (_isArrayLike(coll)) {
            len = coll.length;
            return function next() {
                i++;
                return i < len ? i : null;
            };
        } else {
            keys = _keys(coll);
            len = keys.length;
            return function next() {
                i++;
                return i < len ? keys[i] : null;
            };
        }
    }

    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)
    // This accumulates the arguments passed into an array, after a given index.
    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).
    function _restParam(func, startIndex) {
        startIndex = startIndex == null ? func.length - 1 : +startIndex;
        return function() {
            var length = Math.max(arguments.length - startIndex, 0);
            var rest = Array(length);
            for (var index = 0; index < length; index++) {
                rest[index] = arguments[index + startIndex];
            }
            switch (startIndex) {
                case 0: return func.call(this, rest);
                case 1: return func.call(this, arguments[0], rest);
            }
            // Currently unused but handle cases outside of the switch statement:
            // var args = Array(startIndex + 1);
            // for (index = 0; index < startIndex; index++) {
            //     args[index] = arguments[index];
            // }
            // args[startIndex] = rest;
            // return func.apply(this, args);
        };
    }

    function _withoutIndex(iterator) {
        return function (value, index, callback) {
            return iterator(value, callback);
        };
    }

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////

    // capture the global reference to guard against fakeTimer mocks
    var _setImmediate = typeof setImmediate === 'function' && setImmediate;

    var _delay = _setImmediate ? function(fn) {
        // not a direct alias for IE10 compatibility
        _setImmediate(fn);
    } : function(fn) {
        setTimeout(fn, 0);
    };

    if (typeof process === 'object' && typeof process.nextTick === 'function') {
        async.nextTick = process.nextTick;
    } else {
        async.nextTick = _delay;
    }
    async.setImmediate = _setImmediate ? _delay : async.nextTick;


    async.forEach =
    async.each = function (arr, iterator, callback) {
        return async.eachOf(arr, _withoutIndex(iterator), callback);
    };

    async.forEachSeries =
    async.eachSeries = function (arr, iterator, callback) {
        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);
    };


    async.forEachLimit =
    async.eachLimit = function (arr, limit, iterator, callback) {
        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);
    };

    async.forEachOf =
    async.eachOf = function (object, iterator, callback) {
        callback = _once(callback || noop);
        object = object || [];

        var iter = _keyIterator(object);
        var key, completed = 0;

        while ((key = iter()) != null) {
            completed += 1;
            iterator(object[key], key, only_once(done));
        }

        if (completed === 0) callback(null);

        function done(err) {
            completed--;
            if (err) {
                callback(err);
            }
            // Check key is null in case iterator isn't exhausted
            // and done resolved synchronously.
            else if (key === null && completed <= 0) {
                callback(null);
            }
        }
    };

    async.forEachOfSeries =
    async.eachOfSeries = function (obj, iterator, callback) {
        callback = _once(callback || noop);
        obj = obj || [];
        var nextKey = _keyIterator(obj);
        var key = nextKey();
        function iterate() {
            var sync = true;
            if (key === null) {
                return callback(null);
            }
            iterator(obj[key], key, only_once(function (err) {
                if (err) {
                    callback(err);
                }
                else {
                    key = nextKey();
                    if (key === null) {
                        return callback(null);
                    } else {
                        if (sync) {
                            async.setImmediate(iterate);
                        } else {
                            iterate();
                        }
                    }
                }
            }));
            sync = false;
        }
        iterate();
    };



    async.forEachOfLimit =
    async.eachOfLimit = function (obj, limit, iterator, callback) {
        _eachOfLimit(limit)(obj, iterator, callback);
    };

    function _eachOfLimit(limit) {

        return function (obj, iterator, callback) {
            callback = _once(callback || noop);
            obj = obj || [];
            var nextKey = _keyIterator(obj);
            if (limit <= 0) {
                return callback(null);
            }
            var done = false;
            var running = 0;
            var errored = false;

            (function replenish () {
                if (done && running <= 0) {
                    return callback(null);
                }

                while (running < limit && !errored) {
                    var key = nextKey();
                    if (key === null) {
                        done = true;
                        if (running <= 0) {
                            callback(null);
                        }
                        return;
                    }
                    running += 1;
                    iterator(obj[key], key, only_once(function (err) {
                        running -= 1;
                        if (err) {
                            callback(err);
                            errored = true;
                        }
                        else {
                            replenish();
                        }
                    }));
                }
            })();
        };
    }


    function doParallel(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOf, obj, iterator, callback);
        };
    }
    function doParallelLimit(fn) {
        return function (obj, limit, iterator, callback) {
            return fn(_eachOfLimit(limit), obj, iterator, callback);
        };
    }
    function doSeries(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOfSeries, obj, iterator, callback);
        };
    }

    function _asyncMap(eachfn, arr, iterator, callback) {
        callback = _once(callback || noop);
        arr = arr || [];
        var results = _isArrayLike(arr) ? [] : {};
        eachfn(arr, function (value, index, callback) {
            iterator(value, function (err, v) {
                results[index] = v;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    }

    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = doParallelLimit(_asyncMap);

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.inject =
    async.foldl =
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachOfSeries(arr, function (x, i, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err, memo);
        });
    };

    async.foldr =
    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, identity).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };

    async.transform = function (arr, memo, iterator, callback) {
        if (arguments.length === 3) {
            callback = iterator;
            iterator = memo;
            memo = _isArray(arr) ? [] : {};
        }

        async.eachOf(arr, function(v, k, cb) {
            iterator(memo, v, k, cb);
        }, function(err) {
            callback(err, memo);
        });
    };

    function _filter(eachfn, arr, iterator, callback) {
        var results = [];
        eachfn(arr, function (x, index, callback) {
            iterator(x, function (v) {
                if (v) {
                    results.push({index: index, value: x});
                }
                callback();
            });
        }, function () {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    }

    async.select =
    async.filter = doParallel(_filter);

    async.selectLimit =
    async.filterLimit = doParallelLimit(_filter);

    async.selectSeries =
    async.filterSeries = doSeries(_filter);

    function _reject(eachfn, arr, iterator, callback) {
        _filter(eachfn, arr, function(value, cb) {
            iterator(value, function(v) {
                cb(!v);
            });
        }, callback);
    }
    async.reject = doParallel(_reject);
    async.rejectLimit = doParallelLimit(_reject);
    async.rejectSeries = doSeries(_reject);

    function _createTester(eachfn, check, getResult) {
        return function(arr, limit, iterator, cb) {
            function done() {
                if (cb) cb(getResult(false, void 0));
            }
            function iteratee(x, _, callback) {
                if (!cb) return callback();
                iterator(x, function (v) {
                    if (cb && check(v)) {
                        cb(getResult(true, x));
                        cb = iterator = false;
                    }
                    callback();
                });
            }
            if (arguments.length > 3) {
                eachfn(arr, limit, iteratee, done);
            } else {
                cb = iterator;
                iterator = limit;
                eachfn(arr, iteratee, done);
            }
        };
    }

    async.any =
    async.some = _createTester(async.eachOf, toBool, identity);

    async.someLimit = _createTester(async.eachOfLimit, toBool, identity);

    async.all =
    async.every = _createTester(async.eachOf, notId, notId);

    async.everyLimit = _createTester(async.eachOfLimit, notId, notId);

    function _findGetResult(v, x) {
        return x;
    }
    async.detect = _createTester(async.eachOf, identity, _findGetResult);
    async.detectSeries = _createTester(async.eachOfSeries, identity, _findGetResult);
    async.detectLimit = _createTester(async.eachOfLimit, identity, _findGetResult);

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                callback(null, _map(results.sort(comparator), function (x) {
                    return x.value;
                }));
            }

        });

        function comparator(left, right) {
            var a = left.criteria, b = right.criteria;
            return a < b ? -1 : a > b ? 1 : 0;
        }
    };

    async.auto = function (tasks, concurrency, callback) {
        if (typeof arguments[1] === 'function') {
            // concurrency is optional, shift the args.
            callback = concurrency;
            concurrency = null;
        }
        callback = _once(callback || noop);
        var keys = _keys(tasks);
        var remainingTasks = keys.length;
        if (!remainingTasks) {
            return callback(null);
        }
        if (!concurrency) {
            concurrency = remainingTasks;
        }

        var results = {};
        var runningTasks = 0;

        var hasError = false;

        var listeners = [];
        function addListener(fn) {
            listeners.unshift(fn);
        }
        function removeListener(fn) {
            var idx = _indexOf(listeners, fn);
            if (idx >= 0) listeners.splice(idx, 1);
        }
        function taskComplete() {
            remainingTasks--;
            _arrayEach(listeners.slice(0), function (fn) {
                fn();
            });
        }

        addListener(function () {
            if (!remainingTasks) {
                callback(null, results);
            }
        });

        _arrayEach(keys, function (k) {
            if (hasError) return;
            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
            var taskCallback = _restParam(function(err, args) {
                runningTasks--;
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _forEachOf(results, function(val, rkey) {
                        safeResults[rkey] = val;
                    });
                    safeResults[k] = args;
                    hasError = true;

                    callback(err, safeResults);
                }
                else {
                    results[k] = args;
                    async.setImmediate(taskComplete);
                }
            });
            var requires = task.slice(0, task.length - 1);
            // prevent dead-locks
            var len = requires.length;
            var dep;
            while (len--) {
                if (!(dep = tasks[requires[len]])) {
                    throw new Error('Has nonexistent dependency in ' + requires.join(', '));
                }
                if (_isArray(dep) && _indexOf(dep, k) >= 0) {
                    throw new Error('Has cyclic dependencies');
                }
            }
            function ready() {
                return runningTasks < concurrency && _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            }
            if (ready()) {
                runningTasks++;
                task[task.length - 1](taskCallback, results);
            }
            else {
                addListener(listener);
            }
            function listener() {
                if (ready()) {
                    runningTasks++;
                    removeListener(listener);
                    task[task.length - 1](taskCallback, results);
                }
            }
        });
    };



    async.retry = function(times, task, callback) {
        var DEFAULT_TIMES = 5;
        var DEFAULT_INTERVAL = 0;

        var attempts = [];

        var opts = {
            times: DEFAULT_TIMES,
            interval: DEFAULT_INTERVAL
        };

        function parseTimes(acc, t){
            if(typeof t === 'number'){
                acc.times = parseInt(t, 10) || DEFAULT_TIMES;
            } else if(typeof t === 'object'){
                acc.times = parseInt(t.times, 10) || DEFAULT_TIMES;
                acc.interval = parseInt(t.interval, 10) || DEFAULT_INTERVAL;
            } else {
                throw new Error('Unsupported argument type for \'times\': ' + typeof t);
            }
        }

        var length = arguments.length;
        if (length < 1 || length > 3) {
            throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');
        } else if (length <= 2 && typeof times === 'function') {
            callback = task;
            task = times;
        }
        if (typeof times !== 'function') {
            parseTimes(opts, times);
        }
        opts.callback = callback;
        opts.task = task;

        function wrappedTask(wrappedCallback, wrappedResults) {
            function retryAttempt(task, finalAttempt) {
                return function(seriesCallback) {
                    task(function(err, result){
                        seriesCallback(!err || finalAttempt, {err: err, result: result});
                    }, wrappedResults);
                };
            }

            function retryInterval(interval){
                return function(seriesCallback){
                    setTimeout(function(){
                        seriesCallback(null);
                    }, interval);
                };
            }

            while (opts.times) {

                var finalAttempt = !(opts.times-=1);
                attempts.push(retryAttempt(opts.task, finalAttempt));
                if(!finalAttempt && opts.interval > 0){
                    attempts.push(retryInterval(opts.interval));
                }
            }

            async.series(attempts, function(done, data){
                data = data[data.length - 1];
                (wrappedCallback || opts.callback)(data.err, data.result);
            });
        }

        // If a callback is passed, run this as a controll flow
        return opts.callback ? wrappedTask() : wrappedTask;
    };

    async.waterfall = function (tasks, callback) {
        callback = _once(callback || noop);
        if (!_isArray(tasks)) {
            var err = new Error('First argument to waterfall must be an array of functions');
            return callback(err);
        }
        if (!tasks.length) {
            return callback();
        }
        function wrapIterator(iterator) {
            return _restParam(function (err, args) {
                if (err) {
                    callback.apply(null, [err].concat(args));
                }
                else {
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    ensureAsync(iterator).apply(null, args);
                }
            });
        }
        wrapIterator(async.iterator(tasks))();
    };

    function _parallel(eachfn, tasks, callback) {
        callback = callback || noop;
        var results = _isArrayLike(tasks) ? [] : {};

        eachfn(tasks, function (task, key, callback) {
            task(_restParam(function (err, args) {
                if (args.length <= 1) {
                    args = args[0];
                }
                results[key] = args;
                callback(err);
            }));
        }, function (err) {
            callback(err, results);
        });
    }

    async.parallel = function (tasks, callback) {
        _parallel(async.eachOf, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel(_eachOfLimit(limit), tasks, callback);
    };

    async.series = function(tasks, callback) {
        _parallel(async.eachOfSeries, tasks, callback);
    };

    async.iterator = function (tasks) {
        function makeCallback(index) {
            function fn() {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            }
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        }
        return makeCallback(0);
    };

    async.apply = _restParam(function (fn, args) {
        return _restParam(function (callArgs) {
            return fn.apply(
                null, args.concat(callArgs)
            );
        });
    });

    function _concat(eachfn, arr, fn, callback) {
        var result = [];
        eachfn(arr, function (x, index, cb) {
            fn(x, function (err, y) {
                result = result.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, result);
        });
    }
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        callback = callback || noop;
        if (test()) {
            var next = _restParam(function(err, args) {
                if (err) {
                    callback(err);
                } else if (test.apply(this, args)) {
                    iterator(next);
                } else {
                    callback.apply(null, [null].concat(args));
                }
            });
            iterator(next);
        } else {
            callback(null);
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        var calls = 0;
        return async.whilst(function() {
            return ++calls <= 1 || test.apply(this, arguments);
        }, iterator, callback);
    };

    async.until = function (test, iterator, callback) {
        return async.whilst(function() {
            return !test.apply(this, arguments);
        }, iterator, callback);
    };

    async.doUntil = function (iterator, test, callback) {
        return async.doWhilst(iterator, function() {
            return !test.apply(this, arguments);
        }, callback);
    };

    async.during = function (test, iterator, callback) {
        callback = callback || noop;

        var next = _restParam(function(err, args) {
            if (err) {
                callback(err);
            } else {
                args.push(check);
                test.apply(this, args);
            }
        });

        var check = function(err, truth) {
            if (err) {
                callback(err);
            } else if (truth) {
                iterator(next);
            } else {
                callback(null);
            }
        };

        test(check);
    };

    async.doDuring = function (iterator, test, callback) {
        var calls = 0;
        async.during(function(next) {
            if (calls++ < 1) {
                next(null, true);
            } else {
                test.apply(this, arguments);
            }
        }, iterator, callback);
    };

    function _queue(worker, concurrency, payload) {
        if (concurrency == null) {
            concurrency = 1;
        }
        else if(concurrency === 0) {
            throw new Error('Concurrency must not be zero');
        }
        function _insert(q, data, pos, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0 && q.idle()) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                    q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    callback: callback || noop
                };

                if (pos) {
                    q.tasks.unshift(item);
                } else {
                    q.tasks.push(item);
                }

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
            });
            async.setImmediate(q.process);
        }
        function _next(q, tasks) {
            return function(){
                workers -= 1;

                var removed = false;
                var args = arguments;
                _arrayEach(tasks, function (task) {
                    _arrayEach(workersList, function (worker, index) {
                        if (worker === task && !removed) {
                            workersList.splice(index, 1);
                            removed = true;
                        }
                    });

                    task.callback.apply(task, args);
                });
                if (q.tasks.length + workers === 0) {
                    q.drain();
                }
                q.process();
            };
        }

        var workers = 0;
        var workersList = [];
        var q = {
            tasks: [],
            concurrency: concurrency,
            payload: payload,
            saturated: noop,
            empty: noop,
            drain: noop,
            started: false,
            paused: false,
            push: function (data, callback) {
                _insert(q, data, false, callback);
            },
            kill: function () {
                q.drain = noop;
                q.tasks = [];
            },
            unshift: function (data, callback) {
                _insert(q, data, true, callback);
            },
            process: function () {
                while(!q.paused && workers < q.concurrency && q.tasks.length){

                    var tasks = q.payload ?
                        q.tasks.splice(0, q.payload) :
                        q.tasks.splice(0, q.tasks.length);

                    var data = _map(tasks, function (task) {
                        return task.data;
                    });

                    if (q.tasks.length === 0) {
                        q.empty();
                    }
                    workers += 1;
                    workersList.push(tasks[0]);
                    var cb = only_once(_next(q, tasks));
                    worker(data, cb);
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            },
            workersList: function () {
                return workersList;
            },
            idle: function() {
                return q.tasks.length + workers === 0;
            },
            pause: function () {
                q.paused = true;
            },
            resume: function () {
                if (q.paused === false) { return; }
                q.paused = false;
                var resumeCount = Math.min(q.concurrency, q.tasks.length);
                // Need to call q.process once per concurrent
                // worker to preserve full concurrency after pause
                for (var w = 1; w <= resumeCount; w++) {
                    async.setImmediate(q.process);
                }
            }
        };
        return q;
    }

    async.queue = function (worker, concurrency) {
        var q = _queue(function (items, cb) {
            worker(items[0], cb);
        }, concurrency, 1);

        return q;
    };

    async.priorityQueue = function (worker, concurrency) {

        function _compareTasks(a, b){
            return a.priority - b.priority;
        }

        function _binarySearch(sequence, item, compare) {
            var beg = -1,
                end = sequence.length - 1;
            while (beg < end) {
                var mid = beg + ((end - beg + 1) >>> 1);
                if (compare(item, sequence[mid]) >= 0) {
                    beg = mid;
                } else {
                    end = mid - 1;
                }
            }
            return beg;
        }

        function _insert(q, data, priority, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                    q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    priority: priority,
                    callback: typeof callback === 'function' ? callback : noop
                };

                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
                async.setImmediate(q.process);
            });
        }

        // Start with a normal queue
        var q = async.queue(worker, concurrency);

        // Override push to accept second parameter representing priority
        q.push = function (data, priority, callback) {
            _insert(q, data, priority, callback);
        };

        // Remove unshift function
        delete q.unshift;

        return q;
    };

    async.cargo = function (worker, payload) {
        return _queue(worker, 1, payload);
    };

    function _console_fn(name) {
        return _restParam(function (fn, args) {
            fn.apply(null, args.concat([_restParam(function (err, args) {
                if (typeof console === 'object') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _arrayEach(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            })]));
        });
    }
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        var has = Object.prototype.hasOwnProperty;
        hasher = hasher || identity;
        var memoized = _restParam(function memoized(args) {
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (has.call(memo, key)) {   
                async.setImmediate(function () {
                    callback.apply(null, memo[key]);
                });
            }
            else if (has.call(queues, key)) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([_restParam(function (args) {
                    memo[key] = args;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                        q[i].apply(null, args);
                    }
                })]));
            }
        });
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
        return function () {
            return (fn.unmemoized || fn).apply(null, arguments);
        };
    };

    function _times(mapper) {
        return function (count, iterator, callback) {
            mapper(_range(count), iterator, callback);
        };
    }

    async.times = _times(async.map);
    async.timesSeries = _times(async.mapSeries);
    async.timesLimit = function (count, limit, iterator, callback) {
        return async.mapLimit(_range(count), limit, iterator, callback);
    };

    async.seq = function (/* functions... */) {
        var fns = arguments;
        return _restParam(function (args) {
            var that = this;

            var callback = args[args.length - 1];
            if (typeof callback == 'function') {
                args.pop();
            } else {
                callback = noop;
            }

            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) {
                    cb(err, nextargs);
                })]));
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        });
    };

    async.compose = function (/* functions... */) {
        return async.seq.apply(null, Array.prototype.reverse.call(arguments));
    };


    function _applyEach(eachfn) {
        return _restParam(function(fns, args) {
            var go = _restParam(function(args) {
                var that = this;
                var callback = args.pop();
                return eachfn(fns, function (fn, _, cb) {
                    fn.apply(that, args.concat([cb]));
                },
                callback);
            });
            if (args.length) {
                return go.apply(this, args);
            }
            else {
                return go;
            }
        });
    }

    async.applyEach = _applyEach(async.eachOf);
    async.applyEachSeries = _applyEach(async.eachOfSeries);


    async.forever = function (fn, callback) {
        var done = only_once(callback || noop);
        var task = ensureAsync(fn);
        function next(err) {
            if (err) {
                return done(err);
            }
            task(next);
        }
        next();
    };

    function ensureAsync(fn) {
        return _restParam(function (args) {
            var callback = args.pop();
            args.push(function () {
                var innerArgs = arguments;
                if (sync) {
                    async.setImmediate(function () {
                        callback.apply(null, innerArgs);
                    });
                } else {
                    callback.apply(null, innerArgs);
                }
            });
            var sync = true;
            fn.apply(this, args);
            sync = false;
        });
    }

    async.ensureAsync = ensureAsync;

    async.constant = _restParam(function(values) {
        var args = [null].concat(values);
        return function (callback) {
            return callback.apply(this, args);
        };
    });

    async.wrapSync =
    async.asyncify = function asyncify(func) {
        return _restParam(function (args) {
            var callback = args.pop();
            var result;
            try {
                result = func.apply(this, args);
            } catch (e) {
                return callback(e);
            }
            // if result is Promise object
            if (_isObject(result) && typeof result.then === "function") {
                result.then(function(value) {
                    callback(null, value);
                })["catch"](function(err) {
                    callback(err.message ? err : new Error(err));
                });
            } else {
                callback(null, result);
            }
        });
    };

    // Node.js
    if (typeof module === 'object' && module.exports) {
        module.exports = async;
    }
    // AMD / RequireJS
    else if (typeof define === 'function' && define.amd) {
        define([], function () {
            return async;
        });
    }
    // included directly via <script> tag
    else {
        root.async = async;
    }

}());

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"_process":351}],3:[function(require,module,exports){
(function (Buffer){
/**
 * Ethereum contract ABI data serialization.
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var BigNumber = require("bignumber.js");
var keccak_256 = require("js-sha3").keccak_256;
var ethabi = require("ethereumjs-abi");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    constants: {
        ONE: (new BigNumber(2)).toPower(64),
        MOD: new BigNumber(2).toPower(256),
        BYTES_32: new BigNumber(2).toPower(252)
    },

    abi: ethabi,

    keccak_256: keccak_256,

    // Convert hex to byte array for sha3
    // (https://github.com/ethereum/dapp-bin/blob/master/ether_ad/scripts/sha3.min.js)
    hex_to_bytes: function (s) {
        var o = [];
        var alpha = "0123456789abcdef";
        for (var i = (s.substr(0, 2) === "0x" ? 2 : 0); i < s.length; i += 2) {
            var index1 = alpha.indexOf(s[i]);
            var index2 = alpha.indexOf(s[i + 1]);
            if (index1 < 0 || index2 < 0) {
                throw("Bad input to hex decoding: " + s + " " + i + " " + index1 + " " + index2);
            }
            o.push(16*index1 + index2);
        }
        return o;
    },

    bytes_to_hex: function (b) {
        var hexbyte, h = "";
        for (var i = 0, n = b.length; i < n; ++i) {
            hexbyte = this.strip_0x(b[i].toString(16));
            if (hexbyte.length === 1) hexbyte = "0" + hexbyte;
            h += hexbyte;
        }
        return h;
    },

    sha3: function (hexstr) {
        return keccak_256(this.hex_to_bytes(hexstr));
    },

    copy: function (obj) {
        if (null === obj || "object" !== typeof obj) return obj;
        var copy = obj.constructor();
        for (var attr in obj) {
            if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];
        }
        return copy;
    },

    is_numeric: function (n) {
        return Number(parseFloat(n)) == n;
    },

    remove_leading_zeros: function (h) {
        var hex = h.toString();
        if (hex.slice(0, 2) === "0x") {
            hex = hex.slice(2);
        }
        if (!/^0+$/.test(hex)) {
            while (hex.slice(0, 2) === "00") {
                hex = hex.slice(2);
            }
        }
        return hex;
    },

    remove_trailing_zeros: function (h, utf8) {
        var hex = h.toString();
        if (utf8) {
            while (hex.slice(-1) === "\u0000") {
                hex = hex.slice(0, -1);
            }
        } else {
            while (hex.slice(-2) === "00") {
                hex = hex.slice(0, -2);
            }
        }
        return hex;
    },

    bytes_to_utf16: function (bytearray) {
        if (bytearray.constructor === Array) {
            var tmp = '';
            for (var i = 0; i < bytearray.length; ++i) {
                if (bytearray[i] !== undefined && bytearray[i] !== null) {
                    if (bytearray[i].constructor === String) {
                        tmp += this.strip_0x(bytearray[i]);
                    } else if (bytearray[i].constructor === Number) {
                        tmp += bytearray[i].toString(16);
                    } else if (Buffer.isBuffer(bytearray[i])) {
                        tmp += bytearray[i].toString("hex");
                    }
                }
            }
            bytearray = tmp;
        }
        if (bytearray.constructor === String) {
            bytearray = this.strip_0x(bytearray);
        }
        if (!Buffer.isBuffer(bytearray)) {
            bytearray = new Buffer(bytearray, "hex");
        }
        return bytearray.toString("utf8");
    },

    short_string_to_int256: function (s) {
        if (s.length > 32) s = s.slice(0, 32);
        return this.prefix_hex(this.pad_right(new Buffer(s, "utf8").toString("hex")));
    },

    int256_to_short_string: function (n) {
        return new Buffer(this.strip_0x(this.remove_trailing_zeros(n)), "hex").toString("utf8");
    },

    decode_hex: function (h, strip) {
        var hex = h.toString();
        var str = '';
        if (hex.slice(0,2) === "0x") hex = hex.slice(2);
        // first 32 bytes = offset
        // second 32 bytes = string length
        if (strip) {
            hex = hex.slice(128);
            hex = this.remove_trailing_zeros(hex);
        }
        for (var i = 0, l = hex.length; i < l; i += 2) {
            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
        }
        return str;
    },

    // convert bytes to hex
    encode_hex: function (str, toArray) {
        var hexbyte, hex, i, len;
        if (str && str.constructor === Object || str.constructor === Array) {
            str = JSON.stringify(str);
        }
        len = str.length;
        if (toArray) {
            hex = [];
            for (i = 0; i < len; ++i) {
                hexbyte = str.charCodeAt(i).toString(16);
                if (hexbyte.length === 1) hexbyte = "0" + hexbyte;
                hex.push(this.prefix_hex(hexbyte));
            }
        } else {
            hex = '';
            for (i = 0; i < len; ++i) {
                hexbyte = str.charCodeAt(i).toString(16);
                if (hexbyte.length === 1) hexbyte = "0" + hexbyte;
                hex += hexbyte;
            }
        }
        return hex;
    },

    raw_encode_hex: function (str) {
        return ethabi.rawEncode(["string"], [str]).toString("hex");
    },

    raw_decode_hex: function (hex) {
        if (!Buffer.isBuffer(hex)) hex = new Buffer(this.strip_0x(hex), "hex");
        return ethabi.rawDecode(["string"], hex)[0];
    },

    unfork: function (forked, prefix) {
        if (forked !== null && forked !== undefined) {
            var unforked = this.bignum(forked);
            var superforked = unforked.plus(this.constants.MOD);
            if (superforked.gte(this.constants.BYTES_32) && superforked.lt(this.constants.MOD)) {
                unforked = superforked;
            }
            if (forked.constructor === BigNumber) return unforked;
            unforked = this.pad_left(unforked.toString(16));
            if (prefix) unforked = this.prefix_hex(unforked);
            return unforked;
        }
    },

    hex: function (n, wrap) {
        var h;
        if (n !== undefined && n !== null && n.constructor) {
            switch (n.constructor) {
                case Buffer:
                    h = n.toString("hex");
                    break;
                case Object:
                    h = this.encode_hex(JSON.stringify(n));
                    break;
                case Array:
                    h = this.bignum(n, "hex", wrap);
                    break;
                case BigNumber:
                    h = n.toString(16);
                    break;
                case String:
                    if (n === "-0x0") {
                        h = "0x0";
                    } else if (n === "-0") {
                        h = "0";
                    } else if (n.slice(0, 3) === "-0x" || n.slice(0, 2) === "-0x") {
                        h = n;
                    } else {
                        if (isFinite(n)) {
                            h = this.bignum(n, "hex", wrap);
                        } else {
                            h = this.encode_hex(n);
                        }
                    }
                    break;
                case Boolean:
                    h = (n) ? "0x1" : "0x0";
                    break;
                default:
                    h = this.bignum(n, "hex", wrap);
            }
        }
        return this.prefix_hex(h);
    },

    is_hex: function (str) {
        if (str && str.constructor === String) {
            if (str.slice(0, 1) === '-' && str.length > 1) {
                return /^[0-9A-F]+$/i.test(str.slice(1));
            }
            return /^[0-9A-F]+$/i.test(str);
        }
        return false;
    },

    format_address: function (addr) {
        if (addr && addr.constructor === String) {
            addr = this.strip_0x(addr);
            while (addr.length > 40 && addr.slice(0, 1) === "0") {
                addr = addr.slice(1);
            }
            while (addr.length < 40) {
                addr = "0" + addr;
            }
            return this.prefix_hex(addr);
        }
    },

    strip_0x: function (str) {
        if (str && str.constructor === String && str.length >= 2) {
            var h = str;
            if (h === "-0x0" || h === "0x0") {
                return "0";
            }
            if (h.slice(0, 2) === "0x" && h.length > 2) {
                h = h.slice(2);
            } else if (h.slice(0, 3) === "-0x" && h.length > 3) {
                h = '-' + h.slice(3);
            }
            if (this.is_hex(h)) return h;
        }
        return str;
    },

    zero_prefix: function (h) {
        if (h !== undefined && h !== null && h.constructor === String) {
            h = this.strip_0x(h);
            if (h.length % 2) h = "0" + h;
            if (h.slice(0,2) !== "0x" && h.slice(0,3) !== "-0x") {
                if (h.slice(0,1) === '-') {
                    h = "-0x" + h.slice(1);
                } else {
                    h = "0x" + h;
                }
            }
        }
        return h;
    },

    prefix_hex: function (n) {
        if (n !== undefined && n !== null) {
            if (n.constructor === Number || n.constructor === BigNumber) {
                n = n.toString(16);
            }
            if (n.constructor === String &&
                n.slice(0,2) !== "0x" && n.slice(0,3) !== "-0x")
            {
                if (n.slice(0,1) === '-') {
                    n = "-0x" + n.slice(1);
                } else {
                    n = "0x" + n;
                }
            }
        }
        return n;
    },

    bignum: function (n, encoding, wrap) {
        var bn, len;
        if (n !== null && n !== undefined && n !== "0x" && !n.error && !n.message) {
            switch (n.constructor) {
                case BigNumber:
                    bn = n;
                    break;
                case Number:
                    if (Math.floor(Math.log(n) / Math.log(10) + 1) <= 15) {
                        bn = new BigNumber(n, 10);
                    } else {
                        n = n.toString();
                        try {
                            bn = new BigNumber(n, 10);
                        } catch (exc) {
                            if (this.is_hex(n)) {
                                bn = new BigNumber(n, 16);
                            } else {
                                return n;
                            }
                        }
                    }
                    break;
                case String:
                    try {
                        bn = new BigNumber(n, 10);
                    } catch (exc) {
                        if (this.is_hex(n)) {
                            bn = new BigNumber(n, 16);
                        } else {
                            return n;
                        }
                    }
                    break;
                case Array:
                    len = n.length;
                    bn = new Array(len);
                    for (var i = 0; i < len; ++i) {
                        bn[i] = this.bignum(n[i], encoding, wrap);
                    }
                    break;
                default:
                    try {
                        bn = new BigNumber(n, 10);
                    } catch (ex) {
                        try {
                            bn = new BigNumber(n, 16);
                        } catch (exc) {
                            return n;
                        }
                    }
            }
            if (bn !== undefined && bn !== null && bn.constructor === BigNumber) {
                if (wrap && bn.gte(this.constants.BYTES_32)) {
                    bn = bn.sub(this.constants.MOD);
                }
                if (encoding) {
                    if (encoding === "number") {
                        bn = bn.toNumber();
                    } else if (encoding === "string") {
                        bn = bn.toFixed();
                    } else if (encoding === "hex") {
                        bn = this.prefix_hex(bn.toString(16));
                    }
                }
            }
            return bn;
        } else {
            return n;
        }
    },

    fix: function (n, encode) {
        var fixed;
        if (n && n !== "0x" && !n.error && !n.message) {
            if (encode && n.constructor === String) {
                encode = encode.toLowerCase();
            }
            if (n.constructor === Array) {
                var len = n.length;
                fixed = new Array(len);
                for (var i = 0; i < len; ++i) {
                    fixed[i] = this.fix(n[i], encode);
                }
            } else {
                if (n.constructor === BigNumber) {
                    fixed = n.mul(this.constants.ONE).round();
                } else {
                    fixed = this.bignum(n).mul(this.constants.ONE).round();
                }
                if (fixed && fixed.gte(this.constants.BYTES_32)) {
                    fixed = fixed.sub(this.constants.MOD);
                }
                if (encode) {
                    if (encode === "string") {
                        fixed = fixed.toFixed();
                    } else if (encode === "hex") {
                        if (fixed.constructor === BigNumber) {
                            fixed = fixed.toString(16);
                        }
                        fixed = this.prefix_hex(fixed);
                    }
                }
            }
            return fixed;
        } else {
            return n;
        }
    },

    unfix: function (n, encode) {
        var unfixed;
        if (n && n !== "0x" && !n.error && !n.message) {
            if (encode) encode = encode.toLowerCase();
            if (n.constructor === Array) {
                var len = n.length;
                unfixed = new Array(len);
                for (var i = 0; i < len; ++i) {
                    unfixed[i] = this.unfix(n[i], encode);
                }
            } else {
                if (n.constructor === BigNumber) {
                    unfixed = n.dividedBy(this.constants.ONE);
                } else {
                    unfixed = this.bignum(n).dividedBy(this.constants.ONE);
                }
                if (unfixed && encode) {
                    if (encode === "hex") {
                        unfixed = this.prefix_hex(unfixed);
                    } else if (encode === "string") {
                        unfixed = unfixed.toFixed();
                    } else if (encode === "number") {
                        unfixed = unfixed.toNumber();
                    }
                }
            }
            return unfixed;
        } else {
            return n;
        }
    },

    string: function (n) {
        return this.bignum(n, "string");
    },

    number: function (s) {
        return this.bignum(s, "number");
    },

    chunk: function (total_len, chunk_len) {
        chunk_len = chunk_len || 64;
        return Math.ceil(total_len / chunk_len);
    },

    pad_right: function (s, chunk_len, prefix) {
        chunk_len = chunk_len || 64;
        s = this.strip_0x(s);
        var multiple = chunk_len * this.chunk(s.length, chunk_len);
        while (s.length < multiple) {
            s += '0';
        }
        if (prefix) s = this.prefix_hex(s);
        return s;
    },

    pad_left: function (s, chunk_len, prefix) {
        chunk_len = chunk_len || 64;
        s = this.strip_0x(s);
        var multiple = chunk_len * this.chunk(s.length, chunk_len);
        while (s.length < multiple) {
            s = '0' + s;
        }
        if (prefix) s = this.prefix_hex(s);
        return s;
    },

    encode_prefix: function (funcname, signature) {
        signature = signature || "";
        var summary = funcname + "(";
        for (var i = 0, len = signature.length; i < len; ++i) {
            switch (signature[i]) {
                case 's':
                    summary += "bytes";
                    break;
                case 'b':
                    summary += "bytes";
                    var j = 1;
                    while (this.is_numeric(signature[i+j])) {
                        summary += signature[i+j].toString();
                        j++;
                    }
                    i += j;
                    break;
                case 'i':
                    summary += "int256";
                    break;
                case 'a':
                    summary += "int256[]";
                    break;
                default:
                    summary += "weird";
            }
            if (i !== len - 1) summary += ",";
        }
        var prefix = keccak_256(summary + ")").slice(0, 8);
        while (prefix.slice(0, 1) === '0') {
            prefix = prefix.slice(1);
        }
        return this.pad_left(prefix, 8, true);
    },

    parse_signature: function (signature) {
        var types = [];
        for (var i = 0, len = signature.length; i < len; ++i) {
            if (this.is_numeric(signature[i])) {
                types[types.length - 1] += signature[i].toString();
            } else {
                if (signature[i] === 's') {
                    types.push("bytes");
                } else if (signature[i] === 'b') {
                    types.push("bytes");
                } else if (signature[i] === 'a') {
                    types.push("int256[]");
                } else {
                    types.push("int256");
                }
            }
        }
        return types;
    },

    parse_params: function (params) {
        if (params !== undefined && params !== null &&
            params !== [] && params !== "")
        {
            if (params.constructor === String) {
                if (params.slice(0,1) === "[" &&
                    params.slice(-1) === "]")
                {
                    params = JSON.parse(params);
                }
                if (params.constructor === String) {
                    params = [params];
                }
            } else if (params.constructor === Number) {
                params = [params];
            }
        } else {
            params = [];
        }
        return params;
    },

    encode_int: function (value) {
        var cs, x, output;
        cs = [];
        x = new BigNumber(value);
        while (x.gt(new BigNumber(0))) {
            cs.push(String.fromCharCode(x.mod(new BigNumber(256))));
            x = x.dividedBy(new BigNumber(256)).floor();
        }
        output = this.encode_hex((cs.reverse()).join(''));
        while (output.length < 64) {
            output = '0' + output;
        }
        return output;
    },

    // hex-encode a function's ABI data and return it
    encode: function (tx) {
        tx.signature = tx.signature || [];
        return this.prefix_hex(Buffer.concat([
            ethabi.methodID(tx.method, tx.signature),
            ethabi.rawEncode(tx.signature, tx.params)
        ]).toString("hex"));
    }
};

}).call(this,require("buffer").Buffer)

},{"bignumber.js":147,"buffer":151,"ethereumjs-abi":4,"js-sha3":7}],4:[function(require,module,exports){
module.exports = require('./lib/index.js')

},{"./lib/index.js":5}],5:[function(require,module,exports){
(function (Buffer){
const utils = require('ethereumjs-util')
const BN = require('bn.js')

var ABI = function () {
}

// Convert from short to canonical names
// FIXME: optimise or make this nicer?
function elementaryName (name) {
  if (name.startsWith('int[')) {
    return 'int256' + name.slice(4)
  } else if (name === 'int') {
    return 'int256'
  } else if (name.startsWith('uint[')) {
    return 'uint256' + name.slice(4)
  } else if (name === 'uint') {
    return 'uint256'
  } else if (name.startsWith('real[')) {
    return 'real128x128' + name.slice(4)
  } else if (name === 'real') {
    return 'real128x128'
  } else if (name.startsWith('ureal[')) {
    return 'ureal128x128' + name.slice(4)
  } else if (name === 'ureal') {
    return 'ureal128x128'
  }
  return name
}

ABI.eventID = function (name, types) {
  // FIXME: use node.js util.format?
  var sig = name + '(' + types.map(elementaryName).join(',') + ')'
  return utils.sha3(new Buffer(sig))
}

ABI.methodID = function (name, types) {
  return ABI.eventID(name, types).slice(0, 4)
}

// Parse N from type<N>
function parseTypeN (type) {
  return parseInt(/^\D+(\d+)$/.exec(type)[1], 10)
}

// Parse N,M from type<N>x<M>
// function parseTypeNxM (type) {
//   var tmp = /^\D+(\d+)x(\d+)$/.exec(type)
//   return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]
// }

// Parse N from type[<N>]
function parseTypeArray (type) {
  var tmp = /^\w+\[(\d*)\]$/.exec(type)[1]
  if (tmp.length === 0) {
    return 0
  } else {
    return parseInt(tmp, 10)
  }
}

function parseNumber (arg) {
  var type = typeof arg
  if (type === 'string') {
    if (utils.isHexPrefixed(arg)) {
      return new BN(utils.stripHexPrefix(arg), 16)
    } else {
      return new BN(arg, 10)
    }
  } else if (type === 'number') {
    return new BN(arg)
  } else if (arg.toArray) {
    // assume this is a BN for the moment, replace with BN.isBN soon
    return arg
  } else {
    throw new Error('Argument is not a number')
  }
}

// someMethod(bytes,uint)
// someMethod(bytes,uint):(boolean)
function parseSignature (sig) {
  var tmp = /^(\w+)\((.+)\)$/.exec(sig)
  if (tmp.length !== 3) {
    throw new Error('Invalid method signature')
  }

  var args = /^(.+)\):\((.+)$/.exec(tmp[2])

  if (args !== null && args.length === 3) {
    return {
      method: tmp[1],
      args: args[1].split(','),
      retargs: args[2].split(',')
    }
  } else {
    return {
      method: tmp[1],
      args: tmp[2].split(',')
    }
  }
}

// Encodes a single item (can be dynamic array)
// @returns: Buffer
function encodeSingle (type, arg) {
  var size, num, ret, i

  if (type === 'address') {
    return encodeSingle('uint160', parseNumber(arg))
  } else if (type === 'bool') {
    return encodeSingle('uint8', arg ? 1 : 0)
  } else if (type === 'string') {
    return encodeSingle('bytes', new Buffer(arg, 'utf8'))
  } else if (type.match(/\w+\[\d+\]/)) {
    // this part handles fixed-length arrays ([2])
    // NOTE: we catch here all calls to arrays, that simplifies the rest
    if (typeof arg.length === 'undefined') {
      throw new Error('Not an array?')
    }

    size = parseTypeArray(type)
    if ((size !== 0) && (arg.length > size)) {
      throw new Error('Elements exceed array size: ' + size)
    }

    type = type.slice(0, type.indexOf('['))

    ret = []
    for (i in arg) {
      ret.push(encodeSingle(type, arg[i]))
    }

    return Buffer.concat(ret)
  } else if (type.match(/\w+\[\]/)) {
    // this part handles variable length ([])
    // NOTE: we catch here all calls to arrays, that simplifies the rest
    if (typeof arg.length === 'undefined') {
      throw new Error('Not an array?')
    }

    type = type.slice(0, type.indexOf('['))

    ret = [ encodeSingle('uint256', arg.length) ]
    for (i in arg) {
      ret.push(encodeSingle(type, arg[i]))
    }

    return Buffer.concat(ret)
  } else if (type === 'bytes') {
    arg = new Buffer(arg)
    return Buffer.concat([ encodeSingle('uint256', arg.length), arg, utils.zeros(32 - (arg.length % 32)) ])
  } else if (type.startsWith('bytes')) {
    size = parseTypeN(type)
    if (size < 1 || size > 32) {
      throw new Error('Invalid bytes<N> width: ' + size)
    }

    return utils.setLengthRight(arg, 32)
  } else if (type.startsWith('uint')) {
    size = parseTypeN(type)
    if ((size % 8) || (size < 8) || (size > 256)) {
      throw new Error('Invalid uint<N> width: ' + size)
    }

    num = parseNumber(arg)
    if (num.bitLength() > size) {
      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())
    }

    return num.toArrayLike(Buffer, 'be', 32)
  } else if (type.startsWith('int')) {
    size = parseTypeN(type)
    if ((size % 8) || (size < 8) || (size > 256)) {
      throw new Error('Invalid int<N> width: ' + size)
    }

    num = parseNumber(arg)
    if (num.bitLength() > size) {
      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())
    }

    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)
  }
  // FIXME: support ureal<N>x<M> and real<N>x<M>

  throw new Error('Unsupported or invalid type: ' + type)
}

// Decodes a single item (can be dynamic array)
// @returns: array
// FIXME: this method will need a lot of attention at checking limits and validation
function decodeSingle (type, arg) {
  var size, num, ret, i

  if (type === 'address') {
    return decodeSingle('uint160', arg)
  } else if (type === 'bool') {
    return decodeSingle('uint8', arg).toString() === new BN(1).toString()
  } else if (type === 'string') {
    return new Buffer(decodeSingle('bytes', arg), 'utf8').toString()
  } else if (type.match(/\w+\[\d+\]/)) {
    // this part handles fixed-length arrays ([2])
    // NOTE: we catch here all calls to arrays, that simplifies the rest
    size = parseTypeArray(type)
    type = type.slice(0, type.indexOf('['))

    ret = []
    for (i = 0; i < size; i++) {
      ret.push(decodeSingle(type, arg.slice(i * 32)))
    }

    return ret
  } else if (type.match(/\w+\[\]/)) {
    // this part handles variable length ([])
    // NOTE: we catch here all calls to arrays, that simplifies the rest
    type = type.slice(0, type.indexOf('['))
    var count = decodeSingle('uint256', arg.slice(0, 32)).toNumber()

    ret = []
    for (i = 1; i < count + 1; i++) {
      ret.push(decodeSingle(type, arg.slice(i * 32)))
    }

    return ret
  } else if (type === 'bytes') {
    size = decodeSingle('uint256', arg.slice(0, 32)).toNumber()
    return arg.slice(32, 32 + size)
  } else if (type.startsWith('bytes')) {
    size = parseTypeN(type)
    if (size < 1 || size > 32) {
      throw new Error('Invalid bytes<N> width: ' + size)
    }

    return arg.slice(0, size)
  } else if (type.startsWith('uint')) {
    size = parseTypeN(type)
    if ((size % 8) || (size < 8) || (size > 256)) {
      throw new Error('Invalid uint<N> width: ' + size)
    }

    num = new BN(arg.slice(0, 32), 16, 'be')
    if (num.bitLength() > size) {
      throw new Error('Decoded int exceeds width: ' + size + ' vs ' + num.bitLength())
    }

    return num
  } else if (type.startsWith('int')) {
    size = parseTypeN(type)
    if ((size % 8) || (size < 8) || (size > 256)) {
      throw new Error('Invalid uint<N> width: ' + size)
    }

    num = new BN(arg.slice(0, 32), 16, 'be').fromTwos(256)
    if (num.bitLength() > size) {
      throw new Error('Decoded uint exceeds width: ' + size + ' vs ' + num.bitLength())
    }

    return num
  }
  // FIXME: support ureal<N>x<M> and real<N>x<M>

  throw new Error('Unsupported or invalid type: ' + type)
}

// Is a type dynamic?
function isDynamic (type) {
  // FIXME: handle all types? I don't think anything is missing now
  return (type === 'string') || (type === 'bytes') || type.match(/\w+\[\]/)
}

// Encode a method/event with arguments
// @types an array of string type names
// @args  an array of the appropriate values
ABI.rawEncode = function (types, values) {
  var output = []
  var data = []

  var headLength = 32 * types.length

  for (var i in types) {
    var type = elementaryName(types[i])
    var value = values[i]
    var cur = encodeSingle(type, value)

    // Use the head/tail method for storing dynamic data
    if (isDynamic(type)) {
      output.push(encodeSingle('uint256', headLength))
      data.push(cur)
      headLength += cur.length
    } else {
      output.push(cur)
    }
  }

  return Buffer.concat(output.concat(data))
}

ABI.rawDecode = function (types, data) {
  var ret = []

  data = new Buffer(data)

  var offset = 0
  for (var i in types) {
    var type = elementaryName(types[i])
    var cur = data.slice(offset, offset + 32)

    if (isDynamic(type)) {
      var dataOffset = decodeSingle('uint256', cur).toNumber()
      // We will read at least 32 bytes
      if (dataOffset > (data.length - 32)) {
        throw new Error('Invalid offset: ' + dataOffset)
      }

      cur = data.slice(dataOffset)
    } else if (type.match(/\w+\[\d+\]/)) {
      var count = parseTypeArray(type)
      if (count > 1) {
        cur = data.slice(offset, offset + (count * 32))
      }
    }

    ret.push(decodeSingle(type, cur))
    offset += 32
  }

  return ret
}

ABI.simpleEncode = function (method) {
  var args = Array.prototype.slice.call(arguments).slice(1)
  var sig = parseSignature(method)

  // FIXME: validate/convert arguments
  if (args.length !== sig.args.length) {
    throw new Error('Argument count mismatch')
  }

  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])
}

ABI.simpleDecode = function (method, data) {
  var sig = parseSignature(method)

  // FIXME: validate/convert arguments
  if (!sig.retargs) {
    throw new Error('No return values in method')
  }

  return ABI.rawDecode(sig.retargs, data)
}

function stringify (type, value) {
  if (type.startsWith('address') || type.startsWith('bytes')) {
    return '0x' + value.toString('hex')
  } else {
    return value.toString()
  }
}

ABI.stringify = function (types, values) {
  var ret = []

  for (var i in types) {
    var type = types[i]
    var value = values[i]

    // if it is an array type, concat the items
    if (/^[^\[]+\[.*\]$/.test(type)) {
      value = value.map(function (item) {
        return stringify(type, item)
      }).join(', ')
    } else {
      value = stringify(type, value)
    }

    ret.push(value)
  }

  return ret
}

ABI.solidityPack = function (types, values) {
  if (types.length !== values.length) {
    throw new Error('Number of types are not matching the values')
  }

  var size, num
  var ret = []

  for (var i = 0; i < types.length; i++) {
    var type = elementaryName(types[i])
    var value = values[i]

    if (type === 'bytes') {
      ret.push(value)
    } else if (type === 'string') {
      ret.push(new Buffer(value, 'utf8'))
    } else if (type === 'bool') {
      ret.push(new Buffer(value ? '01' : '00', 'hex'))
    } else if (type === 'address') {
      ret.push(utils.setLengthLeft(value, 20))
    } else if (type.startsWith('bytes')) {
      size = parseTypeN(type)
      if (size < 1 || size > 32) {
        throw new Error('Invalid bytes<N> width: ' + size)
      }

      return utils.setLengthRight(value, size)
    } else if (type.startsWith('uint')) {
      size = parseTypeN(type)
      if ((size % 8) || (size < 8) || (size > 256)) {
        throw new Error('Invalid uint<N> width: ' + size)
      }

      num = parseNumber(value)
      if (num.bitLength() > size) {
        throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())
      }

      ret.push(num.toArrayLike(Buffer, 'be', size / 8))
    } else if (type.startsWith('int')) {
      size = parseTypeN(type)
      if ((size % 8) || (size < 8) || (size > 256)) {
        throw new Error('Invalid int<N> width: ' + size)
      }

      num = parseNumber(value)
      if (num.bitLength() > size) {
        throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())
      }

      ret.push(num.toTwos(size).toArrayLike(Buffer, 'be', size / 8))
    } else {
      // FIXME: support all other types
      throw new Error('Unsupported or invalid type: ' + type)
    }
  }

  return Buffer.concat(ret)
}

ABI.soliditySHA3 = function (types, values) {
  return utils.sha3(ABI.solidityPack(types, values))
}

ABI.soliditySHA256 = function (types, values) {
  return utils.sha256(ABI.solidityPack(types, values))
}

ABI.solidityRIPEMD160 = function (types, values) {
  return utils.ripemd160(ABI.solidityPack(types, values), true)
}

// Serpent's users are familiar with this encoding
// - s: string
// - b: bytes
// - b<N>: bytes<N>
// - i: int256
// - a: int256[]

function isNumeric (c) {
  // FIXME: is this correct? Seems to work
  return (c >= '0') && (c <= '9')
}

// For a "documentation" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp
ABI.fromSerpent = function (sig) {
  var ret = []
  for (var i = 0; i < sig.length; i++) {
    var type = sig[i]
    if (type === 's' || type === 'b') {
      var tmp = 'bytes'
      var j = i + 1
      while ((j < sig.length) && isNumeric(sig[j])) {
        tmp += sig[j] - '0'
        j++
      }
      i = j - 1
      ret.push(tmp)
    } else if (type === 'i') {
      ret.push('int256')
    } else if (type === 'a') {
      ret.push('int256[]')
    } else {
      throw new Error('Unsupported or invalid type: ' + type)
    }
  }
  return ret
}

ABI.toSerpent = function (types) {
  var ret = []
  for (var i = 0; i < types.length; i++) {
    var type = types[i]
    if (type === 'bytes' || type === 'string') {
      ret.push('s')
    } else if (type.startsWith('bytes')) {
      ret.push('b' + parseTypeN(type))
    } else if (type === 'int256') {
      ret.push('i')
    } else if (type === 'int256[]') {
      ret.push('a')
    } else {
      throw new Error('Unsupported or invalid type: ' + type)
    }
  }
  return ret.join('')
}

module.exports = ABI

}).call(this,require("buffer").Buffer)

},{"bn.js":6,"buffer":151,"ethereumjs-util":19}],6:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buf' + 'fer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    return num !== null && typeof num === 'object' &&
      num.constructor.name === 'BN' && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{}],7:[function(require,module,exports){
(function (global){
/*
 * js-sha3 v0.3.1
 * https://github.com/emn178/js-sha3
 *
 * Copyright 2015, emn178@gmail.com
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */
;(function(root, undefined) {
  'use strict';

  var NODE_JS = typeof(module) != 'undefined';
  if(NODE_JS) {
    root = global;
    if(root.JS_SHA3_TEST) {
      root.navigator = { userAgent: 'Chrome'};
    }
  }
  var CHROME = (root.JS_SHA3_TEST || !NODE_JS) && navigator.userAgent.indexOf('Chrome') != -1;
  var HEX_CHARS = '0123456789abcdef'.split('');
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 
            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 
            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];

  var blocks = [], s = [];

  var keccak_224 = function(message) {
    return keccak(message, 224, KECCAK_PADDING);
  };

  var keccak_256 = function(message) {
    return keccak(message, 256, KECCAK_PADDING);
  };

  var keccak_384 = function(message) {
    return keccak(message, 384, KECCAK_PADDING);
  };

  var sha3_224 = function(message) {
    return keccak(message, 224, PADDING);
  };

  var sha3_256 = function(message) {
    return keccak(message, 256, PADDING);
  };

  var sha3_384 = function(message) {
    return keccak(message, 384, PADDING);
  };

  var sha3_512 = function(message) {
    return keccak(message, 512, PADDING);
  };

  var keccak = function(message, bits, padding) {
    var notString = typeof(message) != 'string';
    if(notString && message.constructor == root.ArrayBuffer) {
      message = new Uint8Array(message);
    }

    if(bits === undefined) {
      bits = 512;
      padding = KECCAK_PADDING;
    }

    var block, code, end = false, index = 0, start = 0, length = message.length,
        n, i, h, l, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, 
        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, 
        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, 
        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    var blockCount = (1600 - bits * 2) / 32;
    var byteCount = blockCount * 4;

    for(i = 0;i < 50;++i) {
      s[i] = 0;
    }

    block = 0;
    do {
      blocks[0] = block;
      for(i = 1;i < blockCount + 1;++i) {
        blocks[i] = 0;
      }
      if(notString) {
        for (i = start;index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = start;index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      start = i - byteCount;
      if(index == length) {
        blocks[i >> 2] |= padding[i & 3];
        ++index;
      }
      block = blocks[blockCount];
      if(index > length && i < byteCount) {
        blocks[blockCount - 1] |= 0x80000000;
        end = true;
      }

      for(i = 0;i < blockCount;++i) {
        s[i] ^= blocks[i];
      }

      for(n = 0; n < 48; n += 2) {
        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

        h = c8 ^ ((c2 << 1) | (c3 >>> 31));
        l = c9 ^ ((c3 << 1) | (c2 >>> 31));
        s[0] ^= h;
        s[1] ^= l;
        s[10] ^= h;
        s[11] ^= l;
        s[20] ^= h;
        s[21] ^= l;
        s[30] ^= h;
        s[31] ^= l;
        s[40] ^= h;
        s[41] ^= l;
        h = c0 ^ ((c4 << 1) | (c5 >>> 31));
        l = c1 ^ ((c5 << 1) | (c4 >>> 31));
        s[2] ^= h;
        s[3] ^= l;
        s[12] ^= h;
        s[13] ^= l;
        s[22] ^= h;
        s[23] ^= l;
        s[32] ^= h;
        s[33] ^= l;
        s[42] ^= h;
        s[43] ^= l;
        h = c2 ^ ((c6 << 1) | (c7 >>> 31));
        l = c3 ^ ((c7 << 1) | (c6 >>> 31));
        s[4] ^= h;
        s[5] ^= l;
        s[14] ^= h;
        s[15] ^= l;
        s[24] ^= h;
        s[25] ^= l;
        s[34] ^= h;
        s[35] ^= l;
        s[44] ^= h;
        s[45] ^= l;
        h = c4 ^ ((c8 << 1) | (c9 >>> 31));
        l = c5 ^ ((c9 << 1) | (c8 >>> 31));
        s[6] ^= h;
        s[7] ^= l;
        s[16] ^= h;
        s[17] ^= l;
        s[26] ^= h;
        s[27] ^= l;
        s[36] ^= h;
        s[37] ^= l;
        s[46] ^= h;
        s[47] ^= l;
        h = c6 ^ ((c0 << 1) | (c1 >>> 31));
        l = c7 ^ ((c1 << 1) | (c0 >>> 31));
        s[8] ^= h;
        s[9] ^= l;
        s[18] ^= h;
        s[19] ^= l;
        s[28] ^= h;
        s[29] ^= l;
        s[38] ^= h;
        s[39] ^= l;
        s[48] ^= h;
        s[49] ^= l;

        b0 = s[0];
        b1 = s[1];
        b32 = (s[11] << 4) | (s[10] >>> 28);
        b33 = (s[10] << 4) | (s[11] >>> 28);
        b14 = (s[20] << 3) | (s[21] >>> 29);
        b15 = (s[21] << 3) | (s[20] >>> 29);
        b46 = (s[31] << 9) | (s[30] >>> 23);
        b47 = (s[30] << 9) | (s[31] >>> 23);
        b28 = (s[40] << 18) | (s[41] >>> 14);
        b29 = (s[41] << 18) | (s[40] >>> 14);
        b20 = (s[2] << 1) | (s[3] >>> 31);
        b21 = (s[3] << 1) | (s[2] >>> 31);
        b2 = (s[13] << 12) | (s[12] >>> 20);
        b3 = (s[12] << 12) | (s[13] >>> 20);
        b34 = (s[22] << 10) | (s[23] >>> 22);
        b35 = (s[23] << 10) | (s[22] >>> 22);
        b16 = (s[33] << 13) | (s[32] >>> 19);
        b17 = (s[32] << 13) | (s[33] >>> 19);
        b48 = (s[42] << 2) | (s[43] >>> 30);
        b49 = (s[43] << 2) | (s[42] >>> 30);
        b40 = (s[5] << 30) | (s[4] >>> 2);
        b41 = (s[4] << 30) | (s[5] >>> 2);
        b22 = (s[14] << 6) | (s[15] >>> 26);
        b23 = (s[15] << 6) | (s[14] >>> 26);
        b4 = (s[25] << 11) | (s[24] >>> 21);
        b5 = (s[24] << 11) | (s[25] >>> 21);
        b36 = (s[34] << 15) | (s[35] >>> 17);
        b37 = (s[35] << 15) | (s[34] >>> 17);
        b18 = (s[45] << 29) | (s[44] >>> 3);
        b19 = (s[44] << 29) | (s[45] >>> 3);
        b10 = (s[6] << 28) | (s[7] >>> 4);
        b11 = (s[7] << 28) | (s[6] >>> 4);
        b42 = (s[17] << 23) | (s[16] >>> 9);
        b43 = (s[16] << 23) | (s[17] >>> 9);
        b24 = (s[26] << 25) | (s[27] >>> 7);
        b25 = (s[27] << 25) | (s[26] >>> 7);
        b6 = (s[36] << 21) | (s[37] >>> 11);
        b7 = (s[37] << 21) | (s[36] >>> 11);
        b38 = (s[47] << 24) | (s[46] >>> 8);
        b39 = (s[46] << 24) | (s[47] >>> 8);
        b30 = (s[8] << 27) | (s[9] >>> 5);
        b31 = (s[9] << 27) | (s[8] >>> 5);
        b12 = (s[18] << 20) | (s[19] >>> 12);
        b13 = (s[19] << 20) | (s[18] >>> 12);
        b44 = (s[29] << 7) | (s[28] >>> 25);
        b45 = (s[28] << 7) | (s[29] >>> 25);
        b26 = (s[38] << 8) | (s[39] >>> 24);
        b27 = (s[39] << 8) | (s[38] >>> 24);
        b8 = (s[48] << 14) | (s[49] >>> 18);
        b9 = (s[49] << 14) | (s[48] >>> 18);

        s[0] = b0 ^ (~b2 & b4);
        s[1] = b1 ^ (~b3 & b5);
        s[10] = b10 ^ (~b12 & b14);
        s[11] = b11 ^ (~b13 & b15);
        s[20] = b20 ^ (~b22 & b24);
        s[21] = b21 ^ (~b23 & b25);
        s[30] = b30 ^ (~b32 & b34);
        s[31] = b31 ^ (~b33 & b35);
        s[40] = b40 ^ (~b42 & b44);
        s[41] = b41 ^ (~b43 & b45);
        s[2] = b2 ^ (~b4 & b6);
        s[3] = b3 ^ (~b5 & b7);
        s[12] = b12 ^ (~b14 & b16);
        s[13] = b13 ^ (~b15 & b17);
        s[22] = b22 ^ (~b24 & b26);
        s[23] = b23 ^ (~b25 & b27);
        s[32] = b32 ^ (~b34 & b36);
        s[33] = b33 ^ (~b35 & b37);
        s[42] = b42 ^ (~b44 & b46);
        s[43] = b43 ^ (~b45 & b47);
        s[4] = b4 ^ (~b6 & b8);
        s[5] = b5 ^ (~b7 & b9);
        s[14] = b14 ^ (~b16 & b18);
        s[15] = b15 ^ (~b17 & b19);
        s[24] = b24 ^ (~b26 & b28);
        s[25] = b25 ^ (~b27 & b29);
        s[34] = b34 ^ (~b36 & b38);
        s[35] = b35 ^ (~b37 & b39);
        s[44] = b44 ^ (~b46 & b48);
        s[45] = b45 ^ (~b47 & b49);
        s[6] = b6 ^ (~b8 & b0);
        s[7] = b7 ^ (~b9 & b1);
        s[16] = b16 ^ (~b18 & b10);
        s[17] = b17 ^ (~b19 & b11);
        s[26] = b26 ^ (~b28 & b20);
        s[27] = b27 ^ (~b29 & b21);
        s[36] = b36 ^ (~b38 & b30);
        s[37] = b37 ^ (~b39 & b31);
        s[46] = b46 ^ (~b48 & b40);
        s[47] = b47 ^ (~b49 & b41);
        s[8] = b8 ^ (~b0 & b2);
        s[9] = b9 ^ (~b1 & b3);
        s[18] = b18 ^ (~b10 & b12);
        s[19] = b19 ^ (~b11 & b13);
        s[28] = b28 ^ (~b20 & b22);
        s[29] = b29 ^ (~b21 & b23);
        s[38] = b38 ^ (~b30 & b32);
        s[39] = b39 ^ (~b31 & b33);
        s[48] = b48 ^ (~b40 & b42);
        s[49] = b49 ^ (~b41 & b43);

        s[0] ^= RC[n];
        s[1] ^= RC[n + 1];
      }
    } while(!end);

    var hex = '';
    if(CHROME) {
      b0 = s[0];
      b1 = s[1];
      b2 = s[2];
      b3 = s[3];
      b4 = s[4];
      b5 = s[5];
      b6 = s[6];
      b7 = s[7];
      b8 = s[8];
      b9 = s[9];
      b10 = s[10];
      b11 = s[11];
      b12 = s[12];
      b13 = s[13];
      b14 = s[14];
      b15 = s[15];
      hex += HEX_CHARS[(b0 >> 4) & 0x0F] + HEX_CHARS[b0 & 0x0F] +
             HEX_CHARS[(b0 >> 12) & 0x0F] + HEX_CHARS[(b0 >> 8) & 0x0F] +
             HEX_CHARS[(b0 >> 20) & 0x0F] + HEX_CHARS[(b0 >> 16) & 0x0F] +
             HEX_CHARS[(b0 >> 28) & 0x0F] + HEX_CHARS[(b0 >> 24) & 0x0F] +
             HEX_CHARS[(b1 >> 4) & 0x0F] + HEX_CHARS[b1 & 0x0F] +
             HEX_CHARS[(b1 >> 12) & 0x0F] + HEX_CHARS[(b1 >> 8) & 0x0F] +
             HEX_CHARS[(b1 >> 20) & 0x0F] + HEX_CHARS[(b1 >> 16) & 0x0F] +
             HEX_CHARS[(b1 >> 28) & 0x0F] + HEX_CHARS[(b1 >> 24) & 0x0F] +
             HEX_CHARS[(b2 >> 4) & 0x0F] + HEX_CHARS[b2 & 0x0F] +
             HEX_CHARS[(b2 >> 12) & 0x0F] + HEX_CHARS[(b2 >> 8) & 0x0F] +
             HEX_CHARS[(b2 >> 20) & 0x0F] + HEX_CHARS[(b2 >> 16) & 0x0F] +
             HEX_CHARS[(b2 >> 28) & 0x0F] + HEX_CHARS[(b2 >> 24) & 0x0F] +
             HEX_CHARS[(b3 >> 4) & 0x0F] + HEX_CHARS[b3 & 0x0F] +
             HEX_CHARS[(b3 >> 12) & 0x0F] + HEX_CHARS[(b3 >> 8) & 0x0F] +
             HEX_CHARS[(b3 >> 20) & 0x0F] + HEX_CHARS[(b3 >> 16) & 0x0F] +
             HEX_CHARS[(b3 >> 28) & 0x0F] + HEX_CHARS[(b3 >> 24) & 0x0F] +
             HEX_CHARS[(b4 >> 4) & 0x0F] + HEX_CHARS[b4 & 0x0F] +
             HEX_CHARS[(b4 >> 12) & 0x0F] + HEX_CHARS[(b4 >> 8) & 0x0F] +
             HEX_CHARS[(b4 >> 20) & 0x0F] + HEX_CHARS[(b4 >> 16) & 0x0F] +
             HEX_CHARS[(b4 >> 28) & 0x0F] + HEX_CHARS[(b4 >> 24) & 0x0F] +
             HEX_CHARS[(b5 >> 4) & 0x0F] + HEX_CHARS[b5 & 0x0F] +
             HEX_CHARS[(b5 >> 12) & 0x0F] + HEX_CHARS[(b5 >> 8) & 0x0F] +
             HEX_CHARS[(b5 >> 20) & 0x0F] + HEX_CHARS[(b5 >> 16) & 0x0F] +
             HEX_CHARS[(b5 >> 28) & 0x0F] + HEX_CHARS[(b5 >> 24) & 0x0F] +
             HEX_CHARS[(b6 >> 4) & 0x0F] + HEX_CHARS[b6 & 0x0F] +
             HEX_CHARS[(b6 >> 12) & 0x0F] + HEX_CHARS[(b6 >> 8) & 0x0F] +
             HEX_CHARS[(b6 >> 20) & 0x0F] + HEX_CHARS[(b6 >> 16) & 0x0F] +
             HEX_CHARS[(b6 >> 28) & 0x0F] + HEX_CHARS[(b6 >> 24) & 0x0F];

      if(bits >= 256) {
        hex += HEX_CHARS[(b7 >> 4) & 0x0F] + HEX_CHARS[b7 & 0x0F] +
               HEX_CHARS[(b7 >> 12) & 0x0F] + HEX_CHARS[(b7 >> 8) & 0x0F] +
               HEX_CHARS[(b7 >> 20) & 0x0F] + HEX_CHARS[(b7 >> 16) & 0x0F] +
               HEX_CHARS[(b7 >> 28) & 0x0F] + HEX_CHARS[(b7 >> 24) & 0x0F];
      }
      if(bits >= 384) {
        hex += HEX_CHARS[(b8 >> 4) & 0x0F] + HEX_CHARS[b8 & 0x0F] +
               HEX_CHARS[(b8 >> 12) & 0x0F] + HEX_CHARS[(b8 >> 8) & 0x0F] +
               HEX_CHARS[(b8 >> 20) & 0x0F] + HEX_CHARS[(b8 >> 16) & 0x0F] +
               HEX_CHARS[(b8 >> 28) & 0x0F] + HEX_CHARS[(b8 >> 24) & 0x0F] +
               HEX_CHARS[(b9 >> 4) & 0x0F] + HEX_CHARS[b9 & 0x0F] +
               HEX_CHARS[(b9 >> 12) & 0x0F] + HEX_CHARS[(b9 >> 8) & 0x0F] +
               HEX_CHARS[(b9 >> 20) & 0x0F] + HEX_CHARS[(b9 >> 16) & 0x0F] +
               HEX_CHARS[(b9 >> 28) & 0x0F] + HEX_CHARS[(b9 >> 24) & 0x0F] +
               HEX_CHARS[(b10 >> 4) & 0x0F] + HEX_CHARS[b10 & 0x0F] +
               HEX_CHARS[(b10 >> 12) & 0x0F] + HEX_CHARS[(b10 >> 8) & 0x0F] +
               HEX_CHARS[(b10 >> 20) & 0x0F] + HEX_CHARS[(b10 >> 16) & 0x0F] +
               HEX_CHARS[(b10 >> 28) & 0x0F] + HEX_CHARS[(b10 >> 24) & 0x0F] +
               HEX_CHARS[(b11 >> 4) & 0x0F] + HEX_CHARS[b11 & 0x0F] +
               HEX_CHARS[(b11 >> 12) & 0x0F] + HEX_CHARS[(b11 >> 8) & 0x0F] +
               HEX_CHARS[(b11 >> 20) & 0x0F] + HEX_CHARS[(b11 >> 16) & 0x0F] +
               HEX_CHARS[(b11 >> 28) & 0x0F] + HEX_CHARS[(b11 >> 24) & 0x0F];
      }
      if(bits == 512) {
        hex += HEX_CHARS[(b12 >> 4) & 0x0F] + HEX_CHARS[b12 & 0x0F] +
               HEX_CHARS[(b12 >> 12) & 0x0F] + HEX_CHARS[(b12 >> 8) & 0x0F] +
               HEX_CHARS[(b12 >> 20) & 0x0F] + HEX_CHARS[(b12 >> 16) & 0x0F] +
               HEX_CHARS[(b12 >> 28) & 0x0F] + HEX_CHARS[(b12 >> 24) & 0x0F] +
               HEX_CHARS[(b13 >> 4) & 0x0F] + HEX_CHARS[b13 & 0x0F] +
               HEX_CHARS[(b13 >> 12) & 0x0F] + HEX_CHARS[(b13 >> 8) & 0x0F] +
               HEX_CHARS[(b13 >> 20) & 0x0F] + HEX_CHARS[(b13 >> 16) & 0x0F] +
               HEX_CHARS[(b13 >> 28) & 0x0F] + HEX_CHARS[(b13 >> 24) & 0x0F] +
               HEX_CHARS[(b14 >> 4) & 0x0F] + HEX_CHARS[b14 & 0x0F] +
               HEX_CHARS[(b14 >> 12) & 0x0F] + HEX_CHARS[(b14 >> 8) & 0x0F] +
               HEX_CHARS[(b14 >> 20) & 0x0F] + HEX_CHARS[(b14 >> 16) & 0x0F] +
               HEX_CHARS[(b14 >> 28) & 0x0F] + HEX_CHARS[(b14 >> 24) & 0x0F] +
               HEX_CHARS[(b15 >> 4) & 0x0F] + HEX_CHARS[b15 & 0x0F] +
               HEX_CHARS[(b15 >> 12) & 0x0F] + HEX_CHARS[(b15 >> 8) & 0x0F] +
               HEX_CHARS[(b15 >> 20) & 0x0F] + HEX_CHARS[(b15 >> 16) & 0x0F] +
               HEX_CHARS[(b15 >> 28) & 0x0F] + HEX_CHARS[(b15 >> 24) & 0x0F];
      }
    } else {
      for(i = 0, n = bits / 32;i < n;++i) {
        h = s[i];
        hex += HEX_CHARS[(h >> 4) & 0x0F] + HEX_CHARS[h & 0x0F] +
               HEX_CHARS[(h >> 12) & 0x0F] + HEX_CHARS[(h >> 8) & 0x0F] +
               HEX_CHARS[(h >> 20) & 0x0F] + HEX_CHARS[(h >> 16) & 0x0F] +
               HEX_CHARS[(h >> 28) & 0x0F] + HEX_CHARS[(h >> 24) & 0x0F];
      }
    }
    return hex;
  };
  
  if(!root.JS_SHA3_TEST && NODE_JS) {
    module.exports = {
      sha3_512: sha3_512,
      sha3_384: sha3_384,
      sha3_256: sha3_256,
      sha3_224: sha3_224,
      keccak_512: keccak,
      keccak_384: keccak_384,
      keccak_256: keccak_256,
      keccak_224: keccak_224
    };
  } else if(root) {
    root.sha3_512 = sha3_512;
    root.sha3_384 = sha3_384;
    root.sha3_256 = sha3_256;
    root.sha3_224 = sha3_224;
    root.keccak_512 = keccak;
    root.keccak_384 = keccak_384;
    root.keccak_256 = keccak_256;
    root.keccak_224 = keccak_224;
  }
}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],8:[function(require,module,exports){
module.exports={
  "Backstops": {
    "adjForkBondPaid": {
      "inputs": [
        "event", 
        "amount"
      ], 
      "method": "adjForkBondPaid", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "doRoundTwoRefund": {
      "inputs": [
        "sender", 
        "event"
      ], 
      "method": "doRoundTwoRefund", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getBondAmount": {
      "inputs": [
        "event"
      ], 
      "method": "getBondAmount", 
      "signature": [
        "int256"
      ]
    }, 
    "getBondPaid": {
      "inputs": [
        "event"
      ], 
      "method": "getBondPaid", 
      "signature": [
        "int256"
      ]
    }, 
    "getBondPoster": {
      "inputs": [
        "event"
      ], 
      "method": "getBondPoster", 
      "returns": "address", 
      "signature": [
        "int256"
      ]
    }, 
    "getBondReturned": {
      "inputs": [
        "event"
      ], 
      "method": "getBondReturned", 
      "signature": [
        "int256"
      ]
    }, 
    "getFinal": {
      "inputs": [
        "event"
      ], 
      "method": "getFinal", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkBondPaid": {
      "inputs": [
        "event"
      ], 
      "method": "getForkBondPaid", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkBondPoster": {
      "inputs": [
        "event"
      ], 
      "method": "getForkBondPoster", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkedOverEthicality": {
      "inputs": [
        "event"
      ], 
      "method": "getForkedOverEthicality", 
      "signature": [
        "int256"
      ]
    }, 
    "getMoved": {
      "inputs": [
        "event"
      ], 
      "method": "getMoved", 
      "signature": [
        "int256"
      ]
    }, 
    "getOriginalBranch": {
      "inputs": [
        "event"
      ], 
      "method": "getOriginalBranch", 
      "signature": [
        "int256"
      ]
    }, 
    "getOriginalEthicality": {
      "inputs": [
        "event"
      ], 
      "method": "getOriginalEthicality", 
      "signature": [
        "int256"
      ]
    }, 
    "getOriginalOutcome": {
      "inputs": [
        "event"
      ], 
      "method": "getOriginalOutcome", 
      "signature": [
        "int256"
      ]
    }, 
    "getOriginalVotePeriod": {
      "inputs": [
        "event"
      ], 
      "method": "getOriginalVotePeriod", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getResolved": {
      "inputs": [
        "branch", 
        "forkPeriod"
      ], 
      "method": "getResolved", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getRoundTwo": {
      "inputs": [
        "event"
      ], 
      "method": "getRoundTwo", 
      "signature": [
        "int256"
      ]
    }, 
    "increaseBondPaid": {
      "inputs": [
        "event", 
        "amount"
      ], 
      "method": "increaseBondPaid", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setBondAmount": {
      "inputs": [
        "event", 
        "amount"
      ], 
      "method": "setBondAmount", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setBondPoster": {
      "inputs": [
        "event", 
        "bondPoster"
      ], 
      "method": "setBondPoster", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setBondReturned": {
      "inputs": [
        "event"
      ], 
      "method": "setBondReturned", 
      "signature": [
        "int256"
      ]
    }, 
    "setFinal": {
      "inputs": [
        "event"
      ], 
      "method": "setFinal", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "setForkBondPoster": {
      "inputs": [
        "event", 
        "poster"
      ], 
      "method": "setForkBondPoster", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setForkedOverEthicality": {
      "inputs": [
        "event"
      ], 
      "method": "setForkedOverEthicality", 
      "signature": [
        "int256"
      ]
    }, 
    "setMoved": {
      "inputs": [
        "event"
      ], 
      "method": "setMoved", 
      "signature": [
        "int256"
      ]
    }, 
    "setOriginalBranch": {
      "inputs": [
        "event", 
        "branch"
      ], 
      "method": "setOriginalBranch", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setOriginalEthicality": {
      "inputs": [
        "event", 
        "ethicality"
      ], 
      "method": "setOriginalEthicality", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setOriginalOutcome": {
      "inputs": [
        "event", 
        "originalOutcome"
      ], 
      "method": "setOriginalOutcome", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setOriginalVotePeriod": {
      "inputs": [
        "event", 
        "period"
      ], 
      "method": "setOriginalVotePeriod", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setResolved": {
      "inputs": [
        "branch", 
        "forkPeriod", 
        "winner"
      ], 
      "method": "setResolved", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setRoundTwo": {
      "inputs": [
        "event", 
        "roundTwo"
      ], 
      "method": "setRoundTwo", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setRoundTwoRefund": {
      "inputs": [
        "event", 
        "amt"
      ], 
      "method": "setRoundTwoRefund", 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "Branches": {
    "addMarketToBranch": {
      "inputs": [
        "branch", 
        "market"
      ], 
      "method": "addMarketToBranch", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getBaseReporters": {
      "inputs": [
        "branch"
      ], 
      "method": "getBaseReporters", 
      "signature": [
        "int256"
      ]
    }, 
    "getBranchByNum": {
      "inputs": [
        "branchNumber"
      ], 
      "method": "getBranchByNum", 
      "returns": "hash", 
      "signature": [
        "int256"
      ]
    }, 
    "getBranches": {
      "method": "getBranches", 
      "returns": "hash[]"
    }, 
    "getCreationDate": {
      "inputs": [
        "ID"
      ], 
      "method": "getCreationDate", 
      "signature": [
        "int256"
      ]
    }, 
    "getEventForkedOver": {
      "inputs": [
        "branch"
      ], 
      "method": "getEventForkedOver", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkPeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "getForkPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "getInitialBalance": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getInitialBalance", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getMarketsInBranch": {
      "inputs": [
        "branch"
      ], 
      "method": "getMarketsInBranch", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getMinTradingFee": {
      "inputs": [
        "branch"
      ], 
      "method": "getMinTradingFee", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getNumBranches": {
      "method": "getNumBranches", 
      "returns": "number"
    }, 
    "getNumMarketsBranch": {
      "inputs": [
        "branch"
      ], 
      "method": "getNumMarketsBranch", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getOracleOnly": {
      "inputs": [
        "branch"
      ], 
      "method": "getOracleOnly", 
      "signature": [
        "int256"
      ]
    }, 
    "getParent": {
      "inputs": [
        "branch"
      ], 
      "method": "getParent", 
      "signature": [
        "int256"
      ]
    }, 
    "getParentPeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "getParentPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "getPeriodLength": {
      "inputs": [
        "branch"
      ], 
      "method": "getPeriodLength", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getSomeMarketsInBranch": {
      "inputs": [
        "branch", 
        "initial", 
        "last"
      ], 
      "method": "getSomeMarketsInBranch", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getVotePeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "getVotePeriod", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "incrementPeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "incrementPeriod", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "initDefaultBranch": {
      "method": "initDefaultBranch", 
      "returns": "number", 
      "send": true
    }, 
    "initializeBranch": {
      "inputs": [
        "ID", 
        "currentVotePeriod", 
        "periodLength", 
        "minTradingFee", 
        "oracleOnly", 
        "parentPeriod", 
        "parent"
      ], 
      "method": "initializeBranch", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setBaseReporters": {
      "inputs": [
        "branch", 
        "num"
      ], 
      "method": "setBaseReporters", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setEventForkedOver": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "setEventForkedOver", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setForkPeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "setForkPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "setInitialBalance": {
      "inputs": [
        "branch", 
        "period", 
        "balance"
      ], 
      "method": "setInitialBalance", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "BuyAndSellShares": {
    "buy": {
      "inputs": [
        "amount", 
        "price", 
        "market", 
        "outcome"
      ], 
      "method": "buy", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "cancel": {
      "inputs": [
        "trade_id"
      ], 
      "method": "cancel", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "sell": {
      "inputs": [
        "amount", 
        "price", 
        "market", 
        "outcome"
      ], 
      "method": "sell", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "Cash": {
    "addCash": {
      "inputs": [
        "ID", 
        "amount"
      ], 
      "method": "addCash", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "balance": {
      "inputs": [
        "address"
      ], 
      "method": "balance", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "depositEther": {
      "method": "depositEther", 
      "returns": "number", 
      "send": true
    }, 
    "initiateOwner": {
      "inputs": [
        "account"
      ], 
      "method": "initiateOwner", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "send": {
      "inputs": [
        "recver", 
        "value"
      ], 
      "method": "send", 
      "returns": "unfix", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "sendFrom": {
      "inputs": [
        "recver", 
        "value", 
        "from"
      ], 
      "method": "sendFrom", 
      "returns": "unfix", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setCash": {
      "inputs": [
        "address", 
        "balance"
      ], 
      "method": "setCash", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "subtractCash": {
      "inputs": [
        "ID", 
        "amount"
      ], 
      "method": "subtractCash", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "withdrawEther": {
      "inputs": [
        "to", 
        "value"
      ], 
      "method": "withdrawEther", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "CloseMarket": {
    "claimProceeds": {
      "inputs": [
        "branch", 
        "market"
      ], 
      "method": "claimProceeds", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "closeMarket": {
      "inputs": [
        "branch", 
        "market", 
        "sender"
      ], 
      "method": "closeMarket", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "CloseMarketOne": {
    "oneOutcome": {
      "inputs": [
        "market", 
        "winningOutcome", 
        "sender", 
        "categoricalPointFive", 
        "numOutcomes"
      ], 
      "method": "oneOutcome", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "CloseMarketTwo": {
    "twoOutcomes": {
      "inputs": [
        "market", 
        "winningOutcome", 
        "event", 
        "sender"
      ], 
      "method": "twoOutcomes", 
      "signature": [
        "int256", 
        "int256[]", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "CollectFees": {
    "collectFees": {
      "inputs": [
        "branch", 
        "sender"
      ], 
      "method": "collectFees", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "CompleteSets": {
    "buyCompleteSets": {
      "inputs": [
        "market", 
        "amount"
      ], 
      "method": "buyCompleteSets", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "sellCompleteSets": {
      "inputs": [
        "market", 
        "amount"
      ], 
      "method": "sellCompleteSets", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "CompositeGetters": {
    "batchGetMarketInfo": {
      "inputs": [
        "marketIDs"
      ], 
      "method": "batchGetMarketInfo", 
      "returns": "hash[]", 
      "signature": [
        "int256[]"
      ]
    }, 
    "getMarketInfo": {
      "inputs": [
        "marketID"
      ], 
      "method": "getMarketInfo", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarketInfoCache": {
      "inputs": [
        "marketID"
      ], 
      "method": "getMarketInfoCache", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarketsInfo": {
      "inputs": [
        "branch", 
        "offset", 
        "numMarketsToLoad"
      ], 
      "method": "getMarketsInfo", 
      "returns": "hash[]", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getOrderBook": {
      "inputs": [
        "marketID"
      ], 
      "method": "getOrderBook", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "Consensus": {
    "incrementPeriodAfterReporting": {
      "inputs": [
        "branch"
      ], 
      "method": "incrementPeriodAfterReporting", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "penalizeWrong": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "penalizeWrong", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "ConsensusData": {
    "doRefund": {
      "inputs": [
        "sender", 
        "refunder"
      ], 
      "method": "doRefund", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getBaseReportersLastPeriod": {
      "inputs": [
        "branch"
      ], 
      "method": "getBaseReportersLastPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "getDenominator": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getDenominator", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getFeeFirst": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getFeeFirst", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getFeesCollected": {
      "inputs": [
        "branch", 
        "address", 
        "period"
      ], 
      "method": "getFeesCollected", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getNotEnoughPenalized": {
      "inputs": [
        "branch", 
        "address", 
        "period"
      ], 
      "method": "getNotEnoughPenalized", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getPenalized": {
      "inputs": [
        "branch", 
        "period", 
        "sender", 
        "event"
      ], 
      "method": "getPenalized", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getPenalizedNum": {
      "inputs": [
        "branch", 
        "period", 
        "sender"
      ], 
      "method": "getPenalizedNum", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getPenalizedUpTo": {
      "inputs": [
        "branch", 
        "sender"
      ], 
      "method": "getPenalizedUpTo", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getPeriodBalance": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getPeriodBalance", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getRepRedistributionDone": {
      "inputs": [
        "branch", 
        "reporter"
      ], 
      "method": "getRepRedistributionDone", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getSlashed": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "reporter"
      ], 
      "method": "getSlashed", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "increaseDenominator": {
      "inputs": [
        "branch", 
        "period", 
        "amount"
      ], 
      "method": "increaseDenominator", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "increasePenalizedNum": {
      "inputs": [
        "branch", 
        "period", 
        "sender", 
        "amount"
      ], 
      "method": "increasePenalizedNum", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setBaseReportersLastPeriod": {
      "inputs": [
        "branch", 
        "amount"
      ], 
      "method": "setBaseReportersLastPeriod", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setFeeFirst": {
      "inputs": [
        "branch", 
        "period", 
        "val"
      ], 
      "method": "setFeeFirst", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setFeesCollected": {
      "inputs": [
        "branch", 
        "address", 
        "period"
      ], 
      "method": "setFeesCollected", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setNotEnoughPenalized": {
      "inputs": [
        "branch", 
        "address", 
        "period"
      ], 
      "method": "setNotEnoughPenalized", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPenalized": {
      "inputs": [
        "branch", 
        "period", 
        "sender", 
        "event"
      ], 
      "method": "setPenalized", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPenalizedUpTo": {
      "inputs": [
        "branch", 
        "sender", 
        "period"
      ], 
      "method": "setPenalizedUpTo", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPeriodBalance": {
      "inputs": [
        "branch", 
        "period", 
        "balance"
      ], 
      "method": "setPeriodBalance", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setRefund": {
      "inputs": [
        "refunder", 
        "amt"
      ], 
      "method": "setRefund", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setSlashed": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "reporter"
      ], 
      "method": "setSlashed", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "CreateBranch": {
    "createSubbranch": {
      "inputs": [
        "description", 
        "periodLength", 
        "parent", 
        "mintradingFee", 
        "oracleOnly"
      ], 
      "method": "createSubbranch", 
      "returns": "hash", 
      "send": true, 
      "signature": [
        "bytes", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "CreateMarket": {
    "createEvent": {
      "inputs": [
        "branch", 
        "description", 
        "expDate", 
        "minValue", 
        "maxValue", 
        "numOutcomes", 
        "resolution"
      ], 
      "method": "createEvent", 
      "send": true, 
      "signature": [
        "int256", 
        "bytes", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "bytes"
      ]
    }, 
    "createMarket": {
      "inputs": [
        "branch", 
        "description", 
        "tradingFee", 
        "event", 
        "tag1", 
        "tag2", 
        "tag3", 
        "makerFees", 
        "extraInfo"
      ], 
      "method": "createMarket", 
      "send": true, 
      "signature": [
        "int256", 
        "bytes", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "bytes"
      ]
    }, 
    "pushMarketForward": {
      "inputs": [
        "branch", 
        "market"
      ], 
      "method": "pushMarketForward", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "updateTradingFee": {
      "inputs": [
        "branch", 
        "market", 
        "tradingFee"
      ], 
      "method": "updateTradingFee", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "EventResolution": {
    "determineWinningOutcomes": {
      "inputs": [
        "event"
      ], 
      "method": "determineWinningOutcomes", 
      "signature": [
        "int256"
      ]
    }, 
    "resolveBinary": {
      "inputs": [
        "event", 
        "market", 
        "branch", 
        "votingPeriodEvent"
      ], 
      "method": "resolveBinary", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "resolveCategoricalOrScalar": {
      "inputs": [
        "scaled_min", 
        "scaled_max", 
        "event", 
        "market", 
        "branch", 
        "votingPeriodEvent"
      ], 
      "method": "resolveCategoricalOrScalar", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "Events": {
    "addMarket": {
      "inputs": [
        "event", 
        "marketID"
      ], 
      "method": "addMarket", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "addPast24": {
      "inputs": [
        "period"
      ], 
      "method": "addPast24", 
      "signature": [
        "int256"
      ]
    }, 
    "getBond": {
      "inputs": [
        "event"
      ], 
      "method": "getBond", 
      "signature": [
        "int256"
      ]
    }, 
    "getBranch": {
      "inputs": [
        "event"
      ], 
      "method": "getBranch", 
      "signature": [
        "int256"
      ]
    }, 
    "getEthical": {
      "inputs": [
        "event"
      ], 
      "method": "getEthical", 
      "signature": [
        "int256"
      ]
    }, 
    "getEthics": {
      "inputs": [
        "event"
      ], 
      "method": "getEthics", 
      "signature": [
        "int256"
      ]
    }, 
    "getEventBranch": {
      "inputs": [
        "event"
      ], 
      "method": "getEventBranch", 
      "returns": "hash", 
      "signature": [
        "int256"
      ]
    }, 
    "getEventInfo": {
      "inputs": [
        "event"
      ], 
      "method": "getEventInfo", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getEventPushedUp": {
      "inputs": [
        "event"
      ], 
      "method": "getEventPushedUp", 
      "signature": [
        "int256"
      ]
    }, 
    "getEventResolution": {
      "inputs": [
        "event"
      ], 
      "method": "getEventResolution", 
      "signature": [
        "int256"
      ]
    }, 
    "getExpiration": {
      "inputs": [
        "event"
      ], 
      "method": "getExpiration", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkEthicality": {
      "inputs": [
        "event"
      ], 
      "method": "getForkEthicality", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkOutcome": {
      "inputs": [
        "event"
      ], 
      "method": "getForkOutcome", 
      "signature": [
        "int256"
      ]
    }, 
    "getForked": {
      "inputs": [
        "event"
      ], 
      "method": "getForked", 
      "signature": [
        "int256"
      ]
    }, 
    "getForkedDone": {
      "inputs": [
        "event"
      ], 
      "method": "getForkedDone", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarket": {
      "inputs": [
        "event", 
        "marketIndex"
      ], 
      "method": "getMarket", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getMarkets": {
      "inputs": [
        "event"
      ], 
      "method": "getMarkets", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getMaxValue": {
      "inputs": [
        "event"
      ], 
      "method": "getMaxValue", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getMinValue": {
      "inputs": [
        "event"
      ], 
      "method": "getMinValue", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getNumMarkets": {
      "inputs": [
        "event"
      ], 
      "method": "getNumMarkets", 
      "signature": [
        "int256"
      ]
    }, 
    "getNumOutcomes": {
      "inputs": [
        "event"
      ], 
      "method": "getNumOutcomes", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getOriginalExpiration": {
      "inputs": [
        "event"
      ], 
      "method": "getOriginalExpiration", 
      "signature": [
        "int256"
      ]
    }, 
    "getOutcome": {
      "inputs": [
        "event"
      ], 
      "method": "getOutcome", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getPast24": {
      "inputs": [
        "period"
      ], 
      "method": "getPast24", 
      "signature": [
        "int256"
      ]
    }, 
    "getRejected": {
      "inputs": [
        "event"
      ], 
      "method": "getRejected", 
      "signature": [
        "int256"
      ]
    }, 
    "getRejectedPeriod": {
      "inputs": [
        "event"
      ], 
      "method": "getRejectedPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "getReportingThreshold": {
      "inputs": [
        "event"
      ], 
      "method": "getReportingThreshold", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getResolution": {
      "inputs": [
        "event"
      ], 
      "method": "getResolution", 
      "signature": [
        "int256"
      ]
    }, 
    "getUncaughtOutcome": {
      "inputs": [
        "event"
      ], 
      "method": "getUncaughtOutcome", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getmode": {
      "inputs": [
        "event"
      ], 
      "method": "getmode", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "initializeEvent": {
      "inputs": [
        "ID", 
        "branch", 
        "expirationDate", 
        "minValue", 
        "maxValue", 
        "numOutcomes", 
        "resolution"
      ], 
      "method": "initializeEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "bytes"
      ]
    }, 
    "setBond": {
      "inputs": [
        "event", 
        "bond"
      ], 
      "method": "setBond", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setBranch": {
      "inputs": [
        "event", 
        "branch"
      ], 
      "method": "setBranch", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setEthics": {
      "inputs": [
        "event", 
        "ethicality"
      ], 
      "method": "setEthics", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setEventPushedUp": {
      "inputs": [
        "event", 
        "val"
      ], 
      "method": "setEventPushedUp", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setExpiration": {
      "inputs": [
        "event", 
        "date"
      ], 
      "method": "setExpiration", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setForkDone": {
      "inputs": [
        "event"
      ], 
      "method": "setForkDone", 
      "signature": [
        "int256"
      ]
    }, 
    "setForkEthicality": {
      "inputs": [
        "event", 
        "value"
      ], 
      "method": "setForkEthicality", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setForkOutcome": {
      "inputs": [
        "event", 
        "value"
      ], 
      "method": "setForkOutcome", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setForked": {
      "inputs": [
        "event"
      ], 
      "method": "setForked", 
      "signature": [
        "int256"
      ]
    }, 
    "setOriginalExpiration": {
      "inputs": [
        "event", 
        "date"
      ], 
      "method": "setOriginalExpiration", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setOutcome": {
      "inputs": [
        "ID", 
        "outcome"
      ], 
      "method": "setOutcome", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setRejected": {
      "inputs": [
        "event", 
        "period"
      ], 
      "method": "setRejected", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setThreshold": {
      "inputs": [
        "event", 
        "threshold"
      ], 
      "method": "setThreshold", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setUncaughtOutcome": {
      "inputs": [
        "event", 
        "outcome"
      ], 
      "method": "setUncaughtOutcome", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setmode": {
      "inputs": [
        "event", 
        "mode"
      ], 
      "method": "setmode", 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "ExpiringEvents": {
    "addEvent": {
      "inputs": [
        "branch", 
        "futurePeriod", 
        "eventID", 
        "subsidy"
      ], 
      "method": "addEvent", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "addRepEvent": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "event", 
        "amount"
      ], 
      "method": "addRepEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "addReportToEvent": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "eventID", 
        "sender"
      ], 
      "method": "addReportToEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "addReportersPaidSoFar": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "addReportersPaidSoFar", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "addRoundTwo": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "addRoundTwo", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "addToWeightOfReport": {
      "inputs": [
        "period", 
        "event", 
        "report", 
        "amount"
      ], 
      "method": "addToWeightOfReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "adjustPeriodShareValueOutstanding": {
      "inputs": [
        "branch", 
        "expIndex", 
        "amount"
      ], 
      "method": "adjustPeriodShareValueOutstanding", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "deleteEvent": {
      "inputs": [
        "branch", 
        "period", 
        "event"
      ], 
      "method": "deleteEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getAfterRep": {
      "inputs": [
        "branch", 
        "period", 
        "sender"
      ], 
      "method": "getAfterRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getBeforeRep": {
      "inputs": [
        "branch", 
        "period", 
        "sender"
      ], 
      "method": "getBeforeRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getCurrentMode": {
      "inputs": [
        "period", 
        "event"
      ], 
      "method": "getCurrentMode", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getCurrentModeItems": {
      "inputs": [
        "period", 
        "event"
      ], 
      "method": "getCurrentModeItems", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getEthicReport": {
      "inputs": [
        "branch", 
        "period", 
        "event", 
        "sender"
      ], 
      "method": "getEthicReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getEvent": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "eventIndex"
      ], 
      "method": "getEvent", 
      "returns": "hash", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getEventIndex": {
      "inputs": [
        "period", 
        "eventID"
      ], 
      "method": "getEventIndex", 
      "returns": "number", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getEvents": {
      "inputs": [
        "branch", 
        "expDateIndex"
      ], 
      "method": "getEvents", 
      "returns": "hash[]", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getEventsRange": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "start", 
        "end"
      ], 
      "method": "getEventsRange", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getLesserReportNum": {
      "inputs": [
        "branch", 
        "period", 
        "event"
      ], 
      "method": "getLesserReportNum", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getNumEventsToReportOn": {
      "inputs": [
        "branch", 
        "expDateIndex"
      ], 
      "method": "getNumEventsToReportOn", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getNumRemoved": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getNumRemoved", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getNumReportsActual": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "sender"
      ], 
      "method": "getNumReportsActual", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getNumReportsEvent": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "eventID"
      ], 
      "method": "getNumReportsEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getNumRequired": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getNumRequired", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getNumRoundTwo": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "getNumRoundTwo", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getNumberEvents": {
      "inputs": [
        "branch", 
        "expDateIndex"
      ], 
      "method": "getNumberEvents", 
      "returns": "number", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getPeriodDormantRep": {
      "inputs": [
        "branch", 
        "period", 
        "sender"
      ], 
      "method": "getPeriodDormantRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getPeriodRepConstant": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "sender"
      ], 
      "method": "getPeriodRepConstant", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getRepEvent": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "event"
      ], 
      "method": "getRepEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getReport": {
      "inputs": [
        "branch", 
        "period", 
        "event", 
        "sender"
      ], 
      "method": "getReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getReportHash": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "reporter", 
        "event"
      ], 
      "method": "getReportHash", 
      "returns": "hash", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getReportersPaidSoFar": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "getReportersPaidSoFar", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getRequired": {
      "inputs": [
        "event"
      ], 
      "method": "getRequired", 
      "signature": [
        "int256"
      ]
    }, 
    "getSaltyHash": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "reporter", 
        "event"
      ], 
      "method": "getSaltyHash", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getShareValue": {
      "inputs": [
        "branch", 
        "expIndex"
      ], 
      "method": "getShareValue", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getSubsidy": {
      "inputs": [
        "branch", 
        "period", 
        "event"
      ], 
      "method": "getSubsidy", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getWeightOfReport": {
      "inputs": [
        "period", 
        "event", 
        "report"
      ], 
      "method": "getWeightOfReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "moveEvent": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "moveEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "refundCost": {
      "inputs": [
        "to", 
        "value"
      ], 
      "method": "refundCost", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "removeEvent": {
      "inputs": [
        "branch", 
        "period"
      ], 
      "method": "removeEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setAfterRep": {
      "inputs": [
        "branch", 
        "period", 
        "rep", 
        "sender"
      ], 
      "method": "setAfterRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setBeforeRep": {
      "inputs": [
        "branch", 
        "period", 
        "rep", 
        "sender"
      ], 
      "method": "setBeforeRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setCurrentMode": {
      "inputs": [
        "period", 
        "event", 
        "mode"
      ], 
      "method": "setCurrentMode", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setCurrentModeItems": {
      "inputs": [
        "period", 
        "event", 
        "modeReport"
      ], 
      "method": "setCurrentModeItems", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setEthicReport": {
      "inputs": [
        "branch", 
        "period", 
        "event", 
        "ethics", 
        "sender"
      ], 
      "method": "setEthicReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setEventRequired": {
      "inputs": [
        "branch", 
        "period", 
        "event"
      ], 
      "method": "setEventRequired", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setLesserReportNum": {
      "inputs": [
        "branch", 
        "period", 
        "event", 
        "num"
      ], 
      "method": "setLesserReportNum", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setNumEventsToReportOn": {
      "inputs": [
        "branch"
      ], 
      "method": "setNumEventsToReportOn", 
      "signature": [
        "int256"
      ]
    }, 
    "setNumReportsEvent": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "eventID", 
        "num"
      ], 
      "method": "setNumReportsEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPeriodDormantRep": {
      "inputs": [
        "branch", 
        "period", 
        "rep", 
        "sender"
      ], 
      "method": "setPeriodDormantRep", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPeriodRepConstant": {
      "inputs": [
        "branch", 
        "votePeriod", 
        "sender", 
        "value"
      ], 
      "method": "setPeriodRepConstant", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setReport": {
      "inputs": [
        "branch", 
        "period", 
        "event", 
        "report", 
        "sender"
      ], 
      "method": "setReport", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setReportHash": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "reporter", 
        "reportHash", 
        "event"
      ], 
      "method": "setReportHash", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setSaltyHash": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "reporter", 
        "saltyHash", 
        "event"
      ], 
      "method": "setSaltyHash", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "Faucets": {
    "cashFaucet": {
      "method": "cashFaucet", 
      "returns": "number", 
      "send": true
    }, 
    "claimInitialRep": {
      "inputs": [
        "parent", 
        "branch"
      ], 
      "method": "claimInitialRep", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "fundNewAccount": {
      "inputs": [
        "branch"
      ], 
      "method": "fundNewAccount", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "reputationFaucet": {
      "inputs": [
        "branch"
      ], 
      "method": "reputationFaucet", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }
  }, 
  "ForkPenalize": {
    "penalizeOnForkedEvent": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "penalizeOnForkedEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "proportionCorrectForkEvent": {
      "inputs": [
        "event"
      ], 
      "method": "proportionCorrectForkEvent", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "Forking": {
    "exchangeRate": {
      "inputs": [
        "branch"
      ], 
      "method": "exchangeRate", 
      "signature": [
        "int256"
      ]
    }, 
    "fork": {
      "inputs": [
        "event", 
        "branch", 
        "forkedOverEthicality"
      ], 
      "method": "fork", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "move_event": {
      "inputs": [
        "event"
      ], 
      "method": "move_event", 
      "signature": [
        "int256"
      ]
    }, 
    "resolveForkEvent": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "resolveForkEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "resolveForkedEvent": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "resolveForkedEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "resolve_fork": {
      "inputs": [
        "branch"
      ], 
      "method": "resolve_fork", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "FxpFunctions": {
    "fx_exp": {
      "inputs": [
        "x"
      ], 
      "method": "fx_exp", 
      "signature": [
        "int256"
      ]
    }, 
    "fx_log": {
      "inputs": [
        "x"
      ], 
      "method": "fx_log", 
      "signature": [
        "int256"
      ]
    }, 
    "sqrt": {
      "inputs": [
        "n"
      ], 
      "method": "sqrt", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "Info": {
    "getCreationFee": {
      "inputs": [
        "ID"
      ], 
      "method": "getCreationFee", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getCreator": {
      "inputs": [
        "ID"
      ], 
      "method": "getCreator", 
      "returns": "address", 
      "signature": [
        "int256"
      ]
    }, 
    "getDescription": {
      "inputs": [
        "ID"
      ], 
      "method": "getDescription", 
      "returns": "string", 
      "signature": [
        "int256"
      ]
    }, 
    "getDescriptionLength": {
      "inputs": [
        "ID"
      ], 
      "method": "getDescriptionLength", 
      "signature": [
        "int256"
      ]
    }, 
    "setInfo": {
      "inputs": [
        "ID", 
        "description", 
        "creator", 
        "fee"
      ], 
      "method": "setInfo", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "bytes", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "MakeReports": {
    "calculateReportTargetForEvent": {
      "inputs": [
        "branch", 
        "eventID", 
        "votePeriod", 
        "sender"
      ], 
      "method": "calculateReportTargetForEvent", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "makeHash": {
      "inputs": [
        "salt", 
        "report", 
        "eventID", 
        "sender"
      ], 
      "method": "makeHash", 
      "returns": "hash", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "submitReport": {
      "inputs": [
        "event", 
        "salt", 
        "report", 
        "ethics"
      ], 
      "method": "submitReport", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "submitReportHash": {
      "inputs": [
        "event", 
        "reportHash", 
        "encryptedSaltyHash"
      ], 
      "method": "submitReportHash", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "validateReport": {
      "inputs": [
        "eventID", 
        "branch", 
        "votePeriod", 
        "report", 
        "forkedOverEthicality", 
        "forkedOverThisEvent", 
        "roundTwo", 
        "balance"
      ], 
      "method": "validateReport", 
      "returns": "number", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "Markets": {
    "addFees": {
      "inputs": [
        "market", 
        "amount"
      ], 
      "method": "addFees", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "addToMarketsHash": {
      "inputs": [
        "branch", 
        "newHash"
      ], 
      "method": "addToMarketsHash", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "addTrade": {
      "inputs": [
        "market", 
        "trade_id", 
        "last_id"
      ], 
      "method": "addTrade", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getBondsMan": {
      "inputs": [
        "market"
      ], 
      "method": "getBondsMan", 
      "signature": [
        "int256"
      ]
    }, 
    "getBranchID": {
      "inputs": [
        "market"
      ], 
      "method": "getBranchID", 
      "returns": "hash", 
      "signature": [
        "int256"
      ]
    }, 
    "getCreationTime": {
      "inputs": [
        "market"
      ], 
      "method": "getCreationTime", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getCumScale": {
      "inputs": [
        "market"
      ], 
      "method": "getCumScale", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getExtraInfo": {
      "inputs": [
        "market"
      ], 
      "method": "getExtraInfo", 
      "signature": [
        "int256"
      ]
    }, 
    "getFees": {
      "inputs": [
        "market"
      ], 
      "method": "getFees", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getLastExpDate": {
      "inputs": [
        "market"
      ], 
      "method": "getLastExpDate", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getLastOutcomePrice": {
      "inputs": [
        "market", 
        "outcome"
      ], 
      "method": "getLastOutcomePrice", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getLastTrade": {
      "inputs": [
        "market"
      ], 
      "method": "getLastTrade", 
      "signature": [
        "int256"
      ]
    }, 
    "getMakerFees": {
      "inputs": [
        "market"
      ], 
      "method": "getMakerFees", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarketEvent": {
      "inputs": [
        "market", 
        "index"
      ], 
      "method": "getMarketEvent", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getMarketEvents": {
      "inputs": [
        "market"
      ], 
      "method": "getMarketEvents", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarketNumOutcomes": {
      "inputs": [
        "market"
      ], 
      "method": "getMarketNumOutcomes", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getMarketsHash": {
      "inputs": [
        "branch"
      ], 
      "method": "getMarketsHash", 
      "signature": [
        "int256"
      ]
    }, 
    "getNumEvents": {
      "inputs": [
        "market"
      ], 
      "method": "getNumEvents", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getOneWinningOutcome": {
      "inputs": [
        "market", 
        "num"
      ], 
      "method": "getOneWinningOutcome", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getOriginalTradingPeriod": {
      "inputs": [
        "market"
      ], 
      "method": "getOriginalTradingPeriod", 
      "signature": [
        "int256"
      ]
    }, 
    "getParticipantSharesPurchased": {
      "inputs": [
        "market", 
        "trader", 
        "outcome"
      ], 
      "method": "getParticipantSharesPurchased", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getPushedForward": {
      "inputs": [
        "market"
      ], 
      "method": "getPushedForward", 
      "signature": [
        "int256"
      ]
    }, 
    "getSender": {
      "method": "getSender"
    }, 
    "getSharesPurchased": {
      "inputs": [
        "market", 
        "outcome"
      ], 
      "method": "getSharesPurchased", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getSharesValue": {
      "inputs": [
        "market"
      ], 
      "method": "getSharesValue", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getTotalSharesPurchased": {
      "inputs": [
        "market"
      ], 
      "method": "getTotalSharesPurchased", 
      "signature": [
        "int256"
      ]
    }, 
    "getTradingFee": {
      "inputs": [
        "market"
      ], 
      "method": "getTradingFee", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getTradingPeriod": {
      "inputs": [
        "market"
      ], 
      "method": "getTradingPeriod", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getVolume": {
      "inputs": [
        "market"
      ], 
      "method": "getVolume", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getWinningOutcomes": {
      "inputs": [
        "market"
      ], 
      "method": "getWinningOutcomes", 
      "returns": "number[]", 
      "signature": [
        "int256"
      ]
    }, 
    "get_total_trades": {
      "inputs": [
        "market_id"
      ], 
      "method": "get_total_trades", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "get_trade_ids": {
      "inputs": [
        "market_id"
      ], 
      "method": "get_trade_ids", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getgasSubsidy": {
      "inputs": [
        "market"
      ], 
      "method": "getgasSubsidy", 
      "returns": "int", 
      "signature": [
        "int256"
      ]
    }, 
    "initializeMarket": {
      "inputs": [
        "marketID", 
        "events", 
        "tradingPeriod", 
        "tradingFee", 
        "branch", 
        "tag1", 
        "tag2", 
        "tag3", 
        "makerFees", 
        "cumScale", 
        "numOutcomes", 
        "extraInfo", 
        "gasSubsidy", 
        "creationFee", 
        "lastExpDate"
      ], 
      "method": "initializeMarket", 
      "signature": [
        "int256", 
        "int256[]", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "bytes", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "modifyParticipantShares": {
      "inputs": [
        "marketID", 
        "trader", 
        "outcome", 
        "amount", 
        "cancel"
      ], 
      "method": "modifyParticipantShares", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "modifyShares": {
      "inputs": [
        "marketID", 
        "outcome", 
        "amount"
      ], 
      "method": "modifyShares", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "modifySharesValue": {
      "inputs": [
        "marketID", 
        "amount"
      ], 
      "method": "modifySharesValue", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "refundClosing": {
      "inputs": [
        "market", 
        "to"
      ], 
      "method": "refundClosing", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "remove_trade_from_market": {
      "inputs": [
        "market_id", 
        "trade_id"
      ], 
      "method": "remove_trade_from_market", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "returnTags": {
      "inputs": [
        "market"
      ], 
      "method": "returnTags", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "setPrice": {
      "inputs": [
        "market", 
        "outcome", 
        "price"
      ], 
      "method": "setPrice", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setPushedForward": {
      "inputs": [
        "market", 
        "bool", 
        "sender"
      ], 
      "method": "setPushedForward", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setTradingFee": {
      "inputs": [
        "market", 
        "fee"
      ], 
      "method": "setTradingFee", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setTradingPeriod": {
      "inputs": [
        "market", 
        "period"
      ], 
      "method": "setTradingPeriod", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setWinningOutcomes": {
      "inputs": [
        "market", 
        "outcomes"
      ], 
      "method": "setWinningOutcomes", 
      "signature": [
        "int256", 
        "int256[]"
      ]
    }
  }, 
  "PenalizationCatchup": {
    "penalizationCatchup": {
      "inputs": [
        "branch", 
        "sender"
      ], 
      "method": "penalizationCatchup", 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "PenalizeNotEnoughReports": {
    "proveReporterDidntReportEnough": {
      "inputs": [
        "branch", 
        "reporter", 
        "eventExample"
      ], 
      "method": "proveReporterDidntReportEnough", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "ProportionCorrect": {
    "proportionCorrect": {
      "inputs": [
        "event"
      ], 
      "method": "proportionCorrect", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "Reporting": {
    "addDormantRep": {
      "inputs": [
        "branch", 
        "index", 
        "value"
      ], 
      "method": "addDormantRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "addRep": {
      "inputs": [
        "branch", 
        "index", 
        "value"
      ], 
      "method": "addRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "addReporter": {
      "inputs": [
        "branch", 
        "sender", 
        "amount", 
        "dormant", 
        "repToBonderOrBranch"
      ], 
      "method": "addReporter", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "adjustActiveRep": {
      "inputs": [
        "branch", 
        "amount"
      ], 
      "method": "adjustActiveRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "balanceOf": {
      "inputs": [
        "branch", 
        "address"
      ], 
      "method": "balanceOf", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "checkContractWhitelist": {
      "inputs": [
        "contract", 
        "address"
      ], 
      "method": "checkContractWhitelist", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "checkWhitelist": {
      "inputs": [
        "address"
      ], 
      "method": "checkWhitelist", 
      "signature": [
        "int256"
      ]
    }, 
    "getActiveRep": {
      "inputs": [
        "branch"
      ], 
      "method": "getActiveRep", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "getDormantRepByIndex": {
      "inputs": [
        "branch", 
        "repIndex"
      ], 
      "method": "getDormantRepByIndex", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getFork": {
      "inputs": [
        "branch"
      ], 
      "method": "getFork", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getNumberReporters": {
      "inputs": [
        "branch"
      ], 
      "method": "getNumberReporters", 
      "returns": "number", 
      "signature": [
        "int256"
      ]
    }, 
    "getRepBalance": {
      "inputs": [
        "branch", 
        "address"
      ], 
      "method": "getRepBalance", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getRepByIndex": {
      "inputs": [
        "branch", 
        "repIndex"
      ], 
      "method": "getRepByIndex", 
      "returns": "unfix", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getReporterID": {
      "inputs": [
        "branch", 
        "index"
      ], 
      "method": "getReporterID", 
      "returns": "hash", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getReputation": {
      "inputs": [
        "address"
      ], 
      "method": "getReputation", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "getTotalRep": {
      "inputs": [
        "branch"
      ], 
      "method": "getTotalRep", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "repIDToIndex": {
      "inputs": [
        "branch", 
        "repID"
      ], 
      "method": "repIDToIndex", 
      "returns": "number", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setFork": {
      "inputs": [
        "branch"
      ], 
      "method": "setFork", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "setInitialReporters": {
      "inputs": [
        "parent", 
        "branchID"
      ], 
      "method": "setInitialReporters", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "setRep": {
      "inputs": [
        "branch", 
        "index", 
        "newRep"
      ], 
      "method": "setRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setSaleDistribution": {
      "inputs": [
        "addresses", 
        "balances", 
        "branchID"
      ], 
      "method": "setSaleDistribution", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256[]", 
        "int256[]", 
        "int256"
      ]
    }, 
    "setWhitelist": {
      "inputs": [
        "contract", 
        "addresses"
      ], 
      "method": "setWhitelist", 
      "returns": "string", 
      "send": true, 
      "signature": [
        "int256", 
        "int256[]"
      ]
    }, 
    "subtractDormantRep": {
      "inputs": [
        "branch", 
        "index", 
        "value"
      ], 
      "method": "subtractDormantRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "subtractRep": {
      "inputs": [
        "branch", 
        "index", 
        "value"
      ], 
      "method": "subtractRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "totalSupply": {
      "inputs": [
        "branch"
      ], 
      "method": "totalSupply", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "ReportingThreshold": {
    "calculateReportingThreshold": {
      "inputs": [
        "branch", 
        "eventID", 
        "votePeriod", 
        "sender"
      ], 
      "method": "calculateReportingThreshold", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getEventCanReportOn": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "reporter", 
        "event"
      ], 
      "method": "getEventCanReportOn", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "getEventsToReportOn": {
      "inputs": [
        "branch", 
        "expDateIndex", 
        "sender"
      ], 
      "method": "getEventsToReportOn", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "setReportingThreshold": {
      "inputs": [
        "event"
      ], 
      "method": "setReportingThreshold", 
      "signature": [
        "int256"
      ]
    }
  }, 
  "RoundTwo": {
    "resolve": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "resolve", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "roundTwoPostBond": {
      "inputs": [
        "branch", 
        "event", 
        "eventIndex", 
        "votePeriod"
      ], 
      "method": "roundTwoPostBond", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "roundTwoResolve": {
      "inputs": [
        "branch", 
        "event", 
        "eventIndex", 
        "sender"
      ], 
      "method": "roundTwoResolve", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "RoundTwoPenalize": {
    "penalizeRoundTwoWrong": {
      "inputs": [
        "branch", 
        "event"
      ], 
      "method": "penalizeRoundTwoWrong", 
      "signature": [
        "int256", 
        "int256"
      ]
    }
  }, 
  "SendReputation": {
    "allowance": {
      "inputs": [
        "owner", 
        "spender"
      ], 
      "method": "allowance", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "approve": {
      "inputs": [
        "branch", 
        "spender", 
        "value"
      ], 
      "method": "approve", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "convertToActiveRep": {
      "inputs": [
        "branch", 
        "value"
      ], 
      "method": "convertToActiveRep", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "convertToDormantRep": {
      "inputs": [
        "branch", 
        "value"
      ], 
      "method": "convertToDormantRep", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "sendReputation": {
      "inputs": [
        "branch", 
        "recver", 
        "value"
      ], 
      "method": "sendReputation", 
      "returns": "unfix", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "transfer": {
      "inputs": [
        "branch", 
        "recver", 
        "value"
      ], 
      "method": "transfer", 
      "signature": [
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "transferFrom": {
      "inputs": [
        "branch", 
        "from", 
        "recver", 
        "value"
      ], 
      "method": "transferFrom", 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "SlashRep": {
    "slashRep": {
      "inputs": [
        "branch", 
        "salt", 
        "report", 
        "reporter", 
        "eventID"
      ], 
      "method": "slashRep", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }
  }, 
  "Trade": {
    "short_sell": {
      "inputs": [
        "buyer_trade_id", 
        "max_amount"
      ], 
      "method": "short_sell", 
      "returns": "hash[]", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "trade": {
      "inputs": [
        "max_value", 
        "max_amount", 
        "trade_ids"
      ], 
      "method": "trade", 
      "returns": "hash[]", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256[]"
      ]
    }
  }, 
  "Trades": {
    "checkHash": {
      "inputs": [
        "tradeHash", 
        "sender"
      ], 
      "method": "checkHash", 
      "returns": "number", 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "commitTrade": {
      "inputs": [
        "hash"
      ], 
      "method": "commitTrade", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "fill_trade": {
      "inputs": [
        "id", 
        "fill"
      ], 
      "method": "fill_trade", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "getID": {
      "inputs": [
        "tradeID"
      ], 
      "method": "getID", 
      "returns": "hash", 
      "signature": [
        "int256"
      ]
    }, 
    "get_amount": {
      "inputs": [
        "id"
      ], 
      "method": "get_amount", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "get_price": {
      "inputs": [
        "id"
      ], 
      "method": "get_price", 
      "returns": "unfix", 
      "signature": [
        "int256"
      ]
    }, 
    "get_trade": {
      "inputs": [
        "id"
      ], 
      "method": "get_trade", 
      "returns": "hash[]", 
      "signature": [
        "int256"
      ]
    }, 
    "makeTradeHash": {
      "inputs": [
        "max_value", 
        "max_amount", 
        "trade_ids"
      ], 
      "method": "makeTradeHash", 
      "returns": "hash", 
      "signature": [
        "int256", 
        "int256", 
        "int256[]"
      ]
    }, 
    "remove_trade": {
      "inputs": [
        "id"
      ], 
      "method": "remove_trade", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256"
      ]
    }, 
    "saveTrade": {
      "inputs": [
        "trade_id", 
        "type", 
        "market", 
        "amount", 
        "price", 
        "sender", 
        "outcome"
      ], 
      "method": "saveTrade", 
      "returns": "number", 
      "send": true, 
      "signature": [
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256", 
        "int256"
      ]
    }, 
    "update_trade": {
      "inputs": [
        "id", 
        "price"
      ], 
      "method": "update_trade", 
      "send": true, 
      "signature": [
        "int256", 
        "int256"
      ]
    }, 
    "zeroHash": {
      "method": "zeroHash", 
      "returns": "number", 
      "send": true
    }
  }
}
},{}],9:[function(require,module,exports){
module.exports={
    "10101": {
        "Backstops": "0x2bb90689bc93349e37b0ec7b9d77bd54ab7e28ce", 
        "Branches": "0xce436603c54c8990b75bd45a56563c1b6f3c53ff", 
        "BuyAndSellShares": "0x80fcba1394e46de1a6b66c0540d04ca61da41ae9", 
        "Cash": "0x07564bc74fe4e75c2009e38745e1b347cc5f850c", 
        "CloseMarket": "0xb80f424b417dd76df321d0b2f54a0874db29bd6b", 
        "CloseMarketOne": "0xab16062bd3da6cc6abf085afc13c491f56e25f96", 
        "CloseMarketTwo": "0x9f08e5f1f17d79c7505e47eaf1402c6965c58377", 
        "CollectFees": "0x4edc1a8480869b6c320226231f9fcdd0ee6afcad", 
        "CompleteSets": "0xffef3f155ea906fb5442681efce7fd07dece7cef", 
        "CompositeGetters": "0xe574be585571337819ddba37b7ca84ab69b90e96", 
        "Consensus": "0xd812515a98a6d8637e65f3333f14b3e889f2c075", 
        "ConsensusData": "0x3b641b0fa2f11deb3f864613212c1b20a1e57322", 
        "CreateBranch": "0x78e71b15babbca45632d2d50973e8cebb2b4ecde", 
        "CreateMarket": "0x00974c541b2b1e59360581f0b4c2eaa41ffdd359", 
        "EventResolution": "0x3818ef75c135fde069ca86b9f9617cc9a5700a48", 
        "Events": "0x05377e936e4abbb68efdacfca63653b8bf7c7dc8", 
        "ExpiringEvents": "0x92ac3bba03fa0cf6a582124030a532368b751f02", 
        "Faucets": "0xd0d5f9e79b9ccb4557f4d4422e68bfa8cd5f9539", 
        "ForkPenalize": "0xf5c02f6e5a6296aaf261c957fec41992808b868b", 
        "Forking": "0x85f8d21a6d1903818789a37d691e131ed1e7f3ff", 
        "FxpFunctions": "0x3d66c0319ea224d26d68ca41937b5aabd1f3577f", 
        "Info": "0x1bb46e3a4d936e0b47d3f5f4734a2f5d771de07a", 
        "MakeReports": "0x322b59779c666690643293b09d848522bcb46662", 
        "Markets": "0x6d158fae63ee0632418aa67b50fd76816225472e", 
        "PenalizationCatchup": "0xd960e0d1d1360edcfc77e067911b801aa1e603b4", 
        "PenalizeNotEnoughReports": "0xa3af36d473f4fbb6874636f0ed684678718fa3ee", 
        "ProportionCorrect": "0xad3570357dd6c1b1a153c05b627c3a6374368d7b", 
        "Reporting": "0x9a284f91af1fbc91cdbf0e04a0b04b6218a96b42", 
        "ReportingThreshold": "0xc59472e2ec310736341b3eb305b18d181dd25896", 
        "RoundTwo": "0x634f03d331f7da40e09054d5236a53821b09e774", 
        "RoundTwoPenalize": "0xe8374d6cf11b4758728e300255ca9133d0c715cf", 
        "SendReputation": "0xcb49bad3a451a138bc2739b75c21d227111d54a4", 
        "SlashRep": "0xc1cdb84860d7bb4f16025b3bfcc7d932f975925b", 
        "Trade": "0x562794c3d16767ac4b726b1e63524649f5e7bf46", 
        "Trades": "0x504256f9405270a90bebca80387c7d4cc897b798"
    }, 
    "2": {
        "Backstops": "0xf9c9a87f339b76dc007848ab50363116ec1af05b", 
        "Branches": "0x52af2540e03b0d0b73e3c7843c236e82ed959ac6", 
        "BuyAndSellShares": "0x26bd983a1c87352c96399615c025b175862e7978", 
        "Cash": "0xee01fd89924dfd409bf1356072f98138c57bd7cc", 
        "CloseMarket": "0xc9a1dd0bccc72527bc5957daa9677d98862d8932", 
        "CloseMarketOne": "0x4e433f8bde4a0afc59bec1b4d200b84435aafd9e", 
        "CloseMarketTwo": "0x5e3972e215854523c977ecb9faa21efeb0bcaa0a", 
        "CollectFees": "0x59c8771527a8b9f7a8d1686a5d0abee424bee648", 
        "CompleteSets": "0xf64657c13c7dcae029b84ce099dcc0751fc41cc2", 
        "CompositeGetters": "0xc42826de38b20a7894cdc1a096bdbcee9c57dbf1", 
        "Consensus": "0xd752e83681d78c344dc1636f3088294b8573dc49", 
        "ConsensusData": "0x3ed2cdd6bfbb4368a249368ee681b77fc9965492", 
        "CreateBranch": "0xb8613192ef98dfd1fbeedb15c8350c8d3aac9a03", 
        "CreateMarket": "0x54894e13b69e760e9d0f6af18b9b2c87c5fc5525", 
        "EventResolution": "0x34eea9d6769355b56348f22d6e1e2b25fbd8f513", 
        "Events": "0xa80cb397a4a0f401980c758fa768d5c0f6d6d5f2", 
        "ExpiringEvents": "0xd2cfe56ceb218117da138fe6a7450aa8c6b450d2", 
        "Faucets": "0xf3315a83f8b53fd199e16503f4b905716af4751f", 
        "ForkPenalize": "0xc3c8471f3721fcf2d0824424c8ab61ff1f054729", 
        "Forking": "0x4da58f4c737985e4ab9b89e8ea706b617ba2eb2d", 
        "FxpFunctions": "0xdcd34a389bb8e51356bbf3f191682a1a114e1bb0", 
        "Info": "0x0ec7078eed298506918767f610d0b69fbe80f4fc", 
        "MakeReports": "0xf060d000aa0603b4670a0d27afced0047213c023", 
        "Markets": "0x35c70a5372d7643739ac1ee6de6ce03311d28c42", 
        "PenalizationCatchup": "0x0e92a0e24c4315804b6beeba5bb9eb30b596fd5a", 
        "PenalizeNotEnoughReports": "0x6a51b8d60052308f84ea652e291e2f39e03a2e0d", 
        "ProportionCorrect": "0x099c0ac81d1b44e289c7d1a9aab5158e17b476b5", 
        "Reporting": "0x95b46aa63e212de35607bd867592de7b3886df07", 
        "ReportingThreshold": "0xf90466aaa6028f5389b9549372aa286ba793ece6", 
        "RoundTwo": "0x915941fcf8fa17b933705f8cff57f852ba524a3e", 
        "RoundTwoPenalize": "0x39fe055135dbf244e81b7d840d262bba2ef3fc3d", 
        "SendReputation": "0x4e7ffa77266d9935432348db6dc2fda3d48c3972", 
        "SlashRep": "0x56553d406fdc17e28168e5894c131f6c45e109ae", 
        "Trade": "0xdf0c814f16e9ecf90f28e22996edadaf702239bd", 
        "Trades": "0x55d17c58426f7ae2374d882a19b43ae031a63246"
    }
}
},{}],10:[function(require,module,exports){
module.exports={
    "0x": "no response or bad input",
    "buy": {
        "0": "market doesn't exist",
        "-1": "amount/price bad",
        "-2": "oracle-only branch",
        "-4": "not enough money or shares",
        "21": "trade already exists"
    },
    "buyCompleteSets": {
        "0": "market not found",
        "-1": "oracle-only branch",
        "-3": "not enough cash"
    },
    "cashFaucet": {
        "-1": "Hey, you're not broke!"
    },
    "claimProceeds": {
        "0": "reporting not done",
        "-1": "trader doesn't exist"
    },
    "closeMarket": {
        "0": "fail/trading not over yet/event not expired or closed already",
        "-1": "Market has no cash anyway / already closed",
        "-2": "0 outcome / not reported on yet",
        "-3": "not final round 2 event",
        "-5": "Event forked and not final yet",
        "-6": "bonded pushed forward market not ready to be resolved",
        "-7": "event not reportable >.99",
        "-8": "market isn't in branch"
    },
    "collectFees": {
        "-2": "needs to be second half of reporting period to claim rep (1st half is when redistribution is done)"
    },
    "createEvent": {
        "-1": "we're either already past that date, branch doesn't exist, or description is bad",
        "0": "not enough money to pay fees or event already exists",
        "-2": "max value < min value",
        "-9": "would expire during non-reporting fork period"
    },
    "createSingleEventMarket": {
        "0": "not enough money to pay fees or event already exists",
        "-1": "we're either already past that date, branch doesn't exist, or description is bad, or bad input or parent doesn't exist",
        "-2": "max value < min value",
        "-3": "too many outcomes",
        "-4": "not enough money",
        "-5": "fee too low",
        "-6": "duplicate events",
        "-7": "event already expired",
        "-8": "market already exists",
        "-9": "would expire during non-reporting fork period"
    },
    "createMarket": {
        "-1": "bad input or parent doesn't exist",
        "-2": "too many events",
        "-3": "too many outcomes",
        "-4": "not enough money",
        "-5": "fee too low",
        "-6": "duplicate events",
        "-7": "event already expired",
        "-8": "market already exists",
        "-9": "would expire during non-reporting fork period"
    },
    "createSubbranch": {
        "-1": "bad input or parent doesn't exist",
        "-2": "no money for creation fee or branch already exists"
    },
    "penalizationCatchup": {
        "-2": "can only be called during the first half of the reporting period"
    },
    "penalizeOnForkedEvent": {
        "-2": "already past first half of new period and needed to penalize before then",
        "-4": "fork event isn't resolved yet",
        "-5": "already done for all events in this period"
    },
    "penalizeRoundTwoWrong": {
        "0": "event is a fork event",
        "-1": "need to penalize in round 2 penalize function",
        "-2": "already past first half of new period and needed to penalize before then",
        "-4": "in fork period only thing that rbcr is done on is the round 2 event in the original branch via round 2 penalize",
        "-5": "already done for all events in this period",
        "-6": "forked events should be penalized using the fork penalization function"
    },
    "penalizeWrong": {
        "0": "event is a fork event",
        "-1": "need to penalize in round 2 penalize function",
        "-2": "already past first half of new period and needed to penalize before then",
        "-4": "in fork period only thing that rbcr is done on is the round 2 event in the original branch via round 2 penalize",
        "-5": "already done for all events in this period",
        "-6": "forked events should be penalized using the fork penalization function",
        "-7": "no outcome"
    },
    "proveReporterDidntReportEnough": {
        "-1": "already done",
        "-2": "not in right part of period"
    },
    "pushMarketForward": {
        "-1": "fork period cannot be the current or previous period",
        "-2": "market is already closed or pushed forward",
        "-3": "not enough cash to post early resolution bond",
        "-4": "early resolution already attempted or outcome already exists"
    },
    "sell": {
        "0": "market doesn't exist",
        "-1": "amount/price bad",
        "-2": "oracle only branch",
        "-3": "bad outcome to trade",
        "-4": "not enough money or shares",
        "21": "trade already exists"
    },
    "sellCompleteSets": {
        "-1": "oracle-only branch",
        "-2": "not a participant in this market",
        "-3": "not enough shares"
    },
    "sendReputation": {
        "0": "not enough reputation",
        "-1": "Your reputation account was just created! Earn some reputation before you can send to others",
        "-2": "Receiving address doesn't exist"
    },
    "short_sell": {
        "-1": "oracle only branch",
        "-2": "bad trade hash",
        "-3": "trader doesn't exist / own shares in this market",
        "-4": "must buy at least .00000001 in value",
        "10": "insufficient balance"
    },
    "slashRep": {
        "0": "not a valid claim",
        "-2": "reporter doesn't exist"
    },
    "submitReportHash": {
        "0": "not caught up on rep redistributions",
        "-1": "invalid event",
        "-2": "not in first half of period (commit phase)"
    },
    "submitReport": {
        "0": "reporter doesn't exist or has <1 rep",
        "-1": "has already reported",
        "-2": "not in second half of period [reveal part]",
        "-3": "hash doesn't match",
        "-4": "bad report",
        "-5": "invalid event",
        "-6": "already resolved",
        "-7": "<48 hr left in period, too late to report, able to put up readj. bonds though",
        "-8": "fees couldn't be collected",
        "-9": "need to pay not reporting bond"
    },
    "trade": {
        "-1": "oracle only branch",
        "-2": "bad trade hash",
        "-3": "trader doesn't exist / own shares in this market",
        "-4": "must buy at least .00000001 in value",
        "10": "insufficient balance"
    },
    "updateTradingFee": {
        "-1": "invalid trading fee: either fee is below the minimum trading fee or you are trying to raise the trading fee (trading fees can be lowered, but not raised)",
        "-4": "sender's address does not match the market creator's address"
    },
    "WRONG_NUMBER_OF_OUTCOMES": {
        "error": 41,
        "message": "the number of initial fair prices does not match this market's number of outcomes"
    },
    "INSUFFICIENT_LIQUIDITY": {
        "error": 42,
        "message": "insufficient liquidity to generate order book"
    },
    "INITIAL_PRICE_OUT_OF_BOUNDS": {
        "error": 43,
        "message": "one or more initial fair prices are out-of-bounds"
    },
    "PRICE_WIDTH_OUT_OF_BOUNDS": {
        "error": 44,
        "message": "price width is too large for one or more initial fair prices"
    },
    "DB_DELETE_FAILED": {
        "error": 97,
        "message": "database delete failed"
    },
    "DB_WRITE_FAILED": {
        "error": 98,
        "message": "database write failed"
    },
    "DB_READ_FAILED": {
        "error": 99,
        "message": "database read failed"
    },
    "INVALID_CONTRACT_PARAMETER": {
        "error": 400,
        "message": "cannot send object parameter to contract"
    },
    "NOT_LOGGED_IN": {
        "error": 401,
        "message": "not logged in"
    },
    "PARAMETER_NUMBER_ERROR": {
        "error": 402,
        "message": "wrong number of parameters"
    },
    "BAD_CREDENTIALS": {
        "error": 403,
        "message": "incorrect handle or password"
    },
    "TRANSACTION_NOT_FOUND": {
        "error": 404,
        "message": "transaction not found"
    },
    "PASSWORD_TOO_SHORT": {
        "error": 405,
        "message": "password must be at least 6 characters long"
    },
    "NULL_CALL_RETURN": {
        "error": 406,
        "message": "expected contract call to return value, received null"
    },
    "NULL_RESPONSE": {
        "error": 407,
        "message": "expected transaction hash from Ethereum node, received null"
    },
    "NO_RESPONSE": {
        "error": 408,
        "message": "no response"
    },
    "INVALID_RESPONSE": {
        "error": 409,
        "message": "could not parse response from Ethereum node"
    },
    "LOCAL_NODE_FAILURE": {
        "error": 410,
        "message": "RPC request to local Ethereum node failed"
    },
    "HOSTED_NODE_FAILURE": {
        "error": 411,
        "message": "RPC request to hosted nodes failed"
    },
    "TRANSACTION_INVALID": {
        "error": 412,
        "message": "transaction validation failed"
    },
    "HANDLE_TAKEN": {
        "error": 422,
        "message": "handle already taken"
    },
    "FILTER_NOT_CREATED": {
        "error": 450,
        "message": "filter could not be created"
    },
    "TRANSACTION_FAILED": {
        "error": 500,
        "message": "transaction failed"
    },
    "TRANSACTION_NOT_CONFIRMED": {
        "error": 501,
        "message": "polled network but could not confirm transaction"
    },
    "DUPLICATE_TRANSACTION": {
        "error": 502,
        "message": "duplicate transaction"
    },
    "RAW_TRANSACTION_ERROR": {
        "error": 503,
        "message": "error sending client-side transaction"
    },
    "RLP_ENCODING_ERROR": {
        "error": 504,
        "message": "RLP encoding error"
    },
    "NO_MARKET_INFO": {
        "error": 505,
        "message": "could not retrieve market data"
    },
    "RPC_TIMEOUT": {
        "error": 599,
        "message": "timed out while waiting for Ethereum network response"
    },
    "LOOPBACK_NOT_FOUND": {
        "error": 650,
        "message": "loopback interface required for synchronous local commands"
    },
    "ETHEREUM_NOT_FOUND": {
        "error": 651,
        "message": "no active ethereum node(s) found"
    },
    "CHECK_ORDER_BOOK_FAILED": {
        "error": 710,
        "message": "could not check order book using current prices"
    }
}

},{}],11:[function(require,module,exports){
var contracts = require("./contracts");
contracts.errors = require("./errors");
contracts.Tx = require("./tx");

module.exports = contracts;

},{"./contracts":9,"./errors":10,"./tx":12}],12:[function(require,module,exports){
/**
 * Augur contract method info.
 */

"use strict";

var clone = require("clone");

module.exports = function (network, contracts) {

    contracts = contracts || require("./contracts")[network || "2"];
    var api = clone(require("./api"));

    for (var contract in api) {
        if (!api.hasOwnProperty(contract)) continue;
        for (var method in api[contract]) {
            if (!api[contract].hasOwnProperty(method)) continue;
            api[contract][method].to = contracts[contract];
        }
    }

    return api;
};

},{"./api":8,"./contracts":9,"clone":14}],13:[function(require,module,exports){
// Browser Request
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// UMD HEADER START 
(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define([], factory);
    } else if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory();
    } else {
        // Browser globals (root is window)
        root.returnExports = factory();
  }
}(this, function () {
// UMD HEADER END

var XHR = XMLHttpRequest
if (!XHR) throw new Error('missing XMLHttpRequest')
request.log = {
  'trace': noop, 'debug': noop, 'info': noop, 'warn': noop, 'error': noop
}

var DEFAULT_TIMEOUT = 3 * 60 * 1000 // 3 minutes

//
// request
//

function request(options, callback) {
  // The entry-point to the API: prep the options object and pass the real work to run_xhr.
  if(typeof callback !== 'function')
    throw new Error('Bad callback given: ' + callback)

  if(!options)
    throw new Error('No options given')

  var options_onResponse = options.onResponse; // Save this for later.

  if(typeof options === 'string')
    options = {'uri':options};
  else
    options = JSON.parse(JSON.stringify(options)); // Use a duplicate for mutating.

  options.onResponse = options_onResponse // And put it back.

  if (options.verbose) request.log = getLogger();

  if(options.url) {
    options.uri = options.url;
    delete options.url;
  }

  if(!options.uri && options.uri !== "")
    throw new Error("options.uri is a required argument");

  if(typeof options.uri != "string")
    throw new Error("options.uri must be a string");

  var unsupported_options = ['proxy', '_redirectsFollowed', 'maxRedirects', 'followRedirect']
  for (var i = 0; i < unsupported_options.length; i++)
    if(options[ unsupported_options[i] ])
      throw new Error("options." + unsupported_options[i] + " is not supported")

  options.callback = callback
  options.method = options.method || 'GET';
  options.headers = options.headers || {};
  options.body    = options.body || null
  options.timeout = options.timeout || request.DEFAULT_TIMEOUT

  if(options.headers.host)
    throw new Error("Options.headers.host is not supported");

  if(options.json) {
    options.headers.accept = options.headers.accept || 'application/json'
    if(options.method !== 'GET')
      options.headers['content-type'] = 'application/json'

    if(typeof options.json !== 'boolean')
      options.body = JSON.stringify(options.json)
    else if(typeof options.body !== 'string')
      options.body = JSON.stringify(options.body)
  }
  
  //BEGIN QS Hack
  var serialize = function(obj) {
    var str = [];
    for(var p in obj)
      if (obj.hasOwnProperty(p)) {
        str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
      }
    return str.join("&");
  }
  
  if(options.qs){
    var qs = (typeof options.qs == 'string')? options.qs : serialize(options.qs);
    if(options.uri.indexOf('?') !== -1){ //no get params
        options.uri = options.uri+'&'+qs;
    }else{ //existing get params
        options.uri = options.uri+'?'+qs;
    }
  }
  //END QS Hack
  
  //BEGIN FORM Hack
  var multipart = function(obj) {
    //todo: support file type (useful?)
    var result = {};
    result.boundry = '-------------------------------'+Math.floor(Math.random()*1000000000);
    var lines = [];
    for(var p in obj){
        if (obj.hasOwnProperty(p)) {
            lines.push(
                '--'+result.boundry+"\n"+
                'Content-Disposition: form-data; name="'+p+'"'+"\n"+
                "\n"+
                obj[p]+"\n"
            );
        }
    }
    lines.push( '--'+result.boundry+'--' );
    result.body = lines.join('');
    result.length = result.body.length;
    result.type = 'multipart/form-data; boundary='+result.boundry;
    return result;
  }
  
  if(options.form){
    if(typeof options.form == 'string') throw('form name unsupported');
    if(options.method === 'POST'){
        var encoding = (options.encoding || 'application/x-www-form-urlencoded').toLowerCase();
        options.headers['content-type'] = encoding;
        switch(encoding){
            case 'application/x-www-form-urlencoded':
                options.body = serialize(options.form).replace(/%20/g, "+");
                break;
            case 'multipart/form-data':
                var multi = multipart(options.form);
                //options.headers['content-length'] = multi.length;
                options.body = multi.body;
                options.headers['content-type'] = multi.type;
                break;
            default : throw new Error('unsupported encoding:'+encoding);
        }
    }
  }
  //END FORM Hack

  // If onResponse is boolean true, call back immediately when the response is known,
  // not when the full request is complete.
  options.onResponse = options.onResponse || noop
  if(options.onResponse === true) {
    options.onResponse = callback
    options.callback = noop
  }

  // XXX Browsers do not like this.
  //if(options.body)
  //  options.headers['content-length'] = options.body.length;

  // HTTP basic authentication
  if(!options.headers.authorization && options.auth)
    options.headers.authorization = 'Basic ' + b64_enc(options.auth.username + ':' + options.auth.password);

  return run_xhr(options)
}

var req_seq = 0
function run_xhr(options) {
  var xhr = new XHR
    , timed_out = false
    , is_cors = is_crossDomain(options.uri)
    , supports_cors = ('withCredentials' in xhr)

  req_seq += 1
  xhr.seq_id = req_seq
  xhr.id = req_seq + ': ' + options.method + ' ' + options.uri
  xhr._id = xhr.id // I know I will type "_id" from habit all the time.

  if(is_cors && !supports_cors) {
    var cors_err = new Error('Browser does not support cross-origin request: ' + options.uri)
    cors_err.cors = 'unsupported'
    return options.callback(cors_err, xhr)
  }

  xhr.timeoutTimer = setTimeout(too_late, options.timeout)
  function too_late() {
    timed_out = true
    var er = new Error('ETIMEDOUT')
    er.code = 'ETIMEDOUT'
    er.duration = options.timeout

    request.log.error('Timeout', { 'id':xhr._id, 'milliseconds':options.timeout })
    return options.callback(er, xhr)
  }

  // Some states can be skipped over, so remember what is still incomplete.
  var did = {'response':false, 'loading':false, 'end':false}

  xhr.onreadystatechange = on_state_change
  xhr.open(options.method, options.uri, true) // asynchronous
  if(is_cors)
    xhr.withCredentials = !! options.withCredentials
  xhr.send(options.body)
  return xhr

  function on_state_change(event) {
    if(timed_out)
      return request.log.debug('Ignoring timed out state change', {'state':xhr.readyState, 'id':xhr.id})

    request.log.debug('State change', {'state':xhr.readyState, 'id':xhr.id, 'timed_out':timed_out})

    if(xhr.readyState === XHR.OPENED) {
      request.log.debug('Request started', {'id':xhr.id})
      for (var key in options.headers)
        xhr.setRequestHeader(key, options.headers[key])
    }

    else if(xhr.readyState === XHR.HEADERS_RECEIVED)
      on_response()

    else if(xhr.readyState === XHR.LOADING) {
      on_response()
      on_loading()
    }

    else if(xhr.readyState === XHR.DONE) {
      on_response()
      on_loading()
      on_end()
    }
  }

  function on_response() {
    if(did.response)
      return

    did.response = true
    request.log.debug('Got response', {'id':xhr.id, 'status':xhr.status})
    clearTimeout(xhr.timeoutTimer)
    xhr.statusCode = xhr.status // Node request compatibility

    // Detect failed CORS requests.
    if(is_cors && xhr.statusCode == 0) {
      var cors_err = new Error('CORS request rejected: ' + options.uri)
      cors_err.cors = 'rejected'

      // Do not process this request further.
      did.loading = true
      did.end = true

      return options.callback(cors_err, xhr)
    }

    options.onResponse(null, xhr)
  }

  function on_loading() {
    if(did.loading)
      return

    did.loading = true
    request.log.debug('Response body loading', {'id':xhr.id})
    // TODO: Maybe simulate "data" events by watching xhr.responseText
  }

  function on_end() {
    if(did.end)
      return

    did.end = true
    request.log.debug('Request done', {'id':xhr.id})

    xhr.body = xhr.responseText
    if(options.json) {
      try        { xhr.body = JSON.parse(xhr.responseText) }
      catch (er) { return options.callback(er, xhr)        }
    }

    options.callback(null, xhr, xhr.body)
  }

} // request

request.withCredentials = false;
request.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;

//
// defaults
//

request.defaults = function(options, requester) {
  var def = function (method) {
    var d = function (params, callback) {
      if(typeof params === 'string')
        params = {'uri': params};
      else {
        params = JSON.parse(JSON.stringify(params));
      }
      for (var i in options) {
        if (params[i] === undefined) params[i] = options[i]
      }
      return method(params, callback)
    }
    return d
  }
  var de = def(request)
  de.get = def(request.get)
  de.post = def(request.post)
  de.put = def(request.put)
  de.head = def(request.head)
  return de
}

//
// HTTP method shortcuts
//

var shortcuts = [ 'get', 'put', 'post', 'head' ];
shortcuts.forEach(function(shortcut) {
  var method = shortcut.toUpperCase();
  var func   = shortcut.toLowerCase();

  request[func] = function(opts) {
    if(typeof opts === 'string')
      opts = {'method':method, 'uri':opts};
    else {
      opts = JSON.parse(JSON.stringify(opts));
      opts.method = method;
    }

    var args = [opts].concat(Array.prototype.slice.apply(arguments, [1]));
    return request.apply(this, args);
  }
})

//
// CouchDB shortcut
//

request.couch = function(options, callback) {
  if(typeof options === 'string')
    options = {'uri':options}

  // Just use the request API to do JSON.
  options.json = true
  if(options.body)
    options.json = options.body
  delete options.body

  callback = callback || noop

  var xhr = request(options, couch_handler)
  return xhr

  function couch_handler(er, resp, body) {
    if(er)
      return callback(er, resp, body)

    if((resp.statusCode < 200 || resp.statusCode > 299) && body.error) {
      // The body is a Couch JSON object indicating the error.
      er = new Error('CouchDB error: ' + (body.error.reason || body.error.error))
      for (var key in body)
        er[key] = body[key]
      return callback(er, resp, body);
    }

    return callback(er, resp, body);
  }
}

//
// Utility
//

function noop() {}

function getLogger() {
  var logger = {}
    , levels = ['trace', 'debug', 'info', 'warn', 'error']
    , level, i

  for(i = 0; i < levels.length; i++) {
    level = levels[i]

    logger[level] = noop
    if(typeof console !== 'undefined' && console && console[level])
      logger[level] = formatted(console, level)
  }

  return logger
}

function formatted(obj, method) {
  return formatted_logger

  function formatted_logger(str, context) {
    if(typeof context === 'object')
      str += ' ' + JSON.stringify(context)

    return obj[method].call(obj, str)
  }
}

// Return whether a URL is a cross-domain request.
function is_crossDomain(url) {
  var rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/

  // jQuery #8138, IE may throw an exception when accessing
  // a field from window.location if document.domain has been set
  var ajaxLocation
  try { ajaxLocation = location.href }
  catch (e) {
    // Use the href attribute of an A element since IE will modify it given document.location
    ajaxLocation = document.createElement( "a" );
    ajaxLocation.href = "";
    ajaxLocation = ajaxLocation.href;
  }

  var ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []
    , parts = rurl.exec(url.toLowerCase() )

  var result = !!(
    parts &&
    (  parts[1] != ajaxLocParts[1]
    || parts[2] != ajaxLocParts[2]
    || (parts[3] || (parts[1] === "http:" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443))
    )
  )

  //console.debug('is_crossDomain('+url+') -> ' + result)
  return result
}

// MIT License from http://phpjs.org/functions/base64_encode:358
function b64_enc (data) {
    // Encodes string using MIME base64 algorithm
    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc="", tmp_arr = [];

    if (!data) {
        return data;
    }

    // assume utf8 data
    // data = this.utf8_encode(data+'');

    do { // pack three octets into four hexets
        o1 = data.charCodeAt(i++);
        o2 = data.charCodeAt(i++);
        o3 = data.charCodeAt(i++);

        bits = o1<<16 | o2<<8 | o3;

        h1 = bits>>18 & 0x3f;
        h2 = bits>>12 & 0x3f;
        h3 = bits>>6 & 0x3f;
        h4 = bits & 0x3f;

        // use hexets to index into b64, and append result to encoded string
        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
    } while (i < data.length);

    enc = tmp_arr.join('');

    switch (data.length % 3) {
        case 1:
            enc = enc.slice(0, -2) + '==';
        break;
        case 2:
            enc = enc.slice(0, -1) + '=';
        break;
    }

    return enc;
}
    return request;
//UMD FOOTER START
}));
//UMD FOOTER END

},{}],14:[function(require,module,exports){
(function (Buffer){
var clone = (function() {
'use strict';

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
*/
function clone(parent, circular, depth, prototype) {
  var filter;
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    filter = circular.filter;
    circular = circular.circular
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth == 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      child = new Buffer(parent.length);
      parent.copy(child);
      return child;
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
};
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
};
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
};
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
};
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
};
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],15:[function(require,module,exports){
/**
 * Basic Ethereum connection tasks.
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var async = require("async");
var rpc = require("ethrpc");
var contracts = require("augur-contracts");
var network_id = "2";

function noop() {}

function is_function(f) {
    return Object.prototype.toString.call(f) === "[object Function]";
}

function clone(obj) {
    if (null === obj || "object" !== typeof obj) return obj;
    var copy = obj.constructor();
    for (var attr in obj) {
        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];
    }
    return copy;
}

module.exports = {

    debug: false,

    from: null,

    coinbase: null,

    connection: null,

    rpc: rpc,

    network_id: network_id,

    contracts: contracts[network_id],

    init_contracts: contracts[network_id],

    custom_contracts: null,

    tx: new contracts.Tx(network_id),

    has_value: function (o, v) {
        for (var p in o) {
            if (o.hasOwnProperty(p)) {
                if (o[p] === v) return p;
            }
        }
    },

    detect_network: function (callback) {
        var self = this;
        if (this.connection === null &&
            JSON.stringify(this.init_contracts) === JSON.stringify(this.contracts))
        {
            if (is_function(callback)) {
                this.rpc.version(function (version) {
                    var key;
                    if (version !== null && version !== undefined && !version.error) {
                        self.network_id = version;
                        self.tx = new contracts.Tx(version, self.custom_contracts);
                        self.contracts = clone(self.custom_contracts || contracts[self.network_id]);
                        for (var method in self.tx) {
                            if (!self.tx.hasOwnProperty(method)) continue;
                            key = self.has_value(self.init_contracts, self.tx[method].to);
                            if (key) self.tx[method].to = self.contracts[key];
                        }
                    } else {
                        return callback(version);
                    }
                    if (is_function(callback)) callback(null, version);
                });
            } else {
                var key, method;
                this.network_id = this.rpc.version() || "2";
                this.tx = new contracts.Tx(this.network_id, this.custom_contracts);
                this.contracts = clone(this.custom_contracts || contracts[this.network_id]);
                for (method in this.tx) {
                    if (!this.tx.hasOwnProperty(method)) continue;
                    key = this.has_value(this.init_contracts, this.tx[method].to);
                    if (key) this.tx[method].to = this.contracts[key];
                }
                return this.network_id;
            }
        } else {
            if (is_function(callback)) callback();
        }
    },

    from_field_tx: function (account) {
        if (account && account !== "0x") {
            for (var contract in this.tx) {
                if (!this.tx.hasOwnProperty(contract)) continue;
                for (var method in this.tx[contract]) {
                    if (!this.tx[contract].hasOwnProperty(method)) continue;
                    this.tx[contract][method].from = account;
                }
            }
        }
    },

    get_coinbase: function (callback) {
        var self = this;
        if (is_function(callback)) {
            this.rpc.coinbase(function (coinbase) {
                if (coinbase && !coinbase.error && coinbase !== "0x") {
                    self.coinbase = coinbase;
                    self.from = self.from || coinbase;
                    self.from_field_tx(self.from);
                    if (callback) return callback(null, coinbase);
                }
                if (!self.coinbase && (self.rpc.nodes.local || self.rpc.ipcpath)) {
                    self.rpc.accounts(function (accounts) {
                        if (accounts && accounts.constructor === Array && accounts.length) {
                            async.eachSeries(accounts, function (account, nextAccount) {
                                if (self.unlocked(account)) return nextAccount(account);
                                nextAccount();
                            }, function (account) {
                                if (!account) return callback("get_coinbase: coinbase not found");
                                self.coinbase = account;
                                self.from = self.from || account;
                                self.from_field_tx(self.from);
                                callback(null, account);
                            });
                        }
                    });
                }
            });
        } else {
            var accounts, num_accounts, i, method, m;
            this.coinbase = this.rpc.coinbase();
            if (!this.coinbase && this.rpc.nodes.local) {
                accounts = this.rpc.accounts();
                if (accounts && accounts.constructor === Array) {
                    num_accounts = accounts.length;
                    if (num_accounts === 1) {
                        if (this.unlocked(accounts[0])) {
                            this.coinbase = accounts[0];
                        }
                    } else {
                        for (i = 0; i < num_accounts; ++i) {
                            if (this.unlocked(accounts[i])) {
                                this.coinbase = accounts[i];
                                break;
                            }
                        }
                    }
                }
            }
            if (this.coinbase && !this.coinbase.error && this.coinbase !== "0x") {
                this.from = this.from || this.coinbase;
                for (method in this.tx) {
                    if (!this.tx.hasOwnProperty(method)) continue;
                    if (!this.tx[method].method) {
                        for (m in this.tx[method]) {
                            if (!this.tx[method].hasOwnProperty(m)) continue;
                            this.tx[method][m].from = this.from;
                        }
                    } else {
                        this.tx[method].from = this.from;
                    }
                }
            } else {
                throw new Error("get_coinbase: coinbase not found");
            }
        }
    },

    update_contracts: function () {
        var key;
        if (JSON.stringify(this.init_contracts) !== JSON.stringify(this.contracts)) {
            for (var method in this.tx) {
                if (!this.tx.hasOwnProperty(method)) continue;
                if (!this.tx[method].method) {
                    for (var m in this.tx[method]) {
                        if (!this.tx[method].hasOwnProperty(m)) continue;
                        key = this.has_value(this.init_contracts, this.tx[method][m].to);
                        if (key) {
                            this.tx[method][m].to = this.contracts[key];
                        }
                    }
                } else {
                    key = this.has_value(this.init_contracts, this.tx[method].to);
                    if (key) {
                        this.tx[method].to = this.contracts[key];
                    }
                }
            }
        }
        this.init_contracts = clone(this.contracts);
    },

    connect: function (options, callback) {
        var self = this;
        if (!callback && is_function(options)) {
            callback = options;
            options = null;
        }
        options = options || {};
        if (options.contracts) {
            this.contracts = clone(options.contracts);
            this.init_contracts = clone(options.contracts);
            this.custom_contracts = clone(options.contracts);
        }

        // if this is the first attempt to connect, connect using the
        // parameters provided by the user exactly
        if ((options.http || options.ipc || options.ws) && !options.attempts) {
            this.rpc.ipcpath = options.ipc || null;
            this.rpc.nodes.local = options.http;
            this.rpc.nodes.hosted = [];
            this.rpc.wsUrl = options.ws;
            this.rpc.wsStatus = 0;

        // if this is the second attempt to connect, fall back to the
        // default hosted nodes
        } else {
            if (this.debug) {
                console.debug("Connecting to hosted Ethereum node...");
            }
            this.rpc.ipcpath = null;
            this.rpc.reset();
            this.rpc.useHostedNode();
            this.rpc.wsStatus = 0;
            if (this.debug) {
                console.debug("HTTP RPC:", JSON.stringify(this.rpc.nodes.hosted, null, 2));
                console.debug("WebSocket:", this.rpc.wsUrl);
            }
        }

        // synchronous connect sequence
        if (!is_function(callback)) {
            try {
                this.detect_network();
                this.get_coinbase();
                this.update_contracts();
                this.connection = true;
                return {
                    http: this.rpc.nodes.local || this.rpc.nodes.hosted,
                    ws: this.rpc.wsUrl,
                    ipc: this.rpc.ipcpath
                };
            } catch (exc) {
                if (this.debug) {
                    console.warn("[sync] Couldn't connect to Ethereum", exc, JSON.stringify(options, null, 2));
                }
                this.connection = false;
                if (!options.attempts) {
                    options.attempts = 1;
                    return this.connect(options);
                }
                return false;
            }
        }

        // asynchronous connect sequence
        callback = callback || noop;
        async.series([
            function (next) {
                if (!options.http || !options.ws) return next();
                var wsUrl = self.rpc.wsUrl;
                var wsStatus = self.rpc.wsStatus;
                self.rpc.wsUrl = null;
                self.rpc.wsStatus = 0;
                self.detect_network(function (err) {
                    self.rpc.wsUrl = wsUrl;
                    self.rpc.wsStatus = wsStatus;
                    next(err);
                });
            },
            this.detect_network.bind(this),
            this.get_coinbase.bind(this)
        ], function (err) {
            if (err) {
                if (self.debug) {
                    console.warn("[async] Couldn't connect to Ethereum", err, JSON.stringify(options, null, 2));
                }
                self.connection = false;
                if (!options.attempts) {
                    options.attempts = 1;
                    return self.connect(options, callback);
                }
                return callback(false);
            }
            if (options.contracts) {

            } else {
                self.update_contracts();
            }
            self.connection = true;
            callback({
                http: self.rpc.nodes.local || self.rpc.nodes.hosted,
                ws: self.rpc.wsUrl,
                ipc: self.rpc.ipcpath
            });
        });
    },

    connected: function (f) {
        if (is_function(f)) {
            return this.rpc.coinbase(function (coinbase) {
                f(coinbase && !coinbase.error);
            });
        }
        try {
            this.rpc.coinbase();
            return true;
        } catch (e) {
            return false;
        }
    }

};

},{"async":2,"augur-contracts":11,"ethrpc":70}],16:[function(require,module,exports){
(function (global,Buffer){
const ethUtil = require('ethereumjs-util')
const fees = require('ethereum-common/params')
const BN = ethUtil.BN

// secp256k1n/2
const N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16)

// give browser access to Buffers
global.Buffer = Buffer
global.ethUtil = ethUtil

/**
 * Creates a new transaction object
 * @constructor
 * @class {Buffer|Array} data a transaction can be initiailized with either a buffer containing the RLP serialized transaction or an array of buffers relating to each of the tx Properties, listed in order below in the exmple. Or lastly an Object containing the Properties of the transaction like in the Usage example
 *
 * For Object and Arrays each of the elements can either be a Buffer, a hex-prefixed (0x) String , Number, or an object with a toBuffer method such as Bignum
 * @example
 * var rawTx = {
 *   nonce: '00',
 *   gasPrice: '09184e72a000',
 *   gasLimit: '2710',
 *   to: '0000000000000000000000000000000000000000',
 *   value: '00',
 *   data: '7f7465737432000000000000000000000000000000000000000000000000000000600057',
 *   v: '1c',
 *   r: '5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',
 *   s '5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'
 * };
 * var tx = new Transaction(rawTx);
 * @prop {Buffer} raw The raw rlp decoded transaction
 * @prop {Buffer} nonce
 * @prop {Buffer} to the to address
 * @prop {Buffer} value the amount of ether sent
 * @prop {Buffer} data this will contain the data of the message or the init of a contract
 * @prop {Buffer} v EC signature parameter
 * @prop {Buffer} r EC signature parameter
 * @prop {Buffer} s EC recovery ID
 */
var Transaction = module.exports = function (data) {
  // Define Properties
  const fields = [{
    name: 'nonce',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }, {
    name: 'gasPrice',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }, {
    name: 'gasLimit',
    alias: 'gas',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }, {
    name: 'to',
    allowZero: true,
    length: 20,
    default: new Buffer([])
  }, {
    name: 'value',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }, {
    name: 'data',
    alias: 'input',
    allowZero: true,
    default: new Buffer([])
  }, {
    name: 'v',
    length: 1,
    default: new Buffer([0x1c])
  }, {
    name: 'r',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }, {
    name: 's',
    length: 32,
    allowLess: true,
    default: new Buffer([])
  }]

  /**
   * Returns the rlp encoding of the transaction
   * @method serialize
   * @return {Buffer}
   */
  // attached serialize
  ethUtil.defineProperties(this, fields, data)

  /**
   * @prop {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.
   */
  Object.defineProperty(this, 'from', {
    enumerable: true,
    configurable: true,
    get: this.getSenderAddress.bind(this)
  })

  this._homestead = true
}

/**
 * If the tx's `to` is to the creation address
 * @method toCreationAddress
 * @return {Boolean}
 */
Transaction.prototype.toCreationAddress = function () {
  return this.to.toString('hex') === ''
}

/**
 * Computes a sha3-256 hash of the serialized tx
 * @method hash
 * @param {Boolean} [signature=true] whether or not to inculde the signature
 * @return {Buffer}
 */
Transaction.prototype.hash = function (signature) {
  var toHash

  if (typeof signature === 'undefined') {
    signature = true
  }

  toHash = signature ? this.raw : this.raw.slice(0, 6)

  // create hash
  return ethUtil.rlphash(toHash)
}

/**
 * returns the sender's address
 * @method getSenderAddress
 * @return {Buffer}
 */
Transaction.prototype.getSenderAddress = function () {
  if (this._from) {
    return this._from
  }
  var pubkey = this.getSenderPublicKey()
  this._from = ethUtil.publicToAddress(pubkey)
  return this._from
}

/**
 * returns the public key of the sender
 * @method getSenderPublicKey
 * @return {Buffer}
 */
Transaction.prototype.getSenderPublicKey = function () {
  if (!this._senderPubKey || !this._senderPubKey.length) {
    this.verifySignature()
  }

  return this._senderPubKey
}

/**
 * Determines if the signature is valid
 * @method verifySignature
 * @return {Boolean}
 */
Transaction.prototype.verifySignature = function () {
  var msgHash = this.hash(false)

  // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.
  if (this._homestead && new BN(this.s).cmp(N_DIV_2) === 1) {
    return false
  }

  try {
    this._senderPubKey = ethUtil.ecrecover(msgHash, this.v, this.r, this.s)
  } catch (e) {
    return false
  }

  return !!this._senderPubKey
}

/**
 * sign a transaction with a given a private key
 * @method sign
 * @param {Buffer} privateKey
 */
Transaction.prototype.sign = function (privateKey) {
  var msgHash = this.hash(false)
  var sig = ethUtil.ecsign(msgHash, privateKey)
  Object.assign(this, sig)
}

/**
 * The amount of gas paid for the data in this tx
 * @method getDataFee
 * @return {BN}
 */
Transaction.prototype.getDataFee = function () {
  const data = this.raw[5]
  var cost = new BN(0)
  for (var i = 0; i < data.length; i++) {
    data[i] === 0 ? cost.iaddn(fees.txDataZeroGas.v) : cost.iaddn(fees.txDataNonZeroGas.v)
  }
  return cost
}

/**
 * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)
 * @method getBaseFee
 * @return {BN}
 */
Transaction.prototype.getBaseFee = function () {
  var fee = this.getDataFee().iaddn(fees.txGas.v)
  if (this._homestead && this.toCreationAddress()) {
    fee.iaddn(fees.txCreation.v)
  }
  return fee
}

/**
 * the up front amount that an account must have for this transaction to be valid
 * @method getUpfrontCost
 * @return {BN}
 */
Transaction.prototype.getUpfrontCost = function () {
  return new BN(this.gasLimit)
    .imul(new BN(this.gasPrice))
    .iadd(new BN(this.value))
}

/**
 * validates the signature and checks to see if it has enough gas
 * @method validate
 * @param {Boolean} [stringError=false] whether to return a string with a dscription of why the validation failed or return a Bloolean
 * @return {Boolean|String}
 */
Transaction.prototype.validate = function (stringError) {
  var errors = []
  if (!this.verifySignature()) {
    errors.push('Invalid Signature')
  }

  if (this.getBaseFee().cmp(new BN(this.gasLimit)) > 0) {
    errors.push(['gas limit is to low. Need at least ' + this.getBaseFee()])
  }

  if (stringError === undefined || stringError === false) {
    return errors.length === 0
  } else {
    return errors.join(' ')
  }
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)

},{"buffer":151,"ethereum-common/params":18,"ethereumjs-util":19}],17:[function(require,module,exports){
module.exports={
  "genesisGasLimit": {
    "v": 5000,
    "d": "Gas limit of the Genesis block."
  },
  "genesisDifficulty": {
    "v": 17179869184,
    "d": "Difficulty of the Genesis block."
  },
  "genesisNonce": {
    "v": "0x0000000000000042",
    "d": "the geneis nonce"
  },
  "genesisExtraData": {
    "v": "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",
    "d": "extra data "
  },
  "genesisHash": {
    "v": "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
    "d": "genesis hash"
  },
  "genesisStateRoot": {
    "v": "0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544",
    "d": "the genesis state root"
  },
  "minGasLimit": {
    "v": 5000,
    "d": "Minimum the gas limit may ever be."
  },
  "gasLimitBoundDivisor": {
    "v": 1024,
    "d": "The bound divisor of the gas limit, used in update calculations."
  },
  "minimumDifficulty": {
    "v": 131072,
    "d": "The minimum that the difficulty may ever be."
  },
  "difficultyBoundDivisor": {
    "v": 2048,
    "d": "The bound divisor of the difficulty, used in the update calculations."
  },
  "durationLimit": {
    "v": 13,
    "d": "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."
  },
  "maximumExtraDataSize": {
    "v": 32,
    "d": "Maximum size extra data may be after Genesis."
  },
  "epochDuration": {
    "v": 30000,
    "d": "Duration between proof-of-work epochs."
  },
  "stackLimit": {
    "v": 1024,
    "d": "Maximum size of VM stack allowed."
  },
  "callCreateDepth": {
    "v": 1024,
    "d": "Maximum depth of call/create stack."
  },

  "tierStepGas": {
    "v": [0, 2, 3, 5, 8, 10, 20],
    "d": "Once per operation, for a selection of them."
  },
  "expGas": {
    "v": 10,
    "d": "Once per EXP instuction."
  },
  "expByteGas": {
    "v": 10,
    "d": "Times ceil(log256(exponent)) for the EXP instruction."
  },

  "sha3Gas": {
    "v": 30,
    "d": "Once per SHA3 operation."
  },
  "sha3WordGas": {
    "v": 6,
    "d": "Once per word of the SHA3 operation's data."
  },
  "sloadGas": {
    "v": 50,
    "d": "Once per SLOAD operation."
  },
  "sstoreSetGas": {
    "v": 20000,
    "d": "Once per SSTORE operation if the zeroness changes from zero."
  },
  "sstoreResetGas": {
    "v": 5000,
    "d": "Once per SSTORE operation if the zeroness does not change from zero."
  },
  "sstoreRefundGas": {
    "v": 15000,
    "d": "Once per SSTORE operation if the zeroness changes to zero."
  },
  "jumpdestGas": {
    "v": 1,
    "d": "Refunded gas, once per SSTORE operation if the zeroness changes to zero."
  },

  "logGas": {
    "v": 375,
    "d": "Per LOG* operation."
  },
  "logDataGas": {
    "v": 8,
    "d": "Per byte in a LOG* operation's data."
  },
  "logTopicGas": {
    "v": 375,
    "d": "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."
  },

  "createGas": {
    "v": 32000,
    "d": "Once per CREATE operation & contract-creation transaction."
  },

  "callGas": {
    "v": 40,
    "d": "Once per CALL operation & message call transaction."
  },
  "callStipend": {
    "v": 2300,
    "d": "Free gas given at beginning of call."
  },
  "callValueTransferGas": {
    "v": 9000,
    "d": "Paid for CALL when the value transfor is non-zero."
  },
  "callNewAccountGas": {
    "v": 25000,
    "d": "Paid for CALL when the destination address didn't exist prior."
  },

  "suicideRefundGas": {
    "v": 24000,
    "d": "Refunded following a suicide operation."
  },

  "memoryGas": {
    "v": 3,
    "d": "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."
  },
  "quadCoeffDiv": {
    "v": 512,
    "d": "Divisor for the quadratic particle of the memory cost equation."
  },

  "createDataGas": {
    "v": 200,
    "d": ""
  },
  "txGas": {
    "v": 21000,
    "d": "Per transaction. NOTE: Not payable on data of calls between transactions."
  },
  "txCreation": {
    "v": 32000,
    "d": "the cost of creating a contract via tx"
  },
  "txDataZeroGas": {
    "v": 4,
    "d": "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."
  },
  "txDataNonZeroGas": {
    "v": 68,
    "d": "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."
  },

  "copyGas": {
    "v": 3,
    "d": "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."
  },

  "ecrecoverGas": {
    "v": 3000,
    "d": ""
  },
  "sha256Gas": {
    "v": 60,
    "d": ""
  },
  "sha256WordGas": {
    "v": 12,
    "d": ""
  },
  "ripemd160Gas": {
    "v": 600,
    "d": ""
  },
  "ripemd160WordGas": {
    "v": 120,
    "d": ""
  },
  "identityGas": {
    "v": 15,
    "d": ""
  },
  "identityWordGas": {
    "v": 3,
    "d": ""
  },
  "minerReward": {
    "v": "5000000000000000000",
    "d": "the amount a miner get rewarded for mining a block"
  },
  "ommerReward": {
    "v": "625000000000000000",
    "d": "The amount of wei a miner of an uncle block gets for being inculded in the blockchain"
  },
  "niblingReward": {
    "v": "156250000000000000",
    "d": "the amount a miner gets for inculding a uncle"
  },
  "homeSteadForkNumber": {
    "v": 1000000,
    "d": "the block that the homestead fork started at"
  },
  "timebombPeriod": {
    "v": 100000,
    "d": "Exponential difficulty timebomb period"
  },
  "freeBlockPeriod": {
    "v": 2
  }
}

},{}],18:[function(require,module,exports){
module.exports = require('./params.json')

},{"./params.json":17}],19:[function(require,module,exports){
(function (Buffer){
const SHA3 = require('keccakjs')
const secp256k1 = require('secp256k1')
const assert = require('assert')
const rlp = require('rlp')
const BN = require('bn.js')
const crypto = require('crypto')

/**
 * the max integer that this VM can handle (a ```BN```)
 * @var {BN} MAX_INTEGER
 */
exports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16)

/**
 * 2^256 (a ```BN```)
 * @var {BN} TWO_POW256
 */
exports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16)

/**
 * SHA3-256 hash of null (a ```String```)
 * @var {String} SHA3_NULL_S
 */
exports.SHA3_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'

/**
 * SHA3-256 hash of null (a ```Buffer```)
 * @var {Buffer} SHA3_NULL
 */
exports.SHA3_NULL = new Buffer(exports.SHA3_NULL_S, 'hex')

/**
 * SHA3-256 of an RLP of an empty array (a ```String```)
 * @var {String} SHA3_RLP_ARRAY_S
 */
exports.SHA3_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'

/**
 * SHA3-256 of an RLP of an empty array (a ```Buffer```)
 * @var {Buffer} SHA3_RLP_ARRAY
 */
exports.SHA3_RLP_ARRAY = new Buffer(exports.SHA3_RLP_ARRAY_S, 'hex')

/**
 * SHA3-256 hash of the RLP of null  (a ```String```)
 * @var {String} SHA3_RLP_S
 */
exports.SHA3_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'

/**
 * SHA3-256 hash of the RLP of null (a ```Buffer```)
 * @var {Buffer} SHA3_RLP
 */
exports.SHA3_RLP = new Buffer(exports.SHA3_RLP_S, 'hex')

/**
 * [`BN`](https://github.com/indutny/bn.js)
 * @var {Function}
 */
exports.BN = BN

/**
 * [`rlp`](https://github.com/ethereumjs/rlp)
 * @var {Function}
 */
exports.rlp = rlp

/**
 * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)
 * @var {Object}
 */
exports.secp256k1 = secp256k1

/**
 * Returns a buffer filled with 0s
 * @method zeros
 * @param {Number} bytes  the number of bytes the buffer should be
 * @return {Buffer}
 */
exports.zeros = function (bytes) {
  var buf = new Buffer(bytes)
  buf.fill(0)
  return buf
}

/**
 * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.
 * Or it truncates the beginning if it exceeds.
 * @method lsetLength
 * @param {Buffer|Array} msg the value to pad
 * @param {Number} length the number of bytes the output should be
 * @param {Boolean} [right=false] whether to start padding form the left or right
 * @return {Buffer|Array}
 */
exports.setLengthLeft = exports.setLength = function (msg, length, right) {
  var buf = exports.zeros(length)
  msg = exports.toBuffer(msg)
  if (right) {
    if (msg.length < length) {
      msg.copy(buf)
      return buf
    }
    return msg.slice(0, length)
  } else {
    if (msg.length < length) {
      msg.copy(buf, length - msg.length)
      return buf
    }
    return msg.slice(-length)
  }
}

/**
 * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.
 * Or it truncates the beginning if it exceeds.
 * @method lsetLength
 * @param {Buffer|Array} msg the value to pad
 * @param {Number} length the number of bytes the output should be
 * @return {Buffer|Array}
 */
exports.setLengthRight = function (msg, length) {
  return exports.setLength(msg, length, true)
}

/**
 * Trims leading zeros from a `Buffer` or an `Array`
 * @method unpad
 * @param {Buffer|Array|String} a
 * @return {Buffer|Array|String}
 */
exports.unpad = exports.stripZeros = function (a) {
  a = exports.stripHexPrefix(a)
  var first = a[0]
  while (a.length > 0 && first.toString() === '0') {
    a = a.slice(1)
    first = a[0]
  }
  return a
}
/**
 * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.
 * @method toBuffer
 * @param {*} v the value
 */
exports.toBuffer = function (v) {
  if (!Buffer.isBuffer(v)) {
    if (Array.isArray(v)) {
      v = new Buffer(v)
    } else if (typeof v === 'string') {
      if (exports.isHexPrefixed(v)) {
        v = new Buffer(exports.padToEven(exports.stripHexPrefix(v)), 'hex')
      } else {
        v = new Buffer(v)
      }
    } else if (typeof v === 'number') {
      v = exports.intToBuffer(v)
    } else if (v === null || v === undefined) {
      v = new Buffer([])
    } else if (v.toArray) {
      // converts a BN to a Buffer
      v = new Buffer(v.toArray())
    } else {
      throw new Error('invalid type')
    }
  }
  return v
}

/**
 * Converts a `Number` into a hex `String`
 * @method intToHex
 * @param {Number} i
 * @return {String}
 */
exports.intToHex = function (i) {
  assert(i % 1 === 0, 'number is not a integer')
  assert(i >= 0, 'number must be positive')
  var hex = i.toString(16)
  if (hex.length % 2) {
    hex = '0' + hex
  }

  return '0x' + hex
}

/**
 * Converts an `Number` to a `Buffer`
 * @method intToBuffer
 * @param {Number} i
 * @return {Buffer}
 */
exports.intToBuffer = function (i) {
  var hex = exports.intToHex(i)
  return new Buffer(hex.slice(2), 'hex')
}

/**
 * Converts a `Buffer` to a `Number`
 * @method bufferToInt
 * @param {Buffer} buf
 * @return {Number}
 */
exports.bufferToInt = function (buf) {
  return parseInt(exports.bufferToHex(buf), 16)
}

/**
 * Converts a `Buffer` into a hex `String`
 * @method bufferToHex
 * @param {Buffer} buf
 * @return {String}
 */
exports.bufferToHex = function (buf) {
  buf = exports.toBuffer(buf)
  if (buf.length === 0) {
    return 0
  }

  return '0x' + buf.toString('hex')
}

/**
 * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.
 * @method fromSigned
 * @param {Buffer} num
 * @return {BN}
 */
exports.fromSigned = function (num) {
  return new BN(num).fromTwos(256)
}

/**
 * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.
 * @method toUnsigned
 * @param {BN} num
 * @return {Buffer}
 */
exports.toUnsigned = function (num) {
  return new Buffer(num.toTwos(256).toArray())
}

/**
 * Creates SHA-3 hash of the input
 * @method sha3
 * @param {Buffer|Array|String|Number} a the input data
 * @param {Number} [bytes=256] the SHA width
 * @return {Buffer}
 */
exports.sha3 = function (a, bytes) {
  a = exports.toBuffer(a)
  if (!bytes) bytes = 256

  var h = new SHA3(bytes)
  if (a) {
    h.update(a)
  }
  return new Buffer(h.digest('hex'), 'hex')
}

/**
 * Creates SHA256 hash of the input
 * @method sha256
 * @param {Buffer|Array|String|Number} a the input data
 * @return {Buffer}
 */
exports.sha256 = function (a) {
  a = exports.toBuffer(a)
  return crypto.createHash('SHA256').update(a).digest()
}

/**
 * Creates RIPEMD160 hash of the input
 * @method ripemd160
 * @param {Buffer|Array|String|Number} a the input data
 * @param {Boolean} padded whether it should be padded to 256 bits or not
 * @return {Buffer}
 */
exports.ripemd160 = function (a, padded) {
  a = exports.toBuffer(a)
  var hash = crypto.createHash('rmd160').update(a).digest()
  if (padded === true) {
    return exports.setLength(hash, 32)
  } else {
    return hash
  }
}

/**
 * Creates SHA-3 hash of the RLP encoded version of the input
 * @method rlphash
 * @param {Buffer|Array|String|Number} a the input data
 * @return {Buffer}
 */
exports.rlphash = function (a) {
  return exports.sha3(rlp.encode(a))
}

/**
 * Checks if the private key satisfies the rules of the curve secp256k1.
 * @method isValidPrivate
 * @param {Buffer} privateKey
 * @return {Boolean}
 */
exports.isValidPrivate = function (privateKey) {
  return secp256k1.privateKeyVerify(privateKey)
}

/**
 * Returns the ethereum address of a given public key.
 * Accepts "Ethereum public keys" and SEC1 encoded keys.
 * @method publicToAddress
 * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled
 * @param {Boolean} sanitize Accept public keys in other formats
 * @return {Buffer}
 */
exports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {
  pubKey = exports.toBuffer(pubKey)
  if (sanitize && (pubKey.length !== 64)) {
    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1)
  }
  assert(pubKey.length === 64)
  // Only take the lower 160bits of the hash
  return exports.sha3(pubKey).slice(-20)
}

/**
 * Returns the ethereum public key of a given private key
 * @method privateToPublic
 * @param {Buffer} privateKey A private key must be 256 bits wide
 * @return {Buffer}
 */
var privateToPublic = exports.privateToPublic = function (privateKey) {
  privateKey = exports.toBuffer(privateKey)
  // skip the type flag and use the X, Y points
  return secp256k1.publicKeyConvert(secp256k1.publicKeyCreate(privateKey), false).slice(1)
}

/**
 * Returns the ethereum address of a given private key
 * @method privateToAddress
 * @param {Buffer} privateKey A private key must be 256 bits wide
 * @return {Buffer}
 */
exports.privateToAddress = function (privateKey) {
  return exports.publicToAddress(privateToPublic(privateKey))
}

/**
 * Checks if the address is a valid. Accepts checksummed addresses too
 * @method isValidAddress
 * @param {String} address
 * @return {Boolean}
 */
exports.isValidAddress = function (address) {
  return /^0x[0-9a-fA-F]{40}$/i.test(address)
}

/**
 * Returns a checksummed address
 * @method toChecksumAddress
 * @param {String} address
 * @return {String}
 */
exports.toChecksumAddress = function (address) {
  address = exports.stripHexPrefix(address).toLowerCase()
  var hash = exports.sha3(address).toString('hex')
  var ret = '0x'

  for (var i = 0; i < address.length; i++) {
    if (parseInt(hash[i], 16) >= 8) {
      ret += address[i].toUpperCase()
    } else {
      ret += address[i]
    }
  }

  return ret
}

/**
 * Checks if the address is a valid checksummed address
 * @method isValidChecksumAddress
 * @param {Buffer} address
 * @return {Boolean}
 */
exports.isValidChecksumAddress = function (address) {
  return exports.isValidAddress(address) && (exports.toChecksumAddress(address) === address)
}

/**
 * Generates an address of a newly created contract
 * @method generateAddress
 * @param {Buffer} from the address which is creating this new address
 * @param {Buffer} nonce the nonce of the from account
 * @return {Buffer}
 */
exports.generateAddress = function (from, nonce) {
  from = exports.toBuffer(from)
  nonce = new BN(nonce)

  if (nonce.isZero()) {
    // in RLP we want to encode null in the case of zero nonce
    // read the RLP documentation for an answer if you dare
    nonce = null
  } else {
    nonce = new Buffer(nonce.toArray())
  }

  // Only take the lower 160bits of the hash
  return exports.rlphash([from, nonce]).slice(-20)
}

/**
 * Returns true if the supplied address belongs to a precompiled account
 * @method isPrecompiled
 * @param {Buffer|String} address
 * @return {Boolean}
 */
exports.isPrecompiled = function (address) {
  var a = exports.unpad(address)
  return a.length === 1 && a[0] > 0 && a[0] < 5
}

/**
 * Returns a `Boolean` on whether or not the a `String` starts with "0x"
 * @method isHexPrefixed
 * @param {String} str
 * @return {Boolean}
 */
exports.isHexPrefixed = function (str) {
  return str.slice(0, 2) === '0x'
}

/**
 * Removes "0x" from a given `String`
 * @method stripHexPrefix
 * @param {String} str
 * @return {String}
 */
exports.stripHexPrefix = function (str) {
  if (typeof str !== 'string') {
    return str
  }
  return exports.isHexPrefixed(str) ? str.slice(2) : str
}

/**
 * Adds "0x" to a given `String` if it does not already start with "0x"
 * @method addHexPrefix
 * @param {String} str
 * @return {String}
 */
exports.addHexPrefix = function (str) {
  if (typeof str !== 'string') {
    return str
  }

  return exports.isHexPrefixed(str) ? str : '0x' + str
}

/**
 * Pads a `String` to have an even length
 * @method padToEven
 * @param {String} a
 * @return {String}
 */
exports.padToEven = function (a) {
  if (a.length % 2) a = '0' + a
  return a
}

/**
 * ECDSA sign
 * @method ecsign
 * @param {Buffer} msgHash
 * @param {Buffer} privateKey
 * @return {Object}
 */
exports.ecsign = function (msgHash, privateKey) {
  var sig = secp256k1.sign(msgHash, privateKey)

  var ret = {}
  ret.r = sig.signature.slice(0, 32)
  ret.s = sig.signature.slice(32, 64)
  ret.v = sig.recovery + 27
  return ret
}

/**
 * ECDSA public key recovery from signature
 * @method ecrecover
 * @param {Buffer} msgHash
 * @param {Buffer} v
 * @param {Buffer} r
 * @param {Buffer} s
 * @return {Buffer} publicKey
 */
exports.ecrecover = function (msgHash, v, r, s) {
  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64)
  var recovery = exports.bufferToInt(v) - 27
  if (recovery !== 0 && recovery !== 1) {
    throw new Error('Invalid signature v value')
  }
  var senderPubKey = secp256k1.recover(msgHash, signature, recovery)
  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1)
}

/**
 * Converts a `Buffer` or `Array` to JSON
 * @method BAToJSON
 * @param {Buffer|Array} ba
 * @return {Array|String|null}
 */
exports.baToJSON = function (ba) {
  if (Buffer.isBuffer(ba)) {
    return '0x' + ba.toString('hex')
  } else if (ba instanceof Array) {
    var array = []
    for (var i = 0; i < ba.length; i++) {
      array.push(exports.baToJSON(ba[i]))
    }
    return array
  }
}

/**
 * Defines properties on a `Object`. It make the assumption that underlying data is binary.
 * @method defineProperties
 * @param {Object} self the `Object` to define properties on
 * @param {Array} fields an array fields to define. Fields can contain:
 * * `name` - the name of the properties
 * * `length` - the number of bytes the field can have
 * * `allowLess` - if the field can be less than the length
 * * `allowEmpty`
 * @param {*} data data to be validated against the definitions
 */
exports.defineProperties = function (self, fields, data) {
  self.raw = []
  self._fields = []

  // attach the `toJSON`
  self.toJSON = function (label) {
    if (label) {
      var obj = {}
      self._fields.forEach(function (field) {
        obj[field] = '0x' + self[field].toString('hex')
      })
      return obj
    }
    return exports.baToJSON(this.raw)
  }

  self.serialize = function serialize () {
    return rlp.encode(self.raw)
  }

  fields.forEach(function (field, i) {
    self._fields.push(field.name)
    function getter () {
      return self.raw[i]
    }
    function setter (v) {
      v = exports.toBuffer(v)

      if (v.toString('hex') === '00' && !field.allowZero) {
        v = new Buffer([])
      }

      if (field.allowLess && field.length) {
        v = exports.stripZeros(v)
        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes')
      } else if (!(field.allowZero && v.length === 0) && field.length) {
        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length)
      }

      self.raw[i] = v
    }

    Object.defineProperty(self, field.name, {
      enumerable: true,
      configurable: true,
      get: getter,
      set: setter
    })

    if (field.default) {
      self[field.name] = field.default
    }

    // attach alias
    if (field.alias) {
      Object.defineProperty(self, field.alias, {
        enumerable: false,
        configurable: true,
        set: setter,
        get: getter
      })
    }
  })

  // if the constuctor is passed data
  if (data) {
    if (typeof data === 'string') {
      data = new Buffer(exports.stripHexPrefix(data), 'hex')
    }

    if (Buffer.isBuffer(data)) {
      data = rlp.decode(data)
    }

    if (Array.isArray(data)) {
      if (data.length > self._fields.length) {
        throw (new Error('wrong number of fields in data'))
      }

      // make sure all the items are buffers
      data.forEach(function (d, i) {
        self[self._fields[i]] = exports.toBuffer(d)
      })
    } else if (typeof data === 'object') {
      for (var prop in data) {
        if (self._fields.indexOf(prop) !== -1) {
          self[prop] = data[prop]
        }
      }
    } else {
      throw new Error('invalid data')
    }
  }
}

}).call(this,require("buffer").Buffer)

},{"assert":149,"bn.js":20,"buffer":151,"crypto":155,"keccakjs":21,"rlp":24,"secp256k1":25}],20:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],21:[function(require,module,exports){
module.exports = require('sha3').SHA3Hash

},{"sha3":22}],22:[function(require,module,exports){
(function (Buffer){
const Sha3 = require('js-sha3')

const hashLengths = [ 224, 256, 384, 512 ]

var hash = function (bitcount) {
  if (bitcount !== undefined && hashLengths.indexOf(bitcount) == -1)
    throw new Error('Unsupported hash length')
  this.content = []
  this.bitcount = bitcount ? 'keccak_' + bitcount : 'keccak_512'
}

hash.prototype.update = function (i) {
  if (Buffer.isBuffer(i))
    this.content.push(i)
  else if (typeof i === 'string')
    this.content.push(new Buffer(i))
  else
    throw new Error('Unsupported argument to update')
  return this
}

hash.prototype.digest = function (encoding) {
  var result = Sha3[this.bitcount](Buffer.concat(this.content))
  if (encoding === 'hex')
    return result
  else if (encoding === 'binary' || encoding === undefined)
    return new Buffer(result, 'hex').toString('binary')
  else
    throw new Error('Unsupported encoding for digest: ' + encoding)
}

module.exports = {
  SHA3Hash: hash
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"js-sha3":23}],23:[function(require,module,exports){
(function (global){
/*
 * js-sha3 v0.3.1
 * https://github.com/emn178/js-sha3
 *
 * Copyright 2015, emn178@gmail.com
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */
;(function(root, undefined) {
  'use strict';

  var NODE_JS = typeof(module) != 'undefined';
  if(NODE_JS) {
    root = global;
    if(root.JS_SHA3_TEST) {
      root.navigator = { userAgent: 'Chrome'};
    }
  }
  var CHROME = (root.JS_SHA3_TEST || !NODE_JS) && navigator.userAgent.indexOf('Chrome') != -1;
  var HEX_CHARS = '0123456789abcdef'.split('');
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 
            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 
            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];

  var blocks = [], s = [];

  var keccak_224 = function(message) {
    return keccak(message, 224, KECCAK_PADDING);
  };

  var keccak_256 = function(message) {
    return keccak(message, 256, KECCAK_PADDING);
  };

  var keccak_384 = function(message) {
    return keccak(message, 384, KECCAK_PADDING);
  };

  var sha3_224 = function(message) {
    return keccak(message, 224, PADDING);
  };

  var sha3_256 = function(message) {
    return keccak(message, 256, PADDING);
  };

  var sha3_384 = function(message) {
    return keccak(message, 384, PADDING);
  };

  var sha3_512 = function(message) {
    return keccak(message, 512, PADDING);
  };

  var keccak = function(message, bits, padding) {
    var notString = typeof(message) != 'string';
    if(notString && message.constructor == root.ArrayBuffer) {
      message = new Uint8Array(message);
    }

    if(bits === undefined) {
      bits = 512;
      padding = KECCAK_PADDING;
    }

    var block, code, end = false, index = 0, start = 0, length = message.length,
        n, i, h, l, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, 
        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, 
        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, 
        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    var blockCount = (1600 - bits * 2) / 32;
    var byteCount = blockCount * 4;

    for(i = 0;i < 50;++i) {
      s[i] = 0;
    }

    block = 0;
    do {
      blocks[0] = block;
      for(i = 1;i < blockCount + 1;++i) {
        blocks[i] = 0;
      }
      if(notString) {
        for (i = start;index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = start;index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      start = i - byteCount;
      if(index == length) {
        blocks[i >> 2] |= padding[i & 3];
        ++index;
      }
      block = blocks[blockCount];
      if(index > length && i < byteCount) {
        blocks[blockCount - 1] |= 0x80000000;
        end = true;
      }

      for(i = 0;i < blockCount;++i) {
        s[i] ^= blocks[i];
      }

      for(n = 0; n < 48; n += 2) {
        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

        h = c8 ^ ((c2 << 1) | (c3 >>> 31));
        l = c9 ^ ((c3 << 1) | (c2 >>> 31));
        s[0] ^= h;
        s[1] ^= l;
        s[10] ^= h;
        s[11] ^= l;
        s[20] ^= h;
        s[21] ^= l;
        s[30] ^= h;
        s[31] ^= l;
        s[40] ^= h;
        s[41] ^= l;
        h = c0 ^ ((c4 << 1) | (c5 >>> 31));
        l = c1 ^ ((c5 << 1) | (c4 >>> 31));
        s[2] ^= h;
        s[3] ^= l;
        s[12] ^= h;
        s[13] ^= l;
        s[22] ^= h;
        s[23] ^= l;
        s[32] ^= h;
        s[33] ^= l;
        s[42] ^= h;
        s[43] ^= l;
        h = c2 ^ ((c6 << 1) | (c7 >>> 31));
        l = c3 ^ ((c7 << 1) | (c6 >>> 31));
        s[4] ^= h;
        s[5] ^= l;
        s[14] ^= h;
        s[15] ^= l;
        s[24] ^= h;
        s[25] ^= l;
        s[34] ^= h;
        s[35] ^= l;
        s[44] ^= h;
        s[45] ^= l;
        h = c4 ^ ((c8 << 1) | (c9 >>> 31));
        l = c5 ^ ((c9 << 1) | (c8 >>> 31));
        s[6] ^= h;
        s[7] ^= l;
        s[16] ^= h;
        s[17] ^= l;
        s[26] ^= h;
        s[27] ^= l;
        s[36] ^= h;
        s[37] ^= l;
        s[46] ^= h;
        s[47] ^= l;
        h = c6 ^ ((c0 << 1) | (c1 >>> 31));
        l = c7 ^ ((c1 << 1) | (c0 >>> 31));
        s[8] ^= h;
        s[9] ^= l;
        s[18] ^= h;
        s[19] ^= l;
        s[28] ^= h;
        s[29] ^= l;
        s[38] ^= h;
        s[39] ^= l;
        s[48] ^= h;
        s[49] ^= l;

        b0 = s[0];
        b1 = s[1];
        b32 = (s[11] << 4) | (s[10] >>> 28);
        b33 = (s[10] << 4) | (s[11] >>> 28);
        b14 = (s[20] << 3) | (s[21] >>> 29);
        b15 = (s[21] << 3) | (s[20] >>> 29);
        b46 = (s[31] << 9) | (s[30] >>> 23);
        b47 = (s[30] << 9) | (s[31] >>> 23);
        b28 = (s[40] << 18) | (s[41] >>> 14);
        b29 = (s[41] << 18) | (s[40] >>> 14);
        b20 = (s[2] << 1) | (s[3] >>> 31);
        b21 = (s[3] << 1) | (s[2] >>> 31);
        b2 = (s[13] << 12) | (s[12] >>> 20);
        b3 = (s[12] << 12) | (s[13] >>> 20);
        b34 = (s[22] << 10) | (s[23] >>> 22);
        b35 = (s[23] << 10) | (s[22] >>> 22);
        b16 = (s[33] << 13) | (s[32] >>> 19);
        b17 = (s[32] << 13) | (s[33] >>> 19);
        b48 = (s[42] << 2) | (s[43] >>> 30);
        b49 = (s[43] << 2) | (s[42] >>> 30);
        b40 = (s[5] << 30) | (s[4] >>> 2);
        b41 = (s[4] << 30) | (s[5] >>> 2);
        b22 = (s[14] << 6) | (s[15] >>> 26);
        b23 = (s[15] << 6) | (s[14] >>> 26);
        b4 = (s[25] << 11) | (s[24] >>> 21);
        b5 = (s[24] << 11) | (s[25] >>> 21);
        b36 = (s[34] << 15) | (s[35] >>> 17);
        b37 = (s[35] << 15) | (s[34] >>> 17);
        b18 = (s[45] << 29) | (s[44] >>> 3);
        b19 = (s[44] << 29) | (s[45] >>> 3);
        b10 = (s[6] << 28) | (s[7] >>> 4);
        b11 = (s[7] << 28) | (s[6] >>> 4);
        b42 = (s[17] << 23) | (s[16] >>> 9);
        b43 = (s[16] << 23) | (s[17] >>> 9);
        b24 = (s[26] << 25) | (s[27] >>> 7);
        b25 = (s[27] << 25) | (s[26] >>> 7);
        b6 = (s[36] << 21) | (s[37] >>> 11);
        b7 = (s[37] << 21) | (s[36] >>> 11);
        b38 = (s[47] << 24) | (s[46] >>> 8);
        b39 = (s[46] << 24) | (s[47] >>> 8);
        b30 = (s[8] << 27) | (s[9] >>> 5);
        b31 = (s[9] << 27) | (s[8] >>> 5);
        b12 = (s[18] << 20) | (s[19] >>> 12);
        b13 = (s[19] << 20) | (s[18] >>> 12);
        b44 = (s[29] << 7) | (s[28] >>> 25);
        b45 = (s[28] << 7) | (s[29] >>> 25);
        b26 = (s[38] << 8) | (s[39] >>> 24);
        b27 = (s[39] << 8) | (s[38] >>> 24);
        b8 = (s[48] << 14) | (s[49] >>> 18);
        b9 = (s[49] << 14) | (s[48] >>> 18);

        s[0] = b0 ^ (~b2 & b4);
        s[1] = b1 ^ (~b3 & b5);
        s[10] = b10 ^ (~b12 & b14);
        s[11] = b11 ^ (~b13 & b15);
        s[20] = b20 ^ (~b22 & b24);
        s[21] = b21 ^ (~b23 & b25);
        s[30] = b30 ^ (~b32 & b34);
        s[31] = b31 ^ (~b33 & b35);
        s[40] = b40 ^ (~b42 & b44);
        s[41] = b41 ^ (~b43 & b45);
        s[2] = b2 ^ (~b4 & b6);
        s[3] = b3 ^ (~b5 & b7);
        s[12] = b12 ^ (~b14 & b16);
        s[13] = b13 ^ (~b15 & b17);
        s[22] = b22 ^ (~b24 & b26);
        s[23] = b23 ^ (~b25 & b27);
        s[32] = b32 ^ (~b34 & b36);
        s[33] = b33 ^ (~b35 & b37);
        s[42] = b42 ^ (~b44 & b46);
        s[43] = b43 ^ (~b45 & b47);
        s[4] = b4 ^ (~b6 & b8);
        s[5] = b5 ^ (~b7 & b9);
        s[14] = b14 ^ (~b16 & b18);
        s[15] = b15 ^ (~b17 & b19);
        s[24] = b24 ^ (~b26 & b28);
        s[25] = b25 ^ (~b27 & b29);
        s[34] = b34 ^ (~b36 & b38);
        s[35] = b35 ^ (~b37 & b39);
        s[44] = b44 ^ (~b46 & b48);
        s[45] = b45 ^ (~b47 & b49);
        s[6] = b6 ^ (~b8 & b0);
        s[7] = b7 ^ (~b9 & b1);
        s[16] = b16 ^ (~b18 & b10);
        s[17] = b17 ^ (~b19 & b11);
        s[26] = b26 ^ (~b28 & b20);
        s[27] = b27 ^ (~b29 & b21);
        s[36] = b36 ^ (~b38 & b30);
        s[37] = b37 ^ (~b39 & b31);
        s[46] = b46 ^ (~b48 & b40);
        s[47] = b47 ^ (~b49 & b41);
        s[8] = b8 ^ (~b0 & b2);
        s[9] = b9 ^ (~b1 & b3);
        s[18] = b18 ^ (~b10 & b12);
        s[19] = b19 ^ (~b11 & b13);
        s[28] = b28 ^ (~b20 & b22);
        s[29] = b29 ^ (~b21 & b23);
        s[38] = b38 ^ (~b30 & b32);
        s[39] = b39 ^ (~b31 & b33);
        s[48] = b48 ^ (~b40 & b42);
        s[49] = b49 ^ (~b41 & b43);

        s[0] ^= RC[n];
        s[1] ^= RC[n + 1];
      }
    } while(!end);

    var hex = '';
    if(CHROME) {
      b0 = s[0];
      b1 = s[1];
      b2 = s[2];
      b3 = s[3];
      b4 = s[4];
      b5 = s[5];
      b6 = s[6];
      b7 = s[7];
      b8 = s[8];
      b9 = s[9];
      b10 = s[10];
      b11 = s[11];
      b12 = s[12];
      b13 = s[13];
      b14 = s[14];
      b15 = s[15];
      hex += HEX_CHARS[(b0 >> 4) & 0x0F] + HEX_CHARS[b0 & 0x0F] +
             HEX_CHARS[(b0 >> 12) & 0x0F] + HEX_CHARS[(b0 >> 8) & 0x0F] +
             HEX_CHARS[(b0 >> 20) & 0x0F] + HEX_CHARS[(b0 >> 16) & 0x0F] +
             HEX_CHARS[(b0 >> 28) & 0x0F] + HEX_CHARS[(b0 >> 24) & 0x0F] +
             HEX_CHARS[(b1 >> 4) & 0x0F] + HEX_CHARS[b1 & 0x0F] +
             HEX_CHARS[(b1 >> 12) & 0x0F] + HEX_CHARS[(b1 >> 8) & 0x0F] +
             HEX_CHARS[(b1 >> 20) & 0x0F] + HEX_CHARS[(b1 >> 16) & 0x0F] +
             HEX_CHARS[(b1 >> 28) & 0x0F] + HEX_CHARS[(b1 >> 24) & 0x0F] +
             HEX_CHARS[(b2 >> 4) & 0x0F] + HEX_CHARS[b2 & 0x0F] +
             HEX_CHARS[(b2 >> 12) & 0x0F] + HEX_CHARS[(b2 >> 8) & 0x0F] +
             HEX_CHARS[(b2 >> 20) & 0x0F] + HEX_CHARS[(b2 >> 16) & 0x0F] +
             HEX_CHARS[(b2 >> 28) & 0x0F] + HEX_CHARS[(b2 >> 24) & 0x0F] +
             HEX_CHARS[(b3 >> 4) & 0x0F] + HEX_CHARS[b3 & 0x0F] +
             HEX_CHARS[(b3 >> 12) & 0x0F] + HEX_CHARS[(b3 >> 8) & 0x0F] +
             HEX_CHARS[(b3 >> 20) & 0x0F] + HEX_CHARS[(b3 >> 16) & 0x0F] +
             HEX_CHARS[(b3 >> 28) & 0x0F] + HEX_CHARS[(b3 >> 24) & 0x0F] +
             HEX_CHARS[(b4 >> 4) & 0x0F] + HEX_CHARS[b4 & 0x0F] +
             HEX_CHARS[(b4 >> 12) & 0x0F] + HEX_CHARS[(b4 >> 8) & 0x0F] +
             HEX_CHARS[(b4 >> 20) & 0x0F] + HEX_CHARS[(b4 >> 16) & 0x0F] +
             HEX_CHARS[(b4 >> 28) & 0x0F] + HEX_CHARS[(b4 >> 24) & 0x0F] +
             HEX_CHARS[(b5 >> 4) & 0x0F] + HEX_CHARS[b5 & 0x0F] +
             HEX_CHARS[(b5 >> 12) & 0x0F] + HEX_CHARS[(b5 >> 8) & 0x0F] +
             HEX_CHARS[(b5 >> 20) & 0x0F] + HEX_CHARS[(b5 >> 16) & 0x0F] +
             HEX_CHARS[(b5 >> 28) & 0x0F] + HEX_CHARS[(b5 >> 24) & 0x0F] +
             HEX_CHARS[(b6 >> 4) & 0x0F] + HEX_CHARS[b6 & 0x0F] +
             HEX_CHARS[(b6 >> 12) & 0x0F] + HEX_CHARS[(b6 >> 8) & 0x0F] +
             HEX_CHARS[(b6 >> 20) & 0x0F] + HEX_CHARS[(b6 >> 16) & 0x0F] +
             HEX_CHARS[(b6 >> 28) & 0x0F] + HEX_CHARS[(b6 >> 24) & 0x0F];

      if(bits >= 256) {
        hex += HEX_CHARS[(b7 >> 4) & 0x0F] + HEX_CHARS[b7 & 0x0F] +
               HEX_CHARS[(b7 >> 12) & 0x0F] + HEX_CHARS[(b7 >> 8) & 0x0F] +
               HEX_CHARS[(b7 >> 20) & 0x0F] + HEX_CHARS[(b7 >> 16) & 0x0F] +
               HEX_CHARS[(b7 >> 28) & 0x0F] + HEX_CHARS[(b7 >> 24) & 0x0F];
      }
      if(bits >= 384) {
        hex += HEX_CHARS[(b8 >> 4) & 0x0F] + HEX_CHARS[b8 & 0x0F] +
               HEX_CHARS[(b8 >> 12) & 0x0F] + HEX_CHARS[(b8 >> 8) & 0x0F] +
               HEX_CHARS[(b8 >> 20) & 0x0F] + HEX_CHARS[(b8 >> 16) & 0x0F] +
               HEX_CHARS[(b8 >> 28) & 0x0F] + HEX_CHARS[(b8 >> 24) & 0x0F] +
               HEX_CHARS[(b9 >> 4) & 0x0F] + HEX_CHARS[b9 & 0x0F] +
               HEX_CHARS[(b9 >> 12) & 0x0F] + HEX_CHARS[(b9 >> 8) & 0x0F] +
               HEX_CHARS[(b9 >> 20) & 0x0F] + HEX_CHARS[(b9 >> 16) & 0x0F] +
               HEX_CHARS[(b9 >> 28) & 0x0F] + HEX_CHARS[(b9 >> 24) & 0x0F] +
               HEX_CHARS[(b10 >> 4) & 0x0F] + HEX_CHARS[b10 & 0x0F] +
               HEX_CHARS[(b10 >> 12) & 0x0F] + HEX_CHARS[(b10 >> 8) & 0x0F] +
               HEX_CHARS[(b10 >> 20) & 0x0F] + HEX_CHARS[(b10 >> 16) & 0x0F] +
               HEX_CHARS[(b10 >> 28) & 0x0F] + HEX_CHARS[(b10 >> 24) & 0x0F] +
               HEX_CHARS[(b11 >> 4) & 0x0F] + HEX_CHARS[b11 & 0x0F] +
               HEX_CHARS[(b11 >> 12) & 0x0F] + HEX_CHARS[(b11 >> 8) & 0x0F] +
               HEX_CHARS[(b11 >> 20) & 0x0F] + HEX_CHARS[(b11 >> 16) & 0x0F] +
               HEX_CHARS[(b11 >> 28) & 0x0F] + HEX_CHARS[(b11 >> 24) & 0x0F];
      }
      if(bits == 512) {
        hex += HEX_CHARS[(b12 >> 4) & 0x0F] + HEX_CHARS[b12 & 0x0F] +
               HEX_CHARS[(b12 >> 12) & 0x0F] + HEX_CHARS[(b12 >> 8) & 0x0F] +
               HEX_CHARS[(b12 >> 20) & 0x0F] + HEX_CHARS[(b12 >> 16) & 0x0F] +
               HEX_CHARS[(b12 >> 28) & 0x0F] + HEX_CHARS[(b12 >> 24) & 0x0F] +
               HEX_CHARS[(b13 >> 4) & 0x0F] + HEX_CHARS[b13 & 0x0F] +
               HEX_CHARS[(b13 >> 12) & 0x0F] + HEX_CHARS[(b13 >> 8) & 0x0F] +
               HEX_CHARS[(b13 >> 20) & 0x0F] + HEX_CHARS[(b13 >> 16) & 0x0F] +
               HEX_CHARS[(b13 >> 28) & 0x0F] + HEX_CHARS[(b13 >> 24) & 0x0F] +
               HEX_CHARS[(b14 >> 4) & 0x0F] + HEX_CHARS[b14 & 0x0F] +
               HEX_CHARS[(b14 >> 12) & 0x0F] + HEX_CHARS[(b14 >> 8) & 0x0F] +
               HEX_CHARS[(b14 >> 20) & 0x0F] + HEX_CHARS[(b14 >> 16) & 0x0F] +
               HEX_CHARS[(b14 >> 28) & 0x0F] + HEX_CHARS[(b14 >> 24) & 0x0F] +
               HEX_CHARS[(b15 >> 4) & 0x0F] + HEX_CHARS[b15 & 0x0F] +
               HEX_CHARS[(b15 >> 12) & 0x0F] + HEX_CHARS[(b15 >> 8) & 0x0F] +
               HEX_CHARS[(b15 >> 20) & 0x0F] + HEX_CHARS[(b15 >> 16) & 0x0F] +
               HEX_CHARS[(b15 >> 28) & 0x0F] + HEX_CHARS[(b15 >> 24) & 0x0F];
      }
    } else {
      for(i = 0, n = bits / 32;i < n;++i) {
        h = s[i];
        hex += HEX_CHARS[(h >> 4) & 0x0F] + HEX_CHARS[h & 0x0F] +
               HEX_CHARS[(h >> 12) & 0x0F] + HEX_CHARS[(h >> 8) & 0x0F] +
               HEX_CHARS[(h >> 20) & 0x0F] + HEX_CHARS[(h >> 16) & 0x0F] +
               HEX_CHARS[(h >> 28) & 0x0F] + HEX_CHARS[(h >> 24) & 0x0F];
      }
    }
    return hex;
  };
  
  if(!root.JS_SHA3_TEST && NODE_JS) {
    module.exports = {
      sha3_512: sha3_512,
      sha3_384: sha3_384,
      sha3_256: sha3_256,
      sha3_224: sha3_224,
      keccak_512: keccak,
      keccak_384: keccak_384,
      keccak_256: keccak_256,
      keccak_224: keccak_224
    };
  } else if(root) {
    root.sha3_512 = sha3_512;
    root.sha3_384 = sha3_384;
    root.sha3_256 = sha3_256;
    root.sha3_224 = sha3_224;
    root.keccak_512 = keccak;
    root.keccak_384 = keccak_384;
    root.keccak_256 = keccak_256;
    root.keccak_224 = keccak_224;
  }
}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],24:[function(require,module,exports){
(function (Buffer){
const assert = require('assert')
/**
 * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP
 * This function takes in a data, convert it to buffer if not, and a length for recursion
 *
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Buffer} - returns buffer of encoded data
 **/
exports.encode = function (input) {
  if (input instanceof Array) {
    var output = []
    for (var i = 0; i < input.length; i++) {
      output.push(exports.encode(input[i]))
    }
    var buf = Buffer.concat(output)
    return Buffer.concat([encodeLength(buf.length, 192), buf])
  } else {
    input = toBuffer(input)
    if (input.length === 1 && input[0] < 128) {
      return input
    } else {
      return Buffer.concat([encodeLength(input.length, 128), input])
    }
  }
}

function safeParseInt (v, base) {
  if (v.slice(0, 2) === '00') {
    throw (new Error('invalid RLP: extra zeros'))
  }

  return parseInt(v, base)
}

function encodeLength (len, offset) {
  if (len < 56) {
    return new Buffer([len + offset])
  } else {
    var hexLength = intToHex(len)
    var lLength = hexLength.length / 2
    var firstByte = intToHex(offset + 55 + lLength)
    return new Buffer(firstByte + hexLength, 'hex')
  }
}

/**
 * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Array} - returns decode Array of Buffers containg the original message
 **/
exports.decode = function (input, stream) {
  if (!input || input.length === 0) {
    return new Buffer([])
  }

  input = toBuffer(input)
  var decoded = _decode(input)

  if (stream) {
    return decoded
  }

  assert.equal(decoded.remainder.length, 0, 'invalid remainder')
  return decoded.data
}

exports.getLength = function (input) {
  if (!input || input.length === 0) {
    return new Buffer([])
  }

  input = toBuffer(input)
  var firstByte = input[0]
  if (firstByte <= 0x7f) {
    return input.length
  } else if (firstByte <= 0xb7) {
    return firstByte - 0x7f
  } else if (firstByte <= 0xbf) {
    return firstByte - 0xb6
  } else if (firstByte <= 0xf7) {
    // a list between  0-55 bytes long
    return firstByte - 0xbf
  } else {
    // a list  over 55 bytes long
    var llength = firstByte - 0xf6
    var length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    return llength + length
  }
}

function _decode (input) {
  var length, llength, data, innerRemainder, d
  var decoded = []
  var firstByte = input[0]

  if (firstByte <= 0x7f) {
    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
    return {
      data: input.slice(0, 1),
      remainder: input.slice(1)
    }
  } else if (firstByte <= 0xb7) {
    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string
    // The range of the first byte is [0x80, 0xb7]
    length = firstByte - 0x7f

    // set 0x80 null to 0
    if (firstByte === 0x80) {
      data = new Buffer([])
    } else {
      data = input.slice(1, length)
    }

    if (length === 2 && data[0] < 0x80) {
      throw new Error('invalid rlp encoding: byte must be less 0x80')
    }

    return {
      data: data,
      remainder: input.slice(length)
    }
  } else if (firstByte <= 0xbf) {
    llength = firstByte - 0xb6
    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    data = input.slice(llength, length + llength)
    if (data.length < length) {
      throw (new Error('invalid RLP'))
    }

    return {
      data: data,
      remainder: input.slice(length + llength)
    }
  } else if (firstByte <= 0xf7) {
    // a list between  0-55 bytes long
    length = firstByte - 0xbf
    innerRemainder = input.slice(1, length)
    while (innerRemainder.length) {
      d = _decode(innerRemainder)
      decoded.push(d.data)
      innerRemainder = d.remainder
    }

    return {
      data: decoded,
      remainder: input.slice(length)
    }
  } else {
    // a list  over 55 bytes long
    llength = firstByte - 0xf6
    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    var totalLength = llength + length
    if (totalLength > input.length) {
      throw new Error('invalid rlp: total length is larger than the data')
    }

    innerRemainder = input.slice(llength, totalLength)
    if (innerRemainder.length === 0) {
      throw new Error('invalid rlp, List has a invalid length')
    }

    while (innerRemainder.length) {
      d = _decode(innerRemainder)
      decoded.push(d.data)
      innerRemainder = d.remainder
    }
    return {
      data: decoded,
      remainder: input.slice(totalLength)
    }
  }
}

function isHexPrefixed (str) {
  return str.slice(0, 2) === '0x'
}

// Removes 0x from a given String
function stripHexPrefix (str) {
  if (typeof str !== 'string') {
    return str
  }
  return isHexPrefixed(str) ? str.slice(2) : str
}

function intToHex (i) {
  var hex = i.toString(16)
  if (hex.length % 2) {
    hex = '0' + hex
  }

  return hex
}

function padToEven (a) {
  if (a.length % 2) a = '0' + a
  return a
}

function intToBuffer (i) {
  var hex = intToHex(i)
  return new Buffer(hex, 'hex')
}

function toBuffer (v) {
  if (!Buffer.isBuffer(v)) {
    if (typeof v === 'string') {
      if (isHexPrefixed(v)) {
        v = new Buffer(padToEven(stripHexPrefix(v)), 'hex')
      } else {
        v = new Buffer(v)
      }
    } else if (typeof v === 'number') {
      if (!v) {
        v = new Buffer([])
      } else {
        v = intToBuffer(v)
      }
    } else if (v === null || v === undefined) {
      v = new Buffer([])
    } else if (v.toArray) {
      // converts a BN to a Buffer
      v = new Buffer(v.toArray())
    } else {
      throw new Error('invalid type')
    }
  }
  return v
}

}).call(this,require("buffer").Buffer)

},{"assert":149,"buffer":151}],25:[function(require,module,exports){
'use strict'
module.exports = require('./lib')(require('./lib/elliptic'))

},{"./lib":28,"./lib/elliptic":27}],26:[function(require,module,exports){
(function (Buffer){
'use strict'
var toString = Object.prototype.toString

// TypeError
exports.isArray = function (value, message) {
  if (!Array.isArray(value)) throw TypeError(message)
}

exports.isBoolean = function (value, message) {
  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)
}

exports.isBuffer = function (value, message) {
  if (!Buffer.isBuffer(value)) throw TypeError(message)
}

exports.isFunction = function (value, message) {
  if (toString.call(value) !== '[object Function]') throw TypeError(message)
}

exports.isNumber = function (value, message) {
  if (toString.call(value) !== '[object Number]') throw TypeError(message)
}

exports.isObject = function (value, message) {
  if (toString.call(value) !== '[object Object]') throw TypeError(message)
}

// RangeError
exports.isBufferLength = function (buffer, length, message) {
  if (buffer.length !== length) throw RangeError(message)
}

exports.isBufferLength2 = function (buffer, length1, length2, message) {
  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)
}

exports.isLengthGTZero = function (value, message) {
  if (value.length === 0) throw RangeError(message)
}

exports.isNumberInInterval = function (number, x, y, message) {
  if (number <= x || number >= y) throw RangeError(message)
}

}).call(this,{"isBuffer":require("../../../../../../browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js")})

},{"../../../../../../browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js":349}],27:[function(require,module,exports){
(function (Buffer){
'use strict'
var createHash = require('create-hash')
var BN = require('bn.js')
var EC = require('elliptic').ec

var messages = require('../messages.json')

var ec = new EC('secp256k1')
var ecparams = ec.curve

function loadCompressedPublicKey (first, xBuffer) {
  var x = new BN(xBuffer)

  // overflow
  if (x.cmp(ecparams.p) >= 0) return null
  x = x.toRed(ecparams.red)

  // compute corresponding Y
  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()
  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadUncompressedPublicKey (first, xBuffer, yBuffer) {
  var x = new BN(xBuffer)
  var y = new BN(yBuffer)

  // overflow
  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null

  x = x.toRed(ecparams.red)
  y = y.toRed(ecparams.red)

  // is odd flag
  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null

  // x*x*x + b = y*y
  var x3 = x.redSqr().redIMul(x)
  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null

  return ec.keyPair({ pub: { x: x, y: y } })
}

function loadPublicKey (publicKey) {
  var first = publicKey[0]
  switch (first) {
    case 0x02:
    case 0x03:
      if (publicKey.length !== 33) return null
      return loadCompressedPublicKey(first, publicKey.slice(1, 33))
    case 0x04:
    case 0x06:
    case 0x07:
      if (publicKey.length !== 65) return null
      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))
    default:
      return null
  }
}

exports.privateKeyVerify = function (privateKey) {
  var bn = new BN(privateKey)
  return bn.cmp(ecparams.n) < 0 && !bn.isZero()
}

exports.privateKeyExport = function (privateKey, compressed) {
  var d = new BN(privateKey)
  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)

  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true))
}

exports.privateKeyTweakAdd = function (privateKey, tweak) {
  var bn = new BN(tweak)
  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)

  bn.iadd(new BN(privateKey))
  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)
  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)

  return bn.toArrayLike(Buffer, 'be', 32)
}

exports.privateKeyTweakMul = function (privateKey, tweak) {
  var bn = new BN(tweak)
  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)

  bn.imul(new BN(privateKey))
  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)

  return bn.toArrayLike(Buffer, 'be', 32)
}

exports.publicKeyCreate = function (privateKey, compressed) {
  var d = new BN(privateKey)
  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)

  return new Buffer(ec.keyFromPrivate(privateKey).getPublic(compressed, true))
}

exports.publicKeyConvert = function (publicKey, compressed) {
  var pair = loadPublicKey(publicKey)
  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)

  return new Buffer(pair.getPublic(compressed, true))
}

exports.publicKeyVerify = function (publicKey) {
  return loadPublicKey(publicKey) !== null
}

exports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {
  var pair = loadPublicKey(publicKey)
  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)

  tweak = new BN(tweak)
  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)

  return new Buffer(ecparams.g.mul(tweak).add(pair.pub).encode(true, compressed))
}

exports.publicKeyTweakMul = function (publicKey, tweak, compressed) {
  var pair = loadPublicKey(publicKey)
  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)

  tweak = new BN(tweak)
  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)

  return new Buffer(pair.pub.mul(tweak).encode(true, compressed))
}

exports.publicKeyCombine = function (publicKeys, compressed) {
  var pairs = new Array(publicKeys.length)
  for (var i = 0; i < publicKeys.length; ++i) {
    pairs[i] = loadPublicKey(publicKeys[i])
    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)
  }

  var point = pairs[0].pub
  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)
  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)

  return new Buffer(point.encode(true, compressed))
}

exports.signatureNormalize = function (signature) {
  var r = new BN(signature.slice(0, 32))
  var s = new BN(signature.slice(32, 64))
  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)

  var result = new Buffer(signature)
  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)

  return result
}

exports.signatureExport = function (signature) {
  var r = signature.slice(0, 32)
  var s = signature.slice(32, 64)
  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)

  return { r: r, s: s }
}

exports.signatureImport = function (sigObj) {
  var r = new BN(sigObj.r)
  if (r.cmp(ecparams.n) >= 0) r = new BN(0)

  var s = new BN(sigObj.s)
  if (s.cmp(ecparams.n) >= 0) s = new BN(0)

  return Buffer.concat([
    r.toArrayLike(Buffer, 'be', 32),
    s.toArrayLike(Buffer, 'be', 32)
  ])
}

exports.sign = function (message, privateKey, noncefn, data) {
  if (typeof noncefn === 'function') {
    var getNonce = noncefn
    noncefn = function (counter) {
      var nonce = getNonce(message, privateKey, null, data, counter)
      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)

      return new BN(nonce)
    }
  }

  var d = new BN(privateKey)
  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)

  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })
  return {
    signature: Buffer.concat([
      result.r.toArrayLike(Buffer, 'be', 32),
      result.s.toArrayLike(Buffer, 'be', 32)
    ]),
    recovery: result.recoveryParam
  }
}

exports.verify = function (message, signature, publicKey) {
  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}

  var sigr = new BN(sigObj.r)
  var sigs = new BN(sigObj.s)
  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)
  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false

  var pair = loadPublicKey(publicKey)
  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)

  return ec.verify(message, sigObj, {x: pair.pub.x, y: pair.pub.y})
}

exports.recover = function (message, signature, recovery, compressed) {
  var sigObj = {r: signature.slice(0, 32), s: signature.slice(32, 64)}

  var sigr = new BN(sigObj.r)
  var sigs = new BN(sigObj.s)
  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)

  try {
    if (sigr.isZero() || sigs.isZero()) throw new Error()

    var point = ec.recoverPubKey(message, sigObj, recovery)
    return new Buffer(point.encode(true, compressed))
  } catch (err) {
    throw new Error(messages.ECDSA_RECOVER_FAIL)
  }
}

exports.ecdh = function (publicKey, privateKey) {
  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)
  return createHash('sha256').update(shared).digest()
}

exports.ecdhUnsafe = function (publicKey, privateKey, compressed) {
  var pair = loadPublicKey(publicKey)
  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)

  var scalar = new BN(privateKey)
  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)

  return new Buffer(pair.pub.mul(scalar).encode(true, compressed))
}

}).call(this,require("buffer").Buffer)

},{"../messages.json":29,"bn.js":20,"buffer":151,"create-hash":31,"elliptic":45}],28:[function(require,module,exports){
(function (Buffer){
'use strict'
var bip66 = require('bip66')

var assert = require('./assert')
var messages = require('./messages.json')

var EC_PRIVKEY_EXPORT_DER_COMPRESSED_BEGIN = new Buffer(
  '3081d30201010420', 'hex')
var EC_PRIVKEY_EXPORT_DER_COMPRESSED_MIDDLE = new Buffer(
  'a08185308182020101302c06072a8648ce3d0101022100fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f300604010004010704210279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798022100fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141020101a124032200', 'hex')
var EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_BEGIN = new Buffer(
  '308201130201010420', 'hex')
var EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_MIDDLE = new Buffer(
  'a081a53081a2020101302c06072a8648ce3d0101022100fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f300604010004010704410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8022100fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141020101a144034200', 'hex')

var ZERO_BUFFER_32 = new Buffer('0000000000000000000000000000000000000000000000000000000000000000', 'hex')

function initCompressedValue (value, defaultValue) {
  if (value === undefined) return defaultValue

  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)
  return value
}

module.exports = function (secp256k1) {
  return {
    privateKeyVerify: function (privateKey) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)
    },

    privateKeyExport: function (privateKey, compressed) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)

      var result = new Buffer(compressed ? 214 : 279)
      var targetStart = 0
      if (compressed) {
        EC_PRIVKEY_EXPORT_DER_COMPRESSED_BEGIN.copy(result, targetStart)
        targetStart += EC_PRIVKEY_EXPORT_DER_COMPRESSED_BEGIN.length

        privateKey.copy(result, targetStart)
        targetStart += privateKey.length

        EC_PRIVKEY_EXPORT_DER_COMPRESSED_MIDDLE.copy(result, targetStart)
        targetStart += EC_PRIVKEY_EXPORT_DER_COMPRESSED_MIDDLE.length

        publicKey.copy(result, targetStart)
      } else {
        EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_BEGIN.copy(result, targetStart)
        targetStart += EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_BEGIN.length

        privateKey.copy(result, targetStart)
        targetStart += privateKey.length

        EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_MIDDLE.copy(result, targetStart)
        targetStart += EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED_MIDDLE.length

        publicKey.copy(result, targetStart)
      }

      return result
    },

    privateKeyImport: function (privateKey) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)

      do {
        var length = privateKey.length

        // sequence header
        var index = 0
        if (length < index + 1 || privateKey[index] !== 0x30) break
        index += 1

        // sequence length constructor
        if (length < index + 1 || !(privateKey[index] & 0x80)) break

        var lenb = privateKey[index] & 0x7f
        index += 1
        if (lenb < 1 || lenb > 2) break
        if (length < index + lenb) break

        // sequence length
        var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)
        index += lenb
        if (length < index + len) break

        // sequence element 0: version number (=1)
        if (length < index + 3 ||
            privateKey[index] !== 0x02 ||
            privateKey[index + 1] !== 0x01 ||
            privateKey[index + 2] !== 0x01) {
          break
        }
        index += 3

        // sequence element 1: octet string, up to 32 bytes
        if (length < index + 2 ||
            privateKey[index] !== 0x04 ||
            privateKey[index + 1] > 0x20 ||
            length < index + 2 + privateKey[index + 1]) {
          break
        }

        privateKey = privateKey.slice(index + 2, index + 2 + privateKey[index + 1])
        if (privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey
      } while (false)

      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)
    },

    privateKeyTweakAdd: function (privateKey, tweak) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)
      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)

      return secp256k1.privateKeyTweakAdd(privateKey, tweak)
    },

    privateKeyTweakMul: function (privateKey, tweak) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)
      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)

      return secp256k1.privateKeyTweakMul(privateKey, tweak)
    },

    publicKeyCreate: function (privateKey, compressed) {
      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.publicKeyCreate(privateKey, compressed)
    },

    publicKeyConvert: function (publicKey, compressed) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.publicKeyConvert(publicKey, compressed)
    },

    publicKeyVerify: function (publicKey) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      return secp256k1.publicKeyVerify(publicKey)
    },

    publicKeyTweakAdd: function (publicKey, tweak, compressed) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)
      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)
    },

    publicKeyTweakMul: function (publicKey, tweak, compressed) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)
      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)
    },

    publicKeyCombine: function (publicKeys, compressed) {
      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)
      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)
      for (var i = 0; i < publicKeys.length; ++i) {
        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)
        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)
      }

      compressed = initCompressedValue(compressed, true)

      return secp256k1.publicKeyCombine(publicKeys, compressed)
    },

    signatureNormalize: function (signature) {
      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)
      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)

      return secp256k1.signatureNormalize(signature)
    },

    signatureExport: function (signature) {
      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)
      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)

      var sigObj = secp256k1.signatureExport(signature)

      var r = Buffer.concat([new Buffer([0]), sigObj.r])
      for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);

      var s = Buffer.concat([new Buffer([0]), sigObj.s])
      for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);

      return bip66.encode(r.slice(posR), s.slice(posS))
    },

    signatureImport: function (sig) {
      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)
      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)

      try {
        var sigObj = bip66.decode(sig)
        if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)
        if (sigObj.r.length > 32) throw new Error('R length is too long')
        if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)
        if (sigObj.s.length > 32) throw new Error('S length is too long')
      } catch (err) {
        throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)
      }

      return secp256k1.signatureImport({
        r: Buffer.concat([ZERO_BUFFER_32, sigObj.r]).slice(-32),
        s: Buffer.concat([ZERO_BUFFER_32, sigObj.s]).slice(-32)
      })
    },

    sign: function (message, privateKey, options) {
      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)
      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)

      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      var data = null
      var noncefn = null
      if (options !== undefined) {
        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)

        if (options.data !== undefined) {
          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)
          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)
          data = options.data
        }

        if (options.noncefn !== undefined) {
          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)
          noncefn = options.noncefn
        }
      }

      return secp256k1.sign(message, privateKey, noncefn, data)
    },

    verify: function (message, signature, publicKey) {
      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)
      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)

      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)
      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)

      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      return secp256k1.verify(message, signature, publicKey)
    },

    recover: function (message, signature, recovery, compressed) {
      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)
      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)

      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)
      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)

      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)
      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.recover(message, signature, recovery, compressed)
    },

    ecdh: function (publicKey, privateKey) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      return secp256k1.ecdh(publicKey, privateKey)
    },

    ecdhUnsafe: function (publicKey, privateKey, compressed) {
      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)
      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)

      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)
      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)

      compressed = initCompressedValue(compressed, true)

      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)
    }
  }
}

}).call(this,require("buffer").Buffer)

},{"./assert":26,"./messages.json":29,"bip66":30,"buffer":151}],29:[function(require,module,exports){
module.exports={
  "COMPRESSED_TYPE_INVALID": "compressed should be a boolean",
  "EC_PRIVATE_KEY_TYPE_INVALID": "private key should be a Buffer",
  "EC_PRIVATE_KEY_LENGTH_INVALID": "private key length is invalid",
  "EC_PRIVATE_KEY_TWEAK_ADD_FAIL": "tweak out of range or resulting private key is invalid",
  "EC_PRIVATE_KEY_TWEAK_MUL_FAIL": "tweak out of range",
  "EC_PRIVATE_KEY_EXPORT_DER_FAIL": "couldn't export to DER format",
  "EC_PRIVATE_KEY_IMPORT_DER_FAIL": "couldn't import from DER format",
  "EC_PUBLIC_KEYS_TYPE_INVALID": "public keys should be an Array",
  "EC_PUBLIC_KEYS_LENGTH_INVALID": "public keys Array should have at least 1 element",
  "EC_PUBLIC_KEY_TYPE_INVALID": "public key should be a Buffer",
  "EC_PUBLIC_KEY_LENGTH_INVALID": "public key length is invalid",
  "EC_PUBLIC_KEY_PARSE_FAIL": "the public key could not be parsed or is invalid",
  "EC_PUBLIC_KEY_CREATE_FAIL": "private was invalid, try again",
  "EC_PUBLIC_KEY_TWEAK_ADD_FAIL": "tweak out of range or resulting public key is invalid",
  "EC_PUBLIC_KEY_TWEAK_MUL_FAIL": "tweak out of range",
  "EC_PUBLIC_KEY_COMBINE_FAIL": "the sum of the public keys is not valid",
  "ECDH_FAIL": "scalar was invalid (zero or overflow)",
  "ECDSA_SIGNATURE_TYPE_INVALID": "signature should be a Buffer",
  "ECDSA_SIGNATURE_LENGTH_INVALID": "signature length is invalid",
  "ECDSA_SIGNATURE_PARSE_FAIL": "couldn't parse signature",
  "ECDSA_SIGNATURE_PARSE_DER_FAIL": "couldn't parse DER signature",
  "ECDSA_SIGNATURE_SERIALIZE_DER_FAIL": "couldn't serialize signature to DER format",
  "ECDSA_SIGN_FAIL": "nonce generation function failed or private key is invalid",
  "ECDSA_RECOVER_FAIL": "couldn't recover public key from signature",
  "MSG32_TYPE_INVALID": "message should be a Buffer",
  "MSG32_LENGTH_INVALID": "message length is invalid",
  "OPTIONS_TYPE_INVALID": "options should be an Object",
  "OPTIONS_DATA_TYPE_INVALID": "options.data should be a Buffer",
  "OPTIONS_DATA_LENGTH_INVALID": "options.data length is invalid",
  "OPTIONS_NONCEFN_TYPE_INVALID": "options.noncefn should be a Function",
  "RECOVERY_ID_TYPE_INVALID": "recovery should be a Number",
  "RECOVERY_ID_VALUE_INVALID": "recovery should have value between -1 and 4",
  "TWEAK_TYPE_INVALID": "tweak should be a Buffer",
  "TWEAK_LENGTH_INVALID": "tweak length is invalid"
}

},{}],30:[function(require,module,exports){
(function (Buffer){
// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki
// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
// NOTE: SIGHASH byte ignored AND restricted, truncate before use

function check (buffer) {
  if (buffer.length < 8) return false
  if (buffer.length > 72) return false
  if (buffer[0] !== 0x30) return false
  if (buffer[1] !== buffer.length - 2) return false
  if (buffer[2] !== 0x02) return false

  var lenR = buffer[3]
  if (lenR === 0) return false
  if (5 + lenR >= buffer.length) return false
  if (buffer[4 + lenR] !== 0x02) return false

  var lenS = buffer[5 + lenR]
  if (lenS === 0) return false
  if ((6 + lenR + lenS) !== buffer.length) return false

  if (buffer[4] & 0x80) return false
  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false

  if (buffer[lenR + 6] & 0x80) return false
  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false
  return true
}

function decode (buffer) {
  if (buffer.length < 8) throw new Error('DER sequence length is too short')
  if (buffer.length > 72) throw new Error('DER sequence length is too long')
  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')
  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')
  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')

  var lenR = buffer[3]
  if (lenR === 0) throw new Error('R length is zero')
  if (5 + lenR >= buffer.length) throw new Error('R length is too long')
  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')

  var lenS = buffer[5 + lenR]
  if (lenS === 0) throw new Error('S length is zero')
  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')

  if (buffer[4] & 0x80) throw new Error('R value is negative')
  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')

  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')
  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')

  // non-BIP66 - extract R, S values
  return {
    r: buffer.slice(4, 4 + lenR),
    s: buffer.slice(6 + lenR)
  }
}

/*
 * Expects r and s to be positive DER integers.
 *
 * The DER format uses the most significant bit as a sign bit (& 0x80).
 * If the significant bit is set AND the integer is positive, a 0x00 is prepended.
 *
 * Examples:
 *
 *      0 =>     0x00
 *      1 =>     0x01
 *     -1 =>     0xff
 *    127 =>     0x7f
 *   -127 =>     0x81
 *    128 =>   0x0080
 *   -128 =>     0x80
 *    255 =>   0x00ff
 *   -255 =>   0xff01
 *  16300 =>   0x3fac
 * -16300 =>   0xc054
 *  62300 => 0x00f35c
 * -62300 => 0xff0ca4
*/
function encode (r, s) {
  var lenR = r.length
  var lenS = s.length
  if (lenR === 0) throw new Error('R length is zero')
  if (lenS === 0) throw new Error('S length is zero')
  if (lenR > 33) throw new Error('R length is too long')
  if (lenS > 33) throw new Error('S length is too long')
  if (r[0] & 0x80) throw new Error('R value is negative')
  if (s[0] & 0x80) throw new Error('S value is negative')
  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')
  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')

  var signature = new Buffer(6 + lenR + lenS)

  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
  signature[0] = 0x30
  signature[1] = signature.length - 2
  signature[2] = 0x02
  signature[3] = r.length
  r.copy(signature, 4)
  signature[4 + lenR] = 0x02
  signature[5 + lenR] = s.length
  s.copy(signature, 6 + lenR)

  return signature
}

module.exports = {
  check: check,
  decode: decode,
  encode: encode
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],31:[function(require,module,exports){
(function (Buffer){
'use strict';
var inherits = require('inherits')
var md5 = require('./md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var Base = require('cipher-base')

function HashNoConstructor(hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash(hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if ('md5' === alg) return new HashNoConstructor(md5)
  if ('rmd160' === alg || 'ripemd160' === alg) return new HashNoConstructor(rmd160)

  return new Hash(sha(alg))
}

}).call(this,require("buffer").Buffer)

},{"./md5":33,"buffer":151,"cipher-base":34,"inherits":35,"ripemd160":36,"sha.js":38}],32:[function(require,module,exports){
(function (Buffer){
'use strict';
var intSize = 4;
var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
var chrsz = 8;

function toArray(buf, bigEndian) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize));
    buf = Buffer.concat([buf, zeroBuffer], len);
  }

  var arr = [];
  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
  for (var i = 0; i < buf.length; i += intSize) {
    arr.push(fn.call(buf, i));
  }
  return arr;
}

function toBuffer(arr, size, bigEndian) {
  var buf = new Buffer(size);
  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
  for (var i = 0; i < arr.length; i++) {
    fn.call(buf, arr[i], i * 4, true);
  }
  return buf;
}

function hash(buf, fn, hashSize, bigEndian) {
  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
  return toBuffer(arr, hashSize, bigEndian);
}
exports.hash = hash;
}).call(this,require("buffer").Buffer)

},{"buffer":151}],33:[function(require,module,exports){
'use strict';
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var helpers = require('./helpers');

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5(x, len)
{
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var a =  1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d =  271733878;

  for(var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return Array(a, b, c, d);

}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn(q, a, b, x, s, t)
{
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
}
function md5_ff(a, b, c, d, x, s, t)
{
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t)
{
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t)
{
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t)
{
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

module.exports = function md5(buf) {
  return helpers.hash(buf, core_md5, 16);
};
},{"./helpers":32}],34:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":35,"stream":367,"string_decoder":368}],35:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],36:[function(require,module,exports){
(function (Buffer){
/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
/** @preserve
(c) 2012 by Cédric Mesnil. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// constants table
var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]
var hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]

function bytesToWords (bytes) {
  var words = []
  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
    words[b >>> 5] |= bytes[i] << (24 - b % 32)
  }
  return words
}

function wordsToBytes (words) {
  var bytes = []
  for (var b = 0; b < words.length * 32; b += 8) {
    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)
  }
  return bytes
}

function processBlock (H, M, offset) {
  // swap endian
  for (var i = 0; i < 16; i++) {
    var offset_i = offset + i
    var M_offset_i = M[offset_i]

    // Swap
    M[offset_i] = (
      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |
      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)
    )
  }

  // Working variables
  var al, bl, cl, dl, el
  var ar, br, cr, dr, er

  ar = al = H[0]
  br = bl = H[1]
  cr = cl = H[2]
  dr = dl = H[3]
  er = el = H[4]

  // computation
  var t
  for (i = 0; i < 80; i += 1) {
    t = (al + M[offset + zl[i]]) | 0
    if (i < 16) {
      t += f1(bl, cl, dl) + hl[0]
    } else if (i < 32) {
      t += f2(bl, cl, dl) + hl[1]
    } else if (i < 48) {
      t += f3(bl, cl, dl) + hl[2]
    } else if (i < 64) {
      t += f4(bl, cl, dl) + hl[3]
    } else {// if (i<80) {
      t += f5(bl, cl, dl) + hl[4]
    }
    t = t | 0
    t = rotl(t, sl[i])
    t = (t + el) | 0
    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = t

    t = (ar + M[offset + zr[i]]) | 0
    if (i < 16) {
      t += f5(br, cr, dr) + hr[0]
    } else if (i < 32) {
      t += f4(br, cr, dr) + hr[1]
    } else if (i < 48) {
      t += f3(br, cr, dr) + hr[2]
    } else if (i < 64) {
      t += f2(br, cr, dr) + hr[3]
    } else {// if (i<80) {
      t += f1(br, cr, dr) + hr[4]
    }

    t = t | 0
    t = rotl(t, sr[i])
    t = (t + er) | 0
    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = t
  }

  // intermediate hash value
  t = (H[1] + cl + dr) | 0
  H[1] = (H[2] + dl + er) | 0
  H[2] = (H[3] + el + ar) | 0
  H[3] = (H[4] + al + br) | 0
  H[4] = (H[0] + bl + cr) | 0
  H[0] = t
}

function f1 (x, y, z) {
  return ((x) ^ (y) ^ (z))
}

function f2 (x, y, z) {
  return (((x) & (y)) | ((~x) & (z)))
}

function f3 (x, y, z) {
  return (((x) | (~(y))) ^ (z))
}

function f4 (x, y, z) {
  return (((x) & (z)) | ((y) & (~(z))))
}

function f5 (x, y, z) {
  return ((x) ^ ((y) | (~(z))))
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function ripemd160 (message) {
  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]

  if (typeof message === 'string') {
    message = new Buffer(message, 'utf8')
  }

  var m = bytesToWords(message)

  var nBitsLeft = message.length * 8
  var nBitsTotal = message.length * 8

  // Add padding
  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)
  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
    (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |
    (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)
  )

  for (var i = 0; i < m.length; i += 16) {
    processBlock(H, m, i)
  }

  // swap endian
  for (i = 0; i < 5; i++) {
    // shortcut
    var H_i = H[i]

    // Swap
    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |
      (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00)
  }

  var digestbytes = wordsToBytes(H)
  return new Buffer(digestbytes)
}

module.exports = ripemd160

}).call(this,require("buffer").Buffer)

},{"buffer":151}],37:[function(require,module,exports){
(function (Buffer){
// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this,require("buffer").Buffer)

},{"buffer":151}],38:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":39,"./sha1":40,"./sha224":41,"./sha256":42,"./sha384":43,"./sha512":44}],39:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

}).call(this,require("buffer").Buffer)

},{"./hash":37,"buffer":151,"inherits":35}],40:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

}).call(this,require("buffer").Buffer)

},{"./hash":37,"buffer":151,"inherits":35}],41:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this,require("buffer").Buffer)

},{"./hash":37,"./sha256":42,"buffer":151,"inherits":35}],42:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this,require("buffer").Buffer)

},{"./hash":37,"buffer":151,"inherits":35}],43:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this,require("buffer").Buffer)

},{"./hash":37,"./sha512":44,"buffer":151,"inherits":35}],44:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this,require("buffer").Buffer)

},{"./hash":37,"buffer":151,"inherits":35}],45:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.hmacDRBG = require('./elliptic/hmac-drbg');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":69,"./elliptic/curve":48,"./elliptic/curves":51,"./elliptic/ec":52,"./elliptic/eddsa":55,"./elliptic/hmac-drbg":58,"./elliptic/utils":60,"brorand":61}],46:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":45,"bn.js":20}],47:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":45,"../curve":48,"bn.js":20,"inherits":68}],48:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":46,"./edwards":47,"./mont":49,"./short":50}],49:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":45,"../curve":48,"bn.js":20,"inherits":68}],50:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":45,"../curve":48,"bn.js":20,"inherits":68}],51:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '0',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":45,"./precomputed/secp256k1":59,"hash.js":62}],52:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    pers: options.pers,
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var eNeg = n.sub(e);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  var rInv = signature.r.invm(n);
  return this.g.mulAdd(eNeg, r, s).mul(rInv);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":45,"./key":53,"./signature":54,"bn.js":20}],53:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":20}],54:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":45,"bn.js":20}],55:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":45,"./key":56,"./signature":57,"hash.js":62}],56:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":45}],57:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":45,"bn.js":20}],58:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this.reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc);
  var nonce = utils.toArray(options.nonce, options.nonceEnc);
  var pers = utils.toArray(options.pers, options.persEnc);
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this.reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toBuffer(entropy, entropyEnc);
  add = utils.toBuffer(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this.reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this.reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc);
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this.reseed++;
  return utils.encode(res, enc);
};

},{"../elliptic":45,"hash.js":62}],59:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],60:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');

utils.assert = function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
};

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (!enc) {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  } else if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":20}],61:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

if (typeof window === 'object') {
  if (window.crypto && window.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (window.msCrypto && window.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.msCrypto.getRandomValues(arr);
      return arr;
    };
  } else {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker
  try {
    var crypto = require('cry' + 'pto');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
    // Emulate crypto API using randy
    Rand.prototype._rand = function _rand(n) {
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
  }
}

},{}],62:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":63,"./hash/hmac":64,"./hash/ripemd":65,"./hash/sha":66,"./hash/utils":67}],63:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"../hash":62}],64:[function(require,module,exports){
var hmac = exports;

var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"../hash":62}],65:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = hash.common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"../hash":62}],66:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

var rotr32 = utils.rotr32;
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = hash.common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
exports.sha256 = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
exports.sha224 = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xf3bcc908,
             0xbb67ae85, 0x84caa73b,
             0x3c6ef372, 0xfe94f82b,
             0xa54ff53a, 0x5f1d36f1,
             0x510e527f, 0xade682d1,
             0x9b05688c, 0x2b3e6c1f,
             0x1f83d9ab, 0xfb41bd6b,
             0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
exports.sha512 = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(c0_hi, c0_lo,
                      c1_hi, c1_lo,
                      c2_hi, c2_lo,
                      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,
                          c1_hi, c1_lo,
                          c2_hi, c2_lo,
                          c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);

    var c0_hi = s0_512_hi(ah, al);
    var c0_lo = s0_512_lo(ah, al);
    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [ 0xcbbb9d5d, 0xc1059ed8,
             0x629a292a, 0x367cd507,
             0x9159015a, 0x3070dd17,
             0x152fecd8, 0xf70e5939,
             0x67332667, 0xffc00b31,
             0x8eb44a87, 0x68581511,
             0xdb0c2e0d, 0x64f98fa7,
             0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
exports.sha384 = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,
             0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
exports.sha1 = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (var i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}

function p32(x, y, z) {
  return x ^ y ^ z;
}

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}

function ch64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../hash":62}],67:[function(require,module,exports){
var utils = exports;
var inherits = require('inherits');

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
utils.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
utils.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
utils.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
utils.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
utils.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
utils.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
utils.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
utils.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
utils.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
utils.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
utils.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
utils.sum32_5 = sum32_5;

function assert(cond, msg) {
  if (!cond)
    throw new Error(msg || 'Assertion failed');
}
utils.assert = assert;

utils.inherits = inherits;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
};
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
};
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
};
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
};
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
};
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
};
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
};
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
};
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.shr64_lo = shr64_lo;

},{"inherits":68}],68:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"dup":35}],69:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "6.3.1",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "gitHead": "c53f5cf3d832c0073eb4a4ed423a464cbce68f3e",
  "_id": "elliptic@6.3.1",
  "_shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
  "_from": "elliptic@>=6.2.3 <7.0.0",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "6.0.0",
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "dist": {
    "shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
    "tarball": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz"
  },
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/elliptic-6.3.1.tgz_1465921413402_0.5202967382501811"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz",
  "readme": "ERROR: No README data found!"
}

},{}],70:[function(require,module,exports){
(function (process){
/**
 * JSON RPC methods for Ethereum
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;
var net, request, syncRequest;
if (NODE_JS) {
    net = require("net");
    request = require("request");
    syncRequest = require("sync-request");
    console.debug = console.log;
} else {
    request = require("browser-request");
}
var async = require("async");
var clone = require("clone");
var W3CWebSocket = (NODE_JS) ? require("websocket").w3cwebsocket : WebSocket;
var BigNumber = require("bignumber.js");
var keccak_256 = require("js-sha3").keccak_256;
var errors = require("augur-contracts").errors;
var abi = require("augur-abi");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

function RPCError(err) {
    this.name = err.error || err.name;
    this.message = (err.error || err.name) + ": " + err.message;
}

RPCError.prototype = new Error();

function isFunction(f) {
    return Object.prototype.toString.call(f) === "[object Function]";
}

var HOSTED_NODES = [
    // "https://morden-state.ether.camp/api/v1/transaction/submit"
    "https://eth3.augur.net"
];
var HOSTED_WEBSOCKET = "wss://ws.augur.net";

module.exports = {

    debug: {
        tx: false,
        broadcast: false,
        logs: false
    },

    // geth IPC endpoint (Node-only)
    ipcpath: null,
    socket: null,

    // geth websocket endpoint
    wsUrl: process.env.GETH_WEBSOCKET_URL || HOSTED_WEBSOCKET,

    // initial value 0
    // if connection fails: -1
    // if connection succeeds: 1
    ipcStatus: 0,
    wsStatus: 0,

    // active websocket (if connected)
    websocket: null,

    // local ethereum node address
    localnode: "http://127.0.0.1:8545",

    // Maximum number of transaction verification attempts
    TX_POLL_MAX: 128,

    // Transaction polling interval
    TX_POLL_INTERVAL: 5000,

    // Default timeout for asynchronous POST
    POST_TIMEOUT: 30000,

    DEFAULT_GAS: "0x2fd618",

    ETHER: new BigNumber(10).toPower(18),

    Error: RPCError,

    errors: errors,

    nodes: {
        hosted: HOSTED_NODES.slice(),
        local: null
    },

    requests: 1,

    txs: {},

    rawTxs: {},

    notifications: {},

    unmarshal: function (string, returns, stride, init) {
        var elements, array, position;
        if (string && string.length >= 66) {
            stride = stride || 64;
            elements = Math.ceil((string.length - 2) / stride);
            array = new Array(elements);
            position = init || 2;
            for (var i = 0; i < elements; ++i) {
                array[i] = abi.prefix_hex(
                    string.slice(position, position + stride)
                );
                position += stride;
            }
            if (array.length) {
                if (parseInt(array[0]) === array.length - 1) {
                    array.splice(0, 1);
                } else if (parseInt(array[1]) === array.length - 2 ||
                    parseInt(array[1]) / 32 === array.length - 2) {
                    array.splice(0, 2);
                }
            }
            for (i = 0; i < array.length; ++i) {
                if (returns === "number[]") {
                    array[i] = abi.string(array[i]);
                } else if (returns === "unfix[]") {
                    array[i] = abi.unfix(array[i], "string");
                }
            }
            return array;
        } else {
            return string;
        }
    },

    applyReturns: function (returns, result) {
        var res;
        if (!returns) return result;
        if (result && result !== "0x") {
            if (result.error) return result;
            returns = returns.toLowerCase();
            res = clone(result);
            if (returns && returns.slice(-2) === "[]") {
                res = this.unmarshal(res, returns);
                if (returns === "hash[]" || returns === "hash") {
                    res = abi.hex(res);
                }
            } else if (returns === "string") {
                res = abi.raw_decode_hex(res);
            } else if (returns === "number") {
                res = abi.string(res);
            } else if (returns === "int") {
                res = parseInt(res, 16);
            } else if (returns === "bignumber") {
                res = abi.bignum(res);
            } else if (returns === "unfix") {
                res = abi.unfix(res, "string");
            } else if (returns === "null") {
                res = null;
            } else if (returns === "address" || returns === "address[]") {
                res = abi.format_address(res);
            }
        } else {
            res = result;
        }
        return res;
    },

    parse: function (origResponse, returns, callback) {
        var results, len, err;
        var response = clone(origResponse);
        if (response && response.error) console.log("response:", response);
        try {
            if (response && typeof response === "string") {
                response = JSON.parse(response);
            }
            if (response !== undefined && typeof response === "object" && response !== null) {
                if (response.error) {
                    response = {
                        error: response.error.code,
                        message: response.error.message
                    };
                    if (!callback) return response;
                    callback(response);
                } else if (response.result !== undefined) {
                    if (!callback) return response.result;
                    callback(response.result);
                } else if (response.constructor === Array && response.length) {
                    len = response.length;
                    results = new Array(len);
                    for (var i = 0; i < len; ++i) {
                        results[i] = response[i].result;
                        if (response.error || (response[i] && response[i].error)) {
                            if (this.debug.broadcast) {
                                if (isFunction(callback)) return callback(response.error);
                                throw new this.Error(response.error);
                            }
                        }
                    }
                    if (!isFunction(callback)) return results;
                    callback(results);

                // no result or error field
                } else {
                    err = errors.NO_RESPONSE;
                    err.bubble = response;
                    if (isFunction(callback)) return callback(err);
                    throw new this.Error(err);
                }
            }
        } catch (e) {
            err = e;
            if (e && e.name === "SyntaxError") {
                err = errors.INVALID_RESPONSE;
            }
            if (isFunction(callback)) return callback(err);
            throw new this.Error(err);
        }
    },

    strip: function (tx) {
        var returns;
        if (tx.method === "eth_coinbase") return "address";
        if (tx.params !== undefined && tx.params.length && tx.params[0]) {
            if (tx.params[0].returns) {
                returns = tx.params[0].returns;
                delete tx.params[0].returns;
            }
            if (tx.params[0].invocation) {
                delete tx.params[0].invocation;
            }
        }
        return returns;
    },

    subscriptions: {},

    registerSubscriptionCallback: function (id, callback) {
        this.subscriptions[id] = callback;
    },

    ipcRequests: {},
    wsRequests: {},

    ipcConnect: function (callback) {
        var self = this;
        var received = "";
        this.socket = new net.Socket();
        this.socket.setEncoding("utf8");
        this.socket.on("data", function (data) {
            var parsed;
            try {
                parsed = JSON.parse(data);
            } catch (exc) {
                if (self.debug.broadcast) console.debug(exc);
                received += data;
                try {
                    parsed = JSON.parse(received);
                } catch (ex) {
                    if (self.debug.broadcast) console.debug(ex);
                }
            }
            if (parsed) {
                if (parsed.id !== undefined && parsed.id !== null) {
                    var req = self.ipcRequests[parsed.id];
                    delete self.ipcRequests[parsed.id];
                    self.parse(JSON.stringify(parsed), req.returns, req.callback);
                } else if (parsed.method === "eth_subscription" && parsed.params &&
                    parsed.params.subscription && parsed.params.result &&
                    self.subscriptions[parsed.params.subscription]) {
                    self.subscriptions[parsed.params.subscription](parsed.params.result);
                }
                received = "";
            }
        });
        this.socket.on("end", function () { received = ""; });
        this.socket.on("error", function (err) {
            self.ipcStatus = -1;
            self.socket.destroy();
            received = "";
            if (self.debug.broadcast) {
                console.error("[ethrpc] IPC socket error", self.ipcpath, self.ipcStatus, err);
            }
        });
        this.socket.on("close", function (err) {
            self.ipcStatus = (err) ? -1 : 0;
            received = "";
            if (self.debug.broadcast) {
                console.warn("[ethrpc] IPC socket closed", self.ipcpath, self.ipcStatus);
            }
        });
        this.socket.connect({path: this.ipcpath}, function () {
            self.ipcStatus = 1;
            callback(true);
        });
    },

    wsConnect: function (callback) {
        var self = this;
        var calledCallback = false;
        if (!this.wsUrl) {
            this.wsStatus = -1;
            return callback(false);
        }
        this.websocket = new W3CWebSocket(this.wsUrl);
        this.websocket.onerror = function () {
            if (self.debug.broadcast) {
                console.error("[ethrpc] WebSocket error", self.wsUrl, self.wsStatus);
            }
            self.wsStatus = -1;
            self.wsUrl = null;
        };
        this.websocket.onclose = function () {
            if (self.wsStatus === 1) self.wsStatus = 0;
            if (self.debug.broadcast) {
                console.warn("[ethrpc] WebSocket closed", self.wsUrl, self.wsStatus);
            }
            if (!calledCallback) callback(false);
        };
        this.websocket.onmessage = function (msg) {
            if (msg && msg.data && typeof msg.data === "string") {
                var res = JSON.parse(msg.data);
                if (res.id !== undefined && res.id !== null) {
                    var req = self.wsRequests[res.id];
                    delete self.wsRequests[res.id];
                    self.parse(res, req.returns, req.callback);
                } else if (res.method === "eth_subscription" && res.params &&
                    res.params.subscription && res.params.result &&
                    self.subscriptions[res.params.subscription]) {
                    self.subscriptions[res.params.subscription](res.params.result);
                } else {
                    if (self.debug.broadcast) {
                        console.warn("unknown message received:", msg);
                    }
                }
            }
        };
        this.websocket.onopen = function () {
            self.wsStatus = 1;
            calledCallback = true;
            callback(true);
        };
    },

    ipcSend: function (command, returns, callback) {
        if (this.debug.broadcast) {
            console.log("[ethrpc] IPC request to", this.ipcpath, "\n" + JSON.stringify(command));
        }
        this.ipcRequests[command.id] = {returns: returns, callback: callback};
        if (this.ipcStatus === 1) this.socket.write(JSON.stringify(command));
    },

    wsSend: function (command, returns, callback) {
        if (this.debug.broadcast) {
            console.log("[ethrpc] WebSocket request to", this.wsUrl, "\n" + JSON.stringify(command));
        }
        this.wsRequests[command.id] = {returns: returns, callback: callback};
        if (this.websocket.readyState === this.websocket.OPEN) {
            this.websocket.send(JSON.stringify(command));
        }
    },

    postSync: function (rpcUrl, command, returns) {
        var timeout, req = null;
        if (command.timeout) {
            timeout = command.timeout;
            delete command.timeout;
        } else {
            timeout = this.POST_TIMEOUT;
        }
        if (this.debug.broadcast) {
            console.warn("[ethrpc] Synchronous HTTP request to", rpcUrl + "\n" + JSON.stringify(command));
        }
        if (NODE_JS) {
            req = syncRequest("POST", rpcUrl, {json: command, timeout: timeout});
            var response = req.getBody().toString();
            return this.parse(response, returns);
        }
        if (window.XMLHttpRequest) {
            req = new window.XMLHttpRequest();
        } else {
            req = new window.ActiveXObject("Microsoft.XMLHTTP");
        }
        req.open("POST", rpcUrl, false);
        req.setRequestHeader("Content-type", "application/json");
        req.send(JSON.stringify(command));
        return this.parse(req.responseText, returns);
    },

    post: function (rpcUrl, command, returns, callback) {
        var timeout, self = this;
        if (command.timeout) {
            timeout = command.timeout;
            delete command.timeout;
        } else {
            timeout = this.POST_TIMEOUT;
        }
        if (this.debug.broadcast) {
            console.log("[ethrpc] Asynchronous HTTP request to", rpcUrl + "\n" + JSON.stringify(command));
        }
        request({
            url: rpcUrl,
            method: 'POST',
            json: command,
            timeout: timeout
        }, function (err, response, body) {
            var e;
            if (err) {
                self.primaryNode = null;
                if (self.nodes.local) {
                    if (self.nodes.local === self.localnode) {
                        self.nodes.local = null;
                    }
                    e = errors.LOCAL_NODE_FAILURE;
                    e.bubble = err;
                    e.command = command;
                    return callback(e);
                }
                console.warn("[ethrpc] asynchronous RPC timed out", rpcUrl, command);
                e = errors.RPC_TIMEOUT;
                e.bubble = err;
                e.command = command;
                callback(e);
            } else if (response.statusCode === 200) {
                self.parse(body, returns, callback);
            }
        });
    },

    selectNodes: function () {
        if (this.nodes.local) return [this.nodes.local];
        return this.nodes.hosted.slice();
    },

    // Post JSON-RPC command to all Ethereum nodes
    broadcast: function (command, callback) {
        var nodes, numCommands, returns, result, completed, self = this;
        if (!command || (command.constructor === Object && !command.method) ||
            (command.constructor === Array && !command.length)) {
            if (!callback) return null;
            return callback(null);
        }

        // make sure the ethereum node list isn't empty
        if (!this.nodes.local && !this.nodes.hosted.length && !this.ipcpath && !this.wsUrl) {
            if (isFunction(callback)) return callback(errors.ETHEREUM_NOT_FOUND);
            throw new this.Error(errors.ETHEREUM_NOT_FOUND);
        }

        // parse batched commands and strip "returns" and "invocation" fields
        if (command.constructor === Array) {
            numCommands = command.length;
            returns = new Array(numCommands);
            for (var i = 0; i < numCommands; ++i) {
                returns[i] = this.strip(command[i]);
            }

        // parse commands and strip "returns" and "invocation" fields
        } else {
            returns = this.strip(command);
        }

        // if we're on Node, use IPC if available and ipcpath is specified
        if (NODE_JS && this.ipcpath && command.method) {
            var loopback = this.nodes.local && (
                (this.nodes.local.indexOf("127.0.0.1") > -1 ||
                this.nodes.local.indexOf("localhost") > -1));
            if (!isFunction(callback) && !loopback) {
                throw new this.Error(errors.LOOPBACK_NOT_FOUND);
            }
            if (isFunction(callback) && command.constructor !== Array) {
                if (!this.ipcpath) this.ipcStatus = -1;
                switch (this.ipcStatus) {

                // [0] IPC socket closed / not connected: try to connect
                case 0:
                    return this.ipcConnect(function (connected) {
                        if (!connected) return self.broadcast(command, callback);
                        self.ipcSend(command, returns, callback);
                    });

                // [1] IPC socket connected
                case 1:
                    return this.ipcSend(command, returns, callback);
                }
            }
        }

        // select local / hosted node(s) to receive RPC
        nodes = this.selectNodes();

        // asynchronous request if callback exists
        if (isFunction(callback)) {

            // use websocket if available
            switch (this.wsStatus) {

            // [0] websocket closed / not connected: try to connect
            case 0:
                this.wsConnect(function (connected) {
                    if (!connected) return self.broadcast(command, callback);
                    self.wsSend(command, returns, callback);
                });
                break;

            // [1] websocket connected
            case 1:
                this.wsSend(command, returns, callback);
                break;

            // [-1] websocket errored or unavailable: fallback to HTTP RPC
            default:
                async.eachSeries(nodes, function (node, nextNode) {
                    if (!completed) {
                        if (self.debug.logs) {
                            console.log("nodes:", JSON.stringify(nodes));
                            console.log("post", command.method, "to:", node);
                        }
                        self.post(node, command, returns, function (res) {
                            if (self.debug.logs) {
                                if (res && res.constructor === BigNumber) {
                                    console.log(node, "response:", abi.string(res));
                                } else {
                                    console.log(node, "response:", res);
                                }
                            }
                            if (node === nodes[nodes.length - 1] ||
                                (res !== undefined && res !== null &&
                                !res.error && res !== "0x")) {
                                completed = true;
                                return nextNode({output: res});
                            }
                            nextNode();
                        });
                    }
                }, function (res) {
                    if (!res && res.output === undefined) return callback();
                    callback(res.output);
                });
            }

        // use synchronous http if no callback provided
        } else {
            for (var j = 0, len = nodes.length; j < len; ++j) {
                try {
                    if (this.debug.logs) {
                        console.log("nodes:", JSON.stringify(nodes));
                        console.log("synchronous post", command.method, "to:", nodes[j]);
                    }
                    result = this.postSync(nodes[j], command, returns);
                } catch (e) {
                    if (this.nodes.local) {
                        throw new this.Error(errors.LOCAL_NODE_FAILURE);
                    }
                }
                if (result !== undefined) return result;
            }
            throw new this.Error(errors.NO_RESPONSE);
        }
    },

    marshal: function (command, params, prefix) {
        var payload, action;
        if (prefix === "null") {
            action = command.toString();
        } else {
            action = (prefix || "eth_") + command.toString();
        }

        // direct-to-geth
        payload = {
            id: this.requests++,
            jsonrpc: "2.0",
            method: action
        };
        if (params !== undefined && params !== null) {
            if (params.constructor === Object) {
                if (this.debug.broadcast && params.debug) {
                    payload.debug = clone(params.debug);
                    delete params.debug;
                }
                if (params.timeout) {
                    payload.timeout = params.timeout;
                    delete params.timeout;
                }
                if (JSON.stringify(params) === "{}") {
                    params = [];
                }
            }
            if (params.constructor === Array) {
                for (var i = 0, len = params.length; i < len; ++i) {
                    if (params[i] !== null && params[i] !== undefined &&
                        params[i].constructor === Number) {
                        params[i] = abi.prefix_hex(params[i].toString(16));
                    }
                }
                payload.params = params;
            } else {
                payload.params = [params];
            }
        } else {
            payload.params = [];
        }
        return payload;
    },

    setLocalNode: function (urlstr) {
        this.nodes.local = urlstr || this.localnode;
    },

    useHostedNode: function (host) {
        this.nodes.local = null;
        if (host) {
            if (host.constructor === Object) {
                if (host.http) this.nodes.hosted = [host.http];
                if (host.ws) this.wsUrl = host.ws;
            } else {
                this.nodes.hosted = [host];
            }
        }
    },

    // delete cached network, notification, and transaction data
    clear: function () {
        this.txs = {};
        for (var n in this.notifications) {
            if (!this.notifications.hasOwnProperty(n)) continue;
            if (this.notifications[n]) {
                clearTimeout(this.notifications[n]);
            }
        }
        this.notifications = {};
    },

    // reset to default Ethereum nodes
    reset: function (deleteData) {
        this.nodes.hosted = HOSTED_NODES.slice();
        this.wsUrl = process.env.GETH_WEBSOCKET_URL || HOSTED_WEBSOCKET;
        if (deleteData) this.clear();
    },

    /******************************
     * Ethereum JSON-RPC bindings *
     ******************************/

    raw: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "null"), f);
    },

    eth: function (command, params, f) {
        return this.broadcast(this.marshal(command, params), f);
    },

    net: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "net_"), f);
    },

    web3: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "web3_"), f);
    },

    shh: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "shh_"), f);
    },

    miner: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "miner_"), f);
    },

    admin: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "admin_"), f);
    },

    personal: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "personal_"), f);
    },

    txpool: function (command, params, f) {
        return this.broadcast(this.marshal(command, params, "txpool_"), f);
    },

    sha3: function (data, isHex) {
        if (isHex) data = abi.decode_hex(data);
        return abi.prefix_hex(keccak_256(data));
    },

    gasPrice: function (f) {
        return this.broadcast(this.marshal("gasPrice"), f);
    },

    blockNumber: function (f) {
        if (isFunction(f)) {
            this.broadcast(this.marshal("blockNumber"), f);
        } else {
            return parseInt(this.broadcast(this.marshal("blockNumber")));
        }
    },

    coinbase: function (f) {
        return this.broadcast(this.marshal("coinbase"), f);
    },

    balance: function (address, block, f) {
        if (!f && isFunction(block)) {
            f = block;
            block = null;
        }
        block = block || "latest";
        return this.broadcast(this.marshal("getBalance", [address, block]), f);
    },
    getBalance: function (address, block, f) {
        if (!f && isFunction(block)) {
            f = block;
            block = null;
        }
        block = block || "latest";
        return this.broadcast(this.marshal("getBalance", [address, block]), f);
    },

    txCount: function (address, f) {
        return this.broadcast(this.marshal("getTransactionCount", [address, "latest"]), f);
    },
    getTransactionCount: function (address, f) {
        return this.broadcast(this.marshal("getTransactionCount", [address, "latest"]), f);
    },
    pendingTxCount: function (address, f) {
        return this.broadcast(
            this.marshal("getTransactionCount", [address, "pending"]), f
        );
    },

    sendEther: function (to, value, from, onSent, onSuccess, onFailed) {
        if (to && to.constructor === Object && to.value) {
            value = to.value;
            if (to.from) from = to.from;
            if (to.onSent) onSent = to.onSent;
            if (to.onSuccess) onSuccess = to.onSuccess;
            if (to.onFailed) onFailed = to.onFailed;
            to = to.to;
        }
        return this.transact({
            from: from,
            to: to,
            value: abi.bignum(value).mul(this.ETHER).toFixed(),
            returns: "null"
        }, onSent, onSuccess, onFailed);
    },

    sign: function (address, data, f) {
        return this.broadcast(this.marshal("sign", [address, data]), f);
    },

    getTx: function (hash, f) {
        return this.broadcast(this.marshal("getTransactionByHash", hash), f);
    },
    getTransaction: function (hash, f) {
        return this.broadcast(this.marshal("getTransactionByHash", hash), f);
    },

    peerCount: function (f) {
        if (isFunction(f)) {
            this.broadcast(this.marshal("peerCount", [], "net_"), f);
        } else {
            return parseInt(this.broadcast(this.marshal("peerCount", [], "net_")));
        }
    },

    accounts: function (f) {
        return this.broadcast(this.marshal("accounts"), f);
    },

    mining: function (f) {
        return this.broadcast(this.marshal("mining"), f);
    },

    hashrate: function (f) {
        if (isFunction(f)) {
            this.broadcast(this.marshal("hashrate"), f);
        } else {
            return parseInt(this.broadcast(this.marshal("hashrate")));
        }
    },

    getBlockByHash: function (hash, full, f) {
        full = (full !== undefined) ? full : true;
        return this.broadcast(this.marshal("getBlockByHash", [hash, full]), f);
    },

    getBlock: function (number, full, f) {
        full = (full !== undefined) ? full : true;
        return this.broadcast(this.marshal("getBlockByNumber", [number, full]), f);
    },
    getBlockByNumber: function (number, full, f) {
        full = (full !== undefined) ? full : true;
        return this.broadcast(this.marshal("getBlockByNumber", [number, full]), f);
    },

    version: function (f) {
        return this.broadcast(this.marshal("version", [], "net_"), f);
    },
    netVersion: function (f) {
        return this.broadcast(this.marshal("version", [], "net_"), f);
    },

    // estimate a transaction's gas cost
    estimateGas: function (tx, f) {
        return this.broadcast(this.marshal("estimateGas", tx), f);
    },

    // execute functions on contracts on the blockchain
    call: function (tx, f) {
        tx.gas = tx.gas || this.DEFAULT_GAS;
        return this.broadcast(this.marshal("call", [tx, "latest"]), f);
    },

    sendTx: function (tx, f) {
        tx.gas = tx.gas || this.DEFAULT_GAS;
        return this.broadcast(this.marshal("sendTransaction", tx), f);
    },
    sendTransaction: function (tx, f) {
        tx.gas = tx.gas || this.DEFAULT_GAS;
        return this.broadcast(this.marshal("sendTransaction", tx), f);
    },

    // sendRawTx(RLP(tx.signed(privateKey))) -> txhash
    sendRawTx: function (rawTx, f) {
        return this.broadcast(this.marshal("sendRawTransaction", abi.prefix_hex(rawTx)), f);
    },
    sendRawTransaction: function (rawTx, f) {
        return this.broadcast(this.marshal("sendRawTransaction", abi.prefix_hex(rawTx)), f);
    },

    receipt: function (txhash, f) {
        return this.broadcast(this.marshal("getTransactionReceipt", txhash), f);
    },
    getTransactionReceipt: function (txhash, f) {
        return this.broadcast(this.marshal("getTransactionReceipt", txhash), f);
    },

    clientVersion: function (f) {
        return this.broadcast(this.marshal("clientVersion", [], "web3_"), f);
    },

    compileSerpent: function (code, f) {
        return this.broadcast(this.marshal("compileSerpent", code), f);
    },

    compileSolidity: function (code, f) {
        return this.broadcast(this.marshal("compileSolidity", code), f);
    },

    compileLLL: function (code, f) {
        return this.broadcast(this.marshal("compileLLL", code), f);
    },

    subscribe: function (label, options, f) {
        return this.broadcast(this.marshal("subscribe", [label, options]), f);
    },

    subscribeLogs: function (options, f) {
        return this.broadcast(this.marshal("subscribe", ["logs", options]), f);
    },

    subscribeNewBlocks: function (options, f) {
        if (!f && isFunction(options)) {
            f = options;
            options = null;
        }
        return this.broadcast(this.marshal("subscribe", ["newBlocks", options || {
            includeTransactions: false,
            transactionDetails: false
        }]), f);
    },    

    unsubscribe: function (label, f) {
        return this.broadcast(this.marshal("unsubscribe", label), f);
    },

    newFilter: function (params, f) {
        return this.broadcast(this.marshal("newFilter", params), f);
    },

    newBlockFilter: function (f) {
        return this.broadcast(this.marshal("newBlockFilter"), f);
    },

    newPendingTransactionFilter: function (f) {
        return this.broadcast(this.marshal("newPendingTransactionFilter"), f);
    },

    getFilterChanges: function (filter, f) {
        return this.broadcast(this.marshal("getFilterChanges", filter), f);
    },

    getFilterLogs: function (filter, f) {
        return this.broadcast(this.marshal("getFilterLogs", filter), f);
    },

    getLogs: function (filter, f) {
        return this.broadcast(this.marshal("getLogs", filter), f);
    },

    uninstallFilter: function (filter, f) {
        return this.broadcast(this.marshal("uninstallFilter", filter), f);
    },

    // publish a new contract to the blockchain (from the coinbase account)
    publish: function (compiled, f) {
        return this.sendTx({from: this.coinbase(), data: compiled}, f);
    },

    // Read the code in a contract on the blockchain
    read: function (address, block, f) {
        return this.broadcast(this.marshal("getCode", [address, block || "latest"]), f);
    },
    getCode: function (address, block, f) {
        return this.broadcast(this.marshal("getCode", [address, block || "latest"]), f);
    },

    // Fast-forward a specified number of blocks
    fastforward: function (blocks, mine, callback) {
        var startBlock, endBlock, self = this;
        function fastforward() {
            self.blockNumber(function (blockNumber) {
                blockNumber = parseInt(blockNumber);
                if (startBlock === undefined) {
                    startBlock = blockNumber;
                    endBlock = blockNumber + parseInt(blocks);
                }
                if (blockNumber >= endBlock) {
                    if (!mine) return callback(endBlock);
                    self.miner("stop", [], function () {
                        callback(endBlock);
                    });
                } else {
                    setTimeout(fastforward, 3000);
                }
            });
        }
        if (!callback && isFunction(mine)) {
            callback = mine;
            mine = null;
        }
        if (!mine) return fastforward();
        this.miner("start", [], fastforward);
    },

    // Ethereum node status checks

    listening: function (f) {
        var response, self = this;
        try {
            if (!this.nodes.hosted.length && !this.nodes.local && !this.ipcpath) {
                throw new this.Error(errors.ETHEREUM_NOT_FOUND);
            }
            if (isFunction(f)) {
                var timeout = setTimeout(function () {
                    if (!response) f(false);
                }, 2500);
                setTimeout(function () {
                    self.net("listening", [], function (res) {
                        clearTimeout(timeout);
                        f(!!res);
                    });
                }, 0);
            } else {
                return !!this.net("listening");
            }
        } catch (e) {
            if (isFunction(f)) return f(false);
            return false;
        }
    },

    unlocked: function (account, f) {
        if (!this.nodes.hosted.length && !this.nodes.local && !this.ipcpath) {
            throw new this.Error(errors.ETHEREUM_NOT_FOUND);
        }
        try {
            if (isFunction(f)) {
                this.sign(account, "0x00000000000000000000000000000000000000000000000000000000000f69b5", function (res) {
                    if (res) {
                        if (res.error) return f(false);
                        return f(true);
                    }
                    f(false);
                });
            } else {
                var res = this.sign(account, "0x00000000000000000000000000000000000000000000000000000000000f69b5");
                if (res) {
                    if (res.error) {
                        return false;
                    }
                    return true;
                }
                return false;
            }
        } catch (e) {
            if (isFunction(f)) return f(false);
            return false;
        }
    },

    /**
     * Invoke a function from a contract on the blockchain.
     *
     * Input tx format:
     * {
     *    from: <sender's address> (hexstring; optional, coinbase default)
     *    to: <contract address> (hexstring)
     *    method: <function name> (string)
     *    signature: <function signature, e.g. "iia"> (string)
     *    params: <parameters passed to the function> (optional)
     *    returns: <"number[]", "int", "BigNumber", or "string" (default)>
     *    send: <true to sendTransaction, false to call (default)>
     * }
     */
    invoke: function (itx, f) {
        var tx, dataAbi, packaged, invocation, invoked, err;
        if (itx) {
            if (itx.send && itx.invocation && isFunction(itx.invocation.invoke)) {
                return itx.invocation.invoke.call(itx.invocation.context, itx, f);
            } else {
                tx = clone(itx);
                if (tx.params === undefined || tx.params === null) {
                    tx.params = [];
                } else if (tx.params.constructor !== Array) {
                    tx.params = [tx.params];
                }
                for (var j = 0; j < tx.params.length; ++j) {
                    if (tx.params[j] !== undefined && tx.params[j] !== null &&
                        tx.params[j].constructor === Number) {
                        tx.params[j] = abi.prefix_hex(tx.params[j].toString(16));
                    }
                }
                if (tx.to) tx.to = abi.format_address(tx.to);
                if (tx.from) tx.from = abi.format_address(tx.from);
                dataAbi = abi.encode(tx);
                if (dataAbi) {
                    packaged = {
                        from: tx.from,
                        to: tx.to,
                        data: dataAbi,
                        gas: tx.gas || this.DEFAULT_GAS,
                        gasPrice: tx.gasPrice
                    };
                    if (tx.timeout) packaged.timeout = tx.timeout;
                    if (tx.value) packaged.value = tx.value;
                    if (tx.returns) packaged.returns = tx.returns;
                    if (this.debug.broadcast) {
                        packaged.debug = clone(tx);
                        packaged.debug.batch = false;
                    }
                    invocation = (tx.send) ? this.sendTx : this.call;
                    invoked = true;
                    return invocation.call(this, packaged, f);
                }
            }
        }
        if (!invoked) {
            err = clone(errors.TRANSACTION_FAILED);
            err.bubble = "!invoked";
            err.tx = itx;
            if (isFunction(f)) return f(err);
            return err;
        }
    },

    /**
     * Batched RPC commands
     */
    batch: function (txlist, f) {
        var self = this;
        var numCommands, rpclist, callbacks, tx, dataAbi, packaged, invocation, returns;
        if (txlist.constructor !== Array) {
            if (this.debug.logs) {
                console.warn("expected array for batch RPC, invoking instead");
            }
            return this.invoke(txlist, f);
        }
        numCommands = txlist.length;
        rpclist = new Array(numCommands);
        callbacks = new Array(numCommands);
        returns = [];
        for (var i = 0; i < numCommands; ++i) {
            tx = clone(txlist[i]);
            if (tx.params === undefined || tx.params === null) {
                tx.params = [];
            } else if (tx.params.constructor !== Array) {
                tx.params = [tx.params];
            }
            for (var j = 0; j < tx.params.length; ++j) {
                if (tx.params[j].constructor === Number) {
                    tx.params[j] = abi.prefix_hex(tx.params[j].toString(16));
                }
            }
            if (tx.from) tx.from = abi.format_address(tx.from);
            if (tx.to) tx.to = abi.format_address(tx.to);
            dataAbi = abi.encode(tx);
            if (dataAbi) {
                if (isFunction(tx.callback)) {
                    callbacks[i] = tx.callback;
                    delete tx.callback;
                }
                packaged = {
                    from: tx.from,
                    to: tx.to,
                    data: dataAbi,
                    gas: tx.gas || this.DEFAULT_GAS,
                    gasPrice: tx.gasPrice
                };
                if (tx.timeout) packaged.timeout = tx.timeout;
                if (tx.value) packaged.value = tx.value;
                if (tx.returns) packaged.returns = tx.returns;
                returns.push(tx.returns);
                if (this.debug.broadcast) {
                    packaged.debug = clone(tx);
                    packaged.debug.batch = true;
                }
                invocation = (tx.send) ? "sendTransaction" : "call";
                rpclist[i] = this.marshal(invocation, [packaged, "latest"]);
            } else {
                console.error("unable to package commands for batch RPC");
                return rpclist;
            }
        }
        if (!f) {
            var res = this.broadcast(rpclist);
            var result = new Array(numCommands);
            for (i = 0; i < numCommands; ++i) {
                if (returns[i]) {
                    result[i] = self.applyReturns(returns[i], res[i]);
                } else {
                    result[i] = res[i];
                }
            }
            return result;
        }

        // callback on whole array
        if (isFunction(f)) return this.broadcast(rpclist, function (res) {
            var result = new Array(numCommands);
            for (var i = 0; i < numCommands; ++i) {
                if (returns[i]) {
                    result[i] = self.applyReturns(returns[i], res[i]);
                } else {
                    result[i] = res[i];
                }
            }
            f(result);
        });

        // callback on each element
        this.broadcast(rpclist, function (res) {
            if (!res) return console.error(errors.TRANSACTION_FAILED);
            if (res.constructor === Array && res.length) {
                for (var j = 0; j < numCommands; ++j) {
                    if (returns[j]) {
                        res[j] = self.applyReturns(returns[j], res[j]);
                    }
                    if (res[j] && callbacks[j]) {
                        callbacks[j](res[j]);
                    }
                }
            } else {
                if (callbacks.length && isFunction(callbacks[0])) {
                    callbacks[0](res);
                }
            }
        });
    },

    errorCodes: function (method, returns, response) {
        if (response) {
            if (response.constructor === Array) {
                for (var i = 0, len = response.length; i < len; ++i) {
                    response[i] = this.errorCodes(method, returns, response[i]);
                }
            } else if (response.name && response.message && response.stack) {
                response.error = response.name;
            } else if (!response.error) {
                if (errors[response]) {
                    response = {
                        error: response,
                        message: errors[response]
                    };
                } else {
                    if (returns && returns !== "string" ||
                        (response && response.constructor === String &&
                        response.slice(0,2) === "0x")) {
                        var responseNumber = abi.bignum(response, "string", true);
                        if (responseNumber) {
                            if (errors[method] && errors[method][responseNumber]) {
                                response = {
                                    error: responseNumber,
                                    message: errors[method][responseNumber]
                                };
                            }
                        }
                    }
                }
            }
        }
        return response;
    },

    fire: function (itx, callback) {
        var self = this;
        var tx = clone(itx);
        if (!isFunction(callback)) {
            var res = this.errorCodes(itx.method, itx.returns, this.applyReturns(itx.returns, this.invoke(tx)));
            if (res) return res;
            throw new this.Error(errors.NO_RESPONSE);
        }
        this.invoke(tx, function (res) {
            if (res) {
                res = self.errorCodes(itx.method, itx.returns, self.applyReturns(itx.returns, res));
                return callback(res);
            }
            callback(errors.NO_RESPONSE);
        });
    },

    /***************************************
     * Send-call-confirm callback sequence *
     ***************************************/

    checkBlockHash: function (tx, callreturn, itx, txhash, returns, onSent, onSuccess, onFailed) {
        if (!this.txs[txhash]) this.txs[txhash] = {};
        if (this.txs[txhash].count === undefined) this.txs[txhash].count = 0;
        ++this.txs[txhash].count;
        if (this.debug.tx) console.debug("checkBlockHash:", tx, callreturn, itx);
        if (tx && tx.blockHash && abi.number(tx.blockHash) !== 0) {
            tx.callReturn = callreturn;
            tx.txHash = tx.hash;
            delete tx.hash;
            this.txs[txhash].status = "confirmed";
            clearTimeout(this.notifications[txhash]);
            delete this.notifications[txhash];
            if (isFunction(onSuccess)) onSuccess(tx);
        } else {
            var self = this;
            if (this.txs[txhash].count < this.TX_POLL_MAX) {
                this.notifications[txhash] = setTimeout(function () {
                    if (self.txs[txhash].status === "pending") {
                        self.txNotify(callreturn, itx, txhash, returns, onSent, onSuccess, onFailed);
                    }
                }, this.TX_POLL_INTERVAL);
            } else {
                self.txs[txhash].status = "unconfirmed";
                if (isFunction(onFailed)) onFailed(errors.TRANSACTION_NOT_CONFIRMED);
            }
        }
    },

    txNotify: function (callreturn, itx, txhash, returns, onSent, onSuccess, onFailed) {
        var self = this;
        this.getTx(txhash, function (tx) {
            if (self.debug.tx) console.debug("txNofity.getTx:", tx);
            if (tx) {
                return self.checkBlockHash(tx, callreturn, itx, txhash, returns, onSent, onSuccess, onFailed);
            }
            self.txs[txhash].status = "failed";
            if (self.debug.tx)
                console.log("raw transactions:", self.rawTxs);

            // resubmit if this is a raw transaction and has a duplicate nonce
            if (self.rawTxs[txhash] && self.rawTxs[txhash].tx) {
                var duplicateNonce;
                for (var hash in self.rawTxs) {
                    if (!self.rawTxs.hasOwnProperty(hash)) continue;
                    if (self.rawTxs[hash].tx.nonce === self.rawTxs[txhash].tx.nonce &&
                        JSON.stringify(self.rawTxs[hash].tx) !== JSON.stringify(self.rawTxs[txhash].tx)) {
                        duplicateNonce = true;
                        break;
                    }
                }
                if (duplicateNonce) {
                    if (returns) itx.returns = returns;
                    self.txs[txhash].status = "resubmitted";
                    return self.transact(itx, onSent, onSuccess, onFailed);
                } else {
                    if (isFunction(onFailed)) onFailed(errors.TRANSACTION_NOT_FOUND);
                }
            } else {
                if (isFunction(onFailed)) onFailed(errors.TRANSACTION_NOT_FOUND);
            }
        });
    },

    confirmTx: function (tx, txhash, returns, onSent, onSuccess, onFailed) {
        var self = this;
        if (tx && txhash) {
            if (errors[txhash]) {
                if (isFunction(onFailed)) onFailed({
                    error: txhash,
                    message: errors[txhash],
                    tx: tx
                });
            } else {
                if (this.txs[txhash]) {
                    if (isFunction(onFailed)) onFailed(errors.DUPLICATE_TRANSACTION);
                } else {
                    this.txs[txhash] = {hash: txhash, tx: tx, count: 0, status: "pending"};
                    this.txs[txhash].tx.returns = returns;
                    return this.getTx(txhash, function (sent) {
                        if (self.debug.tx) console.debug("sent:", sent);
                        if (returns !== "null") {
                            return self.call({
                                from: sent.from,
                                to: sent.to || tx.to,
                                value: sent.value || tx.value,
                                data: sent.input
                            }, function (callReturn) {
                                if (callReturn) {
                                    if (errors[callReturn]) {
                                        self.txs[txhash].status = "failed";
                                        if (isFunction(onFailed)) onFailed({
                                            error: callReturn,
                                            message: errors[callReturn],
                                            tx: tx
                                        });
                                    } else {

                                        // check if the call return is an error code
                                        var errorCheck = self.errorCodes(tx.method, tx.returns, callReturn);
                                        if (errorCheck.constructor === Object && errorCheck.error) {
                                            self.txs[txhash].status = "failed";
                                            if (isFunction(onFailed)) onFailed(errorCheck);
                                        } else if (errors[errorCheck]) {
                                            self.txs[txhash].status = "failed";
                                            if (isFunction(onFailed)) onFailed({
                                                error: errorCheck,
                                                message: errors[errorCheck],
                                                tx: tx
                                            });
                                        } else {
                                            try {

                                                // no errors found, so transform to the requested
                                                // return type, specified by "returns" parameter
                                                self.txs[txhash].callReturn = self.applyReturns(returns, callReturn);

                                                // send the transaction hash and return value back
                                                // to the client, using the onSent callback
                                                onSent({
                                                    txHash: txhash,
                                                    callReturn: self.txs[txhash].callReturn
                                                });

                                                // if an onSuccess callback was supplied, then
                                                // poll the network until the transaction is
                                                // included in a block (i.e., has a non-null
                                                // blockHash field)
                                                if (isFunction(onSuccess)) {
                                                    self.txNotify(
                                                        self.txs[txhash].callReturn,
                                                        tx,
                                                        txhash,
                                                        returns,
                                                        onSent,
                                                        onSuccess,
                                                        onFailed
                                                    );
                                                }

                                            // something went wrong :(
                                            } catch (e) {
                                                self.txs[txhash].status = "failed";
                                                if (isFunction(onFailed)) onFailed(e);
                                            }
                                        }
                                    }

                                // no return value for call
                                } else {
                                    self.txs[txhash].status = "failed";
                                    if (isFunction(onFailed)) onFailed(errors.NULL_CALL_RETURN);
                                }
                            });
                        }

                        // if returns type is null, skip the intermediate call
                        onSent({ txHash: txhash, callReturn: null });
                        if (isFunction(onSuccess)) {
                            self.txNotify(null, tx, txhash, returns, onSent, onSuccess, onFailed);
                        }
                    });
                }
            }
        }
    },

    transact: function (tx, onSent, onSuccess, onFailed) {
        var self = this;
        var returns = tx.returns;
        tx.send = true;
        delete tx.returns;
        if (!isFunction(onSent)) return this.invoke(tx);
        this.invoke(tx, function (txhash) {
            if (self.debug.tx) console.debug("txhash:", txhash);
            if (txhash) {
                if (txhash.error) {
                    if (isFunction(onFailed)) onFailed(txhash);
                } else {
                    txhash = abi.prefix_hex(abi.pad_left(abi.strip_0x(txhash)));
                    self.confirmTx(tx, txhash, returns, onSent, onSuccess, onFailed);
                }
            } else {
                if (isFunction(onFailed)) onFailed(errors.NULL_RESPONSE);
            }
        });
    }
};

}).call(this,require('_process'))

},{"_process":351,"async":2,"augur-abi":3,"augur-contracts":74,"bignumber.js":147,"browser-request":13,"clone":14,"js-sha3":76,"net":148,"request":150,"sync-request":150,"websocket":150}],71:[function(require,module,exports){
arguments[4][8][0].apply(exports,arguments)
},{"dup":8}],72:[function(require,module,exports){
module.exports={
    "10101": {
        "Backstops": "0x2bb90689bc93349e37b0ec7b9d77bd54ab7e28ce", 
        "Branches": "0xce436603c54c8990b75bd45a56563c1b6f3c53ff", 
        "BuyAndSellShares": "0x80fcba1394e46de1a6b66c0540d04ca61da41ae9", 
        "Cash": "0x07564bc74fe4e75c2009e38745e1b347cc5f850c", 
        "CloseMarket": "0xb80f424b417dd76df321d0b2f54a0874db29bd6b", 
        "CloseMarketOne": "0xab16062bd3da6cc6abf085afc13c491f56e25f96", 
        "CloseMarketTwo": "0x9f08e5f1f17d79c7505e47eaf1402c6965c58377", 
        "CollectFees": "0x4edc1a8480869b6c320226231f9fcdd0ee6afcad", 
        "CompleteSets": "0xffef3f155ea906fb5442681efce7fd07dece7cef", 
        "CompositeGetters": "0xe574be585571337819ddba37b7ca84ab69b90e96", 
        "Consensus": "0xd812515a98a6d8637e65f3333f14b3e889f2c075", 
        "ConsensusData": "0x3b641b0fa2f11deb3f864613212c1b20a1e57322", 
        "CreateBranch": "0x78e71b15babbca45632d2d50973e8cebb2b4ecde", 
        "CreateMarket": "0x00974c541b2b1e59360581f0b4c2eaa41ffdd359", 
        "EventResolution": "0x3818ef75c135fde069ca86b9f9617cc9a5700a48", 
        "Events": "0x05377e936e4abbb68efdacfca63653b8bf7c7dc8", 
        "ExpiringEvents": "0x92ac3bba03fa0cf6a582124030a532368b751f02", 
        "Faucets": "0xd0d5f9e79b9ccb4557f4d4422e68bfa8cd5f9539", 
        "ForkPenalize": "0xf5c02f6e5a6296aaf261c957fec41992808b868b", 
        "Forking": "0x85f8d21a6d1903818789a37d691e131ed1e7f3ff", 
        "FxpFunctions": "0x3d66c0319ea224d26d68ca41937b5aabd1f3577f", 
        "Info": "0x1bb46e3a4d936e0b47d3f5f4734a2f5d771de07a", 
        "MakeReports": "0x322b59779c666690643293b09d848522bcb46662", 
        "Markets": "0x6d158fae63ee0632418aa67b50fd76816225472e", 
        "PenalizationCatchup": "0xd960e0d1d1360edcfc77e067911b801aa1e603b4", 
        "PenalizeNotEnoughReports": "0xa3af36d473f4fbb6874636f0ed684678718fa3ee", 
        "ProportionCorrect": "0xad3570357dd6c1b1a153c05b627c3a6374368d7b", 
        "Reporting": "0x9a284f91af1fbc91cdbf0e04a0b04b6218a96b42", 
        "ReportingThreshold": "0xc59472e2ec310736341b3eb305b18d181dd25896", 
        "RoundTwo": "0x634f03d331f7da40e09054d5236a53821b09e774", 
        "RoundTwoPenalize": "0xe8374d6cf11b4758728e300255ca9133d0c715cf", 
        "SendReputation": "0xcb49bad3a451a138bc2739b75c21d227111d54a4", 
        "SlashRep": "0xc1cdb84860d7bb4f16025b3bfcc7d932f975925b", 
        "Trade": "0x562794c3d16767ac4b726b1e63524649f5e7bf46", 
        "Trades": "0x504256f9405270a90bebca80387c7d4cc897b798"
    }, 
    "2": {
        "Backstops": "0xf9c9a87f339b76dc007848ab50363116ec1af05b", 
        "Branches": "0x52af2540e03b0d0b73e3c7843c236e82ed959ac6", 
        "BuyAndSellShares": "0x26bd983a1c87352c96399615c025b175862e7978", 
        "Cash": "0xee01fd89924dfd409bf1356072f98138c57bd7cc", 
        "CloseMarket": "0xc9a1dd0bccc72527bc5957daa9677d98862d8932", 
        "CloseMarketOne": "0x4e433f8bde4a0afc59bec1b4d200b84435aafd9e", 
        "CloseMarketTwo": "0x5e3972e215854523c977ecb9faa21efeb0bcaa0a", 
        "CollectFees": "0x59c8771527a8b9f7a8d1686a5d0abee424bee648", 
        "CompleteSets": "0xf64657c13c7dcae029b84ce099dcc0751fc41cc2", 
        "CompositeGetters": "0xc42826de38b20a7894cdc1a096bdbcee9c57dbf1", 
        "Consensus": "0xd752e83681d78c344dc1636f3088294b8573dc49", 
        "ConsensusData": "0x3ed2cdd6bfbb4368a249368ee681b77fc9965492", 
        "CreateBranch": "0x6577c99511bc1d5eb74bfde123881a21428ae812", 
        "CreateMarket": "0x54894e13b69e760e9d0f6af18b9b2c87c5fc5525", 
        "EventResolution": "0x34eea9d6769355b56348f22d6e1e2b25fbd8f513", 
        "Events": "0xa80cb397a4a0f401980c758fa768d5c0f6d6d5f2", 
        "ExpiringEvents": "0xd2cfe56ceb218117da138fe6a7450aa8c6b450d2", 
        "Faucets": "0xf3315a83f8b53fd199e16503f4b905716af4751f", 
        "ForkPenalize": "0xc3c8471f3721fcf2d0824424c8ab61ff1f054729", 
        "Forking": "0x08a31edc4d5e6b19745ee07345d0052b945f3a0e", 
        "FxpFunctions": "0xdcd34a389bb8e51356bbf3f191682a1a114e1bb0", 
        "Info": "0x0ec7078eed298506918767f610d0b69fbe80f4fc", 
        "MakeReports": "0xf060d000aa0603b4670a0d27afced0047213c023", 
        "Markets": "0x35c70a5372d7643739ac1ee6de6ce03311d28c42", 
        "PenalizationCatchup": "0x0e92a0e24c4315804b6beeba5bb9eb30b596fd5a", 
        "PenalizeNotEnoughReports": "0x6a51b8d60052308f84ea652e291e2f39e03a2e0d", 
        "ProportionCorrect": "0x099c0ac81d1b44e289c7d1a9aab5158e17b476b5", 
        "Reporting": "0x95b46aa63e212de35607bd867592de7b3886df07", 
        "ReportingThreshold": "0xf90466aaa6028f5389b9549372aa286ba793ece6", 
        "RoundTwo": "0x915941fcf8fa17b933705f8cff57f852ba524a3e", 
        "RoundTwoPenalize": "0x39fe055135dbf244e81b7d840d262bba2ef3fc3d", 
        "SendReputation": "0x4e7ffa77266d9935432348db6dc2fda3d48c3972", 
        "SlashRep": "0x56553d406fdc17e28168e5894c131f6c45e109ae", 
        "Trade": "0xdf0c814f16e9ecf90f28e22996edadaf702239bd", 
        "Trades": "0x55d17c58426f7ae2374d882a19b43ae031a63246"
    }
}
},{}],73:[function(require,module,exports){
arguments[4][10][0].apply(exports,arguments)
},{"dup":10}],74:[function(require,module,exports){
arguments[4][11][0].apply(exports,arguments)
},{"./contracts":72,"./errors":73,"./tx":75,"dup":11}],75:[function(require,module,exports){
arguments[4][12][0].apply(exports,arguments)
},{"./api":71,"./contracts":72,"clone":14,"dup":12}],76:[function(require,module,exports){
(function (global){
/*
 * js-sha3 v0.3.1
 * https://github.com/emn178/js-sha3
 *
 * Copyright 2015, emn178@gmail.com
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */
;(function(root, undefined) {
  'use strict';

  var NODE_JS = typeof(module) != 'undefined';
  if(NODE_JS) {
    root = global;
    if(root.JS_SHA3_TEST) {
      root.navigator = { userAgent: 'Chrome'};
    }
  }
  var CHROME = (root.JS_SHA3_TEST || !NODE_JS) && navigator.userAgent.indexOf('Chrome') != -1;
  var HEX_CHARS = '0123456789abcdef'.split('');
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 
            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 
            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];

  var blocks = [], s = [];

  var keccak_224 = function(message) {
    return keccak(message, 224, KECCAK_PADDING);
  };

  var keccak_256 = function(message) {
    return keccak(message, 256, KECCAK_PADDING);
  };

  var keccak_384 = function(message) {
    return keccak(message, 384, KECCAK_PADDING);
  };

  var sha3_224 = function(message) {
    return keccak(message, 224, PADDING);
  };

  var sha3_256 = function(message) {
    return keccak(message, 256, PADDING);
  };

  var sha3_384 = function(message) {
    return keccak(message, 384, PADDING);
  };

  var sha3_512 = function(message) {
    return keccak(message, 512, PADDING);
  };

  var keccak = function(message, bits, padding) {
    var notString = typeof(message) != 'string';
    if(notString && message.constructor == root.ArrayBuffer) {
      message = new Uint8Array(message);
    }

    if(bits === undefined) {
      bits = 512;
      padding = KECCAK_PADDING;
    }

    var block, code, end = false, index = 0, start = 0, length = message.length,
        n, i, h, l, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, 
        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, 
        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, 
        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    var blockCount = (1600 - bits * 2) / 32;
    var byteCount = blockCount * 4;

    for(i = 0;i < 50;++i) {
      s[i] = 0;
    }

    block = 0;
    do {
      blocks[0] = block;
      for(i = 1;i < blockCount + 1;++i) {
        blocks[i] = 0;
      }
      if(notString) {
        for (i = start;index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = start;index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      start = i - byteCount;
      if(index == length) {
        blocks[i >> 2] |= padding[i & 3];
        ++index;
      }
      block = blocks[blockCount];
      if(index > length && i < byteCount) {
        blocks[blockCount - 1] |= 0x80000000;
        end = true;
      }

      for(i = 0;i < blockCount;++i) {
        s[i] ^= blocks[i];
      }

      for(n = 0; n < 48; n += 2) {
        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

        h = c8 ^ ((c2 << 1) | (c3 >>> 31));
        l = c9 ^ ((c3 << 1) | (c2 >>> 31));
        s[0] ^= h;
        s[1] ^= l;
        s[10] ^= h;
        s[11] ^= l;
        s[20] ^= h;
        s[21] ^= l;
        s[30] ^= h;
        s[31] ^= l;
        s[40] ^= h;
        s[41] ^= l;
        h = c0 ^ ((c4 << 1) | (c5 >>> 31));
        l = c1 ^ ((c5 << 1) | (c4 >>> 31));
        s[2] ^= h;
        s[3] ^= l;
        s[12] ^= h;
        s[13] ^= l;
        s[22] ^= h;
        s[23] ^= l;
        s[32] ^= h;
        s[33] ^= l;
        s[42] ^= h;
        s[43] ^= l;
        h = c2 ^ ((c6 << 1) | (c7 >>> 31));
        l = c3 ^ ((c7 << 1) | (c6 >>> 31));
        s[4] ^= h;
        s[5] ^= l;
        s[14] ^= h;
        s[15] ^= l;
        s[24] ^= h;
        s[25] ^= l;
        s[34] ^= h;
        s[35] ^= l;
        s[44] ^= h;
        s[45] ^= l;
        h = c4 ^ ((c8 << 1) | (c9 >>> 31));
        l = c5 ^ ((c9 << 1) | (c8 >>> 31));
        s[6] ^= h;
        s[7] ^= l;
        s[16] ^= h;
        s[17] ^= l;
        s[26] ^= h;
        s[27] ^= l;
        s[36] ^= h;
        s[37] ^= l;
        s[46] ^= h;
        s[47] ^= l;
        h = c6 ^ ((c0 << 1) | (c1 >>> 31));
        l = c7 ^ ((c1 << 1) | (c0 >>> 31));
        s[8] ^= h;
        s[9] ^= l;
        s[18] ^= h;
        s[19] ^= l;
        s[28] ^= h;
        s[29] ^= l;
        s[38] ^= h;
        s[39] ^= l;
        s[48] ^= h;
        s[49] ^= l;

        b0 = s[0];
        b1 = s[1];
        b32 = (s[11] << 4) | (s[10] >>> 28);
        b33 = (s[10] << 4) | (s[11] >>> 28);
        b14 = (s[20] << 3) | (s[21] >>> 29);
        b15 = (s[21] << 3) | (s[20] >>> 29);
        b46 = (s[31] << 9) | (s[30] >>> 23);
        b47 = (s[30] << 9) | (s[31] >>> 23);
        b28 = (s[40] << 18) | (s[41] >>> 14);
        b29 = (s[41] << 18) | (s[40] >>> 14);
        b20 = (s[2] << 1) | (s[3] >>> 31);
        b21 = (s[3] << 1) | (s[2] >>> 31);
        b2 = (s[13] << 12) | (s[12] >>> 20);
        b3 = (s[12] << 12) | (s[13] >>> 20);
        b34 = (s[22] << 10) | (s[23] >>> 22);
        b35 = (s[23] << 10) | (s[22] >>> 22);
        b16 = (s[33] << 13) | (s[32] >>> 19);
        b17 = (s[32] << 13) | (s[33] >>> 19);
        b48 = (s[42] << 2) | (s[43] >>> 30);
        b49 = (s[43] << 2) | (s[42] >>> 30);
        b40 = (s[5] << 30) | (s[4] >>> 2);
        b41 = (s[4] << 30) | (s[5] >>> 2);
        b22 = (s[14] << 6) | (s[15] >>> 26);
        b23 = (s[15] << 6) | (s[14] >>> 26);
        b4 = (s[25] << 11) | (s[24] >>> 21);
        b5 = (s[24] << 11) | (s[25] >>> 21);
        b36 = (s[34] << 15) | (s[35] >>> 17);
        b37 = (s[35] << 15) | (s[34] >>> 17);
        b18 = (s[45] << 29) | (s[44] >>> 3);
        b19 = (s[44] << 29) | (s[45] >>> 3);
        b10 = (s[6] << 28) | (s[7] >>> 4);
        b11 = (s[7] << 28) | (s[6] >>> 4);
        b42 = (s[17] << 23) | (s[16] >>> 9);
        b43 = (s[16] << 23) | (s[17] >>> 9);
        b24 = (s[26] << 25) | (s[27] >>> 7);
        b25 = (s[27] << 25) | (s[26] >>> 7);
        b6 = (s[36] << 21) | (s[37] >>> 11);
        b7 = (s[37] << 21) | (s[36] >>> 11);
        b38 = (s[47] << 24) | (s[46] >>> 8);
        b39 = (s[46] << 24) | (s[47] >>> 8);
        b30 = (s[8] << 27) | (s[9] >>> 5);
        b31 = (s[9] << 27) | (s[8] >>> 5);
        b12 = (s[18] << 20) | (s[19] >>> 12);
        b13 = (s[19] << 20) | (s[18] >>> 12);
        b44 = (s[29] << 7) | (s[28] >>> 25);
        b45 = (s[28] << 7) | (s[29] >>> 25);
        b26 = (s[38] << 8) | (s[39] >>> 24);
        b27 = (s[39] << 8) | (s[38] >>> 24);
        b8 = (s[48] << 14) | (s[49] >>> 18);
        b9 = (s[49] << 14) | (s[48] >>> 18);

        s[0] = b0 ^ (~b2 & b4);
        s[1] = b1 ^ (~b3 & b5);
        s[10] = b10 ^ (~b12 & b14);
        s[11] = b11 ^ (~b13 & b15);
        s[20] = b20 ^ (~b22 & b24);
        s[21] = b21 ^ (~b23 & b25);
        s[30] = b30 ^ (~b32 & b34);
        s[31] = b31 ^ (~b33 & b35);
        s[40] = b40 ^ (~b42 & b44);
        s[41] = b41 ^ (~b43 & b45);
        s[2] = b2 ^ (~b4 & b6);
        s[3] = b3 ^ (~b5 & b7);
        s[12] = b12 ^ (~b14 & b16);
        s[13] = b13 ^ (~b15 & b17);
        s[22] = b22 ^ (~b24 & b26);
        s[23] = b23 ^ (~b25 & b27);
        s[32] = b32 ^ (~b34 & b36);
        s[33] = b33 ^ (~b35 & b37);
        s[42] = b42 ^ (~b44 & b46);
        s[43] = b43 ^ (~b45 & b47);
        s[4] = b4 ^ (~b6 & b8);
        s[5] = b5 ^ (~b7 & b9);
        s[14] = b14 ^ (~b16 & b18);
        s[15] = b15 ^ (~b17 & b19);
        s[24] = b24 ^ (~b26 & b28);
        s[25] = b25 ^ (~b27 & b29);
        s[34] = b34 ^ (~b36 & b38);
        s[35] = b35 ^ (~b37 & b39);
        s[44] = b44 ^ (~b46 & b48);
        s[45] = b45 ^ (~b47 & b49);
        s[6] = b6 ^ (~b8 & b0);
        s[7] = b7 ^ (~b9 & b1);
        s[16] = b16 ^ (~b18 & b10);
        s[17] = b17 ^ (~b19 & b11);
        s[26] = b26 ^ (~b28 & b20);
        s[27] = b27 ^ (~b29 & b21);
        s[36] = b36 ^ (~b38 & b30);
        s[37] = b37 ^ (~b39 & b31);
        s[46] = b46 ^ (~b48 & b40);
        s[47] = b47 ^ (~b49 & b41);
        s[8] = b8 ^ (~b0 & b2);
        s[9] = b9 ^ (~b1 & b3);
        s[18] = b18 ^ (~b10 & b12);
        s[19] = b19 ^ (~b11 & b13);
        s[28] = b28 ^ (~b20 & b22);
        s[29] = b29 ^ (~b21 & b23);
        s[38] = b38 ^ (~b30 & b32);
        s[39] = b39 ^ (~b31 & b33);
        s[48] = b48 ^ (~b40 & b42);
        s[49] = b49 ^ (~b41 & b43);

        s[0] ^= RC[n];
        s[1] ^= RC[n + 1];
      }
    } while(!end);

    var hex = '';
    if(CHROME) {
      b0 = s[0];
      b1 = s[1];
      b2 = s[2];
      b3 = s[3];
      b4 = s[4];
      b5 = s[5];
      b6 = s[6];
      b7 = s[7];
      b8 = s[8];
      b9 = s[9];
      b10 = s[10];
      b11 = s[11];
      b12 = s[12];
      b13 = s[13];
      b14 = s[14];
      b15 = s[15];
      hex += HEX_CHARS[(b0 >> 4) & 0x0F] + HEX_CHARS[b0 & 0x0F] +
             HEX_CHARS[(b0 >> 12) & 0x0F] + HEX_CHARS[(b0 >> 8) & 0x0F] +
             HEX_CHARS[(b0 >> 20) & 0x0F] + HEX_CHARS[(b0 >> 16) & 0x0F] +
             HEX_CHARS[(b0 >> 28) & 0x0F] + HEX_CHARS[(b0 >> 24) & 0x0F] +
             HEX_CHARS[(b1 >> 4) & 0x0F] + HEX_CHARS[b1 & 0x0F] +
             HEX_CHARS[(b1 >> 12) & 0x0F] + HEX_CHARS[(b1 >> 8) & 0x0F] +
             HEX_CHARS[(b1 >> 20) & 0x0F] + HEX_CHARS[(b1 >> 16) & 0x0F] +
             HEX_CHARS[(b1 >> 28) & 0x0F] + HEX_CHARS[(b1 >> 24) & 0x0F] +
             HEX_CHARS[(b2 >> 4) & 0x0F] + HEX_CHARS[b2 & 0x0F] +
             HEX_CHARS[(b2 >> 12) & 0x0F] + HEX_CHARS[(b2 >> 8) & 0x0F] +
             HEX_CHARS[(b2 >> 20) & 0x0F] + HEX_CHARS[(b2 >> 16) & 0x0F] +
             HEX_CHARS[(b2 >> 28) & 0x0F] + HEX_CHARS[(b2 >> 24) & 0x0F] +
             HEX_CHARS[(b3 >> 4) & 0x0F] + HEX_CHARS[b3 & 0x0F] +
             HEX_CHARS[(b3 >> 12) & 0x0F] + HEX_CHARS[(b3 >> 8) & 0x0F] +
             HEX_CHARS[(b3 >> 20) & 0x0F] + HEX_CHARS[(b3 >> 16) & 0x0F] +
             HEX_CHARS[(b3 >> 28) & 0x0F] + HEX_CHARS[(b3 >> 24) & 0x0F] +
             HEX_CHARS[(b4 >> 4) & 0x0F] + HEX_CHARS[b4 & 0x0F] +
             HEX_CHARS[(b4 >> 12) & 0x0F] + HEX_CHARS[(b4 >> 8) & 0x0F] +
             HEX_CHARS[(b4 >> 20) & 0x0F] + HEX_CHARS[(b4 >> 16) & 0x0F] +
             HEX_CHARS[(b4 >> 28) & 0x0F] + HEX_CHARS[(b4 >> 24) & 0x0F] +
             HEX_CHARS[(b5 >> 4) & 0x0F] + HEX_CHARS[b5 & 0x0F] +
             HEX_CHARS[(b5 >> 12) & 0x0F] + HEX_CHARS[(b5 >> 8) & 0x0F] +
             HEX_CHARS[(b5 >> 20) & 0x0F] + HEX_CHARS[(b5 >> 16) & 0x0F] +
             HEX_CHARS[(b5 >> 28) & 0x0F] + HEX_CHARS[(b5 >> 24) & 0x0F] +
             HEX_CHARS[(b6 >> 4) & 0x0F] + HEX_CHARS[b6 & 0x0F] +
             HEX_CHARS[(b6 >> 12) & 0x0F] + HEX_CHARS[(b6 >> 8) & 0x0F] +
             HEX_CHARS[(b6 >> 20) & 0x0F] + HEX_CHARS[(b6 >> 16) & 0x0F] +
             HEX_CHARS[(b6 >> 28) & 0x0F] + HEX_CHARS[(b6 >> 24) & 0x0F];

      if(bits >= 256) {
        hex += HEX_CHARS[(b7 >> 4) & 0x0F] + HEX_CHARS[b7 & 0x0F] +
               HEX_CHARS[(b7 >> 12) & 0x0F] + HEX_CHARS[(b7 >> 8) & 0x0F] +
               HEX_CHARS[(b7 >> 20) & 0x0F] + HEX_CHARS[(b7 >> 16) & 0x0F] +
               HEX_CHARS[(b7 >> 28) & 0x0F] + HEX_CHARS[(b7 >> 24) & 0x0F];
      }
      if(bits >= 384) {
        hex += HEX_CHARS[(b8 >> 4) & 0x0F] + HEX_CHARS[b8 & 0x0F] +
               HEX_CHARS[(b8 >> 12) & 0x0F] + HEX_CHARS[(b8 >> 8) & 0x0F] +
               HEX_CHARS[(b8 >> 20) & 0x0F] + HEX_CHARS[(b8 >> 16) & 0x0F] +
               HEX_CHARS[(b8 >> 28) & 0x0F] + HEX_CHARS[(b8 >> 24) & 0x0F] +
               HEX_CHARS[(b9 >> 4) & 0x0F] + HEX_CHARS[b9 & 0x0F] +
               HEX_CHARS[(b9 >> 12) & 0x0F] + HEX_CHARS[(b9 >> 8) & 0x0F] +
               HEX_CHARS[(b9 >> 20) & 0x0F] + HEX_CHARS[(b9 >> 16) & 0x0F] +
               HEX_CHARS[(b9 >> 28) & 0x0F] + HEX_CHARS[(b9 >> 24) & 0x0F] +
               HEX_CHARS[(b10 >> 4) & 0x0F] + HEX_CHARS[b10 & 0x0F] +
               HEX_CHARS[(b10 >> 12) & 0x0F] + HEX_CHARS[(b10 >> 8) & 0x0F] +
               HEX_CHARS[(b10 >> 20) & 0x0F] + HEX_CHARS[(b10 >> 16) & 0x0F] +
               HEX_CHARS[(b10 >> 28) & 0x0F] + HEX_CHARS[(b10 >> 24) & 0x0F] +
               HEX_CHARS[(b11 >> 4) & 0x0F] + HEX_CHARS[b11 & 0x0F] +
               HEX_CHARS[(b11 >> 12) & 0x0F] + HEX_CHARS[(b11 >> 8) & 0x0F] +
               HEX_CHARS[(b11 >> 20) & 0x0F] + HEX_CHARS[(b11 >> 16) & 0x0F] +
               HEX_CHARS[(b11 >> 28) & 0x0F] + HEX_CHARS[(b11 >> 24) & 0x0F];
      }
      if(bits == 512) {
        hex += HEX_CHARS[(b12 >> 4) & 0x0F] + HEX_CHARS[b12 & 0x0F] +
               HEX_CHARS[(b12 >> 12) & 0x0F] + HEX_CHARS[(b12 >> 8) & 0x0F] +
               HEX_CHARS[(b12 >> 20) & 0x0F] + HEX_CHARS[(b12 >> 16) & 0x0F] +
               HEX_CHARS[(b12 >> 28) & 0x0F] + HEX_CHARS[(b12 >> 24) & 0x0F] +
               HEX_CHARS[(b13 >> 4) & 0x0F] + HEX_CHARS[b13 & 0x0F] +
               HEX_CHARS[(b13 >> 12) & 0x0F] + HEX_CHARS[(b13 >> 8) & 0x0F] +
               HEX_CHARS[(b13 >> 20) & 0x0F] + HEX_CHARS[(b13 >> 16) & 0x0F] +
               HEX_CHARS[(b13 >> 28) & 0x0F] + HEX_CHARS[(b13 >> 24) & 0x0F] +
               HEX_CHARS[(b14 >> 4) & 0x0F] + HEX_CHARS[b14 & 0x0F] +
               HEX_CHARS[(b14 >> 12) & 0x0F] + HEX_CHARS[(b14 >> 8) & 0x0F] +
               HEX_CHARS[(b14 >> 20) & 0x0F] + HEX_CHARS[(b14 >> 16) & 0x0F] +
               HEX_CHARS[(b14 >> 28) & 0x0F] + HEX_CHARS[(b14 >> 24) & 0x0F] +
               HEX_CHARS[(b15 >> 4) & 0x0F] + HEX_CHARS[b15 & 0x0F] +
               HEX_CHARS[(b15 >> 12) & 0x0F] + HEX_CHARS[(b15 >> 8) & 0x0F] +
               HEX_CHARS[(b15 >> 20) & 0x0F] + HEX_CHARS[(b15 >> 16) & 0x0F] +
               HEX_CHARS[(b15 >> 28) & 0x0F] + HEX_CHARS[(b15 >> 24) & 0x0F];
      }
    } else {
      for(i = 0, n = bits / 32;i < n;++i) {
        h = s[i];
        hex += HEX_CHARS[(h >> 4) & 0x0F] + HEX_CHARS[h & 0x0F] +
               HEX_CHARS[(h >> 12) & 0x0F] + HEX_CHARS[(h >> 8) & 0x0F] +
               HEX_CHARS[(h >> 20) & 0x0F] + HEX_CHARS[(h >> 16) & 0x0F] +
               HEX_CHARS[(h >> 28) & 0x0F] + HEX_CHARS[(h >> 24) & 0x0F];
      }
    }
    return hex;
  };
  
  if(!root.JS_SHA3_TEST && NODE_JS) {
    module.exports = {
      sha3_512: sha3_512,
      sha3_384: sha3_384,
      sha3_256: sha3_256,
      sha3_224: sha3_224,
      keccak_512: keccak,
      keccak_384: keccak_384,
      keccak_256: keccak_256,
      keccak_224: keccak_224
    };
  } else if(root) {
    root.sha3_512 = sha3_512;
    root.sha3_384 = sha3_384;
    root.sha3_256 = sha3_256;
    root.sha3_224 = sha3_224;
    root.keccak_512 = keccak;
    root.keccak_384 = keccak_384;
    root.keccak_256 = keccak_256;
    root.keccak_224 = keccak_224;
  }
}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],77:[function(require,module,exports){
(function (process,Buffer){
/**
 * keythereum: create/import/export ethereum keys
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;

var path = (NODE_JS) ? require("path") : null;
var fs = (NODE_JS) ? require("fs") : null;
var crypto = require("crypto");
var uuid = require("node-uuid");
var validator = require("validator");
var ecdsa = new (require("elliptic").ec)("secp256k1");
var pubToAddress = require("ethereumjs-util").pubToAddress;
var keccak = require("./lib/keccak");
var scrypt = require("./lib/scrypt")(280000000);

// convert string to buffer
function str2buf(str, enc) {
    if (str.constructor === String) {
        if (enc) {
            str = new Buffer(str, enc);
        } else {
            if (validator.isHexadecimal(str)) {
                str = new Buffer(str, "hex");
            } else if (validator.isBase64(str)) {
                str = new Buffer(str, "base64");
            } else {
                str = new Buffer(str);
            }
        }
    }
    return str;
}

// convert hex to UTF-16LE
function hex2utf16le(input) {
    var output = '';
    for (var i = 0, l = input.length; i < l; i += 4) {
        output += '\\u' + input.slice(i+2, i+4) + input.slice(i, i+2);
    }
    return JSON.parse('"' + output + '"');
}

function isFunction(f) {
    return Object.prototype.toString.call(f) === "[object Function]";
}

module.exports = {

    browser: !NODE_JS,

    constants: {

        // Suppress logging
        quiet: false,

        // Symmetric cipher for private key encryption
        cipher: "aes-128-ctr",

        // Initialization vector size in bytes
        ivBytes: 16,

        // ECDSA private key size in bytes
        keyBytes: 32,

        // Key derivation function parameters
        pbkdf2: {
            c: 65536,
            dklen: 32,
            hash: "sha256",
            prf: "hmac-sha256"
        },
        scrypt: {
            dklen: 32,
            n: 65536,
            r: 1,
            p: 8
        }
    },

    /**
     * Symmetric private key encryption using secret (derived) key.
     * @param {buffer|string} plaintext Text to be encrypted.
     * @param {buffer|string} key Secret key.
     * @param {buffer|string} iv Initialization vector.
     * @param {string=} algo Encryption algorithm (default: constants.cipher).
     * @return {string} Base64 encrypted text.
     */
    encrypt: function (plaintext, key, iv, algo) {
        var cipher, ciphertext;

        if (plaintext.constructor === String) plaintext = str2buf(plaintext);
        if (key.constructor === String) key = str2buf(key);
        if (iv.constructor === String) iv = str2buf(iv);

        cipher = crypto.createCipheriv(algo || this.constants.cipher, key, iv);
        ciphertext = cipher.update(plaintext.toString("hex"), "hex", "base64");

        return ciphertext + cipher.final("base64");
    },

    /**
     * Symmetric private key decryption using secret (derived) key.
     * @param {buffer|string} ciphertext Text to be decrypted.
     * @param {buffer|string} key Secret key.
     * @param {buffer|string} iv Initialization vector.
     * @param {string=} algo Encryption algorithm (default: constants.cipher).
     * @return {string} Hex decryped text.
     */
    decrypt: function (ciphertext, key, iv, algo) {
        var decipher, plaintext;

        if (ciphertext.constructor === String) ciphertext = str2buf(ciphertext);
        if (key.constructor === String) key = str2buf(key);
        if (iv.constructor === String) iv = str2buf(iv);

        decipher = crypto.createDecipheriv(algo || this.constants.cipher, key, iv);
        plaintext = decipher.update(ciphertext.toString("base64"), "base64", "hex");

        return plaintext + decipher.final("hex");
    },

    /**
     * Derive Ethereum address from private key.
     * @param {buffer|string} privateKey ECDSA private key.
     * @return {string} Hex-encoded Ethereum address.
     */
    privateKeyToAddress: function (privateKey) {

        if (privateKey.constructor === String)
            privateKey = str2buf(privateKey);

        return "0x" + pubToAddress(new Buffer(
            ecdsa.keyFromPrivate(privateKey).getPublic("arr")
        )).toString("hex");
    },

    /**
     * Calculate message authentication code from secret (derived) key and
     * encrypted text.  The MAC is the keccak-256 hash of the byte array
     * formed by concatenating the second 16 bytes of the derived key with
     * the ciphertext key's contents.
     * @param {buffer|string} derivedKey Secret key derived from password.
     * @param {buffer|string} ciphertext Text encrypted with secret key.
     * @return {string} Hex-encoded MAC.
     */
    getMAC: function (derivedKey, ciphertext) {
        if (derivedKey !== undefined && derivedKey !== null &&
            ciphertext !== undefined && ciphertext !== null)
        {
            if (derivedKey.constructor === Buffer)
                derivedKey = derivedKey.toString("hex");

            if (ciphertext.constructor === Buffer)
                ciphertext = ciphertext.toString("hex");

            return keccak(
                hex2utf16le(derivedKey.slice(32, 64) + ciphertext)
            );
        }
    },

    /**
     * Derive secret key from password with key dervation function.
     * @param {string|buffer} password User-supplied password.
     * @param {string|buffer} salt Randomly generated salt.
     * @param {Object=} options Encryption parameters.
     * @param {string=} options.kdf Key derivation function (default: pbkdf2).
     * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).
     * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).
     * @param {function=} cb Callback function (optional).
     * @return {buffer} Secret key derived from password.
     */
    deriveKey: function (password, salt, options, cb) {
        if (password && salt) {
            options = options || {};
            options.kdfparams = options.kdfparams || {};

            // convert strings to buffers
            if (password.constructor === String)
                password = str2buf(password, "utf8");
            if (salt.constructor === String)
                salt = str2buf(salt);

            // use scrypt as key derivation function
            if (options.kdf === "scrypt") {

                try {

                    if (isFunction(cb)) {

                        setTimeout(function () {
                            cb(new Buffer(
                                scrypt.to_hex(scrypt.crypto_scrypt(
                                    password,
                                    salt,
                                    options.kdfparams.n || this.constants.scrypt.n,
                                    options.kdfparams.r || this.constants.scrypt.r,
                                    options.kdfparams.p || this.constants.scrypt.p,
                                    options.kdfparams.dklen || this.constants.scrypt.dklen
                                )
                            ), "hex"));
                        }.bind(this), 0);

                    } else {

                        return new Buffer(
                            scrypt.to_hex(scrypt.crypto_scrypt(
                                password,
                                salt,
                                options.kdfparams.n || this.constants.scrypt.n,
                                options.kdfparams.r || this.constants.scrypt.r,
                                options.kdfparams.p || this.constants.scrypt.p,
                                options.kdfparams.dklen || this.constants.scrypt.dklen
                            )
                        ), "hex");

                    }

                } catch (ex) {
                    if (isFunction(cb)) {
                        cb(ex);
                    } else {
                        return ex;
                    }
                }

            // use default key derivation function (PBKDF2)
            } else {

                var prf = options.kdfparams.prf || this.constants.pbkdf2.prf;
                if (prf === "hmac-sha256") prf = "sha256";

                if (isFunction(cb)) {

                    crypto.pbkdf2(
                        password,
                        salt,
                        options.kdfparams.c || this.constants.pbkdf2.c,
                        options.kdfparams.dklen || this.constants.pbkdf2.dklen,
                        prf,
                        function (ex, derivedKey) {
                            if (ex) return ex;
                            cb(derivedKey);
                        }
                    );

                } else {
                    
                    try {
                        return crypto.pbkdf2Sync(
                            password,
                            salt,
                            options.kdfparams.c || this.constants.pbkdf2.c,
                            options.kdfparams.dklen || this.constants.pbkdf2.dklen,
                            prf
                        );

                    } catch (ex) {
                        return ex;
                    }
                }
            }
        }
    },

    /**
     * Generate random numbers for private key, initialization vector,
     * and salt (for key derivation).
     * @param {Object=} params Encryption options (defaults: constants).
     * @param {string=} params.keyBytes Private key size in bytes.
     * @param {string=} params.ivBytes Initialization vector size in bytes.
     * @param {function=} cb Callback function (optional).
     * @return {Object<string,buffer>} Private key, IV and salt.
     */
    create: function (params, cb) {
        params = params || {};
        var keyBytes = params.keyBytes || this.constants.keyBytes;
        var ivBytes = params.ivBytes || this.constants.ivBytes;

        // asynchronous key generation if callback is provided
        if (isFunction(cb)) {

            // generate private key
            crypto.randomBytes(keyBytes, function (ex, privateKey) {
                if (ex) {
                    cb(ex);
                } else {

                    // generate random initialization vector
                    crypto.randomBytes(ivBytes, function (ex, iv) {
                        if (ex) {
                            cb(ex);
                        } else {

                            // generate random salt
                            crypto.randomBytes(keyBytes, function (ex, salt) {
                                if (ex) {
                                    cb(ex);
                                } else {

                                    cb({
                                        privateKey: privateKey,
                                        iv: iv,
                                        salt: salt
                                    });
                                }
                            });
                        }

                    }); // crypto.randomBytes
                }

            }); // crypto.randomBytes

        // synchronous key generation
        } else {

            try {
                return {
                    privateKey: crypto.randomBytes(keyBytes),
                    iv: crypto.randomBytes(ivBytes),
                    salt: crypto.randomBytes(keyBytes)
                };

            // couldn't generate key: not enough entropy?
            } catch (ex) {
                return ex;
            }
        }
    },

    /**
     * Assemble key data object in secret-storage format.
     * @param {buffer} derivedKey Password-derived secret key.
     * @param {buffer} privateKey Private key.
     * @param {buffer} salt Randomly generated salt.
     * @param {buffer} iv Initialization vector.
     * @param {Object=} options Encryption parameters.
     * @param {string=} options.kdf Key derivation function (default: pbkdf2).
     * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).
     * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).
     * @return {Object}
     */
    marshal: function(derivedKey, privateKey, salt, iv, options) {
        var ciphertext, keyObject;
        options = options || {};
        options.kdfparams = options.kdfparams || {};

        // encrypt using first 16 bytes of derived key
        ciphertext = new Buffer(this.encrypt(
            privateKey,
            derivedKey.slice(0, 16),
            iv
        ), "base64").toString("hex");

        keyObject = {
            address: this.privateKeyToAddress(privateKey).slice(2),
            crypto: {
                cipher: options.cipher || this.constants.cipher,
                ciphertext: ciphertext,
                cipherparams: { iv: iv.toString("hex") },
                mac: this.getMAC(derivedKey, ciphertext)
            },
            id: uuid.v4(), // random 128-bit UUID
            version: 3
        };

        if (options.kdf === "scrypt") {
            keyObject.crypto.kdf = "scrypt";
            keyObject.crypto.kdfparams = {
                dklen: options.kdfparams.dklen || this.constants.scrypt.dklen,
                n: options.kdfparams.n || this.constants.scrypt.n,
                r: options.kdfparams.r || this.constants.scrypt.r,
                p: options.kdfparams.p || this.constants.scrypt.p,
                salt: salt.toString("hex")
            };

        } else {
            keyObject.crypto.kdf = "pbkdf2";
            keyObject.crypto.kdfparams = {
                c: options.kdfparams.c || this.constants.pbkdf2.c,
                dklen: options.kdfparams.dklen || this.constants.pbkdf2.dklen,
                prf: options.kdfparams.prf || this.constants.pbkdf2.prf,
                salt: salt.toString("hex")
            };
        }

        return keyObject;
    },

    /**
     * Export private key to keystore secret-storage format.
     * @param {string|buffer} password User-supplied password.
     * @param {string|buffer} privateKey Private key.
     * @param {string|buffer} salt Randomly generated salt.
     * @param {string|buffer} iv Initialization vector.
     * @param {Object=} options Encryption parameters.
     * @param {string=} options.kdf Key derivation function (default: pbkdf2).
     * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).
     * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).
     * @param {function=} cb Callback function (optional).
     * @return {Object}
     */
    dump: function (password, privateKey, salt, iv, options, cb) {
        options = options || {};
        if (iv.constructor === String) iv = str2buf(iv);
        if (privateKey.constructor === String) privateKey = str2buf(privateKey);

        // asynchronous if callback provided
        if (isFunction(cb)) {

            this.deriveKey(
                password,
                salt,
                options,
                function (derivedKey) {
                    cb(this.marshal(
                        derivedKey,
                        privateKey,
                        salt,
                        iv,
                        options
                    ));
                }.bind(this)
            );

        // synchronous if no callback
        } else {

            return this.marshal(
                this.deriveKey(password, salt, options),
                privateKey,
                salt,
                iv,
                options
            );
        }
    },

    /**
     * Recover plaintext private key from secret-storage key object.
     * @param {Object} keyObject Keystore object.
     * @param {function=} cb Callback function (optional).
     * @return {buffer} Plaintext private key.
     */
    recover: function (password, keyObject, cb) {
        var self = this;
        var keyObjectCrypto = keyObject.Crypto || keyObject.crypto;

        function verifyAndDecrypt(derivedKey, salt, iv, ciphertext) {

            // verify that message authentication codes match
            var mac = self.getMAC(derivedKey, ciphertext);
            if (mac === keyObjectCrypto.mac) {

                return new Buffer(self.decrypt(
                    ciphertext,
                    derivedKey.slice(0, 16),
                    iv
                ), "hex");
            
            } else {
                throw new Error("message authentication code mismatch");
            }
        }

        var iv = keyObjectCrypto.cipherparams.iv;
        var salt = keyObjectCrypto.kdfparams.salt;
        var ciphertext = keyObjectCrypto.ciphertext;

        if (iv && iv.constructor === String) iv = str2buf(iv);
        if (salt && salt.constructor === String) salt = str2buf(salt);
        if (ciphertext && ciphertext.constructor === String)
            ciphertext = str2buf(ciphertext);

        if (keyObjectCrypto.kdf === "scrypt") {
            this.constants.scrypt = {
                n: keyObjectCrypto.kdfparams.n,
                r: keyObjectCrypto.kdfparams.r,
                p: keyObjectCrypto.kdfparams.p,
                dklen: keyObjectCrypto.kdfparams.dklen
            };
        } else {
            if (keyObjectCrypto.kdfparams.prf !== "hmac-sha256") {
                throw new Error("PBKDF2 only supported with HMAC-SHA256");
            }
            this.constants.pbkdf2.c = keyObjectCrypto.kdfparams.c;
            this.constants.pbkdf2.dklen = keyObjectCrypto.kdfparams.dklen;
        }

        // derive secret key from password
        if (isFunction(cb)) {
            this.deriveKey(password, salt, keyObjectCrypto, function (derivedKey) {
                cb(verifyAndDecrypt(derivedKey, salt, iv, ciphertext));
            });
        } else {
            return verifyAndDecrypt(
                this.deriveKey(password, salt, keyObjectCrypto),
                salt,
                iv,
                ciphertext
            );
        }
    },

    /**
     * Export formatted JSON to keystore file.
     * @param {Object} keyObject Keystore object.
     * @param {string=} keystore Path to keystore folder (default: "keystore").
     * @param {function=} cb Callback function (optional).
     * @return {string} JSON filename (Node.js) or JSON string (browser).
     */
    exportToFile: function (keyObject, keystore, cb) {
        var self = this;
        var outfile, outpath, json;

        function instructions(outpath) {
            if (!self.constants.quiet) {
                console.log(
                    "Saved to file:\n" + outpath + "\n"+
                    "To use with geth, copy this file to your Ethereum "+
                    "keystore folder (usually ~/.ethereum/keystore)."
                );
            }
        }

        keystore = keystore || "keystore";
        outfile = "UTC--" + new Date().toISOString() + "--" + keyObject.address;
        outpath = path.join(keystore, outfile);
        json = JSON.stringify(keyObject);

        if (this.browser) {
            if (!isFunction(cb)) return json;
            return cb(json);
        }
        if (!isFunction(cb)) {
            fs.writeFileSync(outpath, json);
            instructions(outpath);
            return outpath;
        }
        return fs.writeFile(outpath, json, function (ex) {
            if (ex) throw ex;
            instructions(outpath);
            cb(outpath);
        });
    },

    /**
     * Import key data object from keystore JSON file.
     * (Note: Node.js only!)
     * @param {string} address Ethereum address to import.
     * @param {string=} datadir Ethereum data directory (default: ~/.ethereum).
     * @param {function=} cb Callback function (optional).
     * @return {Object} Keystore data file's contents.
     */
    importFromFile: function (address, datadir, cb) {
        address = address.replace('0x', '');

        function findKeyfile(keystore, address, files) {
            var filepath = null;
            for (var i = 0, len = files.length; i < len; ++i) {
                if (files[i].indexOf(address) > -1) {
                    filepath = path.join(keystore, files[i]);
                    if (fs.lstatSync(filepath).isDirectory()) {
                        filepath = path.join(filepath, files[i]);
                    }
                    break;
                }
            }
            return filepath;
        }

        if (this.browser) {
            throw new Error("method only available in Node.js");
        }
        datadir = datadir || path.join(process.env.HOME, ".ethereum");
        var keystore = path.join(datadir, "keystore");
        if (!isFunction(cb)) {
            var filepath = findKeyfile(keystore, address, fs.readdirSync(keystore));
            if (filepath) {
                return JSON.parse(fs.readFileSync(filepath));
            } else {
                throw new Error(
                    "could not find key file for address " + address
                );
            }
        }
        fs.readdir(keystore, function (ex, files) {
            if (ex) return cb(ex);
            var filepath = findKeyfile(keystore, address, files);
            if (filepath) return cb(JSON.parse(fs.readFileSync(filepath)));
            return new Error(
                "could not find key file for address " + address
            );
        });
    }

};

}).call(this,require('_process'),require("buffer").Buffer)

},{"./lib/keccak":78,"./lib/scrypt":79,"_process":351,"buffer":151,"crypto":155,"elliptic":80,"ethereumjs-util":106,"fs":148,"node-uuid":119,"path":350,"validator":112}],78:[function(require,module,exports){
/* keccak.js
 * A Javascript implementation of the Keccak SHA-3 candidate from Bertoni,
 * Daemen, Peeters and van Assche. This version is not optimized with any of 
 * the tricks specifically mentioned in the spec, and was intended as a first 
 * implementation to help in understanding the specification. It uses a long
 * integer class L to handle double arithmetic; the class is stateful so that
 * constructors don't slow down the algorithm.
 * 
 * This file implements Keccak[1088, 512, 32], their proposed candidate for 
 * SHA3-256. This implementation operates on Javascript strings, interpreted as 
 * UTF-16LE encoded (i.e. "\u1234\u5678" --> [0x34, 0x12, 0x78, 0x56], and thus 
 * is restricted to hash byte strings which are a multiple of 2 bytes in 
 * length.
 * 
 * The following test vectors are given on the Keccak NIST CD:
 *     ShortMsgKAT_256.txt
 *         Len = 0
 *         Msg = 00
 *         MD = C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470
 *         ...
 *         Len = 16
 *         Msg = 41FB
 *         MD = A8EACEDA4D47B3281A795AD9E1EA2122B407BAF9AABCB9E18B5717B7873537D2
 *         ...
 *         Len = 2000
 *         Msg = B3C5E74B69933C2533106C563B4CA20238F2B6E675E8681E34A389894785BDADE59652D4A73D80A5C85BD454FD1E9FFDAD1C3815F5038E9EF432AAC5C3C4FE840CC370CF86580A6011778BBEDAF511A51B56D1A2EB68394AA299E26DA9ADA6A2F39B9FAFF7FBA457689B9C1A577B2A1E505FDF75C7A0A64B1DF81B3A356001BF0DF4E02A1FC59F651C9D585EC6224BB279C6BEBA2966E8882D68376081B987468E7AED1EF90EBD090AE825795CDCA1B4F09A979C8DFC21A48D8A53CDBB26C4DB547FC06EFE2F9850EDD2685A4661CB4911F165D4B63EF25B87D0A96D3DFF6AB0758999AAD214D07BD4F133A6734FDE445FE474711B69A98F7E2B
 *         MD = C6D86CC4CCEF3BB70BF7BFDDEC6A9A04A0DD0A68FE1BF51C14648CF506A03E98
 * 
 * The corresponding Javascript code is:
 *     keccak("");
 *         "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
 *     keccak("\ufb41");
 *         "a8eaceda4d47b3281a795ad9e1ea2122b407baf9aabcb9e18b5717b7873537d2"
 *     keccak("\uC5B3\u4BE7\u9369\u253C\u1033\u566C\u4C3B\u02A2\uF238\uE6B6\uE875\u1E68\uA334\u8989\u8547\uADBD\u96E5\uD452\u3DA7\uA580\u5BC8\u54D4\u1EFD\uFD9F\u1CAD\u1538\u03F5\u9E8E\u32F4\uC5AA\uC4C3\u84FE\uC30C\uCF70\u5886\u600A\u7711\uBE8B\uF5DA\uA511\u561B\uA2D1\u68EB\u4A39\u99A2\u6DE2\uADA9\uA2A6\u9BF3\uAF9F\uFBF7\u57A4\u9B68\u1A9C\u7B57\u1E2A\u5F50\u75DF\uA0C7\u4BA6\uF81D\u3A1B\u6035\uBF01\uF40D\u2AE0\uC51F\u659F\u9D1C\u5E58\u22C6\uB24B\uC679\uBABE\u6629\u88E8\u682D\u6037\uB981\u4687\u7A8E\u1EED\u0EF9\u09BD\uE80A\u7925\uDC5C\uB4A1\u9AF0\u9C97\uFC8D\uA421\u8A8D\uCD53\u26BB\uDBC4\u7F54\u6EC0\u2FFE\u5098\uD2ED\u5A68\u6146\u49CB\uF111\uD465\u3EB6\u5BF2\uD087\u6DA9\uFF3D\uB06A\u8975\uAA99\u14D2\u7BD0\uF1D4\uA633\u4F73\u44DE\uE45F\u7174\u691B\u8FA9\u2B7E");
 *         "c6d86cc4ccef3bb70bf7bfddec6a9a04a0dd0a68fe1bf51c14648cf506a03e98"
 * 
 * This function was written by Chris Drost of drostie.org, and he hereby
 * dedicates it into the public domain: it has no copyright. It is provided with
 * NO WARRANTIES OF ANY KIND. I do humbly request that you provide me some sort
 * of credit if you use it; but I leave that choice up to you.
 */

/*jslint white: true, onevar: true, undef: true, nomen: true, eqeqeq: true, plusplus: true, regexp: true, newcap: true, immed: true, strict: true, maxerr: 50, indent: 4 */
"use strict";
module.exports = (function () {
    var state, State, L, permute, zeros, RC, r, keccak_f;
    L = function (lo, hi) {
        this.lo = lo ? lo : 0;
        this.hi = hi ? hi : 0;
    };
    L.clone = function (a) {
        return new L(a.lo, a.hi);
    };
    L.prototype = {
        xor: function (that) {
            this.lo ^= that.lo;
            this.hi ^= that.hi;
            return this;
        },
        not: function () {
            return new L(~this.lo, ~this.hi);
        },
        and: function (that) {
            this.lo &= that.lo;
            this.hi &= that.hi;
            return this;
        },
        circ: function (n) {
            var tmp, m;
            if (n >= 32) {
                tmp = this.lo;
                this.lo = this.hi;
                this.hi = tmp;
                n -= 32;
            }
            if (n === 0) {
                return this;
            }
            m = 32 - n;
            tmp = (this.hi << n) + (this.lo >>> m);
            this.lo = (this.lo << n) + (this.hi >>> m);
            this.hi = tmp;
            return this;
        },
        toString: (function () {
            var hex, o;
            hex = function (n) {
                return ("00" + n.toString(16)).slice(-2);
            };
            o = function (n) {
                return hex(n & 255) + hex(n >>> 8) + hex(n >>> 16) + hex(n >>> 24);
            };
            return function () {
                return o(this.lo) + o(this.hi);
            };
        }())
    };
    zeros = function (k) {
        var i, z = [];
        for (i = 0; i < k; i += 1) {
            z[i] = new L();
        }
        return z;
    };
    State = function (s) {
        var fn = function (x, y) {
            return fn.array[(x % 5) + 5 * (y % 5)];
        };
        fn.array = s ? s : zeros(25);
        fn.clone = function () {
            return new State(fn.array.map(L.clone));
        };
        return fn;
    };
        
    permute = [0, 10, 20, 5, 15, 16, 1, 11, 21, 6, 7, 17, 2, 12, 22, 23, 8, 18, 3, 13, 14, 24, 9, 19, 4];
    RC = "0,1;0,8082;z,808A;z,yy;0,808B;0,y0001;z,y8081;z,8009;0,8A;0,88;0,y8009;0,y000A;0,y808B;z,8B;z,8089;z,8003;z,8002;z,80;0,800A;z,y000A;z,y8081;z,8080;0,y0001;z,y8008"
        .replace(/z/g, "80000000").replace(/y/g, "8000").split(";").map(function (str) {
            var k = str.split(",");
            return new L(parseInt(k[1], 16), parseInt(k[0], 16));
        });
    r = [0, 1, 62, 28, 27, 36, 44, 6, 55, 20, 3, 10, 43, 25, 39, 41, 45, 15, 21, 8, 18, 2, 61, 56, 14];
    keccak_f = function () {
        var x, y, i, b, C, D, round, last;
        for (round = 0; round < 24; round += 1) {
            // THETA STEP
            C = zeros(5);
            for (x = 0; x < 5; x += 1) {
                for (y = 0; y < 5; y += 1) {
                    C[x].xor(state(x, y));
                }
            }
            // Extra logic needed because L() objects are dynamic.
            // D[x] = C[x + 1]
            D = C.map(L.clone);
            D = D.concat(D.splice(0, 1));
            // D[x] = C[x - 1] xor rot(C[x+1], 1)
            for (x = 0; x < 5; x += 1) {
                D[x].circ(1).xor(C[(x + 4) % 5]);
            }
            for (x = 0; x < 5; x += 1) {
                for (y = 0; y < 5; y += 1) {
                    state(x, y).xor(D[x]);
                }
            }
            // RHO STEP
            for (x = 0; x < 5; x += 1) {
                for (y = 0; y < 5; y += 1) {
                    state(x, y).circ(r[5 * y + x]);
                }
            }
            // PI STEP
            last = state.array.slice(0);
            for (i = 0; i < 25; i += 1) {
                state.array[permute[i]] = last[i];
            }
            
            // CHI STEP
            b = state.clone();
            for (x = 0; x < 5; x += 1) {
                for (y = 0; y < 5; y += 1) {
                    state(x, y).xor(b(x + 1, y).not().and(b(x + 2, y)));
                }
            }
            // IOTA STEP
            state(0, 0).xor(RC[round]);
        }
    };
    return function (m) {
        state = new State();
        if (m.length % 68 === 67) {
            m+="\u8001";
        } else {
            m += "\x01";
            while (m.length % 68 !== 67) {
                m += "\0";
            }
            m+="\u8000";
        }
        var b, k;
        for (b = 0; b < m.length; b += 68) {
            for (k = 0; k < 68; k += 4) {
                state.array[k / 4].xor(
                    new L(m.charCodeAt(b + k) + m.charCodeAt(b + k + 1) * 65536,
                        m.charCodeAt(b + k + 2) +  m.charCodeAt(b + k + 3) * 65536)
                );
            }
            keccak_f();
        }
        return state.array.slice(0, 4).join("");
    };
}());

},{}],79:[function(require,module,exports){
(function (process,__dirname){
// https://github.com/tonyg/js-scrypt
module.exports = function (requested_total_memory) {
    var Module = {
        TOTAL_MEMORY: (requested_total_memory || 33554432)
    };
    var scrypt_raw = Module;

    function g(a) {
        throw a;
    }
    var k = void 0,
        l = !0,
        m = null,
        p = !1;

    function aa() {
        return function () {}
    }
    var q, s;
    s || (s = eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));
    var ba = {},
        t;
    for (t in s) {
        s.hasOwnProperty(t) && (ba[t] = s[t])
    }
    var ca = "object" === typeof process && "function" === typeof require,
        da = "object" === typeof window,
        ea = "function" === typeof importScripts,
        fa = !da && !ca && !ea;
    if (ca) {
        s.print = function (a) {
            process.stdout.write(a + "\n")
        };
        s.printErr = function (a) {
            process.stderr.write(a + "\n")
        };
        var ga = require("fs"),
            ha = require("path");
        s.read = function (a, b) {
            var a = ha.normalize(a),
                c = ga.readFileSync(a);
            !c && a != ha.resolve(a) && (a = path.join(__dirname, "..", "src", a), c = ga.readFileSync(a));
            c && !b && (c = c.toString());
            return c
        };
        s.readBinary = function (a) {
            return s.read(a, l)
        };
        s.load = function (a) {
            ia(read(a))
        };
        s.arguments = process.argv.slice(2);
        module.ee = s
    } else {
        fa ? (s.print = print, "undefined" != typeof printErr && (s.printErr = printErr), s.read = read, s.readBinary = function (a) {
            return read(a, "binary")
        }, "undefined" != typeof scriptArgs ? s.arguments = scriptArgs : "undefined" != typeof arguments && (s.arguments = arguments), this.Module = s) : da || ea ? (s.read = function (a) {
            var b = new XMLHttpRequest;
            b.open("GET", a, p);
            b.send(m);
            return b.responseText
        }, "undefined" != typeof arguments && (s.arguments = arguments), da ? (s.print = function (a) {
            console.log(a)
        }, s.printErr = function (a) {
            console.log(a)
        }, this.Module = s) : ea && (s.print = aa(), s.load = importScripts)) : g("Unknown runtime environment. Where are we?")
    }

    function ia(a) {
        eval.call(m, a)
    }
    "undefined" == !s.load && s.read && (s.load = function (a) {
        ia(s.read(a))
    });
    s.print || (s.print = aa());
    s.printErr || (s.printErr = s.print);
    s.arguments || (s.arguments = []);
    s.print = s.print;
    s.P = s.printErr;
    s.preRun = [];
    s.postRun = [];
    for (t in ba) {
        ba.hasOwnProperty(t) && (s[t] = ba[t])
    }

    function ja() {
        return u
    }

    function ka(a) {
        u = a
    }

    function la(a) {
        if (1 == ma) {
            return 1
        }
        var b = {
            "%i1": 1,
            "%i8": 1,
            "%i16": 2,
            "%i32": 4,
            "%i64": 8,
            "%float": 4,
            "%double": 8
        }["%" + a];
        b || ("*" == a.charAt(a.length - 1) ? b = ma : "i" == a[0] && (a = parseInt(a.substr(1)), w(0 == a % 8), b = a / 8));
        return b
    }

    function na(a, b, c) {
        c && c.length ? (c.splice || (c = Array.prototype.slice.call(c)), c.splice(0, 0, b), s["dynCall_" + a].apply(m, c)) : s["dynCall_" + a].call(m, b)
    }
    var oa;

    function pa() {
        var a = [],
            b = 0;
        this.oa = function (c) {
            c &= 255;
            b && (a.push(c), b--);
            if (0 == a.length) {
                if (128 > c) {
                    return String.fromCharCode(c)
                }
                a.push(c);
                b = 191 < c && 224 > c ? 1 : 2;
                return ""
            }
            if (0 < b) {
                return ""
            }
            var c = a[0],
                d = a[1],
                e = a[2],
                c = 191 < c && 224 > c ? String.fromCharCode((c & 31) << 6 | d & 63) : String.fromCharCode((c & 15) << 12 | (d & 63) << 6 | e & 63);
            a.length = 0;
            return c
        };
        this.yb = function (a) {
            for (var a = unescape(encodeURIComponent(a)), b = [], e = 0; e < a.length; e++) {
                b.push(a.charCodeAt(e))
            }
            return b
        }
    }

    function qa(a) {
        var b = u;
        u = u + a | 0;
        u = u + 7 >> 3 << 3;
        return b
    }

    function ra(a) {
        var b = sa;
        sa = sa + a | 0;
        sa = sa + 7 >> 3 << 3;
        return b
    }

    function ua(a) {
        var b = z;
        z = z + a | 0;
        z = z + 7 >> 3 << 3;
        z >= va && wa("Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs.");
        return b
    }

    function xa(a, b) {
        return Math.ceil(a / (b ? b : 8)) * (b ? b : 8)
    }
    var ma = 4,
        ya = {},
        za = p,
        Aa;

    function w(a, b) {
        a || wa("Assertion failed: " + b)
    }
    s.ccall = function (a, b, c, d) {
        return Ba(Ca(a), b, c, d)
    };

    function Ca(a) {
        try {
            var b = s["_" + a];
            b || (b = eval("_" + a))
        } catch (c) {}
        w(b, "Cannot call unknown function " + a + " (perhaps LLVM optimizations or closure removed it?)");
        return b
    }

    function Ba(a, b, c, d) {
        function e(a, b) {
            if ("string" == b) {
                if (a === m || a === k || 0 === a) {
                    return 0
                }
                f || (f = ja());
                var c = qa(a.length + 1);
                Da(a, c);
                return c
            }
            return "array" == b ? (f || (f = ja()), c = qa(a.length), Ea(a, c), c) : a
        }
        var f = 0,
            h = 0,
            d = d ? d.map(function (a) {
                return e(a, c[h++])
            }) : [];
        a = a.apply(m, d);
        "string" == b ? b = Fa(a) : (w("array" != b), b = a);
        f && ka(f);
        return b
    }
    s.cwrap = function (a, b, c) {
        var d = Ca(a);
        return function () {
            return Ba(d, b, c, Array.prototype.slice.call(arguments))
        }
    };

    function Ga(a, b, c) {
        c = c || "i8";
        "*" === c.charAt(c.length - 1) && (c = "i32");
        switch (c) {
        case "i1":
            A[a] = b;
            break;
        case "i8":
            A[a] = b;
            break;
        case "i16":
            Ha[a >> 1] = b;
            break;
        case "i32":
            B[a >> 2] = b;
            break;
        case "i64":
            Aa = [b >>> 0, (Math.min(+Math.floor(b / 4294967296), 4294967295) | 0) >>> 0];
            B[a >> 2] = Aa[0];
            B[a + 4 >> 2] = Aa[1];
            break;
        case "float":
            Ia[a >> 2] = b;
            break;
        case "double":
            Ja[a >> 3] = b;
            break;
        default:
            wa("invalid type for setValue: " + c)
        }
    }
    s.setValue = Ga;
    s.getValue = function (a, b) {
        b = b || "i8";
        "*" === b.charAt(b.length - 1) && (b = "i32");
        switch (b) {
        case "i1":
            return A[a];
        case "i8":
            return A[a];
        case "i16":
            return Ha[a >> 1];
        case "i32":
            return B[a >> 2];
        case "i64":
            return B[a >> 2];
        case "float":
            return Ia[a >> 2];
        case "double":
            return Ja[a >> 3];
        default:
            wa("invalid type for setValue: " + b)
        }
        return m
    };
    var Ka = 0,
        La = 1,
        E = 2,
        Na = 4;
    s.ALLOC_NORMAL = Ka;
    s.ALLOC_STACK = La;
    s.ALLOC_STATIC = E;
    s.ALLOC_DYNAMIC = 3;
    s.ALLOC_NONE = Na;

    function F(a, b, c, d) {
        var e, f;
        "number" === typeof a ? (e = l, f = a) : (e = p, f = a.length);
        var h = "string" === typeof b ? b : m,
            c = c == Na ? d : [Oa, qa, ra, ua][c === k ? E : c](Math.max(f, h ? 1 : b.length));
        if (e) {
            d = c;
            w(0 == (c & 3));
            for (a = c + (f & -4); d < a; d += 4) {
                B[d >> 2] = 0
            }
            for (a = c + f; d < a;) {
                A[d++ | 0] = 0
            }
            return c
        }
        if ("i8" === h) {
            return a.subarray || a.slice ? G.set(a, c) : G.set(new Uint8Array(a), c), c
        }
        for (var d = 0, i, j; d < f;) {
            var n = a[d];
            "function" === typeof n && (n = ya.fe(n));
            e = h || b[d];
            0 === e ? d++ : ("i64" == e && (e = "i32"), Ga(c + d, n, e), j !== e && (i = la(e), j = e), d += i)
        }
        return c
    }
    s.allocate = F;

    function Fa(a, b) {
        for (var c = p, d, e = 0;;) {
            d = G[a + e | 0];
            if (128 <= d) {
                c = l
            } else {
                if (0 == d && !b) {
                    break
                }
            }
            e++;
            if (b && e == b) {
                break
            }
        }
        b || (b = e);
        var f = "";
        if (!c) {
            for (; 0 < b;) {
                d = String.fromCharCode.apply(String, G.subarray(a, a + Math.min(b, 1024))), f = f ? f + d : d, a += 1024, b -= 1024
            }
            return f
        }
        c = new pa;
        for (e = 0; e < b; e++) {
            d = G[a + e | 0], f += c.oa(d)
        }
        return f
    }
    s.Pointer_stringify = Fa;
    var A, G, Ha, Pa, B, Qa, Ia, Ja, Ra = 0,
        sa = 0,
        Sa = 0,
        u = 0,
        Ta = 0,
        Ua = 0,
        z = 0,
        va = s.TOTAL_MEMORY || 33554432;
    w(!!Int32Array && !!Float64Array && !!(new Int32Array(1)).subarray && !!(new Int32Array(1)).set, "Cannot fallback to non-typed array case: Code is too specialized");
    var I = new ArrayBuffer(va);
    A = new Int8Array(I);
    Ha = new Int16Array(I);
    B = new Int32Array(I);
    G = new Uint8Array(I);
    Pa = new Uint16Array(I);
    Qa = new Uint32Array(I);
    Ia = new Float32Array(I);
    Ja = new Float64Array(I);
    B[0] = 255;
    w(255 === G[0] && 0 === G[3], "Typed arrays 2 must be run on a little-endian system");
    s.HEAP = k;
    s.HEAP8 = A;
    s.HEAP16 = Ha;
    s.HEAP32 = B;
    s.HEAPU8 = G;
    s.HEAPU16 = Pa;
    s.HEAPU32 = Qa;
    s.HEAPF32 = Ia;
    s.HEAPF64 = Ja;

    function Va(a) {
        for (; 0 < a.length;) {
            var b = a.shift();
            if ("function" == typeof b) {
                b()
            } else {
                var c = b.V;
                "number" === typeof c ? b.ha === k ? na("v", c) : na("vi", c, [b.ha]) : c(b.ha === k ? m : b.ha)
            }
        }
    }
    var Wa = [],
        Xa = [],
        Ya = [],
        Za = [],
        $a = [],
        ab = p;

    function bb(a) {
        Wa.unshift(a)
    }
    s.addOnPreRun = s.Vd = bb;
    s.addOnInit = s.Sd = function (a) {
        Xa.unshift(a)
    };
    s.addOnPreMain = s.Ud = function (a) {
        Ya.unshift(a)
    };
    s.addOnExit = s.Rd = function (a) {
        Za.unshift(a)
    };

    function cb(a) {
        $a.unshift(a)
    }
    s.addOnPostRun = s.Td = cb;

    function J(a, b, c) {
        a = (new pa).yb(a);
        c && (a.length = c);
        b || a.push(0);
        return a
    }
    s.intArrayFromString = J;
    s.intArrayToString = function (a) {
        for (var b = [], c = 0; c < a.length; c++) {
            var d = a[c];
            255 < d && (d &= 255);
            b.push(String.fromCharCode(d))
        }
        return b.join("")
    };

    function Da(a, b, c) {
        a = J(a, c);
        for (c = 0; c < a.length;) {
            A[b + c | 0] = a[c], c += 1
        }
    }
    s.writeStringToMemory = Da;

    function Ea(a, b) {
        for (var c = 0; c < a.length; c++) {
            A[b + c | 0] = a[c]
        }
    }
    s.writeArrayToMemory = Ea;

    function db(a, b) {
        return 0 <= a ? a : 32 >= b ? 2 * Math.abs(1 << b - 1) + a : Math.pow(2, b) + a
    }

    function eb(a, b) {
        if (0 >= a) {
            return a
        }
        var c = 32 >= b ? Math.abs(1 << b - 1) : Math.pow(2, b - 1);
        if (a >= c && (32 >= b || a > c)) {
            a = -2 * c + a
        }
        return a
    }
    Math.imul || (Math.imul = function (a, b) {
        var c = a & 65535,
            d = b & 65535;
        return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16) | 0
    });
    Math.ie = Math.imul;
    var L = 0,
        fb = {},
        gb = p,
        hb = m;

    function ib(a) {
        L++;
        s.monitorRunDependencies && s.monitorRunDependencies(L);
        a ? (w(!fb[a]), fb[a] = 1) : s.P("warning: run dependency added without ID")
    }
    s.addRunDependency = ib;

    function jb(a) {
        L--;
        s.monitorRunDependencies && s.monitorRunDependencies(L);
        a ? (w(fb[a]), delete fb[a]) : s.P("warning: run dependency removed without ID");
        0 == L && (hb !== m && (clearInterval(hb), hb = m), !gb && kb && lb())
    }
    s.removeRunDependency = jb;
    s.preloadedImages = {};
    s.preloadedAudios = {};
    Ra = 8;
    sa = Ra + 1312;
    Xa.push({
        V: function () {
            mb()
        }
    });
    var nb, ob, pb;
    nb = nb = F([0, 0, 0, 0, 0, 0, 0, 0], "i8", E);
    ob = ob = F([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "i8", E);
    pb = pb = F([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "i8", E);
    F([111, 112, 116, 105, 111, 110, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 97, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 45, 45, 32, 37, 115, 0, 0, 0, 0, 0, 0, 0, 111, 112, 116, 105, 111, 110, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 97, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 45, 45, 32, 37, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 64, 0, 0, 0, 0, 0, 0, 89, 64, 0, 0, 0, 0, 0, 136, 195, 64, 0, 0, 0, 0, 132, 215, 151, 65, 0, 128, 224, 55, 121, 195, 65, 67,
            23, 110, 5, 181, 181, 184, 147, 70, 245, 249, 63, 233, 3, 79, 56, 77, 50, 29, 48, 249, 72, 119, 130, 90, 60, 191, 115, 127, 221, 79, 21, 117, 56, 3, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 111, 112, 116, 105, 111, 110, 32, 100, 111, 101, 115, 110, 39, 116, 32, 116, 97, 107, 101, 32, 97, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 45, 45, 32, 37, 46, 42, 115, 0, 117, 110, 107,
            110, 111, 119, 110, 32, 111, 112, 116, 105, 111, 110, 32, 45, 45, 32, 37, 115, 0, 0, 0, 0, 117, 110, 107, 110, 111, 119, 110, 32, 111, 112, 116, 105, 111, 110, 32, 45, 45, 32, 37, 99, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 97, 109, 98, 105, 103, 117, 111, 117, 115, 32, 111, 112, 116, 105, 111, 110, 32, 45, 45, 32, 37, 46, 42, 115, 0, 0, 0, 0, 0, 0, 0, 0, 37, 115, 58, 32, 0, 0, 0, 0, 80, 79, 83, 73, 88, 76, 89, 95, 67, 79, 82, 82, 69, 67, 84, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108,
            108, 111, 99, 0, 0, 37, 115, 58, 32, 0, 0, 0, 0, 37, 115, 10, 0, 0, 0, 0, 0, 37, 115, 10, 0, 0, 0, 0, 0, 105, 110, 32, 117, 115, 101, 32, 98, 121, 116, 101, 115, 32, 32, 32, 32, 32, 61, 32, 37, 49, 48, 108, 117, 10, 0, 0, 0, 0, 0, 0, 0, 37, 115, 58, 32, 0, 0, 0, 0, 37, 115, 58, 32, 0, 0, 0, 0, 98, 97, 100, 95, 97, 114, 114, 97, 121, 95, 110, 101, 119, 95, 108, 101, 110, 103, 116, 104, 0, 0, 0, 0, 58, 32, 0, 0, 0, 0, 0, 0, 58, 32, 0, 0, 0, 0, 0, 0, 115, 121, 115, 116, 101, 109, 32, 98, 121, 116, 101,
            115, 32, 32, 32, 32, 32, 61, 32, 37, 49, 48, 108, 117, 10, 0, 0, 0, 0, 0, 0, 0, 109, 97, 120, 32, 115, 121, 115, 116, 101, 109, 32, 98, 121, 116, 101, 115, 32, 61, 32, 37, 49, 48, 108, 117, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 2, 0, 0, 6, 0, 0, 0, 10, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 2, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 0, 0, 0, 83, 116, 57, 98, 97,
            100, 95, 97, 108, 108, 111, 99, 0, 0, 0, 0, 83, 116, 50, 48, 98, 97, 100, 95, 97, 114, 114, 97, 121, 95, 110, 101, 119, 95, 108, 101, 110, 103, 116, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 2, 0, 0, 0, 0, 0, 0, 120, 2, 0, 0, 168, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 2, 0, 0, 176, 2, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        ],
        "i8", Na, 8);
    var qb = xa(F(12, "i8", E), 8);
    w(0 == qb % 8);
    var rb = 0;

    function M(a) {
        return B[rb >> 2] = a
    }
    s._memcpy = sb;
    s._memset = tb;
    var N = {
            L: 1,
            ca: 2,
            Bd: 3,
            sc: 4,
            I: 5,
            za: 6,
            Jb: 7,
            Sc: 8,
            $: 9,
            Zb: 10,
            ua: 11,
            Ld: 11,
            $a: 12,
            Ya: 13,
            kc: 14,
            ed: 15,
            Wb: 16,
            va: 17,
            Md: 18,
            wa: 19,
            gd: 20,
            aa: 21,
            A: 22,
            Mc: 23,
            Za: 24,
            ld: 25,
            Id: 26,
            lc: 27,
            ad: 28,
            da: 29,
            yd: 30,
            Fc: 31,
            rd: 32,
            hc: 33,
            ab: 34,
            Wc: 35,
            pc: 36,
            $b: 37,
            vc: 38,
            wc: 39,
            xc: 40,
            Ec: 41,
            Jd: 42,
            Qc: 43,
            uc: 44,
            ec: 45,
            Tc: 46,
            Pb: 50,
            Sb: 51,
            Nd: 52,
            Oc: 53,
            Tb: 54,
            Ub: 55,
            fc: 56,
            Vb: 57,
            cd: 60,
            Rc: 61,
            Fd: 62,
            bd: 63,
            Xc: 64,
            Yc: 65,
            xd: 66,
            Uc: 67,
            Mb: 68,
            Cd: 69,
            ac: 70,
            td: 71,
            Hc: 74,
            yc: 75,
            ic: 76,
            Rb: 77,
            mc: 79,
            md: 80,
            Qb: 81,
            wd: 82,
            zc: 83,
            Ac: 84,
            Dc: 85,
            Cc: 86,
            Bc: 87,
            dd: 88,
            Nc: 89,
            ya: 90,
            Ic: 91,
            ba: 92,
            nd: 95,
            qd: 96,
            dc: 104,
            Pc: 105,
            Nb: 106,
            vd: 107,
            jd: 108,
            Zc: 109,
            zd: 110,
            cc: 111,
            Kb: 112,
            bc: 113,
            Lc: 114,
            Jc: 115,
            Gd: 116,
            nc: 117,
            oc: 118,
            rc: 119,
            Ob: 120,
            gc: 121,
            Gc: 122,
            ud: 123,
            Ad: 124,
            Lb: 125,
            Kc: 126,
            tc: 127,
            fd: 128,
            Hd: 129,
            sd: 130,
            Kd: 131,
            jc: 132,
            Dd: 133,
            kd: 134,
            Vc: 135,
            $c: 136,
            Yb: 137,
            qc: 138,
            od: 139,
            Xb: 140,
            hd: 141,
            pd: 142,
            Ed: 143
        },
        ub = {
            "0": "Success",
            1: "Not super-user",
            2: "No such file or directory",
            3: "No such process",
            4: "Interrupted system call",
            5: "I/O error",
            6: "No such device or address",
            7: "Arg list too long",
            8: "Exec format error",
            9: "Bad file number",
            10: "No children",
            11: "No more processes",
            12: "Not enough core",
            13: "Permission denied",
            14: "Bad address",
            15: "Block device required",
            16: "Mount device busy",
            17: "File exists",
            18: "Cross-device link",
            19: "No such device",
            20: "Not a directory",
            21: "Is a directory",
            22: "Invalid argument",
            23: "Too many open files in system",
            24: "Too many open files",
            25: "Not a typewriter",
            26: "Text file busy",
            27: "File too large",
            28: "No space left on device",
            29: "Illegal seek",
            30: "Read only file system",
            31: "Too many links",
            32: "Broken pipe",
            33: "Math arg out of domain of func",
            34: "Math result not representable",
            35: "No message of desired type",
            36: "Identifier removed",
            37: "Channel number out of range",
            38: "Level 2 not synchronized",
            39: "Level 3 halted",
            40: "Level 3 reset",
            41: "Link number out of range",
            42: "Protocol driver not attached",
            43: "No CSI structure available",
            44: "Level 2 halted",
            45: "Deadlock condition",
            46: "No record locks available",
            50: "Invalid exchange",
            51: "Invalid request descriptor",
            52: "Exchange full",
            53: "No anode",
            54: "Invalid request code",
            55: "Invalid slot",
            56: "File locking deadlock error",
            57: "Bad font file fmt",
            60: "Device not a stream",
            61: "No data (for no delay io)",
            62: "Timer expired",
            63: "Out of streams resources",
            64: "Machine is not on the network",
            65: "Package not installed",
            66: "The object is remote",
            67: "The link has been severed",
            68: "Advertise error",
            69: "Srmount error",
            70: "Communication error on send",
            71: "Protocol error",
            74: "Multihop attempted",
            75: "Inode is remote (not really error)",
            76: "Cross mount point (not really error)",
            77: "Trying to read unreadable message",
            79: "Inappropriate file type or format",
            80: "Given log. name not unique",
            81: "f.d. invalid for this operation",
            82: "Remote address changed",
            83: "Can\t access a needed shared lib",
            84: "Accessing a corrupted shared lib",
            85: ".lib section in a.out corrupted",
            86: "Attempting to link in too many libs",
            87: "Attempting to exec a shared library",
            88: "Function not implemented",
            89: "No more files",
            90: "Directory not empty",
            91: "File or path name too long",
            92: "Too many symbolic links",
            95: "Operation not supported on transport endpoint",
            96: "Protocol family not supported",
            104: "Connection reset by peer",
            105: "No buffer space available",
            106: "Address family not supported by protocol family",
            107: "Protocol wrong type for socket",
            108: "Socket operation on non-socket",
            109: "Protocol not available",
            110: "Can't send after socket shutdown",
            111: "Connection refused",
            112: "Address already in use",
            113: "Connection aborted",
            114: "Network is unreachable",
            115: "Network interface is not configured",
            116: "Connection timed out",
            117: "Host is down",
            118: "Host is unreachable",
            119: "Connection already in progress",
            120: "Socket already connected",
            121: "Destination address required",
            122: "Message too long",
            123: "Unknown protocol",
            124: "Socket type not supported",
            125: "Address not available",
            126: "ENETRESET",
            127: "Socket is already connected",
            128: "Socket is not connected",
            129: "TOOMANYREFS",
            130: "EPROCLIM",
            131: "EUSERS",
            132: "EDQUOT",
            133: "ESTALE",
            134: "Not supported",
            135: "No medium (in tape drive)",
            136: "No such host or network path",
            137: "Filename exists with different case",
            138: "EILSEQ",
            139: "Value too large for defined data type",
            140: "Operation canceled",
            141: "State not recoverable",
            142: "Previous owner died",
            143: "Streams pipe error"
        };

    function vb(a, b, c) {
        var d = O(a, {
                parent: l
            }).d,
            a = "/" === a ? "/" : wb(a)[2],
            e = xb(d, a);
        e && g(new Q(e));
        d.l.Ta || g(new Q(N.L));
        return d.l.Ta(d, a, b, c)
    }

    function yb(a, b) {
        b = b & 4095 | 32768;
        return vb(a, b, 0)
    }

    function zb(a, b) {
        b = b & 1023 | 16384;
        return vb(a, b, 0)
    }

    function Ab(a, b, c) {
        return vb(a, b | 8192, c)
    }

    function Bb(a, b) {
        var c = O(b, {
                parent: l
            }).d,
            d = "/" === b ? "/" : wb(b)[2],
            e = xb(c, d);
        e && g(new Q(e));
        c.l.Wa || g(new Q(N.L));
        return c.l.Wa(c, d, a)
    }

    function Cb(a, b) {
        var c;
        c = "string" === typeof a ? O(a, {
            N: l
        }).d : a;
        c.l.Y || g(new Q(N.L));
        c.l.Y(c, {
            mode: b & 4095 | c.mode & -4096,
            timestamp: Date.now()
        })
    }

    function Db(a, b) {
        var c, a = Eb(a),
            d;
        "string" === typeof b ? (d = Fb[b], "undefined" === typeof d && g(Error("Unknown file open mode: " + b))) : d = b;
        b = d;
        c = b & 512 ? c & 4095 | 32768 : 0;
        var e;
        try {
            var f = O(a, {
                N: !(b & 65536)
            });
            e = f.d;
            a = f.path
        } catch (h) {}
        b & 512 && (e ? b & 2048 && g(new Q(N.va)) : e = vb(a, c, 0));
        e || g(new Q(N.ca));
        8192 === (e.mode & 61440) && (b &= -1025);
        e ? 40960 === (e.mode & 61440) ? c = N.ba : 16384 === (e.mode & 61440) && (0 !== (b & 3) || b & 1024) ? c = N.aa : (c = ["r", "w", "rw"][b & 3], b & 1024 && (c += "w"), c = Gb(e, c)) : c = N.ca;
        c && g(new Q(c));
        b & 1024 && (c = e, c = "string" === typeof c ? O(c, {
            N: l
        }).d : c, c.l.Y || g(new Q(N.L)), 16384 === (c.mode & 61440) && g(new Q(N.aa)), 32768 !== (c.mode & 61440) && g(new Q(N.A)), (f = Gb(c, "w")) && g(new Q(f)), c.l.Y(c, {
            size: 0,
            timestamp: Date.now()
        }));
        var i = {
                path: a,
                d: e,
                M: b,
                seekable: l,
                position: 0,
                e: e.e,
                Gb: [],
                error: p
            },
            j;
        a: {
            e = k || 4096;
            for (c = k || 1; c <= e; c++) {
                if (!R[c]) {
                    j = c;
                    break a
                }
            }
            g(new Q(N.Za))
        }
        i.s = j;
        Object.defineProperty(i, "object", {
            get: function () {
                return i.d
            },
            set: function (a) {
                i.d = a
            }
        });
        Object.defineProperty(i, "isRead", {
            get: function () {
                return 1 !== (i.M & 3)
            }
        });
        Object.defineProperty(i, "isWrite", {
            get: function () {
                return 0 !== (i.M & 3)
            }
        });
        Object.defineProperty(i, "isAppend", {
            get: function () {
                return i.M & 8
            }
        });
        R[j] = i;
        i.e.open && i.e.open(i);
        return i
    }

    function Hb(a) {
        try {
            a.e.close && a.e.close(a)
        } catch (b) {
            g(b)
        } finally {
            R[a.s] = m
        }
    }

    function Ib(a, b, c, d, e) {
        (0 > d || 0 > e) && g(new Q(N.A));
        0 === (a.M & 3) && g(new Q(N.$));
        16384 === (a.d.mode & 61440) && g(new Q(N.aa));
        a.e.write || g(new Q(N.A));
        var f = l;
        "undefined" === typeof e ? (e = a.position, f = p) : a.seekable || g(new Q(N.da));
        a.M & 8 && ((!a.seekable || !a.e.na) && g(new Q(N.da)), a.e.na(a, 0, 2));
        b = a.e.write(a, b, c, d, e);
        f || (a.position += b);
        return b
    }

    function wb(a) {
        return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a).slice(1)
    }

    function Jb(a, b) {
        for (var c = 0, d = a.length - 1; 0 <= d; d--) {
            var e = a[d];
            "." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--)
        }
        if (b) {
            for (; c--; c) {
                a.unshift("..")
            }
        }
        return a
    }

    function Eb(a) {
        var b = "/" === a.charAt(0),
            c = "/" === a.substr(-1),
            a = Jb(a.split("/").filter(function (a) {
                return !!a
            }), !b).join("/");
        !a && !b && (a = ".");
        a && c && (a += "/");
        return (b ? "/" : "") + a
    }

    function S() {
        var a = Array.prototype.slice.call(arguments, 0);
        return Eb(a.filter(function (a) {
            "string" !== typeof a && g(new TypeError("Arguments to path.join must be strings"));
            return a
        }).join("/"))
    }

    function Kb() {
        for (var a = "", b = p, c = arguments.length - 1; - 1 <= c && !b; c--) {
            var d = 0 <= c ? arguments[c] : "/";
            "string" !== typeof d && g(new TypeError("Arguments to path.resolve must be strings"));
            d && (a = d + "/" + a, b = "/" === d.charAt(0))
        }
        a = Jb(a.split("/").filter(function (a) {
            return !!a
        }), !b).join("/");
        return (b ? "/" : "") + a || "."
    }
    var Lb = [];

    function Mb(a, b) {
        Lb[a] = {
            input: [],
            H: [],
            O: b
        };
        Nb[a] = {
            e: Ob
        }
    }
    var Ob = {
            open: function (a) {
                Pb || (Pb = new pa);
                var b = Lb[a.d.X];
                b || g(new Q(N.wa));
                a.q = b;
                a.seekable = p
            },
            close: function (a) {
                a.q.H.length && a.q.O.W(a.q, 10)
            },
            Q: function (a, b, c, d) {
                (!a.q || !a.q.O.Na) && g(new Q(N.za));
                for (var e = 0, f = 0; f < d; f++) {
                    var h;
                    try {
                        h = a.q.O.Na(a.q)
                    } catch (i) {
                        g(new Q(N.I))
                    }
                    h === k && 0 === e && g(new Q(N.ua));
                    if (h === m || h === k) {
                        break
                    }
                    e++;
                    b[c + f] = h
                }
                e && (a.d.timestamp = Date.now());
                return e
            },
            write: function (a, b, c, d) {
                (!a.q || !a.q.O.W) && g(new Q(N.za));
                for (var e = 0; e < d; e++) {
                    try {
                        a.q.O.W(a.q, b[c + e])
                    } catch (f) {
                        g(new Q(N.I))
                    }
                }
                d && (a.d.timestamp = Date.now());
                return e
            }
        },
        Pb, T = {
            z: function () {
                return T.ka(m, "/", 16895, 0)
            },
            ka: function (a, b, c, d) {
                (24576 === (c & 61440) || 4096 === (c & 61440)) && g(new Q(N.L));
                c = Qb(a, b, c, d);
                c.l = T.l;
                16384 === (c.mode & 61440) ? (c.e = T.e, c.g = {}) : 32768 === (c.mode & 61440) ? (c.e = T.e, c.g = []) : 40960 === (c.mode & 61440) ? c.e = T.e : 8192 === (c.mode & 61440) && (c.e = Rb);
                c.timestamp = Date.now();
                a && (a.g[b] = c);
                return c
            },
            l: {
                ge: function (a) {
                    var b = {};
                    b.ce = 8192 === (a.mode & 61440) ? a.id : 1;
                    b.je = a.id;
                    b.mode = a.mode;
                    b.pe = 1;
                    b.uid = 0;
                    b.he = 0;
                    b.X = a.X;
                    b.size = 16384 === (a.mode & 61440) ? 4096 : 32768 === (a.mode & 61440) ? a.g.length : 40960 === (a.mode & 61440) ? a.link.length : 0;
                    b.Yd = new Date(a.timestamp);
                    b.oe = new Date(a.timestamp);
                    b.ae = new Date(a.timestamp);
                    b.ib = 4096;
                    b.Zd = Math.ceil(b.size / b.ib);
                    return b
                },
                Y: function (a, b) {
                    b.mode !== k && (a.mode = b.mode);
                    b.timestamp !== k && (a.timestamp = b.timestamp);
                    if (b.size !== k) {
                        var c = a.g;
                        if (b.size < c.length) {
                            c.length = b.size
                        } else {
                            for (; b.size > c.length;) {
                                c.push(0)
                            }
                        }
                    }
                },
                tb: function () {
                    g(new Q(N.ca))
                },
                Ta: function (a, b, c, d) {
                    return T.ka(a, b, c, d)
                },
                rename: function (a, b, c) {
                    if (16384 === (a.mode & 61440)) {
                        var d;
                        try {
                            d = Sb(b, c)
                        } catch (e) {}
                        if (d) {
                            for (var f in d.g) {
                                g(new Q(N.ya))
                            }
                        }
                    }
                    delete a.parent.g[a.name];
                    a.name = c;
                    b.g[c] = a
                },
                ze: function (a, b) {
                    delete a.g[b]
                },
                ve: function (a, b) {
                    var c = Sb(a, b),
                        d;
                    for (d in c.g) {
                        g(new Q(N.ya))
                    }
                    delete a.g[b]
                },
                Wa: function (a, b, c) {
                    a = T.ka(a, b, 41471, 0);
                    a.link = c;
                    return a
                },
                Va: function (a) {
                    40960 !== (a.mode & 61440) && g(new Q(N.A));
                    return a.link
                }
            },
            e: {
                open: function (a) {
                    if (16384 === (a.d.mode & 61440)) {
                        var b = [".", ".."],
                            c;
                        for (c in a.d.g) {
                            a.d.g.hasOwnProperty(c) && b.push(c)
                        }
                        a.lb = b
                    }
                },
                Q: function (a, b, c, d, e) {
                    a = a.d.g;
                    d = Math.min(a.length - e, d);
                    if (a.subarray) {
                        b.set(a.subarray(e, e + d), c)
                    } else {
                        for (var f = 0; f < d; f++) {
                            b[c + f] = a[e + f]
                        }
                    }
                    return d
                },
                write: function (a, b, c, d, e) {
                    for (var f = a.d.g; f.length < e;) {
                        f.push(0)
                    }
                    for (var h = 0; h < d; h++) {
                        f[e + h] = b[c + h]
                    }
                    a.d.timestamp = Date.now();
                    return d
                },
                na: function (a, b, c) {
                    1 === c ? b += a.position : 2 === c && 32768 === (a.d.mode & 61440) && (b += a.d.g.length);
                    0 > b && g(new Q(N.A));
                    a.Gb = [];
                    return a.position = b
                },
                ue: function (a) {
                    return a.lb
                },
                Wd: function (a, b, c) {
                    a = a.d.g;
                    for (b += c; b > a.length;) {
                        a.push(0)
                    }
                },
                ne: function (a, b, c, d, e, f, h) {
                    32768 !== (a.d.mode & 61440) && g(new Q(N.wa));
                    a = a.d.g;
                    if (h & 2) {
                        if (0 < e || e + d < a.length) {
                            a = a.subarray ? a.subarray(e, e + d) : Array.prototype.slice.call(a, e, e + d)
                        }
                        e = l;
                        (d = Oa(d)) || g(new Q(N.$a));
                        b.set(a, d)
                    } else {
                        w(a.buffer === b || a.buffer === b.buffer), e = p, d = a.byteOffset
                    }
                    return {
                        te: d,
                        Xd: e
                    }
                }
            }
        },
        Tb = F(1, "i32*", E),
        Ub = F(1, "i32*", E);
    nb = F(1, "i32*", E);
    var Vb = m,
        Nb = [m],
        R = [m],
        Wb = 1,
        Xb
        Yb = l;

    function Q(a) {
        this.mb = a;
        for (var b in N) {
            if (N[b] === a) {
                this.code = b;
                break
            }
        }
        this.message = ub[a]
    }

    function Zb(a) {
        a instanceof Q || g(a + " : " + Error().stack);
        M(a.mb)
    }

    function $b(a, b) {
        for (var c = 0, d = 0; d < b.length; d++) {
            c = (c << 5) - c + b.charCodeAt(d) | 0
        }
        return (a + c) % Xb.length
    }

    function Sb(a, b) {
        var c = Gb(a, "x");
        c && g(new Q(c));
        for (c = Xb[$b(a.id, b)]; c; c = c.wb) {
            if (c.parent.id === a.id && c.name === b) {
                return c
            }
        }
        return a.l.tb(a, b)
    }

    function Qb(a, b, c, d) {
        var e = {
            id: Wb++,
            name: b,
            mode: c,
            l: {},
            e: {},
            X: d,
            parent: m,
            z: m
        };
        a || (a = e);
        e.parent = a;
        e.z = a.z;
        Object.defineProperty(e, "read", {
            get: function () {
                return 365 === (e.mode & 365)
            },
            set: function (a) {
                a ? e.mode |= 365 : e.mode &= -366
            }
        });
        Object.defineProperty(e, "write", {
            get: function () {
                return 146 === (e.mode & 146)
            },
            set: function (a) {
                a ? e.mode |= 146 : e.mode &= -147
            }
        });
        a = $b(e.parent.id, e.name);
        e.wb = Xb[a];
        return Xb[a] = e
    }

    function O(a, b) {
        a = Kb("/", a);
        b = b || {
            pa: 0
        };
        8 < b.pa && g(new Q(N.ba));
        for (var c = Jb(a.split("/").filter(function (a) {
                return !!a
            }), p), d = Vb, e = "/", f = 0; f < c.length; f++) {
            var h = f === c.length - 1;
            if (h && b.parent) {
                break
            }
            d = Sb(d, c[f]);
            e = S(e, c[f]);
            d.ub && (d = d.z.root);
            if (!h || b.N) {
                for (h = 0; 40960 === (d.mode & 61440);) {
                    d = O(e, {
                        N: p
                    }).d;
                    d.l.Va || g(new Q(N.A));
                    var d = d.l.Va(d),
                        i = Kb;
                    var j = wb(e),
                        e = j[0],
                        j = j[1];
                    !e && !j ? e = "." : (j && (j = j.substr(0, j.length - 1)), e += j);
                    e = i(e, d);
                    d = O(e, {
                        pa: b.pa
                    }).d;
                    40 < h++ && g(new Q(N.ba))
                }
            }
        }
        return {
            path: e,
            d: d
        }
    }

    function ac(a) {
        for (var b;;) {
            if (a === a.parent) {
                return b ? S(a.z.Ua, b) : a.z.Ua
            }
            b = b ? S(a.name, b) : a.name;
            a = a.parent
        }
    }
    var Fb = {
        r: 0,
        rs: 8192,
        "r+": 2,
        w: 1537,
        wx: 3585,
        xw: 3585,
        "w+": 1538,
        "wx+": 3586,
        "xw+": 3586,
        a: 521,
        ax: 2569,
        xa: 2569,
        "a+": 522,
        "ax+": 2570,
        "xa+": 2570
    };

    function Gb(a, b) {
        return Yb ? 0 : -1 !== b.indexOf("r") && !(a.mode & 292) || -1 !== b.indexOf("w") && !(a.mode & 146) || -1 !== b.indexOf("x") && !(a.mode & 73) ? N.Ya : 0
    }

    function xb(a, b) {
        try {
            return Sb(a, b), N.va
        } catch (c) {}
        return Gb(a, "wx")
    }
    var Rb = {
            open: function (a) {
                a.e = Nb[a.d.X].e;
                a.e.open && a.e.open(a)
            },
            na: function () {
                g(new Q(N.da))
            }
        },
        bc;

    function cc(a, b) {
        var c = 0;
        a && (c |= 365);
        b && (c |= 146);
        return c
    }

    function dc(a, b, c, d, e) {
        a = S("string" === typeof a ? a : ac(a), b);
        d = cc(d, e);
        e = yb(a, d);
        if (c) {
            if ("string" === typeof c) {
                for (var b = Array(c.length), f = 0, h = c.length; f < h; ++f) {
                    b[f] = c.charCodeAt(f)
                }
                c = b
            }
            Cb(a, d | 146);
            b = Db(a, "w");
            Ib(b, c, 0, c.length, 0);
            Hb(b);
            Cb(a, d)
        }
        return e
    }

    function ec(a, b, c, d) {
        a = S("string" === typeof a ? a : ac(a), b);
        ec.Sa || (ec.Sa = 64);
        b = ec.Sa++ << 8 | 0;
        Nb[b] = {
            e: {
                open: function (a) {
                    a.seekable = p
                },
                close: function () {
                    d && (d.buffer && d.buffer.length) && d(10)
                },
                Q: function (a, b, d, i) {
                    for (var j = 0, n = 0; n < i; n++) {
                        var y;
                        try {
                            y = c()
                        } catch (v) {
                            g(new Q(N.I))
                        }
                        y === k && 0 === j && g(new Q(N.ua));
                        if (y === m || y === k) {
                            break
                        }
                        j++;
                        b[d + n] = y
                    }
                    j && (a.d.timestamp = Date.now());
                    return j
                },
                write: function (a, b, c, i) {
                    for (var j = 0; j < i; j++) {
                        try {
                            d(b[c + j])
                        } catch (n) {
                            g(new Q(N.I))
                        }
                    }
                    i && (a.d.timestamp = Date.now());
                    return j
                }
            }
        };
        return Ab(a, c && d ? 511 : c ? 219 : 365, b)
    }

    function fc(a, b, c) {
        a = R[a];
        if (!a) {
            return -1
        }
        a.sender(G.subarray(b, b + c));
        return c
    }

    function gc(a, b, c) {
        var d = R[a];
        if (!d) {
            return M(N.$), -1
        }
        if (d && "socket" in d) {
            return fc(a, b, c)
        }
        try {
            return Ib(d, A, b, c)
        } catch (e) {
            return Zb(e), -1
        }
    }

    function hc(a, b, c, d) {
        c *= b;
        if (0 == c) {
            return 0
        }
        a = gc(d, a, c);
        if (-1 == a) {
            if (b = R[d]) {
                b.error = l
            }
            return 0
        }
        return Math.floor(a / b)
    }
    s._strlen = ic;

    function jc(a) {
        return 0 > a || 0 === a && -Infinity === 1 / a
    }

    function kc(a, b) {
        function c(a) {
            var c;
            "double" === a ? c = Ja[b + e >> 3] : "i64" == a ? (c = [B[b + e >> 2], B[b + (e + 8) >> 2]], e += 8) : (a = "i32", c = B[b + e >> 2]);
            e += Math.max(Math.max(la(a), ma), 8);
            return c
        }
        for (var d = a, e = 0, f = [], h, i;;) {
            var j = d;
            h = A[d];
            if (0 === h) {
                break
            }
            i = A[d + 1 | 0];
            if (37 == h) {
                var n = p,
                    y = p,
                    v = p,
                    C = p;
                a: for (;;) {
                    switch (i) {
                    case 43:
                        n = l;
                        break;
                    case 45:
                        y = l;
                        break;
                    case 35:
                        v = l;
                        break;
                    case 48:
                        if (C) {
                            break a
                        } else {
                            C = l;
                            break
                        };
                    default:
                        break a
                    }
                    d++;
                    i = A[d + 1 | 0]
                }
                var D = 0;
                if (42 == i) {
                    D = c("i32"), d++, i = A[d + 1 | 0]
                } else {
                    for (; 48 <= i && 57 >= i;) {
                        D = 10 * D + (i - 48), d++, i = A[d + 1 | 0]
                    }
                }
                var K = p;
                if (46 == i) {
                    var H = 0,
                        K = l;
                    d++;
                    i = A[d + 1 | 0];
                    if (42 == i) {
                        H = c("i32"), d++
                    } else {
                        for (;;) {
                            i = A[d + 1 | 0];
                            if (48 > i || 57 < i) {
                                break
                            }
                            H = 10 * H + (i - 48);
                            d++
                        }
                    }
                    i = A[d + 1 | 0]
                } else {
                    H = 6
                }
                var x;
                switch (String.fromCharCode(i)) {
                case "h":
                    i = A[d + 2 | 0];
                    104 == i ? (d++, x = 1) : x = 2;
                    break;
                case "l":
                    i = A[d + 2 | 0];
                    108 == i ? (d++, x = 8) : x = 4;
                    break;
                case "L":
                    ;
                case "q":
                    ;
                case "j":
                    x = 8;
                    break;
                case "z":
                    ;
                case "t":
                    ;
                case "I":
                    x = 4;
                    break;
                default:
                    x = m
                }
                x && d++;
                i = A[d + 1 | 0];
                switch (String.fromCharCode(i)) {
                case "d":
                    ;
                case "i":
                    ;
                case "u":
                    ;
                case "o":
                    ;
                case "x":
                    ;
                case "X":
                    ;
                case "p":
                    j = 100 == i || 105 == i;
                    x = x || 4;
                    var P = h = c("i" + 8 * x),
                        r;
                    8 == x && (h = 117 == i ? +(h[0] >>> 0) + 4294967296 * +(h[1] >>> 0) : +(h[0] >>> 0) + 4294967296 * +(h[1] | 0));
                    4 >= x && (h = (j ? eb : db)(h & Math.pow(256, x) - 1, 8 * x));
                    var ta = Math.abs(h),
                        j = "";
                    if (100 == i || 105 == i) {
                        r = 8 == x && lc ? lc.stringify(P[0], P[1], m) : eb(h, 8 * x).toString(10)
                    } else {
                        if (117 == i) {
                            r = 8 == x && lc ? lc.stringify(P[0], P[1], l) : db(h, 8 * x).toString(10), h = Math.abs(h)
                        } else {
                            if (111 == i) {
                                r = (v ? "0" : "") + ta.toString(8)
                            } else {
                                if (120 == i || 88 == i) {
                                    j = v && 0 != h ? "0x" : "";
                                    if (8 == x && lc) {
                                        if (P[1]) {
                                            r = (P[1] >>> 0).toString(16);
                                            for (v = (P[0] >>> 0).toString(16); 8 > v.length;) {
                                                v = "0" + v
                                            }
                                            r += v
                                        } else {
                                            r = (P[0] >>> 0).toString(16)
                                        }
                                    } else {
                                        if (0 > h) {
                                            h = -h;
                                            r = (ta - 1).toString(16);
                                            P = [];
                                            for (v = 0; v < r.length; v++) {
                                                P.push((15 - parseInt(r[v], 16)).toString(16))
                                            }
                                            for (r = P.join(""); r.length < 2 * x;) {
                                                r = "f" + r
                                            }
                                        } else {
                                            r = ta.toString(16)
                                        }
                                    }
                                    88 == i && (j = j.toUpperCase(), r = r.toUpperCase())
                                } else {
                                    112 == i && (0 === ta ? r = "(nil)" : (j = "0x", r = ta.toString(16)))
                                }
                            }
                        }
                    }
                    if (K) {
                        for (; r.length < H;) {
                            r = "0" + r
                        }
                    }
                    for (n && (j = 0 > h ? "-" + j : "+" + j); j.length + r.length < D;) {
                        y ? r += " " : C ? r = "0" + r : j = " " + j
                    }
                    r = j + r;
                    r.split("").forEach(function (a) {
                        f.push(a.charCodeAt(0))
                    });
                    break;
                case "f":
                    ;
                case "F":
                    ;
                case "e":
                    ;
                case "E":
                    ;
                case "g":
                    ;
                case "G":
                    h = c("double");
                    if (isNaN(h)) {
                        r = "nan", C = p
                    } else {
                        if (isFinite(h)) {
                            K = p;
                            x = Math.min(H, 20);
                            if (103 == i || 71 == i) {
                                K = l, H = H || 1, x = parseInt(h.toExponential(x).split("e")[1], 10), H > x && -4 <= x ? (i = (103 == i ? "f" : "F").charCodeAt(0), H -= x + 1) : (i = (103 == i ? "e" : "E").charCodeAt(0), H--), x = Math.min(H, 20)
                            }
                            if (101 == i || 69 == i) {
                                r = h.toExponential(x), /[eE][-+]\d$/.test(r) && (r = r.slice(0, -1) + "0" + r.slice(-1))
                            } else {
                                if (102 == i || 70 == i) {
                                    r = h.toFixed(x), 0 === h && jc(h) && (r = "-" + r)
                                }
                            }
                            j = r.split("e");
                            if (K && !v) {
                                for (; 1 < j[0].length && -1 != j[0].indexOf(".") && ("0" == j[0].slice(-1) || "." == j[0].slice(-1));) {
                                    j[0] = j[0].slice(0, -1)
                                }
                            } else {
                                for (v && -1 == r.indexOf(".") && (j[0] += "."); H > x++;) {
                                    j[0] += "0"
                                }
                            }
                            r = j[0] + (1 < j.length ? "e" + j[1] : "");
                            69 == i && (r = r.toUpperCase());
                            n && 0 <= h && (r = "+" + r)
                        } else {
                            r = (0 > h ? "-" : "") + "inf", C = p
                        }
                    }
                    for (; r.length < D;) {
                        r = y ? r + " " : C && ("-" == r[0] || "+" == r[0]) ? r[0] + "0" + r.slice(1) : (C ? "0" : " ") + r
                    }
                    97 > i && (r = r.toUpperCase());
                    r.split("").forEach(function (a) {
                        f.push(a.charCodeAt(0))
                    });
                    break;
                case "s":
                    C = (n = c("i8*")) ? ic(n) : 6;
                    K && (C = Math.min(C, H));
                    if (!y) {
                        for (; C < D--;) {
                            f.push(32)
                        }
                    }
                    if (n) {
                        for (v = 0; v < C; v++) {
                            f.push(G[n++ | 0])
                        }
                    } else {
                        f = f.concat(J("(null)".substr(0, C), l))
                    }
                    if (y) {
                        for (; C < D--;) {
                            f.push(32)
                        }
                    }
                    break;
                case "c":
                    for (y && f.push(c("i8")); 0 < --D;) {
                        f.push(32)
                    }
                    y || f.push(c("i8"));
                    break;
                case "n":
                    y = c("i32*");
                    B[y >> 2] = f.length;
                    break;
                case "%":
                    f.push(h);
                    break;
                default:
                    for (v = j; v < d + 2; v++) {
                        f.push(A[v])
                    }
                }
                d += 2
            } else {
                f.push(h), d += 1
            }
        }
        return f
    }

    function mc(a, b, c) {
        c = kc(b, c);
        b = ja();
        a = hc(F(c, "i8", La), 1, c.length, a);
        ka(b);
        return a
    }

    function nc(a) {
        nc.ia || (z = z + 4095 >> 12 << 12, nc.ia = l, w(ua), nc.hb = ua, ua = function () {
            wa("cannot dynamically allocate, sbrk now has control")
        });
        var b = z;
        0 != a && nc.hb(a);
        return b
    }

    function U() {
        return B[U.m >> 2]
    }

    function oc() {
        return !!oc.ta
    }

    function pc(a) {
        var b = p;
        try {
            a == __ZTIi && (b = l)
        } catch (c) {}
        try {
            a == __ZTIj && (b = l)
        } catch (d) {}
        try {
            a == __ZTIl && (b = l)
        } catch (e) {}
        try {
            a == __ZTIm && (b = l)
        } catch (f) {}
        try {
            a == __ZTIx && (b = l)
        } catch (h) {}
        try {
            a == __ZTIy && (b = l)
        } catch (i) {}
        try {
            a == __ZTIf && (b = l)
        } catch (j) {}
        try {
            a == __ZTId && (b = l)
        } catch (n) {}
        try {
            a == __ZTIe && (b = l)
        } catch (y) {}
        try {
            a == __ZTIc && (b = l)
        } catch (v) {}
        try {
            a == __ZTIa && (b = l)
        } catch (C) {}
        try {
            a == __ZTIh && (b = l)
        } catch (D) {}
        try {
            a == __ZTIs && (b = l)
        } catch (K) {}
        try {
            a == __ZTIt && (b = l)
        } catch (H) {}
        return b
    }

    function qc(a, b, c) {
        if (0 == c) {
            return p
        }
        if (0 == b || b == a) {
            return l
        }
        switch (pc(b) ? b : B[B[b >> 2] - 8 >> 2]) {
        case 0:
            return 0 == B[B[a >> 2] - 8 >> 2] ? qc(B[a + 8 >> 2], B[b + 8 >> 2], c) : p;
        case 1:
            return p;
        case 2:
            return qc(a, B[b + 8 >> 2], c);
        default:
            return p
        }
    }

    function rc(a, b, c) {
        if (!rc.sb) {
            try {
                B[__ZTVN10__cxxabiv119__pointer_type_infoE >> 2] = 0
            } catch (d) {}
            try {
                B[pb >> 2] = 1
            } catch (e) {}
            try {
                B[ob >> 2] = 2
            } catch (f) {}
            rc.sb = l
        }
        B[U.m >> 2] = a;
        B[U.m + 4 >> 2] = b;
        B[U.m + 8 >> 2] = c;
        "uncaught_exception" in oc ? oc.ta++ : oc.ta = 1;
        g(a + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")
    }

    function sc(a) {
        try {
            return tc(a)
        } catch (b) {}
    }

    function uc() {
        if (uc.Bb) {
            uc.Bb = p
        } else {
            V.setThrew(0);
            B[U.m + 4 >> 2] = 0;
            var a = B[U.m >> 2],
                b = B[U.m + 8 >> 2];
            b && (na("vi", b, [a]), B[U.m + 8 >> 2] = 0);
            a && (sc(a), B[U.m >> 2] = 0)
        }
    }
    var vc = F(1, "i32*", E);

    function wc(a) {
        var b, c;
        wc.ia ? (c = B[vc >> 2], b = B[c >> 2]) : (wc.ia = l, W.USER = "root", W.PATH = "/", W.PWD = "/", W.HOME = "/home/emscripten", W.LANG = "en_US.UTF-8", W._ = "./this.program", b = F(1024, "i8", E), c = F(256, "i8*", E), B[c >> 2] = b, B[vc >> 2] = c);
        var d = [],
            e = 0,
            f;
        for (f in a) {
            if ("string" === typeof a[f]) {
                var h = f + "=" + a[f];
                d.push(h);
                e += h.length
            }
        }
        1024 < e && g(Error("Environment size exceeded TOTAL_ENV_SIZE!"));
        for (a = 0; a < d.length; a++) {
            h = d[a];
            for (e = 0; e < h.length; e++) {
                A[b + e | 0] = h.charCodeAt(e)
            }
            A[b + e | 0] = 0;
            B[c + 4 * a >> 2] = b;
            b += h.length + 1
        }
        B[c + 4 * d.length >> 2] = 0
    }
    var W = {};

    function xc(a) {
        if (0 === a) {
            return 0
        }
        a = Fa(a);
        if (!W.hasOwnProperty(a)) {
            return 0
        }
        xc.J && tc(xc.J);
        xc.J = F(J(W[a]), "i8", Ka);
        return xc.J
    }

    function yc(a, b, c) {
        if (a in ub) {
            if (ub[a].length > c - 1) {
                return M(N.ab)
            }
            a = ub[a];
            for (c = 0; c < a.length; c++) {
                A[b + c | 0] = a.charCodeAt(c)
            }
            return A[b + c | 0] = 0
        }
        return M(N.A)
    }

    function zc(a) {
        zc.buffer || (zc.buffer = Oa(256));
        yc(a, zc.buffer, 256);
        return zc.buffer
    }

    function Ac(a) {
        s.exit(a)
    }

    function Bc(a, b) {
        var c = db(a & 255);
        A[Bc.J | 0] = c;
        if (-1 == gc(b, Bc.J, 1)) {
            if (c = R[b]) {
                c.error = l
            }
            return -1
        }
        return c
    }
    var Cc = p,
        Dc = p,
        Ec = p,
        Fc = p,
        Gc = k,
        Hc = k;

    function Ic(a) {
        return {
            jpg: "image/jpeg",
            jpeg: "image/jpeg",
            png: "image/png",
            bmp: "image/bmp",
            ogg: "audio/ogg",
            wav: "audio/wav",
            mp3: "audio/mpeg"
        }[a.substr(a.lastIndexOf(".") + 1)]
    }
    var Jc = [];

    function Kc() {
        var a = s.canvas;
        Jc.forEach(function (b) {
            b(a.width, a.height)
        })
    }

    function Lc() {
        var a = s.canvas;
        this.Ib = a.width;
        this.Hb = a.height;
        a.width = screen.width;
        a.height = screen.height;
        "undefined" != typeof SDL && (a = Qa[SDL.screen + 0 * ma >> 2], B[SDL.screen + 0 * ma >> 2] = a | 8388608);
        Kc()
    }

    function Mc() {
        var a = s.canvas;
        a.width = this.Ib;
        a.height = this.Hb;
        "undefined" != typeof SDL && (a = Qa[SDL.screen + 0 * ma >> 2], B[SDL.screen + 0 * ma >> 2] = a & -8388609);
        Kc()
    }
    var Nc, Oc, Pc, Qc, rb = ra(4);
    B[rb >> 2] = 0;
    var Vb = Qb(m, "/", 16895, 0),
        Rc = T,
        Sc = {
            type: Rc,
            se: {},
            Ua: "/",
            root: m
        },
        Tc;
    Tc = O("/", {
        N: p
    });
    var Uc = Rc.z(Sc);
    Uc.z = Sc;
    Sc.root = Uc;
    Tc && (Tc.d.z = Sc, Tc.d.ub = l, Vb = Sc.root);
    zb("/tmp", 511);
    zb("/dev", 511);
    Nb[259] = {
        e: {
            Q: function () {
                return 0
            },
            write: function () {
                return 0
            }
        }
    };
    Ab("/dev/null", 438, 259);
    Mb(1280, {
        Na: function (a) {
            if (!a.input.length) {
                var b = m;
                if (ca) {
                    if (process.Eb.be) {
                        return
                    }
                    b = process.Eb.Q()
                } else {
                    "undefined" != typeof window && "function" == typeof window.prompt ? (b = window.prompt("Input: "), b !== m && (b += "\n")) : "function" == typeof readline && (b = readline(), b !== m && (b += "\n"))
                }
                if (!b) {
                    return m
                }
                a.input = J(b, l)
            }
            return a.input.shift()
        },
        W: function (a, b) {
            b === m || 10 === b ? (s.print(a.H.join("")), a.H = []) : a.H.push(Pb.oa(b))
        }
    });
    Mb(1536, {
        W: function (a, b) {
            b === m || 10 === b ? (s.printErr(a.H.join("")), a.H = []) : a.H.push(Pb.oa(b))
        }
    });
    Ab("/dev/tty", 438, 1280);
    Ab("/dev/tty1", 438, 1536);
    zb("/dev/shm", 511);
    zb("/dev/shm/tmp", 511);
    Xa.unshift({
        V: function () {
            if (!s.noFSInit && !bc) {
                w(!bc, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
                bc = l;
                s.stdin = s.stdin;
                s.stdout = s.stdout;
                s.stderr = s.stderr;
                s.stdin ? ec("/dev", "stdin", s.stdin) : Bb("/dev/tty", "/dev/stdin");
                s.stdout ? ec("/dev", "stdout", m, s.stdout) : Bb("/dev/tty", "/dev/stdout");
                s.stderr ? ec("/dev", "stderr", m, s.stderr) : Bb("/dev/tty1", "/dev/stderr");
                var a = Db("/dev/stdin", "r");
                B[Tb >> 2] = a.s;
                w(1 === a.s, "invalid handle for stdin (" + a.s + ")");
                a = Db("/dev/stdout", "w");
                B[Ub >> 2] = a.s;
                w(2 === a.s, "invalid handle for stdout (" + a.s + ")");
                a = Db("/dev/stderr", "w");
                B[nb >> 2] = a.s;
                w(3 === a.s, "invalid handle for stderr (" + a.s + ")")
            }
        }
    });
    Ya.push({
        V: function () {
            Yb = p
        }
    });
    Za.push({
        V: function () {
            bc = p;
            for (var a = 0; a < R.length; a++) {
                var b = R[a];
                b && Hb(b)
            }
        }
    });
    s.FS_createFolder = function (a, b, c, d) {
        a = S("string" === typeof a ? a : ac(a), b);
        return zb(a, cc(c, d))
    };
    s.FS_createPath = function (a, b) {
        for (var a = "string" === typeof a ? a : ac(a), c = b.split("/").reverse(); c.length;) {
            var d = c.pop();
            if (d) {
                var e = S(a, d);
                try {
                    zb(e, 511)
                } catch (f) {}
                a = e
            }
        }
        return e
    };
    s.FS_createDataFile = dc;
    s.FS_createPreloadedFile = function (a, b, c, d, e, f, h, i) {
        function j() {
            Ec = document.pointerLockElement === v || document.mozPointerLockElement === v || document.webkitPointerLockElement === v
        }

        function n(c) {
            function j(c) {
                i || dc(a, b, c, d, e);
                f && f();
                jb("cp " + C)
            }
            var n = p;
            s.preloadPlugins.forEach(function (a) {
                !n && a.canHandle(C) && (a.handle(c, C, j, function () {
                    h && h();
                    jb("cp " + C)
                }), n = l)
            });
            n || j(c)
        }
        s.preloadPlugins || (s.preloadPlugins = []);
        if (!Nc && !ea) {
            Nc = l;
            try {
                new Blob, Oc = l
            } catch (y) {
                Oc = p, console.log("warning: no blob constructor, cannot create blobs with mimetypes")
            }
            Pc = "undefined" != typeof MozBlobBuilder ? MozBlobBuilder : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : !Oc ? console.log("warning: no BlobBuilder") : m;
            Qc = "undefined" != typeof window ? window.URL ? window.URL : window.webkitURL : console.log("warning: cannot create object URLs");
            s.preloadPlugins.push({
                canHandle: function (a) {
                    return !s.re && /\.(jpg|jpeg|png|bmp)$/i.test(a)
                },
                handle: function (a, b, c, d) {
                    var e = m;
                    if (Oc) {
                        try {
                            e = new Blob([a], {
                                type: Ic(b)
                            }), e.size !== a.length && (e = new Blob([(new Uint8Array(a)).buffer], {
                                type: Ic(b)
                            }))
                        } catch (f) {
                            var h = "Blob constructor present but fails: " + f + "; falling back to blob builder";
                            oa || (oa = {});
                            oa[h] || (oa[h] = 1, s.P(h))
                        }
                    }
                    e || (e = new Pc, e.append((new Uint8Array(a)).buffer), e = e.getBlob());
                    var i = Qc.createObjectURL(e),
                        j = new Image;
                    j.onload = function () {
                        w(j.complete, "Image " + b + " could not be decoded");
                        var d = document.createElement("canvas");
                        d.width = j.width;
                        d.height = j.height;
                        d.getContext("2d").drawImage(j, 0, 0);
                        s.preloadedImages[b] = d;
                        Qc.revokeObjectURL(i);
                        c && c(a)
                    };
                    j.onerror = function () {
                        console.log("Image " + i + " could not be decoded");
                        d && d()
                    };
                    j.src = i
                }
            });
            s.preloadPlugins.push({
                canHandle: function (a) {
                    return !s.qe && a.substr(-4) in {
                        ".ogg": 1,
                        ".wav": 1,
                        ".mp3": 1
                    }
                },
                handle: function (a, b, c, d) {
                    function e(d) {
                        h || (h = l, s.preloadedAudios[b] = d, c && c(a))
                    }

                    function f() {
                        h || (h = l, s.preloadedAudios[b] = new Audio, d && d())
                    }
                    var h = p;
                    if (Oc) {
                        try {
                            var i = new Blob([a], {
                                type: Ic(b)
                            })
                        } catch (j) {
                            return f()
                        }
                        var i = Qc.createObjectURL(i),
                            n = new Audio;
                        n.addEventListener("canplaythrough", function () {
                            e(n)
                        }, p);
                        n.onerror = function () {
                            if (!h) {
                                console.log("warning: browser could not fully decode audio " + b + ", trying slower base64 approach");
                                for (var c = "", d = 0, f = 0, i = 0; i < a.length; i++) {
                                    d = d << 8 | a[i];
                                    for (f += 8; 6 <= f;) {
                                        var j = d >> f - 6 & 63,
                                            f = f - 6,
                                            c = c + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" [j]
                                    }
                                }
                                2 == f ? (c += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" [(d & 3) << 4], c += "==") : 4 == f && (c += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" [(d & 15) << 2], c += "=");
                                n.src = "data:audio/x-" + b.substr(-3) + ";base64," + c;
                                e(n)
                            }
                        };
                        n.src = i;
                        setTimeout(function () {
                            za || e(n)
                        }, 1E4)
                    } else {
                        return f()
                    }
                }
            });
            var v = s.canvas;
            v.qa = v.requestPointerLock || v.mozRequestPointerLock || v.webkitRequestPointerLock;
            v.La = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock || aa();
            v.La = v.La.bind(document);
            document.addEventListener("pointerlockchange", j, p);
            document.addEventListener("mozpointerlockchange", j, p);
            document.addEventListener("webkitpointerlockchange", j, p);
            s.elementPointerLock && v.addEventListener("click", function (a) {
                !Ec && v.qa && (v.qa(), a.preventDefault())
            }, p)
        }
        var C, D = S.apply(m, [a, b]);
        "/" == D[0] && (D = D.substr(1));
        C = D;
        ib("cp " + C);
        if ("string" == typeof c) {
            var K = h,
                H = function () {
                    K ? K() : g('Loading data file "' + c + '" failed.')
                },
                x = new XMLHttpRequest;
            x.open("GET", c, l);
            x.responseType = "arraybuffer";
            x.onload = function () {
                if (200 == x.status || 0 == x.status && x.response) {
                    var a = x.response;
                    w(a, 'Loading data file "' + c + '" failed (no arrayBuffer).');
                    a = new Uint8Array(a);
                    n(a);
                    jb("al " + c)
                } else {
                    H()
                }
            };
            x.onerror = H;
            x.send(m);
            ib("al " + c)
        } else {
            n(c)
        }
    };
    s.FS_createLazyFile = function (a, b, c, d, e) {
        var f, h;
        "undefined" !== typeof XMLHttpRequest ? (ea || g("Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc"), f = function () {
            this.ma = p;
            this.T = []
        }, f.prototype.get = function (a) {
            if (!(a > this.length - 1 || 0 > a)) {
                var b = a % this.S;
                return this.pb(Math.floor(a / this.S))[b]
            }
        }, f.prototype.Cb = function (a) {
            this.pb = a
        }, f.prototype.Fa = function () {
            var a = new XMLHttpRequest;
            a.open("HEAD", c, p);
            a.send(m);
            200 <= a.status && 300 > a.status || 304 === a.status || g(Error("Couldn't load " + c + ". Status: " + a.status));
            var b = Number(a.getResponseHeader("Content-length")),
                d, e = 1048576;
            if (!((d = a.getResponseHeader("Accept-Ranges")) && "bytes" === d)) {
                e = b
            }
            var f = this;
            f.Cb(function (a) {
                var d = a * e,
                    h = (a + 1) * e - 1,
                    h = Math.min(h, b - 1);
                if ("undefined" === typeof f.T[a]) {
                    var i = f.T;
                    d > h && g(Error("invalid range (" + d + ", " + h + ") or no bytes requested!"));
                    h > b - 1 && g(Error("only " + b + " bytes available! programmer error!"));
                    var j = new XMLHttpRequest;
                    j.open("GET", c, p);
                    b !== e && j.setRequestHeader("Range", "bytes=" + d + "-" + h);
                    "undefined" != typeof Uint8Array && (j.responseType = "arraybuffer");
                    j.overrideMimeType && j.overrideMimeType("text/plain; charset=x-user-defined");
                    j.send(m);
                    200 <= j.status && 300 > j.status || 304 === j.status || g(Error("Couldn't load " + c + ". Status: " + j.status));
                    d = j.response !== k ? new Uint8Array(j.response || []) : J(j.responseText || "", l);
                    i[a] = d
                }
                "undefined" === typeof f.T[a] && g(Error("doXHR failed!"));
                return f.T[a]
            });
            this.gb = b;
            this.fb = e;
            this.ma = l
        }, f = new f, Object.defineProperty(f, "length", {
            get: function () {
                this.ma || this.Fa();
                return this.gb
            }
        }), Object.defineProperty(f, "chunkSize", {
            get: function () {
                this.ma || this.Fa();
                return this.fb
            }
        }), h = k) : (h = c, f = k);
        var i, a = S("string" === typeof a ? a : ac(a), b);
        i = yb(a, cc(d, e));
        f ? i.g = f : h && (i.g = m, i.url = h);
        var j = {};
        Object.keys(i.e).forEach(function (a) {
            var b = i.e[a];
            j[a] = function () {
                var a;
                if (i.ke || i.le || i.link || i.g) {
                    a = l
                } else {
                    a = l;
                    "undefined" !== typeof XMLHttpRequest && g(Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."));
                    if (s.read) {
                        try {
                            i.g = J(s.read(i.url), l)
                        } catch (c) {
                            a = p
                        }
                    } else {
                        g(Error("Cannot load without read() or XMLHttpRequest."))
                    }
                    a || M(N.I)
                }
                a || g(new Q(N.I));
                return b.apply(m, arguments)
            }
        });
        j.Q = function (a, b, c, d, e) {
            a = a.d.g;
            d = Math.min(a.length - e, d);
            if (a.slice) {
                for (var f = 0; f < d; f++) {
                    b[c + f] = a[e + f]
                }
            } else {
                for (f = 0; f < d; f++) {
                    b[c + f] = a.get(e + f)
                }
            }
            return d
        };
        i.e = j;
        return i
    };
    s.FS_createLink = function (a, b, c) {
        a = S("string" === typeof a ? a : ac(a), b);
        return Bb(c, a)
    };
    s.FS_createDevice = ec;
    U.m = F(12, "void*", E);
    wc(W);
    Bc.J = F([0], "i8", E);
    s.requestFullScreen = function (a, b) {
        function c() {
            Dc = p;
            (document.webkitFullScreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.mozFullscreenElement || document.fullScreenElement || document.fullscreenElement) === d ? (d.Ga = document.cancelFullScreen || document.mozCancelFullScreen || document.webkitCancelFullScreen, d.Ga = d.Ga.bind(document), Gc && d.qa(), Dc = l, Hc && Lc()) : Hc && Mc();
            if (s.onFullScreen) {
                s.onFullScreen(Dc)
            }
        }
        Gc = a;
        Hc = b;
        "undefined" === typeof Gc && (Gc = l);
        "undefined" === typeof Hc && (Hc = p);
        var d = s.canvas;
        Fc || (Fc = l, document.addEventListener("fullscreenchange", c, p), document.addEventListener("mozfullscreenchange", c, p), document.addEventListener("webkitfullscreenchange", c, p));
        d.Ab = d.requestFullScreen || d.mozRequestFullScreen || (d.webkitRequestFullScreen ? function () {
            d.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)
        } : m);
        d.Ab()
    };
    s.requestAnimationFrame = function (a) {
        window.requestAnimationFrame || (window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || window.setTimeout);
        window.requestAnimationFrame(a)
    };
    s.pauseMainLoop = aa();
    s.resumeMainLoop = function () {
        Cc && (Cc = p, m())
    };
    s.getUserMedia = function () {
        window.Ma || (window.Ma = navigator.getUserMedia || navigator.mozGetUserMedia);
        window.Ma(k)
    };
    Sa = u = xa(sa);
    Ta = Sa + 5242880;
    Ua = z = xa(Ta);
    w(Ua < va);
    var Vc = F([8, 7, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        ], "i8", 3),
        Wc = F([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0,
            2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1,
            0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0
        ], "i8", 3),
        Xc = Math.min;
    var V = (function (global, env, buffer) {
        // EMSCRIPTEN_START_ASM
        "use asm";
        var a = new global.Int8Array(buffer);
        var b = new global.Int16Array(buffer);
        var c = new global.Int32Array(buffer);
        var d = new global.Uint8Array(buffer);
        var e = new global.Uint16Array(buffer);
        var f = new global.Uint32Array(buffer);
        var g = new global.Float32Array(buffer);
        var h = new global.Float64Array(buffer);
        var i = env.STACKTOP | 0;
        var j = env.STACK_MAX | 0;
        var k = env.tempDoublePtr | 0;
        var l = env.ABORT | 0;
        var m = env.cttz_i8 | 0;
        var n = env.ctlz_i8 | 0;
        var o = env._stderr | 0;
        var p = env.__ZTVN10__cxxabiv120__si_class_type_infoE | 0;
        var q = env.__ZTVN10__cxxabiv117__class_type_infoE | 0;
        var r = env.___progname | 0;
        var s = +env.NaN;
        var t = +env.Infinity;
        var u = 0;
        var v = 0;
        var w = 0;
        var x = 0;
        var y = 0,
            z = 0,
            A = 0,
            B = 0,
            C = 0.0,
            D = 0,
            E = 0,
            F = 0,
            G = 0.0;
        var H = 0;
        var I = 0;
        var J = 0;
        var K = 0;
        var L = 0;
        var M = 0;
        var N = 0;
        var O = 0;
        var P = 0;
        var Q = 0;
        var R = global.Math.floor;
        var S = global.Math.abs;
        var T = global.Math.sqrt;
        var U = global.Math.pow;
        var V = global.Math.cos;
        var W = global.Math.sin;
        var X = global.Math.tan;
        var Y = global.Math.acos;
        var Z = global.Math.asin;
        var _ = global.Math.atan;
        var $ = global.Math.atan2;
        var aa = global.Math.exp;
        var ab = global.Math.log;
        var ac = global.Math.ceil;
        var ad = global.Math.imul;
        var ae = env.abort;
        var af = env.assert;
        var ag = env.asmPrintInt;
        var ah = env.asmPrintFloat;
        var ai = env.min;
        var aj = env.invoke_vi;
        var ak = env.invoke_vii;
        var al = env.invoke_ii;
        var am = env.invoke_viii;
        var an = env.invoke_v;
        var ao = env.invoke_iii;
        var ap = env._strncmp;
        var aq = env._llvm_va_end;
        var ar = env._sysconf;
        var as = env.___cxa_throw;
        var at = env._strerror;
        var au = env._abort;
        var av = env._fprintf;
        var aw = env._llvm_eh_exception;
        var ax = env.___cxa_free_exception;
        var ay = env._fflush;
        var az = env.___buildEnvironment;
        var aA = env.__reallyNegative;
        var aB = env._strchr;
        var aC = env._fputc;
        var aD = env.___setErrNo;
        var aE = env._fwrite;
        var aF = env._send;
        var aG = env._write;
        var aH = env._exit;
        var aI = env.___cxa_find_matching_catch;
        var aJ = env.___cxa_allocate_exception;
        var aK = env._isspace;
        var aL = env.__formatString;
        var aM = env.___resumeException;
        var aN = env._llvm_uadd_with_overflow_i32;
        var aO = env.___cxa_does_inherit;
        var aP = env._getenv;
        var aQ = env._vfprintf;
        var aR = env.___cxa_begin_catch;
        var aS = env.__ZSt18uncaught_exceptionv;
        var aT = env._pwrite;
        var aU = env.___cxa_call_unexpected;
        var aV = env._sbrk;
        var aW = env._strerror_r;
        var aX = env.___errno_location;
        var aY = env.___gxx_personality_v0;
        var aZ = env.___cxa_is_number_type;
        var a_ = env._time;
        var a$ = env.__exit;
        var a0 = env.___cxa_end_catch;
        // EMSCRIPTEN_START_FUNCS
        function a7(a) {
            a = a | 0;
            var b = 0;
            b = i;
            i = i + a | 0;
            i = i + 7 >> 3 << 3;
            return b | 0;
        }

        function a8() {
            return i | 0;
        }

        function a9(a) {
            a = a | 0;
            i = a;
        }

        function ba(a, b) {
            a = a | 0;
            b = b | 0;
            if ((u | 0) == 0) {
                u = a;
                v = b;
            }
        }

        function bb(b) {
            b = b | 0;
            a[k] = a[b];
            a[k + 1 | 0] = a[b + 1 | 0];
            a[k + 2 | 0] = a[b + 2 | 0];
            a[k + 3 | 0] = a[b + 3 | 0];
        }

        function bc(b) {
            b = b | 0;
            a[k] = a[b];
            a[k + 1 | 0] = a[b + 1 | 0];
            a[k + 2 | 0] = a[b + 2 | 0];
            a[k + 3 | 0] = a[b + 3 | 0];
            a[k + 4 | 0] = a[b + 4 | 0];
            a[k + 5 | 0] = a[b + 5 | 0];
            a[k + 6 | 0] = a[b + 6 | 0];
            a[k + 7 | 0] = a[b + 7 | 0];
        }

        function bd(a) {
            a = a | 0;
            H = a;
        }

        function be(a) {
            a = a | 0;
            I = a;
        }

        function bf(a) {
            a = a | 0;
            J = a;
        }

        function bg(a) {
            a = a | 0;
            K = a;
        }

        function bh(a) {
            a = a | 0;
            L = a;
        }

        function bi(a) {
            a = a | 0;
            M = a;
        }

        function bj(a) {
            a = a | 0;
            N = a;
        }

        function bk(a) {
            a = a | 0;
            O = a;
        }

        function bl(a) {
            a = a | 0;
            P = a;
        }

        function bm(a) {
            a = a | 0;
            Q = a;
        }

        function bn() {
            c[170] = q + 8;
            c[172] = p + 8;
            c[176] = p + 8;
        }

        function bo(b, c, d) {
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0;
            if ((d | 0) == 0) {
                return;
            } else {
                e = 0;
            }
            do {
                a[b + e | 0] = a[c + e | 0] | 0;
                e = e + 1 | 0;
            } while (e >>> 0 < d >>> 0);
            return;
        }

        function bp(b, c, d) {
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            if ((d | 0) == 0) {
                return;
            } else {
                e = 0;
            }
            do {
                f = b + e | 0;
                a[f] = a[f] ^ a[c + e | 0];
                e = e + 1 | 0;
            } while (e >>> 0 < d >>> 0);
            return;
        }

        function bq(a) {
            a = a | 0;
            var b = 0,
                c = 0,
                e = 0,
                f = 0;
            b = d[a + 1 | 0] | 0;
            c = d[a + 2 | 0] | 0;
            e = d[a + 3 | 0] | 0;
            f = cN(b << 8 | 0 >>> 24 | (d[a] | 0) | (c << 16 | 0 >>> 16) | (e << 24 | 0 >>> 8) | (0 << 8 | 0 >>> 24), 0 << 8 | b >>> 24 | (0 << 16 | c >>> 16) | (0 << 24 | e >>> 8) | (d[a + 4 | 0] | 0) | ((d[a + 5 | 0] | 0) << 8 | 0 >>> 24), 0 << 16 | 0 >>> 16, (d[a + 6 | 0] | 0) << 16 | 0 >>> 16) | 0;
            e = cN(f, H, 0 << 24 | 0 >>> 8, (d[a + 7 | 0] | 0) << 24 | 0 >>> 8) | 0;
            return (H = H, e) | 0;
        }

        function br(a) {
            a = a | 0;
            return (d[a + 1 | 0] | 0) << 8 | (d[a] | 0) | (d[a + 2 | 0] | 0) << 16 | (d[a + 3 | 0] | 0) << 24 | 0;
        }

        function bs(b, c) {
            b = b | 0;
            c = c | 0;
            a[b] = c & 255;
            a[b + 1 | 0] = c >>> 8 & 255;
            a[b + 2 | 0] = c >>> 16 & 255;
            a[b + 3 | 0] = c >>> 24 & 255;
            return;
        }

        function bt(a) {
            a = a | 0;
            c[a + 36 >> 2] = 0;
            c[a + 32 >> 2] = 0;
            c[a >> 2] = 1779033703;
            c[a + 4 >> 2] = -1150833019;
            c[a + 8 >> 2] = 1013904242;
            c[a + 12 >> 2] = -1521486534;
            c[a + 16 >> 2] = 1359893119;
            c[a + 20 >> 2] = -1694144372;
            c[a + 24 >> 2] = 528734635;
            c[a + 28 >> 2] = 1541459225;
            return;
        }

        function bu(a, b, d, e, f, g, h, i, j, k) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            g = g | 0;
            h = h | 0;
            i = i | 0;
            j = j | 0;
            k = k | 0;
            var l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0;
            l = cX(i, 0, h, 0) | 0;
            m = H;
            n = 0;
            if (m >>> 0 > n >>> 0 | m >>> 0 == n >>> 0 & l >>> 0 > 1073741823 >>> 0) {
                c[(aX() | 0) >> 2] = 27;
                o = -1;
                return o | 0;
            }
            l = cN(f, g, -1, -1) | 0;
            if ((l & f | 0) != 0 | (H & g | 0) != 0 | (f | 0) == 0 & (g | 0) == 0) {
                c[(aX() | 0) >> 2] = 22;
                o = -1;
                return o | 0;
            }
            do {
                if (!((33554431 / (i >>> 0) | 0) >>> 0 < h >>> 0 | h >>> 0 > 16777215)) {
                    l = 0;
                    if (l >>> 0 < g >>> 0 | l >>> 0 == g >>> 0 & (33554431 / (h >>> 0) | 0) >>> 0 < f >>> 0) {
                        break;
                    }
                    l = h << 7;
                    n = bL(ad(l, i) | 0) | 0;
                    if ((n | 0) == 0) {
                        o = -1;
                        return o | 0;
                    }
                    m = bL(h << 8) | 0;
                    do {
                        if ((m | 0) != 0) {
                            p = cX(l, 0, f, g) | 0;
                            q = bL(p) | 0;
                            if ((q | 0) == 0) {
                                bM(m);
                                break;
                            }
                            p = ad(i << 7, h) | 0;
                            bJ(a, b, d, e, 1, 0, n, p);
                            if ((i | 0) != 0) {
                                r = h << 7;
                                s = 0;
                                do {
                                    bv(n + (ad(r, s) | 0) | 0, h, f, g, q, m);
                                    s = s + 1 | 0;
                                } while (s >>> 0 < i >>> 0);
                            }
                            bJ(a, b, n, p, 1, 0, j, k);
                            bM(q);
                            bM(m);
                            bM(n);
                            o = 0;
                            return o | 0;
                        }
                    } while (0);
                    bM(n);
                    o = -1;
                    return o | 0;
                }
            } while (0);
            c[(aX() | 0) >> 2] = 12;
            o = -1;
            return o | 0;
        }

        function bv(a, b, c, d, e, f) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            var g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0;
            g = b << 7;
            h = f + g | 0;
            bo(f, a, g);
            if ((c | 0) == 0 & (d | 0) == 0) {
                bo(a, f, g);
                return;
            }
            i = g;
            j = 0;
            k = 0;
            l = 0;
            do {
                m = cX(l, k, i, j) | 0;
                bo(e + m | 0, f, g);
                bw(f, h, b);
                l = cN(l, k, 1, 0) | 0;
                k = H;
            } while (k >>> 0 < d >>> 0 | k >>> 0 == d >>> 0 & l >>> 0 < c >>> 0);
            if ((c | 0) == 0 & (d | 0) == 0) {
                bo(a, f, g);
                return;
            }
            l = cN(c, d, -1, -1) | 0;
            k = H;
            j = g;
            i = 0;
            m = 0;
            n = 0;
            do {
                o = bx(f, b) | 0;
                p = cX(o & l, H & k, j, i) | 0;
                bp(f, e + p | 0, g);
                bw(f, h, b);
                n = cN(n, m, 1, 0) | 0;
                m = H;
            } while (m >>> 0 < d >>> 0 | m >>> 0 == d >>> 0 & n >>> 0 < c >>> 0);
            bo(a, f, g);
            return;
        }

        function bw(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0;
            d = i;
            i = i + 64 | 0;
            e = d | 0;
            f = c << 1;
            bo(e, a + ((c << 7) - 64) | 0, 64);
            if ((f | 0) != 0) {
                g = 0;
                do {
                    h = g << 6;
                    bp(e, a + h | 0, 64);
                    by(e);
                    bo(b + h | 0, e, 64);
                    g = g + 1 | 0;
                } while (g >>> 0 < f >>> 0);
            }
            if ((c | 0) == 0) {
                i = d;
                return;
            } else {
                j = 0;
            }
            do {
                bo(a + (j << 6) | 0, b + (j << 7) | 0, 64);
                j = j + 1 | 0;
            } while (j >>> 0 < c >>> 0);
            if ((c | 0) == 0) {
                i = d;
                return;
            } else {
                k = 0;
            }
            do {
                bo(a + (k + c << 6) | 0, b + (k << 7 | 64) | 0, 64);
                k = k + 1 | 0;
            } while (k >>> 0 < c >>> 0);
            i = d;
            return;
        }

        function bx(a, b) {
            a = a | 0;
            b = b | 0;
            var c = 0;
            c = bq(a + ((b << 7) - 64) | 0) | 0;
            return (H = H, c) | 0;
        }

        function by(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0,
                O = 0,
                P = 0,
                Q = 0,
                R = 0,
                S = 0,
                T = 0,
                U = 0,
                V = 0,
                W = 0,
                X = 0,
                Y = 0,
                Z = 0,
                _ = 0,
                $ = 0,
                aa = 0,
                ab = 0;
            b = i;
            i = i + 128 | 0;
            d = b | 0;
            e = b + 64 | 0;
            f = 0;
            do {
                c[d + (f << 2) >> 2] = br(a + (f << 2) | 0) | 0;
                f = f + 1 | 0;
            } while (f >>> 0 < 16);
            f = d;
            g = e;
            cK(g | 0, f | 0, 64) | 0;
            f = e | 0;
            g = e + 48 | 0;
            h = e + 16 | 0;
            j = e + 32 | 0;
            k = e + 20 | 0;
            l = e + 4 | 0;
            m = e + 36 | 0;
            n = e + 52 | 0;
            o = e + 40 | 0;
            p = e + 24 | 0;
            q = e + 56 | 0;
            r = e + 8 | 0;
            s = e + 60 | 0;
            t = e + 44 | 0;
            u = e + 12 | 0;
            v = e + 28 | 0;
            w = 0;
            x = c[f >> 2] | 0;
            y = c[g >> 2] | 0;
            z = c[h >> 2] | 0;
            A = c[j >> 2] | 0;
            B = c[k >> 2] | 0;
            C = c[l >> 2] | 0;
            D = c[m >> 2] | 0;
            E = c[n >> 2] | 0;
            F = c[o >> 2] | 0;
            G = c[p >> 2] | 0;
            H = c[q >> 2] | 0;
            I = c[r >> 2] | 0;
            J = c[s >> 2] | 0;
            K = c[t >> 2] | 0;
            L = c[u >> 2] | 0;
            M = c[v >> 2] | 0;
            do {
                N = y + x | 0;
                O = (N << 7 | N >>> 25) ^ z;
                N = O + x | 0;
                P = (N << 9 | N >>> 23) ^ A;
                N = P + O | 0;
                Q = (N << 13 | N >>> 19) ^ y;
                N = Q + P | 0;
                R = (N << 18 | N >>> 14) ^ x;
                N = C + B | 0;
                S = (N << 7 | N >>> 25) ^ D;
                N = S + B | 0;
                T = (N << 9 | N >>> 23) ^ E;
                N = T + S | 0;
                U = (N << 13 | N >>> 19) ^ C;
                N = U + T | 0;
                V = (N << 18 | N >>> 14) ^ B;
                N = G + F | 0;
                W = (N << 7 | N >>> 25) ^ H;
                N = W + F | 0;
                X = (N << 9 | N >>> 23) ^ I;
                N = X + W | 0;
                Y = (N << 13 | N >>> 19) ^ G;
                N = Y + X | 0;
                Z = (N << 18 | N >>> 14) ^ F;
                N = K + J | 0;
                _ = (N << 7 | N >>> 25) ^ L;
                N = _ + J | 0;
                $ = (N << 9 | N >>> 23) ^ M;
                N = $ + _ | 0;
                aa = (N << 13 | N >>> 19) ^ K;
                N = aa + $ | 0;
                ab = (N << 18 | N >>> 14) ^ J;
                N = _ + R | 0;
                C = (N << 7 | N >>> 25) ^ U;
                U = C + R | 0;
                I = (U << 9 | U >>> 23) ^ X;
                X = I + C | 0;
                L = (X << 13 | X >>> 19) ^ _;
                _ = L + I | 0;
                x = (_ << 18 | _ >>> 14) ^ R;
                R = O + V | 0;
                G = (R << 7 | R >>> 25) ^ Y;
                Y = G + V | 0;
                M = (Y << 9 | Y >>> 23) ^ $;
                $ = M + G | 0;
                z = ($ << 13 | $ >>> 19) ^ O;
                O = z + M | 0;
                B = (O << 18 | O >>> 14) ^ V;
                V = S + Z | 0;
                K = (V << 7 | V >>> 25) ^ aa;
                aa = K + Z | 0;
                A = (aa << 9 | aa >>> 23) ^ P;
                P = A + K | 0;
                D = (P << 13 | P >>> 19) ^ S;
                S = D + A | 0;
                F = (S << 18 | S >>> 14) ^ Z;
                Z = W + ab | 0;
                y = (Z << 7 | Z >>> 25) ^ Q;
                Q = y + ab | 0;
                E = (Q << 9 | Q >>> 23) ^ T;
                T = E + y | 0;
                H = (T << 13 | T >>> 19) ^ W;
                W = H + E | 0;
                J = (W << 18 | W >>> 14) ^ ab;
                w = w + 2 | 0;
            } while (w >>> 0 < 8);
            c[f >> 2] = x;
            c[g >> 2] = y;
            c[h >> 2] = z;
            c[j >> 2] = A;
            c[k >> 2] = B;
            c[l >> 2] = C;
            c[m >> 2] = D;
            c[n >> 2] = E;
            c[o >> 2] = F;
            c[p >> 2] = G;
            c[q >> 2] = H;
            c[r >> 2] = I;
            c[s >> 2] = J;
            c[t >> 2] = K;
            c[u >> 2] = L;
            c[v >> 2] = M;
            M = d | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e >> 2] | 0);
            M = d + 4 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 4 >> 2] | 0);
            M = d + 8 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 8 >> 2] | 0);
            M = d + 12 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 12 >> 2] | 0);
            M = d + 16 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 16 >> 2] | 0);
            M = d + 20 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 20 >> 2] | 0);
            M = d + 24 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 24 >> 2] | 0);
            M = d + 28 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 28 >> 2] | 0);
            M = d + 32 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 32 >> 2] | 0);
            M = d + 36 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 36 >> 2] | 0);
            M = d + 40 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 40 >> 2] | 0);
            M = d + 44 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 44 >> 2] | 0);
            M = d + 48 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 48 >> 2] | 0);
            M = d + 52 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 52 >> 2] | 0);
            M = d + 56 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 56 >> 2] | 0);
            M = d + 60 | 0;
            c[M >> 2] = (c[M >> 2] | 0) + (c[e + 60 >> 2] | 0);
            e = 0;
            do {
                bs(a + (e << 2) | 0, c[d + (e << 2) >> 2] | 0);
                e = e + 1 | 0;
            } while (e >>> 0 < 16);
            i = b;
            return;
        }

        function bz(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0;
            e = a + 32 | 0;
            f = a + 36 | 0;
            g = c[f >> 2] | 0;
            h = g >>> 3 & 63;
            i = aN(g | 0, d << 3 | 0) | 0;
            c[f >> 2] = i;
            if (H) {
                i = e | 0;
                c[i >> 2] = (c[i >> 2] | 0) + 1;
            }
            i = e | 0;
            c[i >> 2] = (c[i >> 2] | 0) + (d >>> 29);
            i = 64 - h | 0;
            e = a + 40 + h | 0;
            if (i >>> 0 > d >>> 0) {
                cK(e | 0, b | 0, d) | 0;
                return;
            }
            cK(e | 0, b | 0, i) | 0;
            e = a | 0;
            h = a + 40 | 0;
            bA(e, h);
            a = b + i | 0;
            b = d - i | 0;
            if (b >>> 0 > 63) {
                i = b;
                d = a;
                while (1) {
                    bA(e, d);
                    f = d + 64 | 0;
                    g = i - 64 | 0;
                    if (g >>> 0 > 63) {
                        i = g;
                        d = f;
                    } else {
                        j = g;
                        k = f;
                        break;
                    }
                }
            } else {
                j = b;
                k = a;
            }
            cK(h | 0, k | 0, j) | 0;
            return;
        }

        function bA(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0;
            d = i;
            i = i + 288 | 0;
            e = d | 0;
            f = d + 256 | 0;
            g = e | 0;
            bK(g, b);
            b = 16;
            do {
                h = c[e + (b - 2 << 2) >> 2] | 0;
                j = c[e + (b - 15 << 2) >> 2] | 0;
                c[e + (b << 2) >> 2] = (c[e + (b - 16 << 2) >> 2] | 0) + (c[e + (b - 7 << 2) >> 2] | 0) + ((h >>> 19 | h << 13) ^ h >>> 10 ^ (h >>> 17 | h << 15)) + ((j >>> 18 | j << 14) ^ j >>> 3 ^ (j >>> 7 | j << 25));
                b = b + 1 | 0;
            } while ((b | 0) < 64);
            b = f;
            j = a;
            cK(b | 0, j | 0, 32) | 0;
            j = f + 28 | 0;
            b = f + 16 | 0;
            h = c[b >> 2] | 0;
            k = f + 20 | 0;
            l = f + 24 | 0;
            m = c[l >> 2] | 0;
            n = (c[j >> 2] | 0) + 1116352408 + (c[g >> 2] | 0) + ((h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7)) + ((m ^ c[k >> 2]) & h ^ m) | 0;
            m = f | 0;
            h = c[m >> 2] | 0;
            g = f + 4 | 0;
            o = c[g >> 2] | 0;
            p = f + 8 | 0;
            q = c[p >> 2] | 0;
            r = f + 12 | 0;
            c[r >> 2] = (c[r >> 2] | 0) + n;
            s = ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + n + ((q | o) & h | q & o) | 0;
            c[j >> 2] = s;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            h = (c[l >> 2] | 0) + 1899447441 + (c[e + 4 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[l >> 2] = n;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            s = (c[k >> 2] | 0) - 1245643825 + (c[e + 8 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[k >> 2] = h;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            n = (c[b >> 2] | 0) - 373957723 + (c[e + 12 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[b >> 2] = s;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            h = (c[r >> 2] | 0) + 961987163 + (c[e + 16 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[r >> 2] = n;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            s = (c[p >> 2] | 0) + 1508970993 + (c[e + 20 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[p >> 2] = h;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            n = (c[g >> 2] | 0) - 1841331548 + (c[e + 24 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[g >> 2] = s;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            h = (c[m >> 2] | 0) - 1424204075 + (c[e + 28 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[m >> 2] = n;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            s = (c[j >> 2] | 0) - 670586216 + (c[e + 32 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[j >> 2] = h;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            n = (c[l >> 2] | 0) + 310598401 + (c[e + 36 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[l >> 2] = s;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            h = (c[k >> 2] | 0) + 607225278 + (c[e + 40 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[k >> 2] = n;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            s = (c[b >> 2] | 0) + 1426881987 + (c[e + 44 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[b >> 2] = h;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            n = (c[r >> 2] | 0) + 1925078388 + (c[e + 48 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[r >> 2] = s;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            h = (c[p >> 2] | 0) - 2132889090 + (c[e + 52 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[p >> 2] = n;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            s = (c[g >> 2] | 0) - 1680079193 + (c[e + 56 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[g >> 2] = h;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            n = (c[m >> 2] | 0) - 1046744716 + (c[e + 60 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[m >> 2] = s;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            h = (c[j >> 2] | 0) - 459576895 + (c[e + 64 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[j >> 2] = n;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            s = (c[l >> 2] | 0) - 272742522 + (c[e + 68 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[l >> 2] = h;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            n = (c[k >> 2] | 0) + 264347078 + (c[e + 72 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[k >> 2] = s;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            h = (c[b >> 2] | 0) + 604807628 + (c[e + 76 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[b >> 2] = n;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            s = (c[r >> 2] | 0) + 770255983 + (c[e + 80 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[r >> 2] = h;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            n = (c[p >> 2] | 0) + 1249150122 + (c[e + 84 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[p >> 2] = s;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            h = (c[g >> 2] | 0) + 1555081692 + (c[e + 88 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[g >> 2] = n;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            s = (c[m >> 2] | 0) + 1996064986 + (c[e + 92 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[m >> 2] = h;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            n = (c[j >> 2] | 0) - 1740746414 + (c[e + 96 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[j >> 2] = s;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            h = (c[l >> 2] | 0) - 1473132947 + (c[e + 100 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[l >> 2] = n;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            s = (c[k >> 2] | 0) - 1341970488 + (c[e + 104 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[k >> 2] = h;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            n = (c[b >> 2] | 0) - 1084653625 + (c[e + 108 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[b >> 2] = s;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            h = (c[r >> 2] | 0) - 958395405 + (c[e + 112 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[r >> 2] = n;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            s = (c[p >> 2] | 0) - 710438585 + (c[e + 116 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[p >> 2] = h;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            n = (c[g >> 2] | 0) + 113926993 + (c[e + 120 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[g >> 2] = s;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            h = (c[m >> 2] | 0) + 338241895 + (c[e + 124 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[m >> 2] = n;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            s = (c[j >> 2] | 0) + 666307205 + (c[e + 128 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[j >> 2] = h;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            n = (c[l >> 2] | 0) + 773529912 + (c[e + 132 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[l >> 2] = s;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            h = (c[k >> 2] | 0) + 1294757372 + (c[e + 136 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[k >> 2] = n;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            s = (c[b >> 2] | 0) + 1396182291 + (c[e + 140 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[b >> 2] = h;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            n = (c[r >> 2] | 0) + 1695183700 + (c[e + 144 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[r >> 2] = s;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            h = (c[p >> 2] | 0) + 1986661051 + (c[e + 148 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[p >> 2] = n;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            s = (c[g >> 2] | 0) - 2117940946 + (c[e + 152 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[g >> 2] = h;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            n = (c[m >> 2] | 0) - 1838011259 + (c[e + 156 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[m >> 2] = s;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            h = (c[j >> 2] | 0) - 1564481375 + (c[e + 160 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[j >> 2] = n;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            s = (c[l >> 2] | 0) - 1474664885 + (c[e + 164 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[l >> 2] = h;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            n = (c[k >> 2] | 0) - 1035236496 + (c[e + 168 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[k >> 2] = s;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            h = (c[b >> 2] | 0) - 949202525 + (c[e + 172 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[b >> 2] = n;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            s = (c[r >> 2] | 0) - 778901479 + (c[e + 176 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[r >> 2] = h;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            n = (c[p >> 2] | 0) - 694614492 + (c[e + 180 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[p >> 2] = s;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            h = (c[g >> 2] | 0) - 200395387 + (c[e + 184 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[g >> 2] = n;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            s = (c[m >> 2] | 0) + 275423344 + (c[e + 188 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[m >> 2] = h;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            n = (c[j >> 2] | 0) + 430227734 + (c[e + 192 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[j >> 2] = s;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            h = (c[l >> 2] | 0) + 506948616 + (c[e + 196 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[l >> 2] = n;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            s = (c[k >> 2] | 0) + 659060556 + (c[e + 200 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[k >> 2] = h;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            n = (c[b >> 2] | 0) + 883997877 + (c[e + 204 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[b >> 2] = s;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            h = (c[r >> 2] | 0) + 958139571 + (c[e + 208 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[r >> 2] = n;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            s = (c[p >> 2] | 0) + 1322822218 + (c[e + 212 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[p >> 2] = h;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            n = (c[g >> 2] | 0) + 1537002063 + (c[e + 216 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[g >> 2] = s;
            o = c[k >> 2] | 0;
            q = c[j >> 2] | 0;
            h = (c[m >> 2] | 0) + 1747873779 + (c[e + 220 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[l >> 2]) & o ^ q) | 0;
            q = c[p >> 2] | 0;
            o = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[m >> 2] = n;
            q = c[b >> 2] | 0;
            o = c[l >> 2] | 0;
            s = (c[j >> 2] | 0) + 1955562222 + (c[e + 224 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[k >> 2]) & q ^ o) | 0;
            o = c[g >> 2] | 0;
            q = c[p >> 2] | 0;
            c[r >> 2] = (c[r >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[j >> 2] = h;
            o = c[r >> 2] | 0;
            q = c[k >> 2] | 0;
            n = (c[l >> 2] | 0) + 2024104815 + (c[e + 228 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[b >> 2]) & o ^ q) | 0;
            q = c[m >> 2] | 0;
            o = c[g >> 2] | 0;
            c[p >> 2] = (c[p >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((o | q) & h | o & q) | 0;
            c[l >> 2] = s;
            q = c[p >> 2] | 0;
            o = c[b >> 2] | 0;
            h = (c[k >> 2] | 0) - 2067236844 + (c[e + 232 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[r >> 2]) & q ^ o) | 0;
            o = c[j >> 2] | 0;
            q = c[m >> 2] | 0;
            c[g >> 2] = (c[g >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((q | o) & s | q & o) | 0;
            c[k >> 2] = n;
            o = c[g >> 2] | 0;
            q = c[r >> 2] | 0;
            s = (c[b >> 2] | 0) - 1933114872 + (c[e + 236 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[p >> 2]) & o ^ q) | 0;
            q = c[l >> 2] | 0;
            o = c[j >> 2] | 0;
            c[m >> 2] = (c[m >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((o | q) & n | o & q) | 0;
            c[b >> 2] = h;
            q = c[m >> 2] | 0;
            o = c[p >> 2] | 0;
            n = (c[r >> 2] | 0) - 1866530822 + (c[e + 240 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[g >> 2]) & q ^ o) | 0;
            o = c[k >> 2] | 0;
            q = c[l >> 2] | 0;
            c[j >> 2] = (c[j >> 2] | 0) + n;
            s = n + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((q | o) & h | q & o) | 0;
            c[r >> 2] = s;
            o = c[j >> 2] | 0;
            q = c[g >> 2] | 0;
            h = (c[p >> 2] | 0) - 1538233109 + (c[e + 244 >> 2] | 0) + ((o >>> 6 | o << 26) ^ (o >>> 11 | o << 21) ^ (o >>> 25 | o << 7)) + ((q ^ c[m >> 2]) & o ^ q) | 0;
            q = c[b >> 2] | 0;
            o = c[k >> 2] | 0;
            c[l >> 2] = (c[l >> 2] | 0) + h;
            n = h + ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + ((o | q) & s | o & q) | 0;
            c[p >> 2] = n;
            q = c[l >> 2] | 0;
            o = c[m >> 2] | 0;
            s = (c[g >> 2] | 0) - 1090935817 + (c[e + 248 >> 2] | 0) + ((q >>> 6 | q << 26) ^ (q >>> 11 | q << 21) ^ (q >>> 25 | q << 7)) + ((o ^ c[j >> 2]) & q ^ o) | 0;
            o = c[r >> 2] | 0;
            q = c[b >> 2] | 0;
            c[k >> 2] = (c[k >> 2] | 0) + s;
            h = s + ((n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10)) + ((q | o) & n | q & o) | 0;
            c[g >> 2] = h;
            g = c[k >> 2] | 0;
            k = c[j >> 2] | 0;
            j = (c[m >> 2] | 0) - 965641998 + (c[e + 252 >> 2] | 0) + ((g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7)) + ((k ^ c[l >> 2]) & g ^ k) | 0;
            k = c[p >> 2] | 0;
            p = c[r >> 2] | 0;
            c[b >> 2] = (c[b >> 2] | 0) + j;
            b = j + ((h >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10)) + ((p | k) & h | p & k) | 0;
            c[m >> 2] = b;
            c[a >> 2] = (c[a >> 2] | 0) + b;
            b = a + 4 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 4 >> 2] | 0);
            b = a + 8 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 8 >> 2] | 0);
            b = a + 12 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 12 >> 2] | 0);
            b = a + 16 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 16 >> 2] | 0);
            b = a + 20 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 20 >> 2] | 0);
            b = a + 24 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 24 >> 2] | 0);
            b = a + 28 | 0;
            c[b >> 2] = (c[b >> 2] | 0) + (c[f + 28 >> 2] | 0);
            i = d;
            return;
        }

        function bB(b, c) {
            b = b | 0;
            c = c | 0;
            a[b + 3 | 0] = c & 255;
            a[b + 2 | 0] = c >>> 8 & 255;
            a[b + 1 | 0] = c >>> 16 & 255;
            a[b] = c >>> 24 & 255;
            return;
        }

        function bC(a) {
            a = a | 0;
            return (d[a + 2 | 0] | 0) << 8 | (d[a + 3 | 0] | 0) | (d[a + 1 | 0] | 0) << 16 | (d[a] | 0) << 24 | 0;
        }

        function bD(a, b) {
            a = a | 0;
            b = b | 0;
            bE(b);
            bF(a, b | 0, 32);
            cL(b | 0, 0, 104);
            return;
        }

        function bE(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0;
            b = i;
            i = i + 8 | 0;
            d = b | 0;
            bF(d, a + 32 | 0, 8);
            e = (c[a + 36 >> 2] | 0) >>> 3 & 63;
            bz(a, 720, (e >>> 0 < 56 ? 56 : 120) - e | 0);
            bz(a, d, 8);
            i = b;
            return;
        }

        function bF(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = d >>> 2;
            if ((e | 0) == 0) {
                return;
            } else {
                f = 0;
            }
            do {
                bB(a + (f << 2) | 0, c[b + (f << 2) >> 2] | 0);
                f = f + 1 | 0;
            } while (f >>> 0 < e >>> 0);
            return;
        }

        function bG(b, c, d) {
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0,
                f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0,
                l = 0;
            e = i;
            i = i + 96 | 0;
            f = e | 0;
            if (d >>> 0 > 64) {
                g = b | 0;
                bt(g);
                bz(g, c, d);
                h = e + 64 | 0;
                bD(h, g);
                j = h;
                k = 32;
            } else {
                j = c;
                k = d;
            }
            d = b | 0;
            bt(d);
            c = f | 0;
            cL(c | 0, 54, 64);
            if ((k | 0) != 0) {
                h = 0;
                do {
                    g = f + h | 0;
                    a[g] = a[g] ^ a[j + h | 0];
                    h = h + 1 | 0;
                } while (h >>> 0 < k >>> 0);
            }
            bz(d, c, 64);
            d = b + 104 | 0;
            bt(d);
            cL(c | 0, 92, 64);
            if ((k | 0) == 0) {
                bz(d, c, 64);
                i = e;
                return;
            } else {
                l = 0;
            }
            do {
                b = f + l | 0;
                a[b] = a[b] ^ a[j + l | 0];
                l = l + 1 | 0;
            } while (l >>> 0 < k >>> 0);
            bz(d, c, 64);
            i = e;
            return;
        }

        function bH(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            bz(a | 0, b, c);
            return;
        }

        function bI(a, b) {
            a = a | 0;
            b = b | 0;
            var c = 0,
                d = 0,
                e = 0;
            c = i;
            i = i + 32 | 0;
            d = c | 0;
            bD(d, b | 0);
            e = b + 104 | 0;
            bz(e, d, 32);
            bD(a, e);
            i = c;
            return;
        }

        function bJ(b, c, d, e, f, g, h, j) {
            b = b | 0;
            c = c | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            g = g | 0;
            h = h | 0;
            j = j | 0;
            var k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0;
            k = i;
            i = i + 488 | 0;
            l = k | 0;
            m = k + 208 | 0;
            n = k + 424 | 0;
            o = k + 456 | 0;
            bG(l, b, c);
            bH(l, d, e);
            if ((j | 0) == 0) {
                i = k;
                return;
            }
            e = k + 416 | 0;
            d = m;
            p = l;
            l = n | 0;
            q = o | 0;
            r = 0;
            s = g >>> 0 < r >>> 0 | g >>> 0 == r >>> 0 & f >>> 0 < 2 >>> 0;
            r = 0;
            t = 0;
            do {
                r = r + 1 | 0;
                bB(e, r);
                cK(d | 0, p | 0, 208) | 0;
                bH(m, e, 4);
                bI(l, m);
                cK(q | 0, l | 0, 32) | 0;
                if (!s) {
                    u = 0;
                    v = 2;
                    do {
                        bG(m, b, c);
                        bH(m, l, 32);
                        bI(l, m);
                        w = 0;
                        do {
                            x = o + w | 0;
                            a[x] = a[x] ^ a[n + w | 0];
                            w = w + 1 | 0;
                        } while ((w | 0) < 32);
                        v = cN(v, u, 1, 0) | 0;
                        u = H;
                    } while (!(u >>> 0 > g >>> 0 | u >>> 0 == g >>> 0 & v >>> 0 > f >>> 0));
                }
                v = j - t | 0;
                u = v >>> 0 > 32 ? 32 : v;
                v = h + t | 0;
                cK(v | 0, q | 0, u) | 0;
                t = r << 5;
            } while (t >>> 0 < j >>> 0);
            i = k;
            return;
        }

        function bK(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0;
            d = 0;
            do {
                c[a + (d << 2) >> 2] = bC(b + (d << 2) | 0) | 0;
                d = d + 1 | 0;
            } while (d >>> 0 < 16);
            return;
        }

        function bL(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0,
                O = 0,
                P = 0,
                Q = 0,
                R = 0,
                S = 0,
                T = 0,
                U = 0,
                V = 0,
                W = 0,
                X = 0,
                Y = 0,
                Z = 0,
                _ = 0,
                $ = 0,
                aa = 0,
                ab = 0,
                ac = 0,
                ad = 0,
                ae = 0,
                af = 0,
                ag = 0,
                ah = 0,
                ai = 0,
                aj = 0,
                ak = 0,
                al = 0,
                am = 0,
                an = 0,
                ao = 0,
                ap = 0,
                aq = 0,
                as = 0,
                at = 0,
                av = 0,
                aw = 0,
                ax = 0,
                ay = 0,
                az = 0,
                aA = 0,
                aB = 0,
                aC = 0,
                aD = 0,
                aE = 0,
                aF = 0,
                aG = 0,
                aH = 0,
                aI = 0;
            do {
                if (a >>> 0 < 245) {
                    if (a >>> 0 < 11) {
                        b = 16;
                    } else {
                        b = a + 11 & -8;
                    }
                    d = b >>> 3;
                    e = c[208] | 0;
                    f = e >>> (d >>> 0);
                    if ((f & 3 | 0) != 0) {
                        g = (f & 1 ^ 1) + d | 0;
                        h = g << 1;
                        i = 872 + (h << 2) | 0;
                        j = 872 + (h + 2 << 2) | 0;
                        h = c[j >> 2] | 0;
                        k = h + 8 | 0;
                        l = c[k >> 2] | 0;
                        do {
                            if ((i | 0) == (l | 0)) {
                                c[208] = e & ~(1 << g);
                            } else {
                                if (l >>> 0 < (c[212] | 0) >>> 0) {
                                    au();
                                    return 0;
                                }
                                m = l + 12 | 0;
                                if ((c[m >> 2] | 0) == (h | 0)) {
                                    c[m >> 2] = i;
                                    c[j >> 2] = l;
                                    break;
                                } else {
                                    au();
                                    return 0;
                                }
                            }
                        } while (0);
                        l = g << 3;
                        c[h + 4 >> 2] = l | 3;
                        j = h + (l | 4) | 0;
                        c[j >> 2] = c[j >> 2] | 1;
                        n = k;
                        return n | 0;
                    }
                    if (b >>> 0 <= (c[210] | 0) >>> 0) {
                        o = b;
                        break;
                    }
                    if ((f | 0) != 0) {
                        j = 2 << d;
                        l = f << d & (j | -j);
                        j = (l & -l) - 1 | 0;
                        l = j >>> 12 & 16;
                        i = j >>> (l >>> 0);
                        j = i >>> 5 & 8;
                        m = i >>> (j >>> 0);
                        i = m >>> 2 & 4;
                        p = m >>> (i >>> 0);
                        m = p >>> 1 & 2;
                        q = p >>> (m >>> 0);
                        p = q >>> 1 & 1;
                        r = (j | l | i | m | p) + (q >>> (p >>> 0)) | 0;
                        p = r << 1;
                        q = 872 + (p << 2) | 0;
                        m = 872 + (p + 2 << 2) | 0;
                        p = c[m >> 2] | 0;
                        i = p + 8 | 0;
                        l = c[i >> 2] | 0;
                        do {
                            if ((q | 0) == (l | 0)) {
                                c[208] = e & ~(1 << r);
                            } else {
                                if (l >>> 0 < (c[212] | 0) >>> 0) {
                                    au();
                                    return 0;
                                }
                                j = l + 12 | 0;
                                if ((c[j >> 2] | 0) == (p | 0)) {
                                    c[j >> 2] = q;
                                    c[m >> 2] = l;
                                    break;
                                } else {
                                    au();
                                    return 0;
                                }
                            }
                        } while (0);
                        l = r << 3;
                        m = l - b | 0;
                        c[p + 4 >> 2] = b | 3;
                        q = p;
                        e = q + b | 0;
                        c[q + (b | 4) >> 2] = m | 1;
                        c[q + l >> 2] = m;
                        l = c[210] | 0;
                        if ((l | 0) != 0) {
                            q = c[213] | 0;
                            d = l >>> 3;
                            l = d << 1;
                            f = 872 + (l << 2) | 0;
                            k = c[208] | 0;
                            h = 1 << d;
                            do {
                                if ((k & h | 0) == 0) {
                                    c[208] = k | h;
                                    s = f;
                                    t = 872 + (l + 2 << 2) | 0;
                                } else {
                                    d = 872 + (l + 2 << 2) | 0;
                                    g = c[d >> 2] | 0;
                                    if (g >>> 0 >= (c[212] | 0) >>> 0) {
                                        s = g;
                                        t = d;
                                        break;
                                    }
                                    au();
                                    return 0;
                                }
                            } while (0);
                            c[t >> 2] = q;
                            c[s + 12 >> 2] = q;
                            c[q + 8 >> 2] = s;
                            c[q + 12 >> 2] = f;
                        }
                        c[210] = m;
                        c[213] = e;
                        n = i;
                        return n | 0;
                    }
                    l = c[209] | 0;
                    if ((l | 0) == 0) {
                        o = b;
                        break;
                    }
                    h = (l & -l) - 1 | 0;
                    l = h >>> 12 & 16;
                    k = h >>> (l >>> 0);
                    h = k >>> 5 & 8;
                    p = k >>> (h >>> 0);
                    k = p >>> 2 & 4;
                    r = p >>> (k >>> 0);
                    p = r >>> 1 & 2;
                    d = r >>> (p >>> 0);
                    r = d >>> 1 & 1;
                    g = c[1136 + ((h | l | k | p | r) + (d >>> (r >>> 0)) << 2) >> 2] | 0;
                    r = g;
                    d = g;
                    p = (c[g + 4 >> 2] & -8) - b | 0;
                    while (1) {
                        g = c[r + 16 >> 2] | 0;
                        if ((g | 0) == 0) {
                            k = c[r + 20 >> 2] | 0;
                            if ((k | 0) == 0) {
                                break;
                            } else {
                                u = k;
                            }
                        } else {
                            u = g;
                        }
                        g = (c[u + 4 >> 2] & -8) - b | 0;
                        k = g >>> 0 < p >>> 0;
                        r = u;
                        d = k ? u : d;
                        p = k ? g : p;
                    }
                    r = d;
                    i = c[212] | 0;
                    if (r >>> 0 < i >>> 0) {
                        au();
                        return 0;
                    }
                    e = r + b | 0;
                    m = e;
                    if (r >>> 0 >= e >>> 0) {
                        au();
                        return 0;
                    }
                    e = c[d + 24 >> 2] | 0;
                    f = c[d + 12 >> 2] | 0;
                    do {
                        if ((f | 0) == (d | 0)) {
                            q = d + 20 | 0;
                            g = c[q >> 2] | 0;
                            if ((g | 0) == 0) {
                                k = d + 16 | 0;
                                l = c[k >> 2] | 0;
                                if ((l | 0) == 0) {
                                    v = 0;
                                    break;
                                } else {
                                    w = l;
                                    x = k;
                                }
                            } else {
                                w = g;
                                x = q;
                            }
                            while (1) {
                                q = w + 20 | 0;
                                g = c[q >> 2] | 0;
                                if ((g | 0) != 0) {
                                    w = g;
                                    x = q;
                                    continue;
                                }
                                q = w + 16 | 0;
                                g = c[q >> 2] | 0;
                                if ((g | 0) == 0) {
                                    break;
                                } else {
                                    w = g;
                                    x = q;
                                }
                            }
                            if (x >>> 0 < i >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[x >> 2] = 0;
                                v = w;
                                break;
                            }
                        } else {
                            q = c[d + 8 >> 2] | 0;
                            if (q >>> 0 < i >>> 0) {
                                au();
                                return 0;
                            }
                            g = q + 12 | 0;
                            if ((c[g >> 2] | 0) != (d | 0)) {
                                au();
                                return 0;
                            }
                            k = f + 8 | 0;
                            if ((c[k >> 2] | 0) == (d | 0)) {
                                c[g >> 2] = f;
                                c[k >> 2] = q;
                                v = f;
                                break;
                            } else {
                                au();
                                return 0;
                            }
                        }
                    } while (0);
                    L223: do {
                        if ((e | 0) != 0) {
                            f = d + 28 | 0;
                            i = 1136 + (c[f >> 2] << 2) | 0;
                            do {
                                if ((d | 0) == (c[i >> 2] | 0)) {
                                    c[i >> 2] = v;
                                    if ((v | 0) != 0) {
                                        break;
                                    }
                                    c[209] = c[209] & ~(1 << c[f >> 2]);
                                    break L223;
                                } else {
                                    if (e >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                        return 0;
                                    }
                                    q = e + 16 | 0;
                                    if ((c[q >> 2] | 0) == (d | 0)) {
                                        c[q >> 2] = v;
                                    } else {
                                        c[e + 20 >> 2] = v;
                                    }
                                    if ((v | 0) == 0) {
                                        break L223;
                                    }
                                }
                            } while (0);
                            if (v >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            }
                            c[v + 24 >> 2] = e;
                            f = c[d + 16 >> 2] | 0;
                            do {
                                if ((f | 0) != 0) {
                                    if (f >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                        return 0;
                                    } else {
                                        c[v + 16 >> 2] = f;
                                        c[f + 24 >> 2] = v;
                                        break;
                                    }
                                }
                            } while (0);
                            f = c[d + 20 >> 2] | 0;
                            if ((f | 0) == 0) {
                                break;
                            }
                            if (f >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[v + 20 >> 2] = f;
                                c[f + 24 >> 2] = v;
                                break;
                            }
                        }
                    } while (0);
                    if (p >>> 0 < 16) {
                        e = p + b | 0;
                        c[d + 4 >> 2] = e | 3;
                        f = r + (e + 4) | 0;
                        c[f >> 2] = c[f >> 2] | 1;
                    } else {
                        c[d + 4 >> 2] = b | 3;
                        c[r + (b | 4) >> 2] = p | 1;
                        c[r + (p + b) >> 2] = p;
                        f = c[210] | 0;
                        if ((f | 0) != 0) {
                            e = c[213] | 0;
                            i = f >>> 3;
                            f = i << 1;
                            q = 872 + (f << 2) | 0;
                            k = c[208] | 0;
                            g = 1 << i;
                            do {
                                if ((k & g | 0) == 0) {
                                    c[208] = k | g;
                                    y = q;
                                    z = 872 + (f + 2 << 2) | 0;
                                } else {
                                    i = 872 + (f + 2 << 2) | 0;
                                    l = c[i >> 2] | 0;
                                    if (l >>> 0 >= (c[212] | 0) >>> 0) {
                                        y = l;
                                        z = i;
                                        break;
                                    }
                                    au();
                                    return 0;
                                }
                            } while (0);
                            c[z >> 2] = e;
                            c[y + 12 >> 2] = e;
                            c[e + 8 >> 2] = y;
                            c[e + 12 >> 2] = q;
                        }
                        c[210] = p;
                        c[213] = m;
                    }
                    f = d + 8 | 0;
                    if ((f | 0) == 0) {
                        o = b;
                        break;
                    } else {
                        n = f;
                    }
                    return n | 0;
                } else {
                    if (a >>> 0 > 4294967231) {
                        o = -1;
                        break;
                    }
                    f = a + 11 | 0;
                    g = f & -8;
                    k = c[209] | 0;
                    if ((k | 0) == 0) {
                        o = g;
                        break;
                    }
                    r = -g | 0;
                    i = f >>> 8;
                    do {
                        if ((i | 0) == 0) {
                            A = 0;
                        } else {
                            if (g >>> 0 > 16777215) {
                                A = 31;
                                break;
                            }
                            f = (i + 1048320 | 0) >>> 16 & 8;
                            l = i << f;
                            h = (l + 520192 | 0) >>> 16 & 4;
                            j = l << h;
                            l = (j + 245760 | 0) >>> 16 & 2;
                            B = 14 - (h | f | l) + (j << l >>> 15) | 0;
                            A = g >>> ((B + 7 | 0) >>> 0) & 1 | B << 1;
                        }
                    } while (0);
                    i = c[1136 + (A << 2) >> 2] | 0;
                    L271: do {
                        if ((i | 0) == 0) {
                            C = 0;
                            D = r;
                            E = 0;
                        } else {
                            if ((A | 0) == 31) {
                                F = 0;
                            } else {
                                F = 25 - (A >>> 1) | 0;
                            }
                            d = 0;
                            m = r;
                            p = i;
                            q = g << F;
                            e = 0;
                            while (1) {
                                B = c[p + 4 >> 2] & -8;
                                l = B - g | 0;
                                if (l >>> 0 < m >>> 0) {
                                    if ((B | 0) == (g | 0)) {
                                        C = p;
                                        D = l;
                                        E = p;
                                        break L271;
                                    } else {
                                        G = p;
                                        H = l;
                                    }
                                } else {
                                    G = d;
                                    H = m;
                                }
                                l = c[p + 20 >> 2] | 0;
                                B = c[p + 16 + (q >>> 31 << 2) >> 2] | 0;
                                j = (l | 0) == 0 | (l | 0) == (B | 0) ? e : l;
                                if ((B | 0) == 0) {
                                    C = G;
                                    D = H;
                                    E = j;
                                    break;
                                } else {
                                    d = G;
                                    m = H;
                                    p = B;
                                    q = q << 1;
                                    e = j;
                                }
                            }
                        }
                    } while (0);
                    if ((E | 0) == 0 & (C | 0) == 0) {
                        i = 2 << A;
                        r = k & (i | -i);
                        if ((r | 0) == 0) {
                            o = g;
                            break;
                        }
                        i = (r & -r) - 1 | 0;
                        r = i >>> 12 & 16;
                        e = i >>> (r >>> 0);
                        i = e >>> 5 & 8;
                        q = e >>> (i >>> 0);
                        e = q >>> 2 & 4;
                        p = q >>> (e >>> 0);
                        q = p >>> 1 & 2;
                        m = p >>> (q >>> 0);
                        p = m >>> 1 & 1;
                        I = c[1136 + ((i | r | e | q | p) + (m >>> (p >>> 0)) << 2) >> 2] | 0;
                    } else {
                        I = E;
                    }
                    if ((I | 0) == 0) {
                        J = D;
                        K = C;
                    } else {
                        p = I;
                        m = D;
                        q = C;
                        while (1) {
                            e = (c[p + 4 >> 2] & -8) - g | 0;
                            r = e >>> 0 < m >>> 0;
                            i = r ? e : m;
                            e = r ? p : q;
                            r = c[p + 16 >> 2] | 0;
                            if ((r | 0) != 0) {
                                p = r;
                                m = i;
                                q = e;
                                continue;
                            }
                            r = c[p + 20 >> 2] | 0;
                            if ((r | 0) == 0) {
                                J = i;
                                K = e;
                                break;
                            } else {
                                p = r;
                                m = i;
                                q = e;
                            }
                        }
                    }
                    if ((K | 0) == 0) {
                        o = g;
                        break;
                    }
                    if (J >>> 0 >= ((c[210] | 0) - g | 0) >>> 0) {
                        o = g;
                        break;
                    }
                    q = K;
                    m = c[212] | 0;
                    if (q >>> 0 < m >>> 0) {
                        au();
                        return 0;
                    }
                    p = q + g | 0;
                    k = p;
                    if (q >>> 0 >= p >>> 0) {
                        au();
                        return 0;
                    }
                    e = c[K + 24 >> 2] | 0;
                    i = c[K + 12 >> 2] | 0;
                    do {
                        if ((i | 0) == (K | 0)) {
                            r = K + 20 | 0;
                            d = c[r >> 2] | 0;
                            if ((d | 0) == 0) {
                                j = K + 16 | 0;
                                B = c[j >> 2] | 0;
                                if ((B | 0) == 0) {
                                    L = 0;
                                    break;
                                } else {
                                    M = B;
                                    N = j;
                                }
                            } else {
                                M = d;
                                N = r;
                            }
                            while (1) {
                                r = M + 20 | 0;
                                d = c[r >> 2] | 0;
                                if ((d | 0) != 0) {
                                    M = d;
                                    N = r;
                                    continue;
                                }
                                r = M + 16 | 0;
                                d = c[r >> 2] | 0;
                                if ((d | 0) == 0) {
                                    break;
                                } else {
                                    M = d;
                                    N = r;
                                }
                            }
                            if (N >>> 0 < m >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[N >> 2] = 0;
                                L = M;
                                break;
                            }
                        } else {
                            r = c[K + 8 >> 2] | 0;
                            if (r >>> 0 < m >>> 0) {
                                au();
                                return 0;
                            }
                            d = r + 12 | 0;
                            if ((c[d >> 2] | 0) != (K | 0)) {
                                au();
                                return 0;
                            }
                            j = i + 8 | 0;
                            if ((c[j >> 2] | 0) == (K | 0)) {
                                c[d >> 2] = i;
                                c[j >> 2] = r;
                                L = i;
                                break;
                            } else {
                                au();
                                return 0;
                            }
                        }
                    } while (0);
                    L321: do {
                        if ((e | 0) != 0) {
                            i = K + 28 | 0;
                            m = 1136 + (c[i >> 2] << 2) | 0;
                            do {
                                if ((K | 0) == (c[m >> 2] | 0)) {
                                    c[m >> 2] = L;
                                    if ((L | 0) != 0) {
                                        break;
                                    }
                                    c[209] = c[209] & ~(1 << c[i >> 2]);
                                    break L321;
                                } else {
                                    if (e >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                        return 0;
                                    }
                                    r = e + 16 | 0;
                                    if ((c[r >> 2] | 0) == (K | 0)) {
                                        c[r >> 2] = L;
                                    } else {
                                        c[e + 20 >> 2] = L;
                                    }
                                    if ((L | 0) == 0) {
                                        break L321;
                                    }
                                }
                            } while (0);
                            if (L >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            }
                            c[L + 24 >> 2] = e;
                            i = c[K + 16 >> 2] | 0;
                            do {
                                if ((i | 0) != 0) {
                                    if (i >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                        return 0;
                                    } else {
                                        c[L + 16 >> 2] = i;
                                        c[i + 24 >> 2] = L;
                                        break;
                                    }
                                }
                            } while (0);
                            i = c[K + 20 >> 2] | 0;
                            if ((i | 0) == 0) {
                                break;
                            }
                            if (i >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[L + 20 >> 2] = i;
                                c[i + 24 >> 2] = L;
                                break;
                            }
                        }
                    } while (0);
                    do {
                        if (J >>> 0 < 16) {
                            e = J + g | 0;
                            c[K + 4 >> 2] = e | 3;
                            i = q + (e + 4) | 0;
                            c[i >> 2] = c[i >> 2] | 1;
                        } else {
                            c[K + 4 >> 2] = g | 3;
                            c[q + (g | 4) >> 2] = J | 1;
                            c[q + (J + g) >> 2] = J;
                            i = J >>> 3;
                            if (J >>> 0 < 256) {
                                e = i << 1;
                                m = 872 + (e << 2) | 0;
                                r = c[208] | 0;
                                j = 1 << i;
                                do {
                                    if ((r & j | 0) == 0) {
                                        c[208] = r | j;
                                        O = m;
                                        P = 872 + (e + 2 << 2) | 0;
                                    } else {
                                        i = 872 + (e + 2 << 2) | 0;
                                        d = c[i >> 2] | 0;
                                        if (d >>> 0 >= (c[212] | 0) >>> 0) {
                                            O = d;
                                            P = i;
                                            break;
                                        }
                                        au();
                                        return 0;
                                    }
                                } while (0);
                                c[P >> 2] = k;
                                c[O + 12 >> 2] = k;
                                c[q + (g + 8) >> 2] = O;
                                c[q + (g + 12) >> 2] = m;
                                break;
                            }
                            e = p;
                            j = J >>> 8;
                            do {
                                if ((j | 0) == 0) {
                                    Q = 0;
                                } else {
                                    if (J >>> 0 > 16777215) {
                                        Q = 31;
                                        break;
                                    }
                                    r = (j + 1048320 | 0) >>> 16 & 8;
                                    i = j << r;
                                    d = (i + 520192 | 0) >>> 16 & 4;
                                    B = i << d;
                                    i = (B + 245760 | 0) >>> 16 & 2;
                                    l = 14 - (d | r | i) + (B << i >>> 15) | 0;
                                    Q = J >>> ((l + 7 | 0) >>> 0) & 1 | l << 1;
                                }
                            } while (0);
                            j = 1136 + (Q << 2) | 0;
                            c[q + (g + 28) >> 2] = Q;
                            c[q + (g + 20) >> 2] = 0;
                            c[q + (g + 16) >> 2] = 0;
                            m = c[209] | 0;
                            l = 1 << Q;
                            if ((m & l | 0) == 0) {
                                c[209] = m | l;
                                c[j >> 2] = e;
                                c[q + (g + 24) >> 2] = j;
                                c[q + (g + 12) >> 2] = e;
                                c[q + (g + 8) >> 2] = e;
                                break;
                            }
                            if ((Q | 0) == 31) {
                                R = 0;
                            } else {
                                R = 25 - (Q >>> 1) | 0;
                            }
                            l = J << R;
                            m = c[j >> 2] | 0;
                            while (1) {
                                if ((c[m + 4 >> 2] & -8 | 0) == (J | 0)) {
                                    break;
                                }
                                S = m + 16 + (l >>> 31 << 2) | 0;
                                j = c[S >> 2] | 0;
                                if ((j | 0) == 0) {
                                    T = 262;
                                    break;
                                } else {
                                    l = l << 1;
                                    m = j;
                                }
                            }
                            if ((T | 0) == 262) {
                                if (S >>> 0 < (c[212] | 0) >>> 0) {
                                    au();
                                    return 0;
                                } else {
                                    c[S >> 2] = e;
                                    c[q + (g + 24) >> 2] = m;
                                    c[q + (g + 12) >> 2] = e;
                                    c[q + (g + 8) >> 2] = e;
                                    break;
                                }
                            }
                            l = m + 8 | 0;
                            j = c[l >> 2] | 0;
                            i = c[212] | 0;
                            if (m >>> 0 < i >>> 0) {
                                au();
                                return 0;
                            }
                            if (j >>> 0 < i >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[j + 12 >> 2] = e;
                                c[l >> 2] = e;
                                c[q + (g + 8) >> 2] = j;
                                c[q + (g + 12) >> 2] = m;
                                c[q + (g + 24) >> 2] = 0;
                                break;
                            }
                        }
                    } while (0);
                    q = K + 8 | 0;
                    if ((q | 0) == 0) {
                        o = g;
                        break;
                    } else {
                        n = q;
                    }
                    return n | 0;
                }
            } while (0);
            K = c[210] | 0;
            if (o >>> 0 <= K >>> 0) {
                S = K - o | 0;
                J = c[213] | 0;
                if (S >>> 0 > 15) {
                    R = J;
                    c[213] = R + o;
                    c[210] = S;
                    c[R + (o + 4) >> 2] = S | 1;
                    c[R + K >> 2] = S;
                    c[J + 4 >> 2] = o | 3;
                } else {
                    c[210] = 0;
                    c[213] = 0;
                    c[J + 4 >> 2] = K | 3;
                    S = J + (K + 4) | 0;
                    c[S >> 2] = c[S >> 2] | 1;
                }
                n = J + 8 | 0;
                return n | 0;
            }
            J = c[211] | 0;
            if (o >>> 0 < J >>> 0) {
                S = J - o | 0;
                c[211] = S;
                J = c[214] | 0;
                K = J;
                c[214] = K + o;
                c[K + (o + 4) >> 2] = S | 1;
                c[J + 4 >> 2] = o | 3;
                n = J + 8 | 0;
                return n | 0;
            }
            do {
                if ((c[200] | 0) == 0) {
                    J = ar(8) | 0;
                    if ((J - 1 & J | 0) == 0) {
                        c[202] = J;
                        c[201] = J;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                        return 0;
                    }
                }
            } while (0);
            J = o + 48 | 0;
            S = c[202] | 0;
            K = o + 47 | 0;
            R = S + K | 0;
            Q = -S | 0;
            S = R & Q;
            if (S >>> 0 <= o >>> 0) {
                n = 0;
                return n | 0;
            }
            O = c[318] | 0;
            do {
                if ((O | 0) != 0) {
                    P = c[316] | 0;
                    L = P + S | 0;
                    if (L >>> 0 <= P >>> 0 | L >>> 0 > O >>> 0) {
                        n = 0;
                    } else {
                        break;
                    }
                    return n | 0;
                }
            } while (0);
            L413: do {
                if ((c[319] & 4 | 0) == 0) {
                    O = c[214] | 0;
                    L415: do {
                        if ((O | 0) == 0) {
                            T = 292;
                        } else {
                            L = O;
                            P = 1280;
                            while (1) {
                                U = P | 0;
                                M = c[U >> 2] | 0;
                                if (M >>> 0 <= L >>> 0) {
                                    V = P + 4 | 0;
                                    if ((M + (c[V >> 2] | 0) | 0) >>> 0 > L >>> 0) {
                                        break;
                                    }
                                }
                                M = c[P + 8 >> 2] | 0;
                                if ((M | 0) == 0) {
                                    T = 292;
                                    break L415;
                                } else {
                                    P = M;
                                }
                            }
                            if ((P | 0) == 0) {
                                T = 292;
                                break;
                            }
                            L = R - (c[211] | 0) & Q;
                            if (L >>> 0 >= 2147483647) {
                                W = 0;
                                break;
                            }
                            m = aV(L | 0) | 0;
                            e = (m | 0) == ((c[U >> 2] | 0) + (c[V >> 2] | 0) | 0);
                            X = e ? m : -1;
                            Y = e ? L : 0;
                            Z = m;
                            _ = L;
                            T = 301;
                        }
                    } while (0);
                    do {
                        if ((T | 0) == 292) {
                            O = aV(0) | 0;
                            if ((O | 0) == -1) {
                                W = 0;
                                break;
                            }
                            g = O;
                            L = c[201] | 0;
                            m = L - 1 | 0;
                            if ((m & g | 0) == 0) {
                                $ = S;
                            } else {
                                $ = S - g + (m + g & -L) | 0;
                            }
                            L = c[316] | 0;
                            g = L + $ | 0;
                            if (!($ >>> 0 > o >>> 0 & $ >>> 0 < 2147483647)) {
                                W = 0;
                                break;
                            }
                            m = c[318] | 0;
                            if ((m | 0) != 0) {
                                if (g >>> 0 <= L >>> 0 | g >>> 0 > m >>> 0) {
                                    W = 0;
                                    break;
                                }
                            }
                            m = aV($ | 0) | 0;
                            g = (m | 0) == (O | 0);
                            X = g ? O : -1;
                            Y = g ? $ : 0;
                            Z = m;
                            _ = $;
                            T = 301;
                        }
                    } while (0);
                    L435: do {
                        if ((T | 0) == 301) {
                            m = -_ | 0;
                            if ((X | 0) != -1) {
                                aa = Y;
                                ab = X;
                                T = 312;
                                break L413;
                            }
                            do {
                                if ((Z | 0) != -1 & _ >>> 0 < 2147483647 & _ >>> 0 < J >>> 0) {
                                    g = c[202] | 0;
                                    O = K - _ + g & -g;
                                    if (O >>> 0 >= 2147483647) {
                                        ac = _;
                                        break;
                                    }
                                    if ((aV(O | 0) | 0) == -1) {
                                        aV(m | 0) | 0;
                                        W = Y;
                                        break L435;
                                    } else {
                                        ac = O + _ | 0;
                                        break;
                                    }
                                } else {
                                    ac = _;
                                }
                            } while (0);
                            if ((Z | 0) == -1) {
                                W = Y;
                            } else {
                                aa = ac;
                                ab = Z;
                                T = 312;
                                break L413;
                            }
                        }
                    } while (0);
                    c[319] = c[319] | 4;
                    ad = W;
                    T = 309;
                } else {
                    ad = 0;
                    T = 309;
                }
            } while (0);
            do {
                if ((T | 0) == 309) {
                    if (S >>> 0 >= 2147483647) {
                        break;
                    }
                    W = aV(S | 0) | 0;
                    Z = aV(0) | 0;
                    if (!((Z | 0) != -1 & (W | 0) != -1 & W >>> 0 < Z >>> 0)) {
                        break;
                    }
                    ac = Z - W | 0;
                    Z = ac >>> 0 > (o + 40 | 0) >>> 0;
                    Y = Z ? W : -1;
                    if ((Y | 0) != -1) {
                        aa = Z ? ac : ad;
                        ab = Y;
                        T = 312;
                    }
                }
            } while (0);
            do {
                if ((T | 0) == 312) {
                    ad = (c[316] | 0) + aa | 0;
                    c[316] = ad;
                    if (ad >>> 0 > (c[317] | 0) >>> 0) {
                        c[317] = ad;
                    }
                    ad = c[214] | 0;
                    L455: do {
                        if ((ad | 0) == 0) {
                            S = c[212] | 0;
                            if ((S | 0) == 0 | ab >>> 0 < S >>> 0) {
                                c[212] = ab;
                            }
                            c[320] = ab;
                            c[321] = aa;
                            c[323] = 0;
                            c[217] = c[200];
                            c[216] = -1;
                            S = 0;
                            do {
                                Y = S << 1;
                                ac = 872 + (Y << 2) | 0;
                                c[872 + (Y + 3 << 2) >> 2] = ac;
                                c[872 + (Y + 2 << 2) >> 2] = ac;
                                S = S + 1 | 0;
                            } while (S >>> 0 < 32);
                            S = ab + 8 | 0;
                            if ((S & 7 | 0) == 0) {
                                ae = 0;
                            } else {
                                ae = -S & 7;
                            }
                            S = aa - 40 - ae | 0;
                            c[214] = ab + ae;
                            c[211] = S;
                            c[ab + (ae + 4) >> 2] = S | 1;
                            c[ab + (aa - 36) >> 2] = 40;
                            c[215] = c[204];
                        } else {
                            S = 1280;
                            while (1) {
                                af = c[S >> 2] | 0;
                                ag = S + 4 | 0;
                                ah = c[ag >> 2] | 0;
                                if ((ab | 0) == (af + ah | 0)) {
                                    T = 324;
                                    break;
                                }
                                ac = c[S + 8 >> 2] | 0;
                                if ((ac | 0) == 0) {
                                    break;
                                } else {
                                    S = ac;
                                }
                            }
                            do {
                                if ((T | 0) == 324) {
                                    if ((c[S + 12 >> 2] & 8 | 0) != 0) {
                                        break;
                                    }
                                    ac = ad;
                                    if (!(ac >>> 0 >= af >>> 0 & ac >>> 0 < ab >>> 0)) {
                                        break;
                                    }
                                    c[ag >> 2] = ah + aa;
                                    ac = c[214] | 0;
                                    Y = (c[211] | 0) + aa | 0;
                                    Z = ac;
                                    W = ac + 8 | 0;
                                    if ((W & 7 | 0) == 0) {
                                        ai = 0;
                                    } else {
                                        ai = -W & 7;
                                    }
                                    W = Y - ai | 0;
                                    c[214] = Z + ai;
                                    c[211] = W;
                                    c[Z + (ai + 4) >> 2] = W | 1;
                                    c[Z + (Y + 4) >> 2] = 40;
                                    c[215] = c[204];
                                    break L455;
                                }
                            } while (0);
                            if (ab >>> 0 < (c[212] | 0) >>> 0) {
                                c[212] = ab;
                            }
                            S = ab + aa | 0;
                            Y = 1280;
                            while (1) {
                                aj = Y | 0;
                                if ((c[aj >> 2] | 0) == (S | 0)) {
                                    T = 334;
                                    break;
                                }
                                Z = c[Y + 8 >> 2] | 0;
                                if ((Z | 0) == 0) {
                                    break;
                                } else {
                                    Y = Z;
                                }
                            }
                            do {
                                if ((T | 0) == 334) {
                                    if ((c[Y + 12 >> 2] & 8 | 0) != 0) {
                                        break;
                                    }
                                    c[aj >> 2] = ab;
                                    S = Y + 4 | 0;
                                    c[S >> 2] = (c[S >> 2] | 0) + aa;
                                    S = ab + 8 | 0;
                                    if ((S & 7 | 0) == 0) {
                                        ak = 0;
                                    } else {
                                        ak = -S & 7;
                                    }
                                    S = ab + (aa + 8) | 0;
                                    if ((S & 7 | 0) == 0) {
                                        al = 0;
                                    } else {
                                        al = -S & 7;
                                    }
                                    S = ab + (al + aa) | 0;
                                    Z = S;
                                    W = ak + o | 0;
                                    ac = ab + W | 0;
                                    _ = ac;
                                    K = S - (ab + ak) - o | 0;
                                    c[ab + (ak + 4) >> 2] = o | 3;
                                    do {
                                        if ((Z | 0) == (c[214] | 0)) {
                                            J = (c[211] | 0) + K | 0;
                                            c[211] = J;
                                            c[214] = _;
                                            c[ab + (W + 4) >> 2] = J | 1;
                                        } else {
                                            if ((Z | 0) == (c[213] | 0)) {
                                                J = (c[210] | 0) + K | 0;
                                                c[210] = J;
                                                c[213] = _;
                                                c[ab + (W + 4) >> 2] = J | 1;
                                                c[ab + (J + W) >> 2] = J;
                                                break;
                                            }
                                            J = aa + 4 | 0;
                                            X = c[ab + (J + al) >> 2] | 0;
                                            if ((X & 3 | 0) == 1) {
                                                $ = X & -8;
                                                V = X >>> 3;
                                                L500: do {
                                                    if (X >>> 0 < 256) {
                                                        U = c[ab + ((al | 8) + aa) >> 2] | 0;
                                                        Q = c[ab + (aa + 12 + al) >> 2] | 0;
                                                        R = 872 + (V << 1 << 2) | 0;
                                                        do {
                                                            if ((U | 0) != (R | 0)) {
                                                                if (U >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                }
                                                                if ((c[U + 12 >> 2] | 0) == (Z | 0)) {
                                                                    break;
                                                                }
                                                                au();
                                                                return 0;
                                                            }
                                                        } while (0);
                                                        if ((Q | 0) == (U | 0)) {
                                                            c[208] = c[208] & ~(1 << V);
                                                            break;
                                                        }
                                                        do {
                                                            if ((Q | 0) == (R | 0)) {
                                                                am = Q + 8 | 0;
                                                            } else {
                                                                if (Q >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                }
                                                                m = Q + 8 | 0;
                                                                if ((c[m >> 2] | 0) == (Z | 0)) {
                                                                    am = m;
                                                                    break;
                                                                }
                                                                au();
                                                                return 0;
                                                            }
                                                        } while (0);
                                                        c[U + 12 >> 2] = Q;
                                                        c[am >> 2] = U;
                                                    } else {
                                                        R = S;
                                                        m = c[ab + ((al | 24) + aa) >> 2] | 0;
                                                        P = c[ab + (aa + 12 + al) >> 2] | 0;
                                                        do {
                                                            if ((P | 0) == (R | 0)) {
                                                                O = al | 16;
                                                                g = ab + (J + O) | 0;
                                                                L = c[g >> 2] | 0;
                                                                if ((L | 0) == 0) {
                                                                    e = ab + (O + aa) | 0;
                                                                    O = c[e >> 2] | 0;
                                                                    if ((O | 0) == 0) {
                                                                        an = 0;
                                                                        break;
                                                                    } else {
                                                                        ao = O;
                                                                        ap = e;
                                                                    }
                                                                } else {
                                                                    ao = L;
                                                                    ap = g;
                                                                }
                                                                while (1) {
                                                                    g = ao + 20 | 0;
                                                                    L = c[g >> 2] | 0;
                                                                    if ((L | 0) != 0) {
                                                                        ao = L;
                                                                        ap = g;
                                                                        continue;
                                                                    }
                                                                    g = ao + 16 | 0;
                                                                    L = c[g >> 2] | 0;
                                                                    if ((L | 0) == 0) {
                                                                        break;
                                                                    } else {
                                                                        ao = L;
                                                                        ap = g;
                                                                    }
                                                                }
                                                                if (ap >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                } else {
                                                                    c[ap >> 2] = 0;
                                                                    an = ao;
                                                                    break;
                                                                }
                                                            } else {
                                                                g = c[ab + ((al | 8) + aa) >> 2] | 0;
                                                                if (g >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                }
                                                                L = g + 12 | 0;
                                                                if ((c[L >> 2] | 0) != (R | 0)) {
                                                                    au();
                                                                    return 0;
                                                                }
                                                                e = P + 8 | 0;
                                                                if ((c[e >> 2] | 0) == (R | 0)) {
                                                                    c[L >> 2] = P;
                                                                    c[e >> 2] = g;
                                                                    an = P;
                                                                    break;
                                                                } else {
                                                                    au();
                                                                    return 0;
                                                                }
                                                            }
                                                        } while (0);
                                                        if ((m | 0) == 0) {
                                                            break;
                                                        }
                                                        P = ab + (aa + 28 + al) | 0;
                                                        U = 1136 + (c[P >> 2] << 2) | 0;
                                                        do {
                                                            if ((R | 0) == (c[U >> 2] | 0)) {
                                                                c[U >> 2] = an;
                                                                if ((an | 0) != 0) {
                                                                    break;
                                                                }
                                                                c[209] = c[209] & ~(1 << c[P >> 2]);
                                                                break L500;
                                                            } else {
                                                                if (m >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                }
                                                                Q = m + 16 | 0;
                                                                if ((c[Q >> 2] | 0) == (R | 0)) {
                                                                    c[Q >> 2] = an;
                                                                } else {
                                                                    c[m + 20 >> 2] = an;
                                                                }
                                                                if ((an | 0) == 0) {
                                                                    break L500;
                                                                }
                                                            }
                                                        } while (0);
                                                        if (an >>> 0 < (c[212] | 0) >>> 0) {
                                                            au();
                                                            return 0;
                                                        }
                                                        c[an + 24 >> 2] = m;
                                                        R = al | 16;
                                                        P = c[ab + (R + aa) >> 2] | 0;
                                                        do {
                                                            if ((P | 0) != 0) {
                                                                if (P >>> 0 < (c[212] | 0) >>> 0) {
                                                                    au();
                                                                    return 0;
                                                                } else {
                                                                    c[an + 16 >> 2] = P;
                                                                    c[P + 24 >> 2] = an;
                                                                    break;
                                                                }
                                                            }
                                                        } while (0);
                                                        P = c[ab + (J + R) >> 2] | 0;
                                                        if ((P | 0) == 0) {
                                                            break;
                                                        }
                                                        if (P >>> 0 < (c[212] | 0) >>> 0) {
                                                            au();
                                                            return 0;
                                                        } else {
                                                            c[an + 20 >> 2] = P;
                                                            c[P + 24 >> 2] = an;
                                                            break;
                                                        }
                                                    }
                                                } while (0);
                                                aq = ab + (($ | al) + aa) | 0;
                                                as = $ + K | 0;
                                            } else {
                                                aq = Z;
                                                as = K;
                                            }
                                            J = aq + 4 | 0;
                                            c[J >> 2] = c[J >> 2] & -2;
                                            c[ab + (W + 4) >> 2] = as | 1;
                                            c[ab + (as + W) >> 2] = as;
                                            J = as >>> 3;
                                            if (as >>> 0 < 256) {
                                                V = J << 1;
                                                X = 872 + (V << 2) | 0;
                                                P = c[208] | 0;
                                                m = 1 << J;
                                                do {
                                                    if ((P & m | 0) == 0) {
                                                        c[208] = P | m;
                                                        at = X;
                                                        av = 872 + (V + 2 << 2) | 0;
                                                    } else {
                                                        J = 872 + (V + 2 << 2) | 0;
                                                        U = c[J >> 2] | 0;
                                                        if (U >>> 0 >= (c[212] | 0) >>> 0) {
                                                            at = U;
                                                            av = J;
                                                            break;
                                                        }
                                                        au();
                                                        return 0;
                                                    }
                                                } while (0);
                                                c[av >> 2] = _;
                                                c[at + 12 >> 2] = _;
                                                c[ab + (W + 8) >> 2] = at;
                                                c[ab + (W + 12) >> 2] = X;
                                                break;
                                            }
                                            V = ac;
                                            m = as >>> 8;
                                            do {
                                                if ((m | 0) == 0) {
                                                    aw = 0;
                                                } else {
                                                    if (as >>> 0 > 16777215) {
                                                        aw = 31;
                                                        break;
                                                    }
                                                    P = (m + 1048320 | 0) >>> 16 & 8;
                                                    $ = m << P;
                                                    J = ($ + 520192 | 0) >>> 16 & 4;
                                                    U = $ << J;
                                                    $ = (U + 245760 | 0) >>> 16 & 2;
                                                    Q = 14 - (J | P | $) + (U << $ >>> 15) | 0;
                                                    aw = as >>> ((Q + 7 | 0) >>> 0) & 1 | Q << 1;
                                                }
                                            } while (0);
                                            m = 1136 + (aw << 2) | 0;
                                            c[ab + (W + 28) >> 2] = aw;
                                            c[ab + (W + 20) >> 2] = 0;
                                            c[ab + (W + 16) >> 2] = 0;
                                            X = c[209] | 0;
                                            Q = 1 << aw;
                                            if ((X & Q | 0) == 0) {
                                                c[209] = X | Q;
                                                c[m >> 2] = V;
                                                c[ab + (W + 24) >> 2] = m;
                                                c[ab + (W + 12) >> 2] = V;
                                                c[ab + (W + 8) >> 2] = V;
                                                break;
                                            }
                                            if ((aw | 0) == 31) {
                                                ax = 0;
                                            } else {
                                                ax = 25 - (aw >>> 1) | 0;
                                            }
                                            Q = as << ax;
                                            X = c[m >> 2] | 0;
                                            while (1) {
                                                if ((c[X + 4 >> 2] & -8 | 0) == (as | 0)) {
                                                    break;
                                                }
                                                ay = X + 16 + (Q >>> 31 << 2) | 0;
                                                m = c[ay >> 2] | 0;
                                                if ((m | 0) == 0) {
                                                    T = 407;
                                                    break;
                                                } else {
                                                    Q = Q << 1;
                                                    X = m;
                                                }
                                            }
                                            if ((T | 0) == 407) {
                                                if (ay >>> 0 < (c[212] | 0) >>> 0) {
                                                    au();
                                                    return 0;
                                                } else {
                                                    c[ay >> 2] = V;
                                                    c[ab + (W + 24) >> 2] = X;
                                                    c[ab + (W + 12) >> 2] = V;
                                                    c[ab + (W + 8) >> 2] = V;
                                                    break;
                                                }
                                            }
                                            Q = X + 8 | 0;
                                            m = c[Q >> 2] | 0;
                                            $ = c[212] | 0;
                                            if (X >>> 0 < $ >>> 0) {
                                                au();
                                                return 0;
                                            }
                                            if (m >>> 0 < $ >>> 0) {
                                                au();
                                                return 0;
                                            } else {
                                                c[m + 12 >> 2] = V;
                                                c[Q >> 2] = V;
                                                c[ab + (W + 8) >> 2] = m;
                                                c[ab + (W + 12) >> 2] = X;
                                                c[ab + (W + 24) >> 2] = 0;
                                                break;
                                            }
                                        }
                                    } while (0);
                                    n = ab + (ak | 8) | 0;
                                    return n | 0;
                                }
                            } while (0);
                            Y = ad;
                            W = 1280;
                            while (1) {
                                az = c[W >> 2] | 0;
                                if (az >>> 0 <= Y >>> 0) {
                                    aA = c[W + 4 >> 2] | 0;
                                    aB = az + aA | 0;
                                    if (aB >>> 0 > Y >>> 0) {
                                        break;
                                    }
                                }
                                W = c[W + 8 >> 2] | 0;
                            }
                            W = az + (aA - 39) | 0;
                            if ((W & 7 | 0) == 0) {
                                aC = 0;
                            } else {
                                aC = -W & 7;
                            }
                            W = az + (aA - 47 + aC) | 0;
                            ac = W >>> 0 < (ad + 16 | 0) >>> 0 ? Y : W;
                            W = ac + 8 | 0;
                            _ = ab + 8 | 0;
                            if ((_ & 7 | 0) == 0) {
                                aD = 0;
                            } else {
                                aD = -_ & 7;
                            }
                            _ = aa - 40 - aD | 0;
                            c[214] = ab + aD;
                            c[211] = _;
                            c[ab + (aD + 4) >> 2] = _ | 1;
                            c[ab + (aa - 36) >> 2] = 40;
                            c[215] = c[204];
                            c[ac + 4 >> 2] = 27;
                            c[W >> 2] = c[320];
                            c[W + 4 >> 2] = c[1284 >> 2];
                            c[W + 8 >> 2] = c[1288 >> 2];
                            c[W + 12 >> 2] = c[1292 >> 2];
                            c[320] = ab;
                            c[321] = aa;
                            c[323] = 0;
                            c[322] = W;
                            W = ac + 28 | 0;
                            c[W >> 2] = 7;
                            if ((ac + 32 | 0) >>> 0 < aB >>> 0) {
                                _ = W;
                                while (1) {
                                    W = _ + 4 | 0;
                                    c[W >> 2] = 7;
                                    if ((_ + 8 | 0) >>> 0 < aB >>> 0) {
                                        _ = W;
                                    } else {
                                        break;
                                    }
                                }
                            }
                            if ((ac | 0) == (Y | 0)) {
                                break;
                            }
                            _ = ac - ad | 0;
                            W = Y + (_ + 4) | 0;
                            c[W >> 2] = c[W >> 2] & -2;
                            c[ad + 4 >> 2] = _ | 1;
                            c[Y + _ >> 2] = _;
                            W = _ >>> 3;
                            if (_ >>> 0 < 256) {
                                K = W << 1;
                                Z = 872 + (K << 2) | 0;
                                S = c[208] | 0;
                                m = 1 << W;
                                do {
                                    if ((S & m | 0) == 0) {
                                        c[208] = S | m;
                                        aE = Z;
                                        aF = 872 + (K + 2 << 2) | 0;
                                    } else {
                                        W = 872 + (K + 2 << 2) | 0;
                                        Q = c[W >> 2] | 0;
                                        if (Q >>> 0 >= (c[212] | 0) >>> 0) {
                                            aE = Q;
                                            aF = W;
                                            break;
                                        }
                                        au();
                                        return 0;
                                    }
                                } while (0);
                                c[aF >> 2] = ad;
                                c[aE + 12 >> 2] = ad;
                                c[ad + 8 >> 2] = aE;
                                c[ad + 12 >> 2] = Z;
                                break;
                            }
                            K = ad;
                            m = _ >>> 8;
                            do {
                                if ((m | 0) == 0) {
                                    aG = 0;
                                } else {
                                    if (_ >>> 0 > 16777215) {
                                        aG = 31;
                                        break;
                                    }
                                    S = (m + 1048320 | 0) >>> 16 & 8;
                                    Y = m << S;
                                    ac = (Y + 520192 | 0) >>> 16 & 4;
                                    W = Y << ac;
                                    Y = (W + 245760 | 0) >>> 16 & 2;
                                    Q = 14 - (ac | S | Y) + (W << Y >>> 15) | 0;
                                    aG = _ >>> ((Q + 7 | 0) >>> 0) & 1 | Q << 1;
                                }
                            } while (0);
                            m = 1136 + (aG << 2) | 0;
                            c[ad + 28 >> 2] = aG;
                            c[ad + 20 >> 2] = 0;
                            c[ad + 16 >> 2] = 0;
                            Z = c[209] | 0;
                            Q = 1 << aG;
                            if ((Z & Q | 0) == 0) {
                                c[209] = Z | Q;
                                c[m >> 2] = K;
                                c[ad + 24 >> 2] = m;
                                c[ad + 12 >> 2] = ad;
                                c[ad + 8 >> 2] = ad;
                                break;
                            }
                            if ((aG | 0) == 31) {
                                aH = 0;
                            } else {
                                aH = 25 - (aG >>> 1) | 0;
                            }
                            Q = _ << aH;
                            Z = c[m >> 2] | 0;
                            while (1) {
                                if ((c[Z + 4 >> 2] & -8 | 0) == (_ | 0)) {
                                    break;
                                }
                                aI = Z + 16 + (Q >>> 31 << 2) | 0;
                                m = c[aI >> 2] | 0;
                                if ((m | 0) == 0) {
                                    T = 442;
                                    break;
                                } else {
                                    Q = Q << 1;
                                    Z = m;
                                }
                            }
                            if ((T | 0) == 442) {
                                if (aI >>> 0 < (c[212] | 0) >>> 0) {
                                    au();
                                    return 0;
                                } else {
                                    c[aI >> 2] = K;
                                    c[ad + 24 >> 2] = Z;
                                    c[ad + 12 >> 2] = ad;
                                    c[ad + 8 >> 2] = ad;
                                    break;
                                }
                            }
                            Q = Z + 8 | 0;
                            _ = c[Q >> 2] | 0;
                            m = c[212] | 0;
                            if (Z >>> 0 < m >>> 0) {
                                au();
                                return 0;
                            }
                            if (_ >>> 0 < m >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[_ + 12 >> 2] = K;
                                c[Q >> 2] = K;
                                c[ad + 8 >> 2] = _;
                                c[ad + 12 >> 2] = Z;
                                c[ad + 24 >> 2] = 0;
                                break;
                            }
                        }
                    } while (0);
                    ad = c[211] | 0;
                    if (ad >>> 0 <= o >>> 0) {
                        break;
                    }
                    _ = ad - o | 0;
                    c[211] = _;
                    ad = c[214] | 0;
                    Q = ad;
                    c[214] = Q + o;
                    c[Q + (o + 4) >> 2] = _ | 1;
                    c[ad + 4 >> 2] = o | 3;
                    n = ad + 8 | 0;
                    return n | 0;
                }
            } while (0);
            c[(aX() | 0) >> 2] = 12;
            n = 0;
            return n | 0;
        }

        function bM(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0,
                O = 0;
            if ((a | 0) == 0) {
                return;
            }
            b = a - 8 | 0;
            d = b;
            e = c[212] | 0;
            if (b >>> 0 < e >>> 0) {
                au();
            }
            f = c[a - 4 >> 2] | 0;
            g = f & 3;
            if ((g | 0) == 1) {
                au();
            }
            h = f & -8;
            i = a + (h - 8) | 0;
            j = i;
            L672: do {
                if ((f & 1 | 0) == 0) {
                    k = c[b >> 2] | 0;
                    if ((g | 0) == 0) {
                        return;
                    }
                    l = -8 - k | 0;
                    m = a + l | 0;
                    n = m;
                    o = k + h | 0;
                    if (m >>> 0 < e >>> 0) {
                        au();
                    }
                    if ((n | 0) == (c[213] | 0)) {
                        p = a + (h - 4) | 0;
                        if ((c[p >> 2] & 3 | 0) != 3) {
                            q = n;
                            r = o;
                            break;
                        }
                        c[210] = o;
                        c[p >> 2] = c[p >> 2] & -2;
                        c[a + (l + 4) >> 2] = o | 1;
                        c[i >> 2] = o;
                        return;
                    }
                    p = k >>> 3;
                    if (k >>> 0 < 256) {
                        k = c[a + (l + 8) >> 2] | 0;
                        s = c[a + (l + 12) >> 2] | 0;
                        t = 872 + (p << 1 << 2) | 0;
                        do {
                            if ((k | 0) != (t | 0)) {
                                if (k >>> 0 < e >>> 0) {
                                    au();
                                }
                                if ((c[k + 12 >> 2] | 0) == (n | 0)) {
                                    break;
                                }
                                au();
                            }
                        } while (0);
                        if ((s | 0) == (k | 0)) {
                            c[208] = c[208] & ~(1 << p);
                            q = n;
                            r = o;
                            break;
                        }
                        do {
                            if ((s | 0) == (t | 0)) {
                                u = s + 8 | 0;
                            } else {
                                if (s >>> 0 < e >>> 0) {
                                    au();
                                }
                                v = s + 8 | 0;
                                if ((c[v >> 2] | 0) == (n | 0)) {
                                    u = v;
                                    break;
                                }
                                au();
                            }
                        } while (0);
                        c[k + 12 >> 2] = s;
                        c[u >> 2] = k;
                        q = n;
                        r = o;
                        break;
                    }
                    t = m;
                    p = c[a + (l + 24) >> 2] | 0;
                    v = c[a + (l + 12) >> 2] | 0;
                    do {
                        if ((v | 0) == (t | 0)) {
                            w = a + (l + 20) | 0;
                            x = c[w >> 2] | 0;
                            if ((x | 0) == 0) {
                                y = a + (l + 16) | 0;
                                z = c[y >> 2] | 0;
                                if ((z | 0) == 0) {
                                    A = 0;
                                    break;
                                } else {
                                    B = z;
                                    C = y;
                                }
                            } else {
                                B = x;
                                C = w;
                            }
                            while (1) {
                                w = B + 20 | 0;
                                x = c[w >> 2] | 0;
                                if ((x | 0) != 0) {
                                    B = x;
                                    C = w;
                                    continue;
                                }
                                w = B + 16 | 0;
                                x = c[w >> 2] | 0;
                                if ((x | 0) == 0) {
                                    break;
                                } else {
                                    B = x;
                                    C = w;
                                }
                            }
                            if (C >>> 0 < e >>> 0) {
                                au();
                            } else {
                                c[C >> 2] = 0;
                                A = B;
                                break;
                            }
                        } else {
                            w = c[a + (l + 8) >> 2] | 0;
                            if (w >>> 0 < e >>> 0) {
                                au();
                            }
                            x = w + 12 | 0;
                            if ((c[x >> 2] | 0) != (t | 0)) {
                                au();
                            }
                            y = v + 8 | 0;
                            if ((c[y >> 2] | 0) == (t | 0)) {
                                c[x >> 2] = v;
                                c[y >> 2] = w;
                                A = v;
                                break;
                            } else {
                                au();
                            }
                        }
                    } while (0);
                    if ((p | 0) == 0) {
                        q = n;
                        r = o;
                        break;
                    }
                    v = a + (l + 28) | 0;
                    m = 1136 + (c[v >> 2] << 2) | 0;
                    do {
                        if ((t | 0) == (c[m >> 2] | 0)) {
                            c[m >> 2] = A;
                            if ((A | 0) != 0) {
                                break;
                            }
                            c[209] = c[209] & ~(1 << c[v >> 2]);
                            q = n;
                            r = o;
                            break L672;
                        } else {
                            if (p >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            }
                            k = p + 16 | 0;
                            if ((c[k >> 2] | 0) == (t | 0)) {
                                c[k >> 2] = A;
                            } else {
                                c[p + 20 >> 2] = A;
                            }
                            if ((A | 0) == 0) {
                                q = n;
                                r = o;
                                break L672;
                            }
                        }
                    } while (0);
                    if (A >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                    }
                    c[A + 24 >> 2] = p;
                    t = c[a + (l + 16) >> 2] | 0;
                    do {
                        if ((t | 0) != 0) {
                            if (t >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            } else {
                                c[A + 16 >> 2] = t;
                                c[t + 24 >> 2] = A;
                                break;
                            }
                        }
                    } while (0);
                    t = c[a + (l + 20) >> 2] | 0;
                    if ((t | 0) == 0) {
                        q = n;
                        r = o;
                        break;
                    }
                    if (t >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                    } else {
                        c[A + 20 >> 2] = t;
                        c[t + 24 >> 2] = A;
                        q = n;
                        r = o;
                        break;
                    }
                } else {
                    q = d;
                    r = h;
                }
            } while (0);
            d = q;
            if (d >>> 0 >= i >>> 0) {
                au();
            }
            A = a + (h - 4) | 0;
            e = c[A >> 2] | 0;
            if ((e & 1 | 0) == 0) {
                au();
            }
            do {
                if ((e & 2 | 0) == 0) {
                    if ((j | 0) == (c[214] | 0)) {
                        B = (c[211] | 0) + r | 0;
                        c[211] = B;
                        c[214] = q;
                        c[q + 4 >> 2] = B | 1;
                        if ((q | 0) == (c[213] | 0)) {
                            c[213] = 0;
                            c[210] = 0;
                        }
                        if (B >>> 0 <= (c[215] | 0) >>> 0) {
                            return;
                        }
                        bS(0) | 0;
                        return;
                    }
                    if ((j | 0) == (c[213] | 0)) {
                        B = (c[210] | 0) + r | 0;
                        c[210] = B;
                        c[213] = q;
                        c[q + 4 >> 2] = B | 1;
                        c[d + B >> 2] = B;
                        return;
                    }
                    B = (e & -8) + r | 0;
                    C = e >>> 3;
                    L777: do {
                        if (e >>> 0 < 256) {
                            u = c[a + h >> 2] | 0;
                            g = c[a + (h | 4) >> 2] | 0;
                            b = 872 + (C << 1 << 2) | 0;
                            do {
                                if ((u | 0) != (b | 0)) {
                                    if (u >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    }
                                    if ((c[u + 12 >> 2] | 0) == (j | 0)) {
                                        break;
                                    }
                                    au();
                                }
                            } while (0);
                            if ((g | 0) == (u | 0)) {
                                c[208] = c[208] & ~(1 << C);
                                break;
                            }
                            do {
                                if ((g | 0) == (b | 0)) {
                                    D = g + 8 | 0;
                                } else {
                                    if (g >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    }
                                    f = g + 8 | 0;
                                    if ((c[f >> 2] | 0) == (j | 0)) {
                                        D = f;
                                        break;
                                    }
                                    au();
                                }
                            } while (0);
                            c[u + 12 >> 2] = g;
                            c[D >> 2] = u;
                        } else {
                            b = i;
                            f = c[a + (h + 16) >> 2] | 0;
                            t = c[a + (h | 4) >> 2] | 0;
                            do {
                                if ((t | 0) == (b | 0)) {
                                    p = a + (h + 12) | 0;
                                    v = c[p >> 2] | 0;
                                    if ((v | 0) == 0) {
                                        m = a + (h + 8) | 0;
                                        k = c[m >> 2] | 0;
                                        if ((k | 0) == 0) {
                                            E = 0;
                                            break;
                                        } else {
                                            F = k;
                                            G = m;
                                        }
                                    } else {
                                        F = v;
                                        G = p;
                                    }
                                    while (1) {
                                        p = F + 20 | 0;
                                        v = c[p >> 2] | 0;
                                        if ((v | 0) != 0) {
                                            F = v;
                                            G = p;
                                            continue;
                                        }
                                        p = F + 16 | 0;
                                        v = c[p >> 2] | 0;
                                        if ((v | 0) == 0) {
                                            break;
                                        } else {
                                            F = v;
                                            G = p;
                                        }
                                    }
                                    if (G >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    } else {
                                        c[G >> 2] = 0;
                                        E = F;
                                        break;
                                    }
                                } else {
                                    p = c[a + h >> 2] | 0;
                                    if (p >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    }
                                    v = p + 12 | 0;
                                    if ((c[v >> 2] | 0) != (b | 0)) {
                                        au();
                                    }
                                    m = t + 8 | 0;
                                    if ((c[m >> 2] | 0) == (b | 0)) {
                                        c[v >> 2] = t;
                                        c[m >> 2] = p;
                                        E = t;
                                        break;
                                    } else {
                                        au();
                                    }
                                }
                            } while (0);
                            if ((f | 0) == 0) {
                                break;
                            }
                            t = a + (h + 20) | 0;
                            u = 1136 + (c[t >> 2] << 2) | 0;
                            do {
                                if ((b | 0) == (c[u >> 2] | 0)) {
                                    c[u >> 2] = E;
                                    if ((E | 0) != 0) {
                                        break;
                                    }
                                    c[209] = c[209] & ~(1 << c[t >> 2]);
                                    break L777;
                                } else {
                                    if (f >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    }
                                    g = f + 16 | 0;
                                    if ((c[g >> 2] | 0) == (b | 0)) {
                                        c[g >> 2] = E;
                                    } else {
                                        c[f + 20 >> 2] = E;
                                    }
                                    if ((E | 0) == 0) {
                                        break L777;
                                    }
                                }
                            } while (0);
                            if (E >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            }
                            c[E + 24 >> 2] = f;
                            b = c[a + (h + 8) >> 2] | 0;
                            do {
                                if ((b | 0) != 0) {
                                    if (b >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    } else {
                                        c[E + 16 >> 2] = b;
                                        c[b + 24 >> 2] = E;
                                        break;
                                    }
                                }
                            } while (0);
                            b = c[a + (h + 12) >> 2] | 0;
                            if ((b | 0) == 0) {
                                break;
                            }
                            if (b >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            } else {
                                c[E + 20 >> 2] = b;
                                c[b + 24 >> 2] = E;
                                break;
                            }
                        }
                    } while (0);
                    c[q + 4 >> 2] = B | 1;
                    c[d + B >> 2] = B;
                    if ((q | 0) != (c[213] | 0)) {
                        H = B;
                        break;
                    }
                    c[210] = B;
                    return;
                } else {
                    c[A >> 2] = e & -2;
                    c[q + 4 >> 2] = r | 1;
                    c[d + r >> 2] = r;
                    H = r;
                }
            } while (0);
            r = H >>> 3;
            if (H >>> 0 < 256) {
                d = r << 1;
                e = 872 + (d << 2) | 0;
                A = c[208] | 0;
                E = 1 << r;
                do {
                    if ((A & E | 0) == 0) {
                        c[208] = A | E;
                        I = e;
                        J = 872 + (d + 2 << 2) | 0;
                    } else {
                        r = 872 + (d + 2 << 2) | 0;
                        h = c[r >> 2] | 0;
                        if (h >>> 0 >= (c[212] | 0) >>> 0) {
                            I = h;
                            J = r;
                            break;
                        }
                        au();
                    }
                } while (0);
                c[J >> 2] = q;
                c[I + 12 >> 2] = q;
                c[q + 8 >> 2] = I;
                c[q + 12 >> 2] = e;
                return;
            }
            e = q;
            I = H >>> 8;
            do {
                if ((I | 0) == 0) {
                    K = 0;
                } else {
                    if (H >>> 0 > 16777215) {
                        K = 31;
                        break;
                    }
                    J = (I + 1048320 | 0) >>> 16 & 8;
                    d = I << J;
                    E = (d + 520192 | 0) >>> 16 & 4;
                    A = d << E;
                    d = (A + 245760 | 0) >>> 16 & 2;
                    r = 14 - (E | J | d) + (A << d >>> 15) | 0;
                    K = H >>> ((r + 7 | 0) >>> 0) & 1 | r << 1;
                }
            } while (0);
            I = 1136 + (K << 2) | 0;
            c[q + 28 >> 2] = K;
            c[q + 20 >> 2] = 0;
            c[q + 16 >> 2] = 0;
            r = c[209] | 0;
            d = 1 << K;
            do {
                if ((r & d | 0) == 0) {
                    c[209] = r | d;
                    c[I >> 2] = e;
                    c[q + 24 >> 2] = I;
                    c[q + 12 >> 2] = q;
                    c[q + 8 >> 2] = q;
                } else {
                    if ((K | 0) == 31) {
                        L = 0;
                    } else {
                        L = 25 - (K >>> 1) | 0;
                    }
                    A = H << L;
                    J = c[I >> 2] | 0;
                    while (1) {
                        if ((c[J + 4 >> 2] & -8 | 0) == (H | 0)) {
                            break;
                        }
                        M = J + 16 + (A >>> 31 << 2) | 0;
                        E = c[M >> 2] | 0;
                        if ((E | 0) == 0) {
                            N = 621;
                            break;
                        } else {
                            A = A << 1;
                            J = E;
                        }
                    }
                    if ((N | 0) == 621) {
                        if (M >>> 0 < (c[212] | 0) >>> 0) {
                            au();
                        } else {
                            c[M >> 2] = e;
                            c[q + 24 >> 2] = J;
                            c[q + 12 >> 2] = q;
                            c[q + 8 >> 2] = q;
                            break;
                        }
                    }
                    A = J + 8 | 0;
                    B = c[A >> 2] | 0;
                    E = c[212] | 0;
                    if (J >>> 0 < E >>> 0) {
                        au();
                    }
                    if (B >>> 0 < E >>> 0) {
                        au();
                    } else {
                        c[B + 12 >> 2] = e;
                        c[A >> 2] = e;
                        c[q + 8 >> 2] = B;
                        c[q + 12 >> 2] = J;
                        c[q + 24 >> 2] = 0;
                        break;
                    }
                }
            } while (0);
            q = (c[216] | 0) - 1 | 0;
            c[216] = q;
            if ((q | 0) == 0) {
                O = 1288;
            } else {
                return;
            }
            while (1) {
                q = c[O >> 2] | 0;
                if ((q | 0) == 0) {
                    break;
                } else {
                    O = q + 8 | 0;
                }
            }
            c[216] = -1;
            return;
        }

        function bN(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0;
            do {
                if ((a | 0) == 0) {
                    d = 0;
                } else {
                    e = ad(b, a) | 0;
                    if ((b | a) >>> 0 <= 65535) {
                        d = e;
                        break;
                    }
                    d = ((e >>> 0) / (a >>> 0) | 0 | 0) == (b | 0) ? e : -1;
                }
            } while (0);
            b = bL(d) | 0;
            if ((b | 0) == 0) {
                return b | 0;
            }
            if ((c[b - 4 >> 2] & 3 | 0) == 0) {
                return b | 0;
            }
            cL(b | 0, 0, d | 0);
            return b | 0;
        }

        function bO(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0;
            if ((a | 0) == 0) {
                d = bL(b) | 0;
                return d | 0;
            }
            if (b >>> 0 > 4294967231) {
                c[(aX() | 0) >> 2] = 12;
                d = 0;
                return d | 0;
            }
            if (b >>> 0 < 11) {
                e = 16;
            } else {
                e = b + 11 & -8;
            }
            f = bT(a - 8 | 0, e) | 0;
            if ((f | 0) != 0) {
                d = f + 8 | 0;
                return d | 0;
            }
            f = bL(b) | 0;
            if ((f | 0) == 0) {
                d = 0;
                return d | 0;
            }
            e = c[a - 4 >> 2] | 0;
            g = (e & -8) - ((e & 3 | 0) == 0 ? 8 : 4) | 0;
            e = g >>> 0 < b >>> 0 ? g : b;
            cK(f | 0, a | 0, e) | 0;
            bM(a);
            d = f;
            return d | 0;
        }

        function bP(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0;
            if ((a | 0) == 0) {
                return 0;
            }
            if (b >>> 0 > 4294967231) {
                c[(aX() | 0) >> 2] = 12;
                return 0;
            }
            if (b >>> 0 < 11) {
                d = 16;
            } else {
                d = b + 11 & -8;
            }
            b = a - 8 | 0;
            return ((bT(b, d) | 0) == (b | 0) ? a : 0) | 0;
        }

        function bQ(a, b) {
            a = a | 0;
            b = b | 0;
            var c = 0;
            if (a >>> 0 < 9) {
                c = bL(b) | 0;
                return c | 0;
            } else {
                c = bR(a, b) | 0;
                return c | 0;
            }
            return 0;
        }

        function bR(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0;
            d = a >>> 0 < 16 ? 16 : a;
            if ((d - 1 & d | 0) == 0) {
                e = d;
            } else {
                a = 16;
                while (1) {
                    if (a >>> 0 < d >>> 0) {
                        a = a << 1;
                    } else {
                        e = a;
                        break;
                    }
                }
            }
            if ((-64 - e | 0) >>> 0 <= b >>> 0) {
                c[(aX() | 0) >> 2] = 12;
                f = 0;
                return f | 0;
            }
            if (b >>> 0 < 11) {
                g = 16;
            } else {
                g = b + 11 & -8;
            }
            b = bL(e + 12 + g | 0) | 0;
            if ((b | 0) == 0) {
                f = 0;
                return f | 0;
            }
            a = b - 8 | 0;
            d = a;
            h = e - 1 | 0;
            do {
                if ((b & h | 0) == 0) {
                    i = d;
                } else {
                    j = b + h & -e;
                    k = j - 8 | 0;
                    l = a;
                    if ((k - l | 0) >>> 0 > 15) {
                        m = k;
                    } else {
                        m = j + (e - 8) | 0;
                    }
                    j = m;
                    k = m - l | 0;
                    l = b - 4 | 0;
                    n = c[l >> 2] | 0;
                    o = (n & -8) - k | 0;
                    if ((n & 3 | 0) == 0) {
                        c[m >> 2] = (c[a >> 2] | 0) + k;
                        c[m + 4 >> 2] = o;
                        i = j;
                        break;
                    } else {
                        n = m + 4 | 0;
                        c[n >> 2] = o | c[n >> 2] & 1 | 2;
                        n = m + (o + 4) | 0;
                        c[n >> 2] = c[n >> 2] | 1;
                        c[l >> 2] = k | c[l >> 2] & 1 | 2;
                        l = b + (k - 4) | 0;
                        c[l >> 2] = c[l >> 2] | 1;
                        b9(d, k);
                        i = j;
                        break;
                    }
                }
            } while (0);
            d = i + 4 | 0;
            b = c[d >> 2] | 0;
            do {
                if ((b & 3 | 0) != 0) {
                    m = b & -8;
                    if (m >>> 0 <= (g + 16 | 0) >>> 0) {
                        break;
                    }
                    a = m - g | 0;
                    e = i;
                    c[d >> 2] = g | b & 1 | 2;
                    c[e + (g | 4) >> 2] = a | 3;
                    h = e + (m | 4) | 0;
                    c[h >> 2] = c[h >> 2] | 1;
                    b9(e + g | 0, a);
                }
            } while (0);
            f = i + 8 | 0;
            return f | 0;
        }

        function bS(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0;
            do {
                if ((c[200] | 0) == 0) {
                    b = ar(8) | 0;
                    if ((b - 1 & b | 0) == 0) {
                        c[202] = b;
                        c[201] = b;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                        return 0;
                    }
                }
            } while (0);
            if (a >>> 0 >= 4294967232) {
                d = 0;
                return d | 0;
            }
            b = c[214] | 0;
            if ((b | 0) == 0) {
                d = 0;
                return d | 0;
            }
            e = c[211] | 0;
            do {
                if (e >>> 0 > (a + 40 | 0) >>> 0) {
                    f = c[202] | 0;
                    g = ad((((-40 - a - 1 + e + f | 0) >>> 0) / (f >>> 0) | 0) - 1 | 0, f) | 0;
                    h = b;
                    i = 1280;
                    while (1) {
                        j = c[i >> 2] | 0;
                        if (j >>> 0 <= h >>> 0) {
                            if ((j + (c[i + 4 >> 2] | 0) | 0) >>> 0 > h >>> 0) {
                                k = i;
                                break;
                            }
                        }
                        j = c[i + 8 >> 2] | 0;
                        if ((j | 0) == 0) {
                            k = 0;
                            break;
                        } else {
                            i = j;
                        }
                    }
                    if ((c[k + 12 >> 2] & 8 | 0) != 0) {
                        break;
                    }
                    i = aV(0) | 0;
                    h = k + 4 | 0;
                    if ((i | 0) != ((c[k >> 2] | 0) + (c[h >> 2] | 0) | 0)) {
                        break;
                    }
                    j = aV(-(g >>> 0 > 2147483646 ? -2147483648 - f | 0 : g) | 0) | 0;
                    l = aV(0) | 0;
                    if (!((j | 0) != -1 & l >>> 0 < i >>> 0)) {
                        break;
                    }
                    j = i - l | 0;
                    if ((i | 0) == (l | 0)) {
                        break;
                    }
                    c[h >> 2] = (c[h >> 2] | 0) - j;
                    c[316] = (c[316] | 0) - j;
                    h = c[214] | 0;
                    m = (c[211] | 0) - j | 0;
                    j = h;
                    n = h + 8 | 0;
                    if ((n & 7 | 0) == 0) {
                        o = 0;
                    } else {
                        o = -n & 7;
                    }
                    n = m - o | 0;
                    c[214] = j + o;
                    c[211] = n;
                    c[j + (o + 4) >> 2] = n | 1;
                    c[j + (m + 4) >> 2] = 40;
                    c[215] = c[204];
                    d = (i | 0) != (l | 0) | 0;
                    return d | 0;
                }
            } while (0);
            if ((c[211] | 0) >>> 0 <= (c[215] | 0) >>> 0) {
                d = 0;
                return d | 0;
            }
            c[215] = -1;
            d = 0;
            return d | 0;
        }

        function bT(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0;
            d = a + 4 | 0;
            e = c[d >> 2] | 0;
            f = e & -8;
            g = a;
            h = g + f | 0;
            i = h;
            j = c[212] | 0;
            if (g >>> 0 < j >>> 0) {
                au();
                return 0;
            }
            k = e & 3;
            if (!((k | 0) != 1 & g >>> 0 < h >>> 0)) {
                au();
                return 0;
            }
            l = g + (f | 4) | 0;
            m = c[l >> 2] | 0;
            if ((m & 1 | 0) == 0) {
                au();
                return 0;
            }
            if ((k | 0) == 0) {
                if (b >>> 0 < 256) {
                    n = 0;
                    return n | 0;
                }
                do {
                    if (f >>> 0 >= (b + 4 | 0) >>> 0) {
                        if ((f - b | 0) >>> 0 > c[202] << 1 >>> 0) {
                            break;
                        } else {
                            n = a;
                        }
                        return n | 0;
                    }
                } while (0);
                n = 0;
                return n | 0;
            }
            if (f >>> 0 >= b >>> 0) {
                k = f - b | 0;
                if (k >>> 0 <= 15) {
                    n = a;
                    return n | 0;
                }
                c[d >> 2] = e & 1 | b | 2;
                c[g + (b + 4) >> 2] = k | 3;
                c[l >> 2] = c[l >> 2] | 1;
                b9(g + b | 0, k);
                n = a;
                return n | 0;
            }
            if ((i | 0) == (c[214] | 0)) {
                k = (c[211] | 0) + f | 0;
                if (k >>> 0 <= b >>> 0) {
                    n = 0;
                    return n | 0;
                }
                l = k - b | 0;
                c[d >> 2] = e & 1 | b | 2;
                c[g + (b + 4) >> 2] = l | 1;
                c[214] = g + b;
                c[211] = l;
                n = a;
                return n | 0;
            }
            if ((i | 0) == (c[213] | 0)) {
                l = (c[210] | 0) + f | 0;
                if (l >>> 0 < b >>> 0) {
                    n = 0;
                    return n | 0;
                }
                k = l - b | 0;
                if (k >>> 0 > 15) {
                    c[d >> 2] = e & 1 | b | 2;
                    c[g + (b + 4) >> 2] = k | 1;
                    c[g + l >> 2] = k;
                    o = g + (l + 4) | 0;
                    c[o >> 2] = c[o >> 2] & -2;
                    p = g + b | 0;
                    q = k;
                } else {
                    c[d >> 2] = e & 1 | l | 2;
                    e = g + (l + 4) | 0;
                    c[e >> 2] = c[e >> 2] | 1;
                    p = 0;
                    q = 0;
                }
                c[210] = q;
                c[213] = p;
                n = a;
                return n | 0;
            }
            if ((m & 2 | 0) != 0) {
                n = 0;
                return n | 0;
            }
            p = (m & -8) + f | 0;
            if (p >>> 0 < b >>> 0) {
                n = 0;
                return n | 0;
            }
            q = p - b | 0;
            e = m >>> 3;
            L1056: do {
                if (m >>> 0 < 256) {
                    l = c[g + (f + 8) >> 2] | 0;
                    k = c[g + (f + 12) >> 2] | 0;
                    o = 872 + (e << 1 << 2) | 0;
                    do {
                        if ((l | 0) != (o | 0)) {
                            if (l >>> 0 < j >>> 0) {
                                au();
                                return 0;
                            }
                            if ((c[l + 12 >> 2] | 0) == (i | 0)) {
                                break;
                            }
                            au();
                            return 0;
                        }
                    } while (0);
                    if ((k | 0) == (l | 0)) {
                        c[208] = c[208] & ~(1 << e);
                        break;
                    }
                    do {
                        if ((k | 0) == (o | 0)) {
                            r = k + 8 | 0;
                        } else {
                            if (k >>> 0 < j >>> 0) {
                                au();
                                return 0;
                            }
                            s = k + 8 | 0;
                            if ((c[s >> 2] | 0) == (i | 0)) {
                                r = s;
                                break;
                            }
                            au();
                            return 0;
                        }
                    } while (0);
                    c[l + 12 >> 2] = k;
                    c[r >> 2] = l;
                } else {
                    o = h;
                    s = c[g + (f + 24) >> 2] | 0;
                    t = c[g + (f + 12) >> 2] | 0;
                    do {
                        if ((t | 0) == (o | 0)) {
                            u = g + (f + 20) | 0;
                            v = c[u >> 2] | 0;
                            if ((v | 0) == 0) {
                                w = g + (f + 16) | 0;
                                x = c[w >> 2] | 0;
                                if ((x | 0) == 0) {
                                    y = 0;
                                    break;
                                } else {
                                    z = x;
                                    A = w;
                                }
                            } else {
                                z = v;
                                A = u;
                            }
                            while (1) {
                                u = z + 20 | 0;
                                v = c[u >> 2] | 0;
                                if ((v | 0) != 0) {
                                    z = v;
                                    A = u;
                                    continue;
                                }
                                u = z + 16 | 0;
                                v = c[u >> 2] | 0;
                                if ((v | 0) == 0) {
                                    break;
                                } else {
                                    z = v;
                                    A = u;
                                }
                            }
                            if (A >>> 0 < j >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[A >> 2] = 0;
                                y = z;
                                break;
                            }
                        } else {
                            u = c[g + (f + 8) >> 2] | 0;
                            if (u >>> 0 < j >>> 0) {
                                au();
                                return 0;
                            }
                            v = u + 12 | 0;
                            if ((c[v >> 2] | 0) != (o | 0)) {
                                au();
                                return 0;
                            }
                            w = t + 8 | 0;
                            if ((c[w >> 2] | 0) == (o | 0)) {
                                c[v >> 2] = t;
                                c[w >> 2] = u;
                                y = t;
                                break;
                            } else {
                                au();
                                return 0;
                            }
                        }
                    } while (0);
                    if ((s | 0) == 0) {
                        break;
                    }
                    t = g + (f + 28) | 0;
                    l = 1136 + (c[t >> 2] << 2) | 0;
                    do {
                        if ((o | 0) == (c[l >> 2] | 0)) {
                            c[l >> 2] = y;
                            if ((y | 0) != 0) {
                                break;
                            }
                            c[209] = c[209] & ~(1 << c[t >> 2]);
                            break L1056;
                        } else {
                            if (s >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            }
                            k = s + 16 | 0;
                            if ((c[k >> 2] | 0) == (o | 0)) {
                                c[k >> 2] = y;
                            } else {
                                c[s + 20 >> 2] = y;
                            }
                            if ((y | 0) == 0) {
                                break L1056;
                            }
                        }
                    } while (0);
                    if (y >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                        return 0;
                    }
                    c[y + 24 >> 2] = s;
                    o = c[g + (f + 16) >> 2] | 0;
                    do {
                        if ((o | 0) != 0) {
                            if (o >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                                return 0;
                            } else {
                                c[y + 16 >> 2] = o;
                                c[o + 24 >> 2] = y;
                                break;
                            }
                        }
                    } while (0);
                    o = c[g + (f + 20) >> 2] | 0;
                    if ((o | 0) == 0) {
                        break;
                    }
                    if (o >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                        return 0;
                    } else {
                        c[y + 20 >> 2] = o;
                        c[o + 24 >> 2] = y;
                        break;
                    }
                }
            } while (0);
            if (q >>> 0 < 16) {
                c[d >> 2] = p | c[d >> 2] & 1 | 2;
                y = g + (p | 4) | 0;
                c[y >> 2] = c[y >> 2] | 1;
                n = a;
                return n | 0;
            } else {
                c[d >> 2] = c[d >> 2] & 1 | b | 2;
                c[g + (b + 4) >> 2] = q | 3;
                d = g + (p | 4) | 0;
                c[d >> 2] = c[d >> 2] | 1;
                b9(g + b | 0, q);
                n = a;
                return n | 0;
            }
            return 0;
        }

        function bU() {
            return c[316] | 0;
        }

        function bV() {
            return c[317] | 0;
        }

        function bW() {
            var a = 0;
            a = c[318] | 0;
            return ((a | 0) == 0 ? -1 : a) | 0;
        }

        function bX(a) {
            a = a | 0;
            var b = 0,
                d = 0;
            if ((a | 0) == -1) {
                b = 0;
            } else {
                d = c[202] | 0;
                b = a - 1 + d & -d;
            }
            c[318] = b;
            return b | 0;
        }

        function bY(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0;
            do {
                if ((a | 0) == 0) {
                    b = 0;
                } else {
                    d = c[a - 4 >> 2] | 0;
                    e = d & 3;
                    if ((e | 0) == 1) {
                        b = 0;
                        break;
                    }
                    b = (d & -8) - ((e | 0) == 0 ? 8 : 4) | 0;
                }
            } while (0);
            return b | 0;
        }

        function bZ(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0,
                g = 0;
            do {
                if ((b | 0) == 8) {
                    e = bL(d) | 0;
                } else {
                    f = b >>> 2;
                    if ((b & 3 | 0) != 0 | (f | 0) == 0) {
                        g = 22;
                        return g | 0;
                    }
                    if ((f + 1073741823 & f | 0) != 0) {
                        g = 22;
                        return g | 0;
                    }
                    if ((-64 - b | 0) >>> 0 < d >>> 0) {
                        g = 12;
                        return g | 0;
                    } else {
                        e = bR(b >>> 0 < 16 ? 16 : b, d) | 0;
                        break;
                    }
                }
            } while (0);
            if ((e | 0) == 0) {
                g = 12;
                return g | 0;
            }
            c[a >> 2] = e;
            g = 0;
            return g | 0;
        }

        function b_(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = i;
            i = i + 8 | 0;
            f = e | 0;
            c[f >> 2] = b;
            b = b2(a, f, 3, d) | 0;
            i = e;
            return b | 0;
        }

        function b$(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            return b2(a, b, 0, c) | 0;
        }

        function b0(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0;
            if ((c[200] | 0) != 0) {
                b = c[201] | 0;
                d = bQ(b, a) | 0;
                return d | 0;
            }
            e = ar(8) | 0;
            if ((e - 1 & e | 0) != 0) {
                au();
                return 0;
            }
            c[202] = e;
            c[201] = e;
            c[203] = -1;
            c[204] = 2097152;
            c[205] = 0;
            c[319] = 0;
            c[200] = (a_(0) | 0) & -16 ^ 1431655768;
            b = c[201] | 0;
            d = bQ(b, a) | 0;
            return d | 0;
        }

        function b1(a) {
            a = a | 0;
            var b = 0;
            do {
                if ((c[200] | 0) == 0) {
                    b = ar(8) | 0;
                    if ((b - 1 & b | 0) == 0) {
                        c[202] = b;
                        c[201] = b;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                        return 0;
                    }
                }
            } while (0);
            b = c[201] | 0;
            return bQ(b, a - 1 + b & -b) | 0;
        }

        function b2(a, b, d, e) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            e = e | 0;
            var f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0;
            do {
                if ((c[200] | 0) == 0) {
                    f = ar(8) | 0;
                    if ((f - 1 & f | 0) == 0) {
                        c[202] = f;
                        c[201] = f;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                        return 0;
                    }
                }
            } while (0);
            f = (a | 0) == 0;
            do {
                if ((e | 0) == 0) {
                    if (f) {
                        g = bL(0) | 0;
                        return g | 0;
                    } else {
                        h = a << 2;
                        if (h >>> 0 < 11) {
                            i = 0;
                            j = 16;
                            break;
                        }
                        i = 0;
                        j = h + 11 & -8;
                        break;
                    }
                } else {
                    if (f) {
                        g = e;
                    } else {
                        i = e;
                        j = 0;
                        break;
                    }
                    return g | 0;
                }
            } while (0);
            do {
                if ((d & 1 | 0) == 0) {
                    if (f) {
                        k = 0;
                        l = 0;
                        break;
                    } else {
                        m = 0;
                        n = 0;
                    }
                    while (1) {
                        e = c[b + (n << 2) >> 2] | 0;
                        if (e >>> 0 < 11) {
                            o = 16;
                        } else {
                            o = e + 11 & -8;
                        }
                        e = o + m | 0;
                        h = n + 1 | 0;
                        if ((h | 0) == (a | 0)) {
                            k = 0;
                            l = e;
                            break;
                        } else {
                            m = e;
                            n = h;
                        }
                    }
                } else {
                    h = c[b >> 2] | 0;
                    if (h >>> 0 < 11) {
                        p = 16;
                    } else {
                        p = h + 11 & -8;
                    }
                    k = p;
                    l = ad(p, a) | 0;
                }
            } while (0);
            p = bL(j - 4 + l | 0) | 0;
            if ((p | 0) == 0) {
                g = 0;
                return g | 0;
            }
            n = p - 8 | 0;
            m = c[p - 4 >> 2] & -8;
            if ((d & 2 | 0) != 0) {
                cL(p | 0, 0, -4 - j + m | 0);
            }
            if ((i | 0) == 0) {
                c[p + (l - 4) >> 2] = m - l | 3;
                q = p + l | 0;
                r = l;
            } else {
                q = i;
                r = m;
            }
            c[q >> 2] = p;
            p = a - 1 | 0;
            L1216: do {
                if ((p | 0) == 0) {
                    s = n;
                    t = r;
                } else {
                    if ((k | 0) == 0) {
                        u = n;
                        v = r;
                        w = 0;
                    } else {
                        a = n;
                        m = r;
                        i = 0;
                        while (1) {
                            l = m - k | 0;
                            c[a + 4 >> 2] = k | 3;
                            j = a + k | 0;
                            d = i + 1 | 0;
                            c[q + (d << 2) >> 2] = a + (k + 8);
                            if ((d | 0) == (p | 0)) {
                                s = j;
                                t = l;
                                break L1216;
                            } else {
                                a = j;
                                m = l;
                                i = d;
                            }
                        }
                    }
                    while (1) {
                        i = c[b + (w << 2) >> 2] | 0;
                        if (i >>> 0 < 11) {
                            x = 16;
                        } else {
                            x = i + 11 & -8;
                        }
                        i = v - x | 0;
                        c[u + 4 >> 2] = x | 3;
                        m = u + x | 0;
                        a = w + 1 | 0;
                        c[q + (a << 2) >> 2] = u + (x + 8);
                        if ((a | 0) == (p | 0)) {
                            s = m;
                            t = i;
                            break;
                        } else {
                            u = m;
                            v = i;
                            w = a;
                        }
                    }
                }
            } while (0);
            c[s + 4 >> 2] = t | 3;
            g = q;
            return g | 0;
        }

        function b3(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0;
            d = a + (b << 2) | 0;
            L1229: do {
                if ((b | 0) != 0) {
                    e = a;
                    L1230: while (1) {
                        f = c[e >> 2] | 0;
                        L1232: do {
                            if ((f | 0) == 0) {
                                g = e + 4 | 0;
                            } else {
                                h = f - 8 | 0;
                                i = h;
                                j = f - 4 | 0;
                                k = c[j >> 2] & -8;
                                c[e >> 2] = 0;
                                if (h >>> 0 < (c[212] | 0) >>> 0) {
                                    l = 935;
                                    break L1230;
                                }
                                h = c[j >> 2] | 0;
                                if ((h & 3 | 0) == 1) {
                                    l = 936;
                                    break L1230;
                                }
                                m = e + 4 | 0;
                                n = h - 8 & -8;
                                do {
                                    if ((m | 0) != (d | 0)) {
                                        if ((c[m >> 2] | 0) != (f + (n + 8) | 0)) {
                                            break;
                                        }
                                        o = (c[f + (n | 4) >> 2] & -8) + k | 0;
                                        c[j >> 2] = h & 1 | o | 2;
                                        p = f + (o - 4) | 0;
                                        c[p >> 2] = c[p >> 2] | 1;
                                        c[m >> 2] = f;
                                        g = m;
                                        break L1232;
                                    }
                                } while (0);
                                b9(i, k);
                                g = m;
                            }
                        } while (0);
                        if ((g | 0) == (d | 0)) {
                            break L1229;
                        } else {
                            e = g;
                        }
                    }
                    if ((l | 0) == 935) {
                        au();
                        return 0;
                    } else if ((l | 0) == 936) {
                        au();
                        return 0;
                    }
                }
            } while (0);
            if ((c[211] | 0) >>> 0 <= (c[215] | 0) >>> 0) {
                return 0;
            }
            bS(0) | 0;
            return 0;
        }

        function b4(a) {
            a = a | 0;
            var b = 0,
                d = 0;
            if ((c[200] | 0) != 0) {
                b = bS(a) | 0;
                return b | 0;
            }
            d = ar(8) | 0;
            if ((d - 1 & d | 0) != 0) {
                au();
                return 0;
            }
            c[202] = d;
            c[201] = d;
            c[203] = -1;
            c[204] = 2097152;
            c[205] = 0;
            c[319] = 0;
            c[200] = (a_(0) | 0) & -16 ^ 1431655768;
            b = bS(a) | 0;
            return b | 0;
        }

        function b5(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0;
            do {
                if ((c[200] | 0) == 0) {
                    b = ar(8) | 0;
                    if ((b - 1 & b | 0) == 0) {
                        c[202] = b;
                        c[201] = b;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                    }
                }
            } while (0);
            b = c[214] | 0;
            if ((b | 0) == 0) {
                d = 0;
                e = 0;
                f = 0;
                g = 0;
                h = 0;
                i = 0;
                j = 0;
            } else {
                k = c[211] | 0;
                l = k + 40 | 0;
                m = 1;
                n = l;
                o = l;
                l = 1280;
                while (1) {
                    p = c[l >> 2] | 0;
                    q = p + 8 | 0;
                    if ((q & 7 | 0) == 0) {
                        r = 0;
                    } else {
                        r = -q & 7;
                    }
                    q = p + (c[l + 4 >> 2] | 0) | 0;
                    s = m;
                    t = n;
                    u = o;
                    v = p + r | 0;
                    while (1) {
                        if (v >>> 0 >= q >>> 0 | (v | 0) == (b | 0)) {
                            w = s;
                            x = t;
                            y = u;
                            break;
                        }
                        z = c[v + 4 >> 2] | 0;
                        if ((z | 0) == 7) {
                            w = s;
                            x = t;
                            y = u;
                            break;
                        }
                        A = z & -8;
                        B = A + u | 0;
                        if ((z & 3 | 0) == 1) {
                            C = A + t | 0;
                            D = s + 1 | 0;
                        } else {
                            C = t;
                            D = s;
                        }
                        z = v + A | 0;
                        if (z >>> 0 < p >>> 0) {
                            w = D;
                            x = C;
                            y = B;
                            break;
                        } else {
                            s = D;
                            t = C;
                            u = B;
                            v = z;
                        }
                    }
                    v = c[l + 8 >> 2] | 0;
                    if ((v | 0) == 0) {
                        break;
                    } else {
                        m = w;
                        n = x;
                        o = y;
                        l = v;
                    }
                }
                l = c[316] | 0;
                d = k;
                e = y;
                f = w;
                g = l - y | 0;
                h = c[317] | 0;
                i = l - x | 0;
                j = x;
            }
            c[a >> 2] = e;
            c[a + 4 >> 2] = f;
            f = a + 8 | 0;
            c[f >> 2] = 0;
            c[f + 4 >> 2] = 0;
            c[a + 16 >> 2] = g;
            c[a + 20 >> 2] = h;
            c[a + 24 >> 2] = 0;
            c[a + 28 >> 2] = i;
            c[a + 32 >> 2] = j;
            c[a + 36 >> 2] = d;
            return;
        }

        function b6() {
            var a = 0,
                b = 0,
                d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0;
            a = i;
            do {
                if ((c[200] | 0) == 0) {
                    b = ar(8) | 0;
                    if ((b - 1 & b | 0) == 0) {
                        c[202] = b;
                        c[201] = b;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                    }
                }
            } while (0);
            b = c[214] | 0;
            if ((b | 0) == 0) {
                d = 0;
                e = 0;
                f = 0;
            } else {
                g = c[317] | 0;
                h = c[316] | 0;
                j = h - 40 - (c[211] | 0) | 0;
                k = 1280;
                while (1) {
                    l = c[k >> 2] | 0;
                    m = l + 8 | 0;
                    if ((m & 7 | 0) == 0) {
                        n = 0;
                    } else {
                        n = -m & 7;
                    }
                    m = l + (c[k + 4 >> 2] | 0) | 0;
                    p = j;
                    q = l + n | 0;
                    while (1) {
                        if (q >>> 0 >= m >>> 0 | (q | 0) == (b | 0)) {
                            r = p;
                            break;
                        }
                        s = c[q + 4 >> 2] | 0;
                        if ((s | 0) == 7) {
                            r = p;
                            break;
                        }
                        t = s & -8;
                        u = p - ((s & 3 | 0) == 1 ? t : 0) | 0;
                        s = q + t | 0;
                        if (s >>> 0 < l >>> 0) {
                            r = u;
                            break;
                        } else {
                            p = u;
                            q = s;
                        }
                    }
                    q = c[k + 8 >> 2] | 0;
                    if ((q | 0) == 0) {
                        d = r;
                        e = h;
                        f = g;
                        break;
                    } else {
                        j = r;
                        k = q;
                    }
                }
            }
            av(c[o >> 2] | 0, 520, (y = i, i = i + 8 | 0, c[y >> 2] = f, y) | 0) | 0;
            av(c[o >> 2] | 0, 488, (y = i, i = i + 8 | 0, c[y >> 2] = e, y) | 0) | 0;
            av(c[o >> 2] | 0, 400, (y = i, i = i + 8 | 0, c[y >> 2] = d, y) | 0) | 0;
            i = a;
            return;
        }

        function b7(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0;
            do {
                if ((c[200] | 0) == 0) {
                    d = ar(8) | 0;
                    if ((d - 1 & d | 0) == 0) {
                        c[202] = d;
                        c[201] = d;
                        c[203] = -1;
                        c[204] = 2097152;
                        c[205] = 0;
                        c[319] = 0;
                        c[200] = (a_(0) | 0) & -16 ^ 1431655768;
                        break;
                    } else {
                        au();
                        return 0;
                    }
                }
            } while (0);
            if ((a | 0) == (-1 | 0)) {
                c[204] = b;
                e = 1;
                return e | 0;
            } else if ((a | 0) == (-2 | 0)) {
                if ((c[201] | 0) >>> 0 > b >>> 0) {
                    e = 0;
                    return e | 0;
                }
                if ((b - 1 & b | 0) != 0) {
                    e = 0;
                    return e | 0;
                }
                c[202] = b;
                e = 1;
                return e | 0;
            } else if ((a | 0) == (-3 | 0)) {
                c[203] = b;
                e = 1;
                return e | 0;
            } else {
                e = 0;
                return e | 0;
            }
            return 0;
        }

        function b8() {
            return (F = c[328] | 0, c[328] = F + 0, F) | 0;
        }

        function b9(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0;
            d = a;
            e = d + b | 0;
            f = e;
            g = c[a + 4 >> 2] | 0;
            L1325: do {
                if ((g & 1 | 0) == 0) {
                    h = c[a >> 2] | 0;
                    if ((g & 3 | 0) == 0) {
                        return;
                    }
                    i = d + (-h | 0) | 0;
                    j = i;
                    k = h + b | 0;
                    l = c[212] | 0;
                    if (i >>> 0 < l >>> 0) {
                        au();
                    }
                    if ((j | 0) == (c[213] | 0)) {
                        m = d + (b + 4) | 0;
                        if ((c[m >> 2] & 3 | 0) != 3) {
                            n = j;
                            o = k;
                            break;
                        }
                        c[210] = k;
                        c[m >> 2] = c[m >> 2] & -2;
                        c[d + (4 - h) >> 2] = k | 1;
                        c[e >> 2] = k;
                        return;
                    }
                    m = h >>> 3;
                    if (h >>> 0 < 256) {
                        p = c[d + (8 - h) >> 2] | 0;
                        q = c[d + (12 - h) >> 2] | 0;
                        r = 872 + (m << 1 << 2) | 0;
                        do {
                            if ((p | 0) != (r | 0)) {
                                if (p >>> 0 < l >>> 0) {
                                    au();
                                }
                                if ((c[p + 12 >> 2] | 0) == (j | 0)) {
                                    break;
                                }
                                au();
                            }
                        } while (0);
                        if ((q | 0) == (p | 0)) {
                            c[208] = c[208] & ~(1 << m);
                            n = j;
                            o = k;
                            break;
                        }
                        do {
                            if ((q | 0) == (r | 0)) {
                                s = q + 8 | 0;
                            } else {
                                if (q >>> 0 < l >>> 0) {
                                    au();
                                }
                                t = q + 8 | 0;
                                if ((c[t >> 2] | 0) == (j | 0)) {
                                    s = t;
                                    break;
                                }
                                au();
                            }
                        } while (0);
                        c[p + 12 >> 2] = q;
                        c[s >> 2] = p;
                        n = j;
                        o = k;
                        break;
                    }
                    r = i;
                    m = c[d + (24 - h) >> 2] | 0;
                    t = c[d + (12 - h) >> 2] | 0;
                    do {
                        if ((t | 0) == (r | 0)) {
                            u = 16 - h | 0;
                            v = d + (u + 4) | 0;
                            w = c[v >> 2] | 0;
                            if ((w | 0) == 0) {
                                x = d + u | 0;
                                u = c[x >> 2] | 0;
                                if ((u | 0) == 0) {
                                    y = 0;
                                    break;
                                } else {
                                    z = u;
                                    A = x;
                                }
                            } else {
                                z = w;
                                A = v;
                            }
                            while (1) {
                                v = z + 20 | 0;
                                w = c[v >> 2] | 0;
                                if ((w | 0) != 0) {
                                    z = w;
                                    A = v;
                                    continue;
                                }
                                v = z + 16 | 0;
                                w = c[v >> 2] | 0;
                                if ((w | 0) == 0) {
                                    break;
                                } else {
                                    z = w;
                                    A = v;
                                }
                            }
                            if (A >>> 0 < l >>> 0) {
                                au();
                            } else {
                                c[A >> 2] = 0;
                                y = z;
                                break;
                            }
                        } else {
                            v = c[d + (8 - h) >> 2] | 0;
                            if (v >>> 0 < l >>> 0) {
                                au();
                            }
                            w = v + 12 | 0;
                            if ((c[w >> 2] | 0) != (r | 0)) {
                                au();
                            }
                            x = t + 8 | 0;
                            if ((c[x >> 2] | 0) == (r | 0)) {
                                c[w >> 2] = t;
                                c[x >> 2] = v;
                                y = t;
                                break;
                            } else {
                                au();
                            }
                        }
                    } while (0);
                    if ((m | 0) == 0) {
                        n = j;
                        o = k;
                        break;
                    }
                    t = d + (28 - h) | 0;
                    l = 1136 + (c[t >> 2] << 2) | 0;
                    do {
                        if ((r | 0) == (c[l >> 2] | 0)) {
                            c[l >> 2] = y;
                            if ((y | 0) != 0) {
                                break;
                            }
                            c[209] = c[209] & ~(1 << c[t >> 2]);
                            n = j;
                            o = k;
                            break L1325;
                        } else {
                            if (m >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            }
                            i = m + 16 | 0;
                            if ((c[i >> 2] | 0) == (r | 0)) {
                                c[i >> 2] = y;
                            } else {
                                c[m + 20 >> 2] = y;
                            }
                            if ((y | 0) == 0) {
                                n = j;
                                o = k;
                                break L1325;
                            }
                        }
                    } while (0);
                    if (y >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                    }
                    c[y + 24 >> 2] = m;
                    r = 16 - h | 0;
                    t = c[d + r >> 2] | 0;
                    do {
                        if ((t | 0) != 0) {
                            if (t >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            } else {
                                c[y + 16 >> 2] = t;
                                c[t + 24 >> 2] = y;
                                break;
                            }
                        }
                    } while (0);
                    t = c[d + (r + 4) >> 2] | 0;
                    if ((t | 0) == 0) {
                        n = j;
                        o = k;
                        break;
                    }
                    if (t >>> 0 < (c[212] | 0) >>> 0) {
                        au();
                    } else {
                        c[y + 20 >> 2] = t;
                        c[t + 24 >> 2] = y;
                        n = j;
                        o = k;
                        break;
                    }
                } else {
                    n = a;
                    o = b;
                }
            } while (0);
            a = c[212] | 0;
            if (e >>> 0 < a >>> 0) {
                au();
            }
            y = d + (b + 4) | 0;
            z = c[y >> 2] | 0;
            do {
                if ((z & 2 | 0) == 0) {
                    if ((f | 0) == (c[214] | 0)) {
                        A = (c[211] | 0) + o | 0;
                        c[211] = A;
                        c[214] = n;
                        c[n + 4 >> 2] = A | 1;
                        if ((n | 0) != (c[213] | 0)) {
                            return;
                        }
                        c[213] = 0;
                        c[210] = 0;
                        return;
                    }
                    if ((f | 0) == (c[213] | 0)) {
                        A = (c[210] | 0) + o | 0;
                        c[210] = A;
                        c[213] = n;
                        c[n + 4 >> 2] = A | 1;
                        c[n + A >> 2] = A;
                        return;
                    }
                    A = (z & -8) + o | 0;
                    s = z >>> 3;
                    L1424: do {
                        if (z >>> 0 < 256) {
                            g = c[d + (b + 8) >> 2] | 0;
                            t = c[d + (b + 12) >> 2] | 0;
                            h = 872 + (s << 1 << 2) | 0;
                            do {
                                if ((g | 0) != (h | 0)) {
                                    if (g >>> 0 < a >>> 0) {
                                        au();
                                    }
                                    if ((c[g + 12 >> 2] | 0) == (f | 0)) {
                                        break;
                                    }
                                    au();
                                }
                            } while (0);
                            if ((t | 0) == (g | 0)) {
                                c[208] = c[208] & ~(1 << s);
                                break;
                            }
                            do {
                                if ((t | 0) == (h | 0)) {
                                    B = t + 8 | 0;
                                } else {
                                    if (t >>> 0 < a >>> 0) {
                                        au();
                                    }
                                    m = t + 8 | 0;
                                    if ((c[m >> 2] | 0) == (f | 0)) {
                                        B = m;
                                        break;
                                    }
                                    au();
                                }
                            } while (0);
                            c[g + 12 >> 2] = t;
                            c[B >> 2] = g;
                        } else {
                            h = e;
                            m = c[d + (b + 24) >> 2] | 0;
                            l = c[d + (b + 12) >> 2] | 0;
                            do {
                                if ((l | 0) == (h | 0)) {
                                    i = d + (b + 20) | 0;
                                    p = c[i >> 2] | 0;
                                    if ((p | 0) == 0) {
                                        q = d + (b + 16) | 0;
                                        v = c[q >> 2] | 0;
                                        if ((v | 0) == 0) {
                                            C = 0;
                                            break;
                                        } else {
                                            D = v;
                                            E = q;
                                        }
                                    } else {
                                        D = p;
                                        E = i;
                                    }
                                    while (1) {
                                        i = D + 20 | 0;
                                        p = c[i >> 2] | 0;
                                        if ((p | 0) != 0) {
                                            D = p;
                                            E = i;
                                            continue;
                                        }
                                        i = D + 16 | 0;
                                        p = c[i >> 2] | 0;
                                        if ((p | 0) == 0) {
                                            break;
                                        } else {
                                            D = p;
                                            E = i;
                                        }
                                    }
                                    if (E >>> 0 < a >>> 0) {
                                        au();
                                    } else {
                                        c[E >> 2] = 0;
                                        C = D;
                                        break;
                                    }
                                } else {
                                    i = c[d + (b + 8) >> 2] | 0;
                                    if (i >>> 0 < a >>> 0) {
                                        au();
                                    }
                                    p = i + 12 | 0;
                                    if ((c[p >> 2] | 0) != (h | 0)) {
                                        au();
                                    }
                                    q = l + 8 | 0;
                                    if ((c[q >> 2] | 0) == (h | 0)) {
                                        c[p >> 2] = l;
                                        c[q >> 2] = i;
                                        C = l;
                                        break;
                                    } else {
                                        au();
                                    }
                                }
                            } while (0);
                            if ((m | 0) == 0) {
                                break;
                            }
                            l = d + (b + 28) | 0;
                            g = 1136 + (c[l >> 2] << 2) | 0;
                            do {
                                if ((h | 0) == (c[g >> 2] | 0)) {
                                    c[g >> 2] = C;
                                    if ((C | 0) != 0) {
                                        break;
                                    }
                                    c[209] = c[209] & ~(1 << c[l >> 2]);
                                    break L1424;
                                } else {
                                    if (m >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    }
                                    t = m + 16 | 0;
                                    if ((c[t >> 2] | 0) == (h | 0)) {
                                        c[t >> 2] = C;
                                    } else {
                                        c[m + 20 >> 2] = C;
                                    }
                                    if ((C | 0) == 0) {
                                        break L1424;
                                    }
                                }
                            } while (0);
                            if (C >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            }
                            c[C + 24 >> 2] = m;
                            h = c[d + (b + 16) >> 2] | 0;
                            do {
                                if ((h | 0) != 0) {
                                    if (h >>> 0 < (c[212] | 0) >>> 0) {
                                        au();
                                    } else {
                                        c[C + 16 >> 2] = h;
                                        c[h + 24 >> 2] = C;
                                        break;
                                    }
                                }
                            } while (0);
                            h = c[d + (b + 20) >> 2] | 0;
                            if ((h | 0) == 0) {
                                break;
                            }
                            if (h >>> 0 < (c[212] | 0) >>> 0) {
                                au();
                            } else {
                                c[C + 20 >> 2] = h;
                                c[h + 24 >> 2] = C;
                                break;
                            }
                        }
                    } while (0);
                    c[n + 4 >> 2] = A | 1;
                    c[n + A >> 2] = A;
                    if ((n | 0) != (c[213] | 0)) {
                        F = A;
                        break;
                    }
                    c[210] = A;
                    return;
                } else {
                    c[y >> 2] = z & -2;
                    c[n + 4 >> 2] = o | 1;
                    c[n + o >> 2] = o;
                    F = o;
                }
            } while (0);
            o = F >>> 3;
            if (F >>> 0 < 256) {
                z = o << 1;
                y = 872 + (z << 2) | 0;
                C = c[208] | 0;
                b = 1 << o;
                do {
                    if ((C & b | 0) == 0) {
                        c[208] = C | b;
                        G = y;
                        H = 872 + (z + 2 << 2) | 0;
                    } else {
                        o = 872 + (z + 2 << 2) | 0;
                        d = c[o >> 2] | 0;
                        if (d >>> 0 >= (c[212] | 0) >>> 0) {
                            G = d;
                            H = o;
                            break;
                        }
                        au();
                    }
                } while (0);
                c[H >> 2] = n;
                c[G + 12 >> 2] = n;
                c[n + 8 >> 2] = G;
                c[n + 12 >> 2] = y;
                return;
            }
            y = n;
            G = F >>> 8;
            do {
                if ((G | 0) == 0) {
                    I = 0;
                } else {
                    if (F >>> 0 > 16777215) {
                        I = 31;
                        break;
                    }
                    H = (G + 1048320 | 0) >>> 16 & 8;
                    z = G << H;
                    b = (z + 520192 | 0) >>> 16 & 4;
                    C = z << b;
                    z = (C + 245760 | 0) >>> 16 & 2;
                    o = 14 - (b | H | z) + (C << z >>> 15) | 0;
                    I = F >>> ((o + 7 | 0) >>> 0) & 1 | o << 1;
                }
            } while (0);
            G = 1136 + (I << 2) | 0;
            c[n + 28 >> 2] = I;
            c[n + 20 >> 2] = 0;
            c[n + 16 >> 2] = 0;
            o = c[209] | 0;
            z = 1 << I;
            if ((o & z | 0) == 0) {
                c[209] = o | z;
                c[G >> 2] = y;
                c[n + 24 >> 2] = G;
                c[n + 12 >> 2] = n;
                c[n + 8 >> 2] = n;
                return;
            }
            if ((I | 0) == 31) {
                J = 0;
            } else {
                J = 25 - (I >>> 1) | 0;
            }
            I = F << J;
            J = c[G >> 2] | 0;
            while (1) {
                if ((c[J + 4 >> 2] & -8 | 0) == (F | 0)) {
                    break;
                }
                K = J + 16 + (I >>> 31 << 2) | 0;
                G = c[K >> 2] | 0;
                if ((G | 0) == 0) {
                    L = 1120;
                    break;
                } else {
                    I = I << 1;
                    J = G;
                }
            }
            if ((L | 0) == 1120) {
                if (K >>> 0 < (c[212] | 0) >>> 0) {
                    au();
                }
                c[K >> 2] = y;
                c[n + 24 >> 2] = J;
                c[n + 12 >> 2] = n;
                c[n + 8 >> 2] = n;
                return;
            }
            K = J + 8 | 0;
            L = c[K >> 2] | 0;
            I = c[212] | 0;
            if (J >>> 0 < I >>> 0) {
                au();
            }
            if (L >>> 0 < I >>> 0) {
                au();
            }
            c[L + 12 >> 2] = y;
            c[K >> 2] = y;
            c[n + 8 >> 2] = L;
            c[n + 12 >> 2] = J;
            c[n + 24 >> 2] = 0;
            return;
        }

        function ca(a) {
            a = a | 0;
            var b = 0,
                d = 0,
                e = 0;
            b = (a | 0) == 0 ? 1 : a;
            while (1) {
                d = bL(b) | 0;
                if ((d | 0) != 0) {
                    e = 1164;
                    break;
                }
                a = (F = c[328] | 0, c[328] = F + 0, F);
                if ((a | 0) == 0) {
                    break;
                }
                a5[a & 1]();
            }
            if ((e | 0) == 1164) {
                return d | 0;
            }
            d = aJ(4) | 0;
            c[d >> 2] = 560;
            as(d | 0, 688, 6);
            return 0;
        }

        function cb(a, b) {
            a = a | 0;
            b = b | 0;
            return ca(a) | 0;
        }

        function cc(a) {
            a = a | 0;
            return;
        }

        function cd(a) {
            a = a | 0;
            return 360 | 0;
        }

        function ce(a) {
            a = a | 0;
            return 448 | 0;
        }

        function cf(a) {
            a = a | 0;
            return (F = c[328] | 0, c[328] = a, F) | 0;
        }

        function cg(a) {
            a = a | 0;
            c[a >> 2] = 560;
            return;
        }

        function ch(a) {
            a = a | 0;
            c[a >> 2] = 592;
            return;
        }

        function ci(a) {
            a = a | 0;
            if ((a | 0) != 0) {
                bM(a);
            }
            return;
        }

        function cj(a, b) {
            a = a | 0;
            b = b | 0;
            ci(a);
            return;
        }

        function ck(a) {
            a = a | 0;
            ci(a);
            return;
        }

        function cl(a, b) {
            a = a | 0;
            b = b | 0;
            ck(a);
            return;
        }

        function cm(a) {
            a = a | 0;
            ci(a);
            return;
        }

        function cn(a) {
            a = a | 0;
            ci(a);
            return;
        }

        function co(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            return cp(a, b, c, 0, 0, 0) | 0;
        }

        function cp(b, d, e, f, g, h) {
            b = b | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            g = g | 0;
            h = h | 0;
            var j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0,
                O = 0,
                P = 0,
                Q = 0,
                R = 0,
                S = 0,
                T = 0,
                U = 0,
                V = 0,
                W = 0,
                X = 0,
                Y = 0,
                Z = 0,
                _ = 0,
                $ = 0,
                aa = 0,
                ab = 0,
                ac = 0,
                ad = 0;
            j = i;
            if ((e | 0) == 0) {
                k = -1;
                i = j;
                return k | 0;
            }
            l = c[44] | 0;
            if ((l | 0) == 0) {
                c[196] = 1;
                c[44] = 1;
                m = 1;
                n = 1;
                o = 1190;
            } else {
                p = c[196] | 0;
                q = c[74] | 0;
                if ((q | 0) == -1 | (p | 0) != 0) {
                    m = p;
                    n = l;
                    o = 1190;
                } else {
                    r = q;
                    s = p;
                    t = l;
                }
            }
            if ((o | 0) == 1190) {
                l = (aP(344) | 0) != 0 | 0;
                c[74] = l;
                r = l;
                s = m;
                t = n;
            }
            n = a[e] | 0;
            if (n << 24 >> 24 == 45) {
                u = h | 2;
                o = 1194;
            } else {
                m = (r | 0) != 0 | n << 24 >> 24 == 43 ? h & -2 : h;
                if (n << 24 >> 24 == 43) {
                    u = m;
                    o = 1194;
                } else {
                    v = e;
                    w = m;
                }
            }
            if ((o | 0) == 1194) {
                v = e + 1 | 0;
                w = u;
            }
            c[198] = 0;
            if ((s | 0) == 0) {
                x = t;
                o = 1198;
            } else {
                c[50] = -1;
                c[48] = -1;
                z = t;
                A = s;
                o = 1197;
            }
            while (1) {
                if ((o | 0) == 1197) {
                    o = 0;
                    if ((A | 0) == 0) {
                        x = z;
                        o = 1198;
                        continue;
                    } else {
                        B = z;
                    }
                } else if ((o | 0) == 1198) {
                    o = 0;
                    s = c[40] | 0;
                    if ((a[s] | 0) == 0) {
                        B = x;
                    } else {
                        C = s;
                        D = x;
                        break;
                    }
                }
                c[196] = 0;
                if ((B | 0) >= (b | 0)) {
                    o = 1200;
                    break;
                }
                E = d + (B << 2) | 0;
                F = c[E >> 2] | 0;
                c[40] = F;
                if ((a[F] | 0) == 45) {
                    G = F + 1 | 0;
                    H = a[G] | 0;
                    if (H << 24 >> 24 != 0) {
                        o = 1232;
                        break;
                    }
                    if ((aB(v | 0, 45) | 0) != 0) {
                        o = 1232;
                        break;
                    }
                }
                c[40] = 824;
                if ((w & 2 | 0) != 0) {
                    o = 1217;
                    break;
                }
                if ((w & 1 | 0) == 0) {
                    k = -1;
                    o = 1298;
                    break;
                }
                s = c[48] | 0;
                do {
                    if ((s | 0) == -1) {
                        c[48] = B;
                        I = B;
                        J = 0;
                    } else {
                        t = c[50] | 0;
                        if ((t | 0) == -1) {
                            I = B;
                            J = 0;
                            break;
                        }
                        u = t - s | 0;
                        e = B - t | 0;
                        m = (u | 0) % (e | 0) | 0;
                        if ((m | 0) == 0) {
                            K = e;
                        } else {
                            n = e;
                            h = m;
                            while (1) {
                                m = (n | 0) % (h | 0) | 0;
                                if ((m | 0) == 0) {
                                    K = h;
                                    break;
                                } else {
                                    n = h;
                                    h = m;
                                }
                            }
                        }
                        h = (B - s | 0) / (K | 0) | 0;
                        do {
                            if ((K | 0) > 0) {
                                n = -u | 0;
                                if ((h | 0) > 0) {
                                    L = 0;
                                } else {
                                    M = B;
                                    N = t;
                                    O = s;
                                    P = 0;
                                    break;
                                }
                                do {
                                    m = L + t | 0;
                                    r = d + (m << 2) | 0;
                                    l = 0;
                                    p = m;
                                    m = c[r >> 2] | 0;
                                    while (1) {
                                        q = ((p | 0) < (t | 0) ? e : n) + p | 0;
                                        Q = d + (q << 2) | 0;
                                        R = c[Q >> 2] | 0;
                                        c[Q >> 2] = m;
                                        c[r >> 2] = R;
                                        Q = l + 1 | 0;
                                        if ((Q | 0) < (h | 0)) {
                                            l = Q;
                                            p = q;
                                            m = R;
                                        } else {
                                            break;
                                        }
                                    }
                                    L = L + 1 | 0;
                                } while ((L | 0) < (K | 0));
                                M = c[44] | 0;
                                N = c[50] | 0;
                                O = c[48] | 0;
                                P = c[196] | 0;
                            } else {
                                M = B;
                                N = t;
                                O = s;
                                P = 0;
                            }
                        } while (0);
                        c[48] = M - N + O;
                        c[50] = -1;
                        I = M;
                        J = P;
                    }
                } while (0);
                s = I + 1 | 0;
                c[44] = s;
                z = s;
                A = J;
                o = 1197;
            }
            do {
                if ((o | 0) == 1298) {
                    i = j;
                    return k | 0;
                } else if ((o | 0) == 1232) {
                    J = c[48] | 0;
                    A = c[50] | 0;
                    if ((J | 0) != -1 & (A | 0) == -1) {
                        c[50] = B;
                        S = a[G] | 0;
                        T = B;
                    } else {
                        S = H;
                        T = A;
                    }
                    if (S << 24 >> 24 == 0) {
                        C = F;
                        D = B;
                        break;
                    }
                    c[40] = G;
                    if ((a[G] | 0) != 45) {
                        C = G;
                        D = B;
                        break;
                    }
                    if ((a[F + 2 | 0] | 0) != 0) {
                        C = G;
                        D = B;
                        break;
                    }
                    A = B + 1 | 0;
                    c[44] = A;
                    c[40] = 824;
                    if ((T | 0) != -1) {
                        z = T - J | 0;
                        I = A - T | 0;
                        P = (z | 0) % (I | 0) | 0;
                        if ((P | 0) == 0) {
                            U = I;
                        } else {
                            M = I;
                            O = P;
                            while (1) {
                                P = (M | 0) % (O | 0) | 0;
                                if ((P | 0) == 0) {
                                    U = O;
                                    break;
                                } else {
                                    M = O;
                                    O = P;
                                }
                            }
                        }
                        O = (A - J | 0) / (U | 0) | 0;
                        do {
                            if ((U | 0) > 0) {
                                M = -z | 0;
                                if ((O | 0) > 0) {
                                    V = 0;
                                } else {
                                    W = T;
                                    X = J;
                                    Y = A;
                                    break;
                                }
                                do {
                                    P = V + T | 0;
                                    N = d + (P << 2) | 0;
                                    K = 0;
                                    L = P;
                                    P = c[N >> 2] | 0;
                                    while (1) {
                                        x = ((L | 0) < (T | 0) ? I : M) + L | 0;
                                        s = d + (x << 2) | 0;
                                        t = c[s >> 2] | 0;
                                        c[s >> 2] = P;
                                        c[N >> 2] = t;
                                        s = K + 1 | 0;
                                        if ((s | 0) < (O | 0)) {
                                            K = s;
                                            L = x;
                                            P = t;
                                        } else {
                                            break;
                                        }
                                    }
                                    V = V + 1 | 0;
                                } while ((V | 0) < (U | 0));
                                W = c[50] | 0;
                                X = c[48] | 0;
                                Y = c[44] | 0;
                            } else {
                                W = T;
                                X = J;
                                Y = A;
                            }
                        } while (0);
                        c[44] = X - W + Y;
                    }
                    c[50] = -1;
                    c[48] = -1;
                    k = -1;
                    i = j;
                    return k | 0;
                } else if ((o | 0) == 1200) {
                    c[40] = 824;
                    A = c[50] | 0;
                    J = c[48] | 0;
                    do {
                        if ((A | 0) == -1) {
                            if ((J | 0) == -1) {
                                break;
                            }
                            c[44] = J;
                        } else {
                            O = A - J | 0;
                            I = B - A | 0;
                            z = (O | 0) % (I | 0) | 0;
                            if ((z | 0) == 0) {
                                Z = I;
                            } else {
                                M = I;
                                P = z;
                                while (1) {
                                    z = (M | 0) % (P | 0) | 0;
                                    if ((z | 0) == 0) {
                                        Z = P;
                                        break;
                                    } else {
                                        M = P;
                                        P = z;
                                    }
                                }
                            }
                            P = (B - J | 0) / (Z | 0) | 0;
                            do {
                                if ((Z | 0) > 0) {
                                    M = -O | 0;
                                    if ((P | 0) > 0) {
                                        _ = 0;
                                    } else {
                                        $ = A;
                                        aa = J;
                                        ab = B;
                                        break;
                                    }
                                    do {
                                        z = _ + A | 0;
                                        L = d + (z << 2) | 0;
                                        K = 0;
                                        N = z;
                                        z = c[L >> 2] | 0;
                                        while (1) {
                                            t = ((N | 0) < (A | 0) ? I : M) + N | 0;
                                            x = d + (t << 2) | 0;
                                            s = c[x >> 2] | 0;
                                            c[x >> 2] = z;
                                            c[L >> 2] = s;
                                            x = K + 1 | 0;
                                            if ((x | 0) < (P | 0)) {
                                                K = x;
                                                N = t;
                                                z = s;
                                            } else {
                                                break;
                                            }
                                        }
                                        _ = _ + 1 | 0;
                                    } while ((_ | 0) < (Z | 0));
                                    $ = c[50] | 0;
                                    aa = c[48] | 0;
                                    ab = c[44] | 0;
                                } else {
                                    $ = A;
                                    aa = J;
                                    ab = B;
                                }
                            } while (0);
                            c[44] = aa - $ + ab;
                        }
                    } while (0);
                    c[50] = -1;
                    c[48] = -1;
                    k = -1;
                    i = j;
                    return k | 0;
                } else if ((o | 0) == 1217) {
                    c[44] = B + 1;
                    c[198] = c[E >> 2];
                    k = 1;
                    i = j;
                    return k | 0;
                }
            } while (0);
            E = (f | 0) != 0;
            L1659: do {
                if (E) {
                    if ((C | 0) == (c[d + (D << 2) >> 2] | 0)) {
                        ac = C;
                        break;
                    }
                    B = a[C] | 0;
                    do {
                        if (B << 24 >> 24 == 45) {
                            c[40] = C + 1;
                            ad = 0;
                        } else {
                            if ((w & 4 | 0) == 0) {
                                ac = C;
                                break L1659;
                            }
                            if (B << 24 >> 24 == 58) {
                                ad = 0;
                                break;
                            }
                            ad = (aB(v | 0, B << 24 >> 24 | 0) | 0) != 0 | 0;
                        }
                    } while (0);
                    B = cv(d, v, f, g, ad) | 0;
                    if ((B | 0) == -1) {
                        ac = c[40] | 0;
                        break;
                    }
                    c[40] = 824;
                    k = B;
                    i = j;
                    return k | 0;
                } else {
                    ac = C;
                }
            } while (0);
            C = ac + 1 | 0;
            c[40] = C;
            ad = a[ac] | 0;
            ac = ad << 24 >> 24;
            if ((ad << 24 >> 24 | 0) == 45) {
                if ((a[C] | 0) == 0) {
                    o = 1260;
                }
            } else if ((ad << 24 >> 24 | 0) == 58) {
                o = 1263;
            } else {
                o = 1260;
            }
            do {
                if ((o | 0) == 1260) {
                    w = aB(v | 0, ac | 0) | 0;
                    if ((w | 0) == 0) {
                        if (ad << 24 >> 24 != 45) {
                            o = 1263;
                            break;
                        }
                        if ((a[C] | 0) == 0) {
                            k = -1;
                        } else {
                            break;
                        }
                        i = j;
                        return k | 0;
                    }
                    D = a[w + 1 | 0] | 0;
                    if (E & ad << 24 >> 24 == 87 & D << 24 >> 24 == 59) {
                        do {
                            if ((a[C] | 0) == 0) {
                                B = (c[44] | 0) + 1 | 0;
                                c[44] = B;
                                if ((B | 0) < (b | 0)) {
                                    c[40] = c[d + (B << 2) >> 2];
                                    break;
                                }
                                c[40] = 824;
                                do {
                                    if ((c[46] | 0) != 0) {
                                        if ((a[v] | 0) == 58) {
                                            break;
                                        }
                                        cx(48, (y = i, i = i + 8 | 0, c[y >> 2] = ac, y) | 0);
                                    }
                                } while (0);
                                c[42] = ac;
                                k = (a[v] | 0) == 58 ? 58 : 63;
                                i = j;
                                return k | 0;
                            }
                        } while (0);
                        B = cv(d, v, f, g, 0) | 0;
                        c[40] = 824;
                        k = B;
                        i = j;
                        return k | 0;
                    }
                    if (D << 24 >> 24 != 58) {
                        if ((a[C] | 0) != 0) {
                            k = ac;
                            i = j;
                            return k | 0;
                        }
                        c[44] = (c[44] | 0) + 1;
                        k = ac;
                        i = j;
                        return k | 0;
                    }
                    c[198] = 0;
                    do {
                        if ((a[C] | 0) == 0) {
                            if ((a[w + 2 | 0] | 0) == 58) {
                                break;
                            }
                            B = (c[44] | 0) + 1 | 0;
                            c[44] = B;
                            if ((B | 0) < (b | 0)) {
                                c[198] = c[d + (B << 2) >> 2];
                                break;
                            }
                            c[40] = 824;
                            do {
                                if ((c[46] | 0) != 0) {
                                    if ((a[v] | 0) == 58) {
                                        break;
                                    }
                                    cx(48, (y = i, i = i + 8 | 0, c[y >> 2] = ac, y) | 0);
                                }
                            } while (0);
                            c[42] = ac;
                            k = (a[v] | 0) == 58 ? 58 : 63;
                            i = j;
                            return k | 0;
                        } else {
                            c[198] = C;
                        }
                    } while (0);
                    c[40] = 824;
                    c[44] = (c[44] | 0) + 1;
                    k = ac;
                    i = j;
                    return k | 0;
                }
            } while (0);
            do {
                if ((o | 0) == 1263) {
                    if ((a[C] | 0) != 0) {
                        break;
                    }
                    c[44] = (c[44] | 0) + 1;
                }
            } while (0);
            do {
                if ((c[46] | 0) != 0) {
                    if ((a[v] | 0) == 58) {
                        break;
                    }
                    cx(272, (y = i, i = i + 8 | 0, c[y >> 2] = ac, y) | 0);
                }
            } while (0);
            c[42] = ac;
            k = 63;
            i = j;
            return k | 0;
        }

        function cq(a, b, c, d, e) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            e = e | 0;
            return cp(a, b, c, d, e, 1) | 0;
        }

        function cr(a, b, c, d, e) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            e = e | 0;
            return cp(a, b, c, d, e, 5) | 0;
        }

        function cs(a) {
            a = a | 0;
            return ca(a) | 0;
        }

        function ct(a, b) {
            a = a | 0;
            b = b | 0;
            return cs(a) | 0;
        }

        function cu() {
            var a = 0;
            a = aJ(4) | 0;
            c[a >> 2] = 560;
            as(a | 0, 688, 6);
        }

        function cv(b, d, e, f, g) {
            b = b | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            g = g | 0;
            var h = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                z = 0;
            h = i;
            j = c[40] | 0;
            k = c[44] | 0;
            l = k + 1 | 0;
            c[44] = l;
            m = aB(j | 0, 61) | 0;
            if ((m | 0) == 0) {
                n = cM(j | 0) | 0;
                o = 0;
            } else {
                n = m - j | 0;
                o = m + 1 | 0;
            }
            m = c[e >> 2] | 0;
            L1739: do {
                if ((m | 0) != 0) {
                    L1741: do {
                        if ((g | 0) != 0 & (n | 0) == 1) {
                            p = 0;
                            q = m;
                            while (1) {
                                if ((a[j] | 0) == (a[q] | 0)) {
                                    if ((cM(q | 0) | 0) == 1) {
                                        r = p;
                                        break L1741;
                                    }
                                }
                                p = p + 1 | 0;
                                q = c[e + (p << 4) >> 2] | 0;
                                if ((q | 0) == 0) {
                                    break L1739;
                                }
                            }
                        } else {
                            q = 0;
                            p = -1;
                            s = m;
                            while (1) {
                                if ((ap(j | 0, s | 0, n | 0) | 0) == 0) {
                                    if ((cM(s | 0) | 0) == (n | 0)) {
                                        r = q;
                                        break L1741;
                                    }
                                    if ((p | 0) == -1) {
                                        t = q;
                                    } else {
                                        break;
                                    }
                                } else {
                                    t = p;
                                }
                                u = q + 1 | 0;
                                v = c[e + (u << 4) >> 2] | 0;
                                if ((v | 0) == 0) {
                                    r = t;
                                    break L1741;
                                } else {
                                    q = u;
                                    p = t;
                                    s = v;
                                }
                            }
                            do {
                                if ((c[46] | 0) != 0) {
                                    if ((a[d] | 0) == 58) {
                                        break;
                                    }
                                    cx(304, (y = i, i = i + 16 | 0, c[y >> 2] = n, c[y + 8 >> 2] = j, y) | 0);
                                }
                            } while (0);
                            c[42] = 0;
                            w = 63;
                            i = h;
                            return w | 0;
                        }
                    } while (0);
                    if ((r | 0) == -1) {
                        break;
                    }
                    s = e + (r << 4) + 4 | 0;
                    p = c[s >> 2] | 0;
                    q = (o | 0) == 0;
                    if (!((p | 0) != 0 | q)) {
                        do {
                            if ((c[46] | 0) != 0) {
                                if ((a[d] | 0) == 58) {
                                    break;
                                }
                                cx(208, (y = i, i = i + 16 | 0, c[y >> 2] = n, c[y + 8 >> 2] = j, y) | 0);
                            }
                        } while (0);
                        if ((c[e + (r << 4) + 8 >> 2] | 0) == 0) {
                            x = c[e + (r << 4) + 12 >> 2] | 0;
                        } else {
                            x = 0;
                        }
                        c[42] = x;
                        w = (a[d] | 0) == 58 ? 58 : 63;
                        i = h;
                        return w | 0;
                    }
                    do {
                        if ((p - 1 | 0) >>> 0 < 2) {
                            if (!q) {
                                c[198] = o;
                                break;
                            }
                            if ((p | 0) != 1) {
                                break;
                            }
                            c[44] = k + 2;
                            c[198] = c[b + (l << 2) >> 2];
                        }
                    } while (0);
                    if (!((c[s >> 2] | 0) == 1 & (c[198] | 0) == 0)) {
                        if ((f | 0) != 0) {
                            c[f >> 2] = r;
                        }
                        p = c[e + (r << 4) + 8 >> 2] | 0;
                        q = c[e + (r << 4) + 12 >> 2] | 0;
                        if ((p | 0) == 0) {
                            w = q;
                            i = h;
                            return w | 0;
                        }
                        c[p >> 2] = q;
                        w = 0;
                        i = h;
                        return w | 0;
                    }
                    do {
                        if ((c[46] | 0) != 0) {
                            if ((a[d] | 0) == 58) {
                                break;
                            }
                            cx(8, (y = i, i = i + 8 | 0, c[y >> 2] = j, y) | 0);
                        }
                    } while (0);
                    if ((c[e + (r << 4) + 8 >> 2] | 0) == 0) {
                        z = c[e + (r << 4) + 12 >> 2] | 0;
                    } else {
                        z = 0;
                    }
                    c[42] = z;
                    c[44] = (c[44] | 0) - 1;
                    w = (a[d] | 0) == 58 ? 58 : 63;
                    i = h;
                    return w | 0;
                }
            } while (0);
            if ((g | 0) != 0) {
                c[44] = k;
                w = -1;
                i = h;
                return w | 0;
            }
            do {
                if ((c[46] | 0) != 0) {
                    if ((a[d] | 0) == 58) {
                        break;
                    }
                    cx(248, (y = i, i = i + 8 | 0, c[y >> 2] = j, y) | 0);
                }
            } while (0);
            c[42] = 0;
            w = 63;
            i = h;
            return w | 0;
        }

        function cw(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0;
            d = i;
            i = i + 16 | 0;
            e = d | 0;
            f = e;
            c[f >> 2] = b;
            c[f + 4 >> 2] = 0;
            cy(a, e | 0);
            i = d;
            return;
        }

        function cx(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0;
            d = i;
            i = i + 16 | 0;
            e = d | 0;
            f = e;
            c[f >> 2] = b;
            c[f + 4 >> 2] = 0;
            cz(a, e | 0);
            i = d;
            return;
        }

        function cy(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0,
                f = 0;
            d = i;
            e = c[(aX() | 0) >> 2] | 0;
            f = c[r >> 2] | 0;
            av(c[o >> 2] | 0, 432, (y = i, i = i + 8 | 0, c[y >> 2] = f, y) | 0) | 0;
            if ((a | 0) != 0) {
                f = c[o >> 2] | 0;
                aQ(f | 0, a | 0, b | 0) | 0;
                b = c[o >> 2] | 0;
                aE(472, 2, 1, b | 0) | 0;
            }
            b = c[o >> 2] | 0;
            a = at(e | 0) | 0;
            av(b | 0, 384, (y = i, i = i + 8 | 0, c[y >> 2] = a, y) | 0) | 0;
            i = d;
            return;
        }

        function cz(a, b) {
            a = a | 0;
            b = b | 0;
            var d = 0,
                e = 0;
            d = i;
            e = c[r >> 2] | 0;
            av(c[o >> 2] | 0, 376, (y = i, i = i + 8 | 0, c[y >> 2] = e, y) | 0) | 0;
            if ((a | 0) != 0) {
                e = c[o >> 2] | 0;
                aQ(e | 0, a | 0, b | 0) | 0;
            }
            aC(10, c[o >> 2] | 0) | 0;
            i = d;
            return;
        }

        function cA(b, d) {
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0,
                g = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0.0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0.0,
                w = 0,
                x = 0,
                y = 0,
                z = 0.0,
                A = 0.0,
                B = 0,
                C = 0,
                D = 0,
                E = 0.0,
                F = 0,
                G = 0,
                H = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0,
                N = 0.0,
                O = 0,
                P = 0,
                Q = 0.0,
                R = 0.0,
                S = 0.0;
            e = b;
            while (1) {
                f = e + 1 | 0;
                if ((aK(a[e] | 0) | 0) == 0) {
                    break;
                } else {
                    e = f;
                }
            }
            g = a[e] | 0;
            if ((g << 24 >> 24 | 0) == 45) {
                i = f;
                j = 1;
            } else if ((g << 24 >> 24 | 0) == 43) {
                i = f;
                j = 0;
            } else {
                i = e;
                j = 0;
            }
            e = -1;
            f = 0;
            g = i;
            while (1) {
                k = a[g] | 0;
                if (((k << 24 >> 24) - 48 | 0) >>> 0 < 10) {
                    l = e;
                } else {
                    if (k << 24 >> 24 != 46 | (e | 0) > -1) {
                        break;
                    } else {
                        l = f;
                    }
                }
                e = l;
                f = f + 1 | 0;
                g = g + 1 | 0;
            }
            l = g + (-f | 0) | 0;
            i = (e | 0) < 0;
            m = ((i ^ 1) << 31 >> 31) + f | 0;
            n = (m | 0) > 18;
            o = (n ? -18 : -m | 0) + (i ? f : e) | 0;
            e = n ? 18 : m;
            do {
                if ((e | 0) == 0) {
                    p = b;
                    q = 0.0;
                } else {
                    if ((e | 0) > 9) {
                        m = l;
                        n = e;
                        f = 0;
                        while (1) {
                            i = a[m] | 0;
                            r = m + 1 | 0;
                            if (i << 24 >> 24 == 46) {
                                s = a[r] | 0;
                                t = m + 2 | 0;
                            } else {
                                s = i;
                                t = r;
                            }
                            u = (f * 10 | 0) - 48 + (s << 24 >> 24) | 0;
                            r = n - 1 | 0;
                            if ((r | 0) > 9) {
                                m = t;
                                n = r;
                                f = u;
                            } else {
                                break;
                            }
                        }
                        v = +(u | 0) * 1.0e9;
                        w = 9;
                        x = t;
                        y = 1393;
                    } else {
                        if ((e | 0) > 0) {
                            v = 0.0;
                            w = e;
                            x = l;
                            y = 1393;
                        } else {
                            z = 0.0;
                            A = 0.0;
                        }
                    }
                    if ((y | 0) == 1393) {
                        f = x;
                        n = w;
                        m = 0;
                        while (1) {
                            r = a[f] | 0;
                            i = f + 1 | 0;
                            if (r << 24 >> 24 == 46) {
                                B = a[i] | 0;
                                C = f + 2 | 0;
                            } else {
                                B = r;
                                C = i;
                            }
                            D = (m * 10 | 0) - 48 + (B << 24 >> 24) | 0;
                            i = n - 1 | 0;
                            if ((i | 0) > 0) {
                                f = C;
                                n = i;
                                m = D;
                            } else {
                                break;
                            }
                        }
                        z = +(D | 0);
                        A = v;
                    }
                    E = A + z;
                    do {
                        if ((k << 24 >> 24 | 0) == 69 | (k << 24 >> 24 | 0) == 101) {
                            m = g + 1 | 0;
                            n = a[m] | 0;
                            if ((n << 24 >> 24 | 0) == 43) {
                                F = g + 2 | 0;
                                G = 0;
                            } else if ((n << 24 >> 24 | 0) == 45) {
                                F = g + 2 | 0;
                                G = 1;
                            } else {
                                F = m;
                                G = 0;
                            }
                            m = a[F] | 0;
                            if (((m << 24 >> 24) - 48 | 0) >>> 0 < 10) {
                                H = F;
                                I = 0;
                                J = m;
                            } else {
                                K = 0;
                                L = F;
                                M = G;
                                break;
                            }
                            while (1) {
                                m = (I * 10 | 0) - 48 + (J << 24 >> 24) | 0;
                                n = H + 1 | 0;
                                f = a[n] | 0;
                                if (((f << 24 >> 24) - 48 | 0) >>> 0 < 10) {
                                    H = n;
                                    I = m;
                                    J = f;
                                } else {
                                    K = m;
                                    L = n;
                                    M = G;
                                    break;
                                }
                            }
                        } else {
                            K = 0;
                            L = g;
                            M = 0;
                        }
                    } while (0);
                    n = o + ((M | 0) == 0 ? K : -K | 0) | 0;
                    m = (n | 0) < 0 ? -n | 0 : n;
                    if ((m | 0) > 511) {
                        c[(aX() | 0) >> 2] = 34;
                        N = 1.0;
                        O = 88;
                        P = 511;
                        y = 1410;
                    } else {
                        if ((m | 0) == 0) {
                            Q = 1.0;
                        } else {
                            N = 1.0;
                            O = 88;
                            P = m;
                            y = 1410;
                        }
                    }
                    if ((y | 0) == 1410) {
                        while (1) {
                            y = 0;
                            if ((P & 1 | 0) == 0) {
                                R = N;
                            } else {
                                R = N * +h[O >> 3];
                            }
                            m = P >> 1;
                            if ((m | 0) == 0) {
                                Q = R;
                                break;
                            } else {
                                N = R;
                                O = O + 8 | 0;
                                P = m;
                                y = 1410;
                            }
                        }
                    }
                    if ((n | 0) > -1) {
                        p = L;
                        q = E * Q;
                        break;
                    } else {
                        p = L;
                        q = E / Q;
                        break;
                    }
                }
            } while (0);
            if ((d | 0) != 0) {
                c[d >> 2] = p;
            }
            if ((j | 0) == 0) {
                S = q;
                return +S;
            }
            S = -0.0 - q;
            return +S;
        }

        function cB(a, b) {
            a = a | 0;
            b = b | 0;
            return +(+cA(a, b));
        }

        function cC(a, b) {
            a = a | 0;
            b = b | 0;
            return +(+cA(a, b));
        }

        function cD(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            return +(+cA(a, b));
        }

        function cE(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            return +(+cA(a, b));
        }

        function cF(a) {
            a = a | 0;
            return +(+cA(a, 0));
        }

        function cG(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = i;
            i = i + 16 | 0;
            f = e | 0;
            e = f;
            c[e >> 2] = d;
            c[e + 4 >> 2] = 0;
            cI(a, b, f | 0);
        }

        function cH(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = i;
            i = i + 16 | 0;
            f = e | 0;
            e = f;
            c[e >> 2] = d;
            c[e + 4 >> 2] = 0;
            cJ(a, b, f | 0);
        }

        function cI(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = c[(aX() | 0) >> 2] | 0;
            f = c[r >> 2] | 0;
            av(c[o >> 2] | 0, 336, (y = i, i = i + 8 | 0, c[y >> 2] = f, y) | 0) | 0;
            if ((b | 0) != 0) {
                f = c[o >> 2] | 0;
                aQ(f | 0, b | 0, d | 0) | 0;
                d = c[o >> 2] | 0;
                aE(480, 2, 1, d | 0) | 0;
            }
            d = c[o >> 2] | 0;
            b = at(e | 0) | 0;
            av(d | 0, 392, (y = i, i = i + 8 | 0, c[y >> 2] = b, y) | 0) | 0;
            aH(a | 0);
        }

        function cJ(a, b, d) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            var e = 0;
            e = c[r >> 2] | 0;
            av(c[o >> 2] | 0, 440, (y = i, i = i + 8 | 0, c[y >> 2] = e, y) | 0) | 0;
            if ((b | 0) != 0) {
                e = c[o >> 2] | 0;
                aQ(e | 0, b | 0, d | 0) | 0;
            }
            aC(10, c[o >> 2] | 0) | 0;
            aH(a | 0);
        }

        function cK(b, d, e) {
            b = b | 0;
            d = d | 0;
            e = e | 0;
            var f = 0;
            f = b | 0;
            if ((b & 3) == (d & 3)) {
                while (b & 3) {
                    if ((e | 0) == 0) return f | 0;
                    a[b] = a[d] | 0;
                    b = b + 1 | 0;
                    d = d + 1 | 0;
                    e = e - 1 | 0;
                }
                while ((e | 0) >= 4) {
                    c[b >> 2] = c[d >> 2];
                    b = b + 4 | 0;
                    d = d + 4 | 0;
                    e = e - 4 | 0;
                }
            }
            while ((e | 0) > 0) {
                a[b] = a[d] | 0;
                b = b + 1 | 0;
                d = d + 1 | 0;
                e = e - 1 | 0;
            }
            return f | 0;
        }

        function cL(b, d, e) {
            b = b | 0;
            d = d | 0;
            e = e | 0;
            var f = 0,
                g = 0,
                h = 0;
            f = b + e | 0;
            if ((e | 0) >= 20) {
                d = d & 255;
                e = b & 3;
                g = d | d << 8 | d << 16 | d << 24;
                h = f & ~3;
                if (e) {
                    e = b + 4 - e | 0;
                    while ((b | 0) < (e | 0)) {
                        a[b] = d;
                        b = b + 1 | 0;
                    }
                }
                while ((b | 0) < (h | 0)) {
                    c[b >> 2] = g;
                    b = b + 4 | 0;
                }
            }
            while ((b | 0) < (f | 0)) {
                a[b] = d;
                b = b + 1 | 0;
            }
        }

        function cM(b) {
            b = b | 0;
            var c = 0;
            c = b;
            while (a[c] | 0) {
                c = c + 1 | 0;
            }
            return c - b | 0;
        }

        function cN(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0;
            e = a + c >>> 0;
            return (H = b + d + (e >>> 0 < a >>> 0 | 0) >>> 0, e | 0) | 0;
        }

        function cO(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0;
            e = b - d >>> 0;
            e = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
            return (H = e, a - c >>> 0 | 0) | 0;
        }

        function cP(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            if ((c | 0) < 32) {
                H = b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c;
                return a << c;
            }
            H = a << c - 32;
            return 0;
        }

        function cQ(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            if ((c | 0) < 32) {
                H = b >>> c;
                return a >>> c | (b & (1 << c) - 1) << 32 - c;
            }
            H = 0;
            return b >>> c - 32 | 0;
        }

        function cR(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            if ((c | 0) < 32) {
                H = b >> c;
                return a >>> c | (b & (1 << c) - 1) << 32 - c;
            }
            H = (b | 0) < 0 ? -1 : 0;
            return b >> c - 32 | 0;
        }

        function cS(b) {
            b = b | 0;
            var c = 0;
            c = a[n + (b >>> 24) | 0] | 0;
            if ((c | 0) < 8) return c | 0;
            c = a[n + (b >> 16 & 255) | 0] | 0;
            if ((c | 0) < 8) return c + 8 | 0;
            c = a[n + (b >> 8 & 255) | 0] | 0;
            if ((c | 0) < 8) return c + 16 | 0;
            return (a[n + (b & 255) | 0] | 0) + 24 | 0;
        }

        function cT(b) {
            b = b | 0;
            var c = 0;
            c = a[m + (b & 255) | 0] | 0;
            if ((c | 0) < 8) return c | 0;
            c = a[m + (b >> 8 & 255) | 0] | 0;
            if ((c | 0) < 8) return c + 8 | 0;
            c = a[m + (b >> 16 & 255) | 0] | 0;
            if ((c | 0) < 8) return c + 16 | 0;
            return (a[m + (b >>> 24) | 0] | 0) + 24 | 0;
        }

        function cU(a, b) {
            a = a | 0;
            b = b | 0;
            var c = 0,
                d = 0,
                e = 0,
                f = 0;
            c = a & 65535;
            d = b & 65535;
            e = ad(d, c) | 0;
            f = a >>> 16;
            a = (e >>> 16) + (ad(d, f) | 0) | 0;
            d = b >>> 16;
            b = ad(d, c) | 0;
            return (H = (a >>> 16) + (ad(d, f) | 0) + (((a & 65535) + b | 0) >>> 16) | 0, a + b << 16 | e & 65535 | 0) | 0;
        }

        function cV(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0,
                f = 0,
                g = 0,
                h = 0,
                i = 0;
            e = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
            f = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
            g = d >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
            h = ((d | 0) < 0 ? -1 : 0) >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;
            i = cO(e ^ a, f ^ b, e, f) | 0;
            b = H;
            a = g ^ e;
            e = h ^ f;
            f = cO((c_(i, b, cO(g ^ c, h ^ d, g, h) | 0, H, 0) | 0) ^ a, H ^ e, a, e) | 0;
            return (H = H, f) | 0;
        }

        function cW(a, b, d, e) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            e = e | 0;
            var f = 0,
                g = 0,
                h = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0;
            f = i;
            i = i + 8 | 0;
            g = f | 0;
            h = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
            j = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
            k = e >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;
            l = ((e | 0) < 0 ? -1 : 0) >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;
            m = cO(h ^ a, j ^ b, h, j) | 0;
            b = H;
            a = cO(k ^ d, l ^ e, k, l) | 0;
            c_(m, b, a, H, g) | 0;
            a = cO(c[g >> 2] ^ h, c[g + 4 >> 2] ^ j, h, j) | 0;
            j = H;
            i = f;
            return (H = j, a) | 0;
        }

        function cX(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0,
                f = 0;
            e = a;
            a = c;
            c = cU(e, a) | 0;
            f = H;
            return (H = (ad(b, a) | 0) + (ad(d, e) | 0) + f | f & 0, c | 0 | 0) | 0;
        }

        function cY(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            var e = 0;
            e = c_(a, b, c, d, 0) | 0;
            return (H = H, e) | 0;
        }

        function cZ(a, b, d, e) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            e = e | 0;
            var f = 0,
                g = 0;
            f = i;
            i = i + 8 | 0;
            g = f | 0;
            c_(a, b, d, e, g) | 0;
            i = f;
            return (H = c[g + 4 >> 2] | 0, c[g >> 2] | 0) | 0;
        }

        function c_(a, b, d, e, f) {
            a = a | 0;
            b = b | 0;
            d = d | 0;
            e = e | 0;
            f = f | 0;
            var g = 0,
                h = 0,
                i = 0,
                j = 0,
                k = 0,
                l = 0,
                m = 0,
                n = 0,
                o = 0,
                p = 0,
                q = 0,
                r = 0,
                s = 0,
                t = 0,
                u = 0,
                v = 0,
                w = 0,
                x = 0,
                y = 0,
                z = 0,
                A = 0,
                B = 0,
                C = 0,
                D = 0,
                E = 0,
                F = 0,
                G = 0,
                I = 0,
                J = 0,
                K = 0,
                L = 0,
                M = 0;
            g = a;
            h = b;
            i = h;
            j = d;
            k = e;
            l = k;
            if ((i | 0) == 0) {
                m = (f | 0) != 0;
                if ((l | 0) == 0) {
                    if (m) {
                        c[f >> 2] = (g >>> 0) % (j >>> 0);
                        c[f + 4 >> 2] = 0;
                    }
                    n = 0;
                    o = (g >>> 0) / (j >>> 0) >>> 0;
                    return (H = n, o) | 0;
                } else {
                    if (!m) {
                        n = 0;
                        o = 0;
                        return (H = n, o) | 0;
                    }
                    c[f >> 2] = a | 0;
                    c[f + 4 >> 2] = b & 0;
                    n = 0;
                    o = 0;
                    return (H = n, o) | 0;
                }
            }
            m = (l | 0) == 0;
            do {
                if ((j | 0) == 0) {
                    if (m) {
                        if ((f | 0) != 0) {
                            c[f >> 2] = (i >>> 0) % (j >>> 0);
                            c[f + 4 >> 2] = 0;
                        }
                        n = 0;
                        o = (i >>> 0) / (j >>> 0) >>> 0;
                        return (H = n, o) | 0;
                    }
                    if ((g | 0) == 0) {
                        if ((f | 0) != 0) {
                            c[f >> 2] = 0;
                            c[f + 4 >> 2] = (i >>> 0) % (l >>> 0);
                        }
                        n = 0;
                        o = (i >>> 0) / (l >>> 0) >>> 0;
                        return (H = n, o) | 0;
                    }
                    p = l - 1 | 0;
                    if ((p & l | 0) == 0) {
                        if ((f | 0) != 0) {
                            c[f >> 2] = a | 0;
                            c[f + 4 >> 2] = p & i | b & 0;
                        }
                        n = 0;
                        o = i >>> ((cT(l | 0) | 0) >>> 0);
                        return (H = n, o) | 0;
                    }
                    p = (cS(l | 0) | 0) - (cS(i | 0) | 0) | 0;
                    if (p >>> 0 <= 30) {
                        q = p + 1 | 0;
                        r = 31 - p | 0;
                        s = q;
                        t = i << r | g >>> (q >>> 0);
                        u = i >>> (q >>> 0);
                        v = 0;
                        w = g << r;
                        break;
                    }
                    if ((f | 0) == 0) {
                        n = 0;
                        o = 0;
                        return (H = n, o) | 0;
                    }
                    c[f >> 2] = a | 0;
                    c[f + 4 >> 2] = h | b & 0;
                    n = 0;
                    o = 0;
                    return (H = n, o) | 0;
                } else {
                    if (!m) {
                        r = (cS(l | 0) | 0) - (cS(i | 0) | 0) | 0;
                        if (r >>> 0 <= 31) {
                            q = r + 1 | 0;
                            p = 31 - r | 0;
                            x = r - 31 >> 31;
                            s = q;
                            t = g >>> (q >>> 0) & x | i << p;
                            u = i >>> (q >>> 0) & x;
                            v = 0;
                            w = g << p;
                            break;
                        }
                        if ((f | 0) == 0) {
                            n = 0;
                            o = 0;
                            return (H = n, o) | 0;
                        }
                        c[f >> 2] = a | 0;
                        c[f + 4 >> 2] = h | b & 0;
                        n = 0;
                        o = 0;
                        return (H = n, o) | 0;
                    }
                    p = j - 1 | 0;
                    if ((p & j | 0) != 0) {
                        x = (cS(j | 0) | 0) + 33 - (cS(i | 0) | 0) | 0;
                        q = 64 - x | 0;
                        r = 32 - x | 0;
                        y = r >> 31;
                        z = x - 32 | 0;
                        A = z >> 31;
                        s = x;
                        t = r - 1 >> 31 & i >>> (z >>> 0) | (i << r | g >>> (x >>> 0)) & A;
                        u = A & i >>> (x >>> 0);
                        v = g << q & y;
                        w = (i << q | g >>> (z >>> 0)) & y | g << r & x - 33 >> 31;
                        break;
                    }
                    if ((f | 0) != 0) {
                        c[f >> 2] = p & g;
                        c[f + 4 >> 2] = 0;
                    }
                    if ((j | 0) == 1) {
                        n = h | b & 0;
                        o = a | 0 | 0;
                        return (H = n, o) | 0;
                    } else {
                        p = cT(j | 0) | 0;
                        n = i >>> (p >>> 0) | 0;
                        o = i << 32 - p | g >>> (p >>> 0) | 0;
                        return (H = n, o) | 0;
                    }
                }
            } while (0);
            if ((s | 0) == 0) {
                B = w;
                C = v;
                D = u;
                E = t;
                F = 0;
                G = 0;
            } else {
                g = d | 0 | 0;
                d = k | e & 0;
                e = cN(g, d, -1, -1) | 0;
                k = H;
                i = w;
                w = v;
                v = u;
                u = t;
                t = s;
                s = 0;
                while (1) {
                    I = w >>> 31 | i << 1;
                    J = s | w << 1;
                    j = u << 1 | i >>> 31 | 0;
                    a = u >>> 31 | v << 1 | 0;
                    cO(e, k, j, a) | 0;
                    b = H;
                    h = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
                    K = h & 1;
                    L = cO(j, a, h & g, (((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1) & d) | 0;
                    M = H;
                    b = t - 1 | 0;
                    if ((b | 0) == 0) {
                        break;
                    } else {
                        i = I;
                        w = J;
                        v = M;
                        u = L;
                        t = b;
                        s = K;
                    }
                }
                B = I;
                C = J;
                D = M;
                E = L;
                F = 0;
                G = K;
            }
            K = C;
            C = 0;
            if ((f | 0) != 0) {
                c[f >> 2] = E;
                c[f + 4 >> 2] = D;
            }
            n = (K | 0) >>> 31 | (B | C) << 1 | (C << 1 | K >>> 31) & 0 | F;
            o = (K << 1 | 0 >>> 31) & -2 | G;
            return (H = n, o) | 0;
        }

        function c$(a, b) {
            a = a | 0;
            b = b | 0;
            a1[a & 15](b | 0);
        }

        function c0(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            a2[a & 15](b | 0, c | 0);
        }

        function c1(a, b) {
            a = a | 0;
            b = b | 0;
            return a3[a & 7](b | 0) | 0;
        }

        function c2(a, b, c, d) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            d = d | 0;
            a4[a & 15](b | 0, c | 0, d | 0);
        }

        function c3(a) {
            a = a | 0;
            a5[a & 1]();
        }

        function c4(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            return a6[a & 1](b | 0, c | 0) | 0;
        }

        function c5(a) {
            a = a | 0;
            ae(0);
        }

        function c6(a, b) {
            a = a | 0;
            b = b | 0;
            ae(1);
        }

        function c7(a) {
            a = a | 0;
            ae(2);
            return 0;
        }

        function c8(a, b, c) {
            a = a | 0;
            b = b | 0;
            c = c | 0;
            ae(3);
        }

        function c9() {
            ae(4);
        }

        function da(a, b) {
            a = a | 0;
            b = b | 0;
            ae(5);
            return 0;
        }
        // EMSCRIPTEN_END_FUNCS
        var a1 = [c5, c5, ch, c5, cn, c5, cc, c5, cg, c5, cm, c5, c5, c5, c5, c5];
        var a2 = [c6, c6, cw, c6, cy, c6, cx, c6, cz, c6, c6, c6, c6, c6, c6, c6];
        var a3 = [c7, c7, cd, c7, ce, c7, c7, c7];
        var a4 = [c8, c8, cJ, c8, cI, c8, cG, c8, cH, c8, c8, c8, c8, c8, c8, c8];
        var a5 = [c9, c9];
        var a6 = [da, da];
        return {
            _crypto_scrypt: bu,
            _strlen: cM,
            _free: bM,
            _realloc: bO,
            _memset: cL,
            _malloc: bL,
            _memcpy: cK,
            _calloc: bN,
            runPostSets: bn,
            stackAlloc: a7,
            stackSave: a8,
            stackRestore: a9,
            setThrew: ba,
            setTempRet0: bd,
            setTempRet1: be,
            setTempRet2: bf,
            setTempRet3: bg,
            setTempRet4: bh,
            setTempRet5: bi,
            setTempRet6: bj,
            setTempRet7: bk,
            setTempRet8: bl,
            setTempRet9: bm,
            dynCall_vi: c$,
            dynCall_vii: c0,
            dynCall_ii: c1,
            dynCall_viii: c2,
            dynCall_v: c3,
            dynCall_iii: c4
        };
        // EMSCRIPTEN_END_ASM
    })({
        Math: Math,
        Int8Array: Int8Array,
        Int16Array: Int16Array,
        Int32Array: Int32Array,
        Uint8Array: Uint8Array,
        Uint16Array: Uint16Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    }, {
        abort: wa,
        assert: w,
        asmPrintInt: function (a, b) {
            s.print("int " + a + "," + b)
        },
        asmPrintFloat: function (a, b) {
            s.print("float " + a + "," + b)
        },
        min: Xc,
        invoke_vi: function (a, b) {
            try {
                s.dynCall_vi(a, b)
            } catch (c) {
                "number" !== typeof c && "longjmp" !== c && g(c), V.setThrew(1, 0)
            }
        },
        invoke_vii: function (a, b, c) {
            try {
                s.dynCall_vii(a, b, c)
            } catch (d) {
                "number" !== typeof d && "longjmp" !== d && g(d), V.setThrew(1, 0)
            }
        },
        invoke_ii: function (a, b) {
            try {
                return s.dynCall_ii(a, b)
            } catch (c) {
                "number" !== typeof c && "longjmp" !== c && g(c), V.setThrew(1, 0)
            }
        },
        invoke_viii: function (a, b, c, d) {
            try {
                s.dynCall_viii(a, b, c, d)
            } catch (e) {
                "number" !== typeof e && "longjmp" !== e && g(e), V.setThrew(1, 0)
            }
        },
        invoke_v: function (a) {
            try {
                s.dynCall_v(a)
            } catch (b) {
                "number" !== typeof b && "longjmp" !== b && g(b), V.setThrew(1, 0)
            }
        },
        invoke_iii: function (a, b, c) {
            try {
                return s.dynCall_iii(a, b, c)
            } catch (d) {
                "number" !== typeof d && "longjmp" !== d && g(d), V.setThrew(1, 0)
            }
        },
        _strncmp: function (a, b, c) {
            for (var d = 0; d < c;) {
                var e = G[a + d | 0],
                    f = G[b + d | 0];
                if (e == f && 0 == e) {
                    break
                }
                if (0 == e) {
                    return -1
                }
                if (0 == f) {
                    return 1
                }
                if (e == f) {
                    d++
                } else {
                    return e > f ? 1 : -1
                }
            }
            return 0
        },
        _llvm_va_end: aa(),
        _sysconf: function (a) {
            switch (a) {
            case 8:
                return 4096;
            case 54:
                ;
            case 56:
                ;
            case 21:
                ;
            case 61:
                ;
            case 63:
                ;
            case 22:
                ;
            case 67:
                ;
            case 23:
                ;
            case 24:
                ;
            case 25:
                ;
            case 26:
                ;
            case 27:
                ;
            case 69:
                ;
            case 28:
                ;
            case 101:
                ;
            case 70:
                ;
            case 71:
                ;
            case 29:
                ;
            case 30:
                ;
            case 199:
                ;
            case 75:
                ;
            case 76:
                ;
            case 32:
                ;
            case 43:
                ;
            case 44:
                ;
            case 80:
                ;
            case 46:
                ;
            case 47:
                ;
            case 45:
                ;
            case 48:
                ;
            case 49:
                ;
            case 42:
                ;
            case 82:
                ;
            case 33:
                ;
            case 7:
                ;
            case 108:
                ;
            case 109:
                ;
            case 107:
                ;
            case 112:
                ;
            case 119:
                ;
            case 121:
                return 200809;
            case 13:
                ;
            case 104:
                ;
            case 94:
                ;
            case 95:
                ;
            case 34:
                ;
            case 35:
                ;
            case 77:
                ;
            case 81:
                ;
            case 83:
                ;
            case 84:
                ;
            case 85:
                ;
            case 86:
                ;
            case 87:
                ;
            case 88:
                ;
            case 89:
                ;
            case 90:
                ;
            case 91:
                ;
            case 94:
                ;
            case 95:
                ;
            case 110:
                ;
            case 111:
                ;
            case 113:
                ;
            case 114:
                ;
            case 115:
                ;
            case 116:
                ;
            case 117:
                ;
            case 118:
                ;
            case 120:
                ;
            case 40:
                ;
            case 16:
                ;
            case 79:
                ;
            case 19:
                return -1;
            case 92:
                ;
            case 93:
                ;
            case 5:
                ;
            case 72:
                ;
            case 6:
                ;
            case 74:
                ;
            case 92:
                ;
            case 93:
                ;
            case 96:
                ;
            case 97:
                ;
            case 98:
                ;
            case 99:
                ;
            case 102:
                ;
            case 103:
                ;
            case 105:
                return 1;
            case 38:
                ;
            case 66:
                ;
            case 50:
                ;
            case 51:
                ;
            case 4:
                return 1024;
            case 15:
                ;
            case 64:
                ;
            case 41:
                return 32;
            case 55:
                ;
            case 37:
                ;
            case 17:
                return 2147483647;
            case 18:
                ;
            case 1:
                return 47839;
            case 59:
                ;
            case 57:
                return 99;
            case 68:
                ;
            case 58:
                return 2048;
            case 0:
                return 2097152;
            case 3:
                return 65536;
            case 14:
                return 32768;
            case 73:
                return 32767;
            case 39:
                return 16384;
            case 60:
                return 1E3;
            case 106:
                return 700;
            case 52:
                return 256;
            case 62:
                return 255;
            case 2:
                return 100;
            case 65:
                return 64;
            case 36:
                return 20;
            case 100:
                return 16;
            case 20:
                return 6;
            case 53:
                return 4;
            case 10:
                return 1
            }
            M(N.A);
            return -1
        },
        ___cxa_throw: rc,
        _strerror: zc,
        _abort: function () {
            s.abort()
        },
        _fprintf: mc,
        _llvm_eh_exception: U,
        ___cxa_free_exception: sc,
        _fflush: aa(),
        ___buildEnvironment: wc,
        __reallyNegative: jc,
        _strchr: function (a, b) {
            a--;
            do {
                a++;
                var c = A[a];
                if (c == b) {
                    return a
                }
            } while (c);
            return 0
        },
        _fputc: Bc,
        ___setErrNo: M,
        _fwrite: hc,
        _send: fc,
        _write: gc,
        _exit: function (a) {
            Ac(a)
        },
        ___cxa_find_matching_catch: function (a, b) {
            -1 == a && (a = B[U.m >> 2]); - 1 == b && (b = B[U.m + 4 >> 2]);
            var c = Array.prototype.slice.call(arguments, 2);
            0 != b && !pc(b) && 0 == B[B[b >> 2] - 8 >> 2] && (a = B[a >> 2]);
            for (var d = 0; d < c.length; d++) {
                if (qc(c[d], b, a)) {
                    return (V.setTempRet0(c[d]), a) | 0
                }
            }
            return (V.setTempRet0(b), a) | 0
        },
        ___cxa_allocate_exception: function (a) {
            return Oa(a)
        },
        _isspace: function (a) {
            return 32 == a || 9 <= a && 13 >= a
        },
        __formatString: kc,
        ___resumeException: function (a) {
            0 == B[U.m >> 2] && (B[U.m >> 2] = a);
            g(a + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.")
        },
        _llvm_uadd_with_overflow_i32: function (a, b) {
            a >>>= 0;
            b >>>= 0;
            return (V.setTempRet0(4294967295 < a + b), a + b >>> 0) | 0
        },
        ___cxa_does_inherit: qc,
        _getenv: xc,
        _vfprintf: function (a, b, c) {
            return mc(a, b, B[c >> 2])
        },
        ___cxa_begin_catch: function (a) {
            oc.ta--;
            return a
        },
        __ZSt18uncaught_exceptionv: oc,
        _pwrite: function (a, b, c, d) {
            a = R[a];
            if (!a) {
                return M(N.$), -1
            }
            try {
                return Ib(a, A, b, c, d)
            } catch (e) {
                return Zb(e), -1
            }
        },
        ___cxa_call_unexpected: function (a) {
            s.P("Unexpected exception thrown, this is not properly supported - aborting");
            za = l;
            g(a)
        },
        _sbrk: nc,
        _strerror_r: yc,
        ___errno_location: function () {
            return rb
        },
        ___gxx_personality_v0: aa(),
        ___cxa_is_number_type: pc,
        _time: function (a) {
            var b = Math.floor(Date.now() / 1E3);
            a && (B[a >> 2] = b);
            return b
        },
        __exit: Ac,
        ___cxa_end_catch: uc,
        STACKTOP: u,
        STACK_MAX: Ta,
        tempDoublePtr: qb,
        ABORT: za,
        cttz_i8: Wc,
        ctlz_i8: Vc,
        NaN: NaN,
        Infinity: Infinity,
        _stderr: nb,
        __ZTVN10__cxxabiv120__si_class_type_infoE: ob,
        __ZTVN10__cxxabiv117__class_type_infoE: pb,
        ___progname: k
    }, I);
    s._crypto_scrypt = V._crypto_scrypt;
    var ic = s._strlen = V._strlen,
        tc = s._free = V._free;
    s._realloc = V._realloc;
    var tb = s._memset = V._memset,
        Oa = s._malloc = V._malloc,
        sb = s._memcpy = V._memcpy;
    s._calloc = V._calloc;
    var mb = s.runPostSets = V.runPostSets;
    s.dynCall_vi = V.dynCall_vi;
    s.dynCall_vii = V.dynCall_vii;
    s.dynCall_ii = V.dynCall_ii;
    s.dynCall_viii = V.dynCall_viii;
    s.dynCall_v = V.dynCall_v;
    s.dynCall_iii = V.dynCall_iii;
    var qa = function (a) {
            return V.stackAlloc(a)
        },
        ja = function () {
            return V.stackSave()
        },
        ka = function (a) {
            V.stackRestore(a)
        },
        lc;

    function X(a, b) {
        a != m && ("number" == typeof a ? this.p(a) : b == m && "string" != typeof a ? this.k(a, 256) : this.k(a, b))
    }

    function Yc() {
        return new X(m)
    }

    function Zc(a, b) {
        var c = $c[a.charCodeAt(b)];
        return c == m ? -1 : c
    }

    function ad(a) {
        var b = Yc();
        b.D(a);
        return b
    }

    function Y(a, b) {
        this.h = a | 0;
        this.j = b | 0
    }
    Y.Ca = {};
    Y.D = function (a) {
        if (-128 <= a && 128 > a) {
            var b = Y.Ca[a];
            if (b) {
                return b
            }
        }
        b = new Y(a | 0, 0 > a ? -1 : 0); - 128 <= a && 128 > a && (Y.Ca[a] = b);
        return b
    };
    Y.p = function (a) {
        return isNaN(a) || !isFinite(a) ? Y.ZERO : a <= -Y.Ea ? Y.MIN_VALUE : a + 1 >= Y.Ea ? Y.MAX_VALUE : 0 > a ? Y.p(-a).i() : new Y(a % Y.B | 0, a / Y.B | 0)
    };
    Y.v = function (a, b) {
        return new Y(a, b)
    };
    Y.k = function (a, b) {
        0 == a.length && g(Error("number format error: empty string"));
        var c = b || 10;
        (2 > c || 36 < c) && g(Error("radix out of range: " + c));
        if ("-" == a.charAt(0)) {
            return Y.k(a.substring(1), c).i()
        }
        0 <= a.indexOf("-") && g(Error('number format error: interior "-" character: ' + a));
        for (var d = Y.p(Math.pow(c, 8)), e = Y.ZERO, f = 0; f < a.length; f += 8) {
            var h = Math.min(8, a.length - f),
                i = parseInt(a.substring(f, f + h), c);
            8 > h ? (h = Y.p(Math.pow(c, h)), e = e.multiply(h).add(Y.p(i))) : (e = e.multiply(d), e = e.add(Y.p(i)))
        }
        return e
    };
    Y.ea = 65536;
    Y.Od = 16777216;
    Y.B = Y.ea * Y.ea;
    Y.Pd = Y.B / 2;
    Y.Qd = Y.B * Y.ea;
    Y.eb = Y.B * Y.B;
    Y.Ea = Y.eb / 2;
    Y.ZERO = Y.D(0);
    Y.ONE = Y.D(1);
    Y.Da = Y.D(-1);
    Y.MAX_VALUE = Y.v(-1, 2147483647);
    Y.MIN_VALUE = Y.v(0, -2147483648);
    Y.cb = Y.D(16777216);
    q = Y.prototype;
    q.Z = function () {
        return this.j * Y.B + this.ob()
    };
    q.toString = function (a) {
        a = a || 10;
        (2 > a || 36 < a) && g(Error("radix out of range: " + a));
        if (this.G()) {
            return "0"
        }
        if (this.n()) {
            if (this.o(Y.MIN_VALUE)) {
                var b = Y.p(a),
                    c = this.F(b),
                    b = c.multiply(b).R(this);
                return c.toString(a) + b.h.toString(a)
            }
            return "-" + this.i().toString(a)
        }
        for (var c = Y.p(Math.pow(a, 6)), b = this, d = "";;) {
            var e = b.F(c),
                f = b.R(e.multiply(c)).h.toString(a),
                b = e;
            if (b.G()) {
                return f + d
            }
            for (; 6 > f.length;) {
                f = "0" + f
            }
            d = "" + f + d
        }
    };
    q.ob = function () {
        return 0 <= this.h ? this.h : Y.B + this.h
    };
    q.G = function () {
        return 0 == this.j && 0 == this.h
    };
    q.n = function () {
        return 0 > this.j
    };
    q.Pa = function () {
        return 1 == (this.h & 1)
    };
    q.o = function (a) {
        return this.j == a.j && this.h == a.h
    };
    q.Ra = function () {
        return 0 > this.ja(Y.cb)
    };
    q.qb = function (a) {
        return 0 < this.ja(a)
    };
    q.rb = function (a) {
        return 0 <= this.ja(a)
    };
    q.ja = function (a) {
        if (this.o(a)) {
            return 0
        }
        var b = this.n(),
            c = a.n();
        return b && !c ? -1 : !b && c ? 1 : this.R(a).n() ? -1 : 1
    };
    q.i = function () {
        return this.o(Y.MIN_VALUE) ? Y.MIN_VALUE : this.xb().add(Y.ONE)
    };
    q.add = function (a) {
        var b = this.j >>> 16,
            c = this.j & 65535,
            d = this.h >>> 16,
            e = a.j >>> 16,
            f = a.j & 65535,
            h = a.h >>> 16,
            i;
        i = 0 + ((this.h & 65535) + (a.h & 65535));
        a = 0 + (i >>> 16);
        a += d + h;
        d = 0 + (a >>> 16);
        d += c + f;
        c = 0 + (d >>> 16);
        c = c + (b + e) & 65535;
        return Y.v((a & 65535) << 16 | i & 65535, c << 16 | d & 65535)
    };
    q.R = function (a) {
        return this.add(a.i())
    };
    q.multiply = function (a) {
        if (this.G() || a.G()) {
            return Y.ZERO
        }
        if (this.o(Y.MIN_VALUE)) {
            return a.Pa() ? Y.MIN_VALUE : Y.ZERO
        }
        if (a.o(Y.MIN_VALUE)) {
            return this.Pa() ? Y.MIN_VALUE : Y.ZERO
        }
        if (this.n()) {
            return a.n() ? this.i().multiply(a.i()) : this.i().multiply(a).i()
        }
        if (a.n()) {
            return this.multiply(a.i()).i()
        }
        if (this.Ra() && a.Ra()) {
            return Y.p(this.Z() * a.Z())
        }
        var b = this.j >>> 16,
            c = this.j & 65535,
            d = this.h >>> 16,
            e = this.h & 65535,
            f = a.j >>> 16,
            h = a.j & 65535,
            i = a.h >>> 16,
            a = a.h & 65535,
            j, n, y, v;
        v = 0 + e * a;
        y = 0 + (v >>> 16);
        y += d * a;
        n = 0 + (y >>> 16);
        y = (y & 65535) + e * i;
        n += y >>> 16;
        y &= 65535;
        n += c * a;
        j = 0 + (n >>> 16);
        n = (n & 65535) + d * i;
        j += n >>> 16;
        n &= 65535;
        n += e * h;
        j += n >>> 16;
        n &= 65535;
        j = j + (b * a + c * i + d * h + e * f) & 65535;
        return Y.v(y << 16 | v & 65535, j << 16 | n)
    };
    q.F = function (a) {
        a.G() && g(Error("division by zero"));
        if (this.G()) {
            return Y.ZERO
        }
        if (this.o(Y.MIN_VALUE)) {
            if (a.o(Y.ONE) || a.o(Y.Da)) {
                return Y.MIN_VALUE
            }
            if (a.o(Y.MIN_VALUE)) {
                return Y.ONE
            }
            var b = this.Db().F(a).shiftLeft(1);
            if (b.o(Y.ZERO)) {
                return a.n() ? Y.ONE : Y.Da
            }
            var c = this.R(a.multiply(b));
            return b.add(c.F(a))
        }
        if (a.o(Y.MIN_VALUE)) {
            return Y.ZERO
        }
        if (this.n()) {
            return a.n() ? this.i().F(a.i()) : this.i().F(a).i()
        }
        if (a.n()) {
            return this.F(a.i()).i()
        }
        for (var d = Y.ZERO, c = this; c.rb(a);) {
            for (var b = Math.max(1, Math.floor(c.Z() / a.Z())), e = Math.ceil(Math.log(b) / Math.LN2), e = 48 >= e ? 1 : Math.pow(2, e - 48), f = Y.p(b), h = f.multiply(a); h.n() || h.qb(c);) {
                b -= e, f = Y.p(b), h = f.multiply(a)
            }
            f.G() && (f = Y.ONE);
            d = d.add(f);
            c = c.R(h)
        }
        return d
    };
    q.xb = function () {
        return Y.v(~this.h, ~this.j)
    };
    q.shiftLeft = function (a) {
        a &= 63;
        if (0 == a) {
            return this
        }
        var b = this.h;
        return 32 > a ? Y.v(b << a, this.j << a | b >>> 32 - a) : Y.v(0, b << a - 32)
    };
    q.Db = function () {
        var a;
        a = 1;
        if (0 == a) {
            return this
        }
        var b = this.j;
        return 32 > a ? Y.v(this.h >>> a | b << 32 - a, b >> a) : Y.v(b >> a - 32, 0 <= b ? 0 : -1)
    };
    q = X.prototype;
    q.ga = function (a, b, c, d) {
        for (var e = 0, f = 0; 0 <= --d;) {
            var h = a * this[e++] + b[c] + f,
                f = Math.floor(h / 67108864);
            b[c++] = h & 67108863
        }
        return f
    };
    q.f = 26;
    q.u = 67108863;
    q.K = 67108864;
    q.bb = Math.pow(2, 52);
    q.Aa = 26;
    q.Ba = 0;
    var $c = [],
        bd, Z;
    bd = 48;
    for (Z = 0; 9 >= Z; ++Z) {
        $c[bd++] = Z
    }
    bd = 97;
    for (Z = 10; 36 > Z; ++Z) {
        $c[bd++] = Z
    }
    bd = 65;
    for (Z = 10; 36 > Z; ++Z) {
        $c[bd++] = Z
    }
    q = X.prototype;
    q.copyTo = function (a) {
        for (var b = this.b - 1; 0 <= b; --b) {
            a[b] = this[b]
        }
        a.b = this.b;
        a.c = this.c
    };
    q.D = function (a) {
        this.b = 1;
        this.c = 0 > a ? -1 : 0;
        0 < a ? this[0] = a : -1 > a ? this[0] = a + DV : this.b = 0
    };
    q.k = function (a, b) {
        var c;
        if (16 == b) {
            c = 4
        } else {
            if (8 == b) {
                c = 3
            } else {
                if (256 == b) {
                    c = 8
                } else {
                    if (2 == b) {
                        c = 1
                    } else {
                        if (32 == b) {
                            c = 5
                        } else {
                            if (4 == b) {
                                c = 2
                            } else {
                                this.nb(a, b);
                                return
                            }
                        }
                    }
                }
            }
        }
        this.c = this.b = 0;
        for (var d = a.length, e = p, f = 0; 0 <= --d;) {
            var h = 8 == c ? a[d] & 255 : Zc(a, d);
            0 > h ? "-" == a.charAt(d) && (e = l) : (e = p, 0 == f ? this[this.b++] = h : f + c > this.f ? (this[this.b - 1] |= (h & (1 << this.f - f) - 1) << f, this[this.b++] = h >> this.f - f) : this[this.b - 1] |= h << f, f += c, f >= this.f && (f -= this.f))
        }
        8 == c && 0 != (a[0] & 128) && (this.c = -1, 0 < f && (this[this.b - 1] |= (1 << this.f - f) - 1 << f));
        this.C();
        e && X.ZERO.t(this, this)
    };
    q.C = function () {
        for (var a = this.c & this.u; 0 < this.b && this[this.b - 1] == a;) {
            --this.b
        }
    };
    q.la = function (a, b) {
        var c;
        for (c = this.b - 1; 0 <= c; --c) {
            b[c + a] = this[c]
        }
        for (c = a - 1; 0 <= c; --c) {
            b[c] = 0
        }
        b.b = this.b + a;
        b.c = this.c
    };
    q.jb = function (a, b) {
        for (var c = a; c < this.b; ++c) {
            b[c - a] = this[c]
        }
        b.b = Math.max(this.b - a, 0);
        b.c = this.c
    };
    q.Qa = function (a, b) {
        var c = a % this.f,
            d = this.f - c,
            e = (1 << d) - 1,
            f = Math.floor(a / this.f),
            h = this.c << c & this.u,
            i;
        for (i = this.b - 1; 0 <= i; --i) {
            b[i + f + 1] = this[i] >> d | h, h = (this[i] & e) << c
        }
        for (i = f - 1; 0 <= i; --i) {
            b[i] = 0
        }
        b[f] = h;
        b.b = this.b + f + 1;
        b.c = this.c;
        b.C()
    };
    q.zb = function (a, b) {
        b.c = this.c;
        var c = Math.floor(a / this.f);
        if (c >= this.b) {
            b.b = 0
        } else {
            var d = a % this.f,
                e = this.f - d,
                f = (1 << d) - 1;
            b[0] = this[c] >> d;
            for (var h = c + 1; h < this.b; ++h) {
                b[h - c - 1] |= (this[h] & f) << e, b[h - c] = this[h] >> d
            }
            0 < d && (b[this.b - c - 1] |= (this.c & f) << e);
            b.b = this.b - c;
            b.C()
        }
    };
    q.t = function (a, b) {
        for (var c = 0, d = 0, e = Math.min(a.b, this.b); c < e;) {
            d += this[c] - a[c], b[c++] = d & this.u, d >>= this.f
        }
        if (a.b < this.b) {
            for (d -= a.c; c < this.b;) {
                d += this[c], b[c++] = d & this.u, d >>= this.f
            }
            d += this.c
        } else {
            for (d += this.c; c < a.b;) {
                d -= a[c], b[c++] = d & this.u, d >>= this.f
            }
            d -= a.c
        }
        b.c = 0 > d ? -1 : 0; - 1 > d ? b[c++] = this.K + d : 0 < d && (b[c++] = d);
        b.b = c;
        b.C()
    };
    q.vb = function (a) {
        var b = $.Xa,
            c = this.abs(),
            d = b.abs(),
            e = c.b;
        for (a.b = e + d.b; 0 <= --e;) {
            a[e] = 0
        }
        for (e = 0; e < d.b; ++e) {
            a[e + c.b] = c.ga(d[e], a, e, c.b)
        }
        a.c = 0;
        a.C();
        this.c != b.c && X.ZERO.t(a, a)
    };
    q.Ja = function (a, b, c) {
        var d = a.abs();
        if (!(0 >= d.b)) {
            var e = this.abs();
            if (e.b < d.b) {
                b != m && b.D(0), c != m && this.copyTo(c)
            } else {
                c == m && (c = Yc());
                var f = Yc(),
                    h = this.c,
                    a = a.c,
                    i = d[d.b - 1],
                    j = 1,
                    n;
                if (0 != (n = i >>> 16)) {
                    i = n, j += 16
                }
                if (0 != (n = i >> 8)) {
                    i = n, j += 8
                }
                if (0 != (n = i >> 4)) {
                    i = n, j += 4
                }
                if (0 != (n = i >> 2)) {
                    i = n, j += 2
                }
                0 != i >> 1 && (j += 1);
                i = this.f - j;
                0 < i ? (d.Qa(i, f), e.Qa(i, c)) : (d.copyTo(f), e.copyTo(c));
                d = f.b;
                e = f[d - 1];
                if (0 != e) {
                    n = e * (1 << this.Aa) + (1 < d ? f[d - 2] >> this.Ba : 0);
                    j = this.bb / n;
                    n = (1 << this.Aa) / n;
                    var y = 1 << this.Ba,
                        v = c.b,
                        C = v - d,
                        D = b == m ? Yc() : b;
                    f.la(C, D);
                    0 <= c.U(D) && (c[c.b++] = 1, c.t(D, c));
                    X.ONE.la(d, D);
                    for (D.t(f, f); f.b < d;) {
                        f[f.b++] = 0
                    }
                    for (; 0 <= --C;) {
                        var K = c[--v] == e ? this.u : Math.floor(c[v] * j + (c[v - 1] + y) * n);
                        if ((c[v] += f.ga(K, c, C, d)) < K) {
                            f.la(C, D);
                            for (c.t(D, c); c[v] < --K;) {
                                c.t(D, c)
                            }
                        }
                    }
                    b != m && (c.jb(d, b), h != a && X.ZERO.t(b, b));
                    c.b = d;
                    c.C();
                    0 < i && c.zb(i, c);
                    0 > h && X.ZERO.t(c, c)
                }
            }
        }
    };
    q.toString = function (a) {
        if (0 > this.c) {
            return "-" + this.i().toString(a)
        }
        if (16 == a) {
            a = 4
        } else {
            if (8 == a) {
                a = 3
            } else {
                if (2 == a) {
                    a = 1
                } else {
                    if (32 == a) {
                        a = 5
                    } else {
                        if (4 == a) {
                            a = 2
                        } else {
                            return this.Fb(a)
                        }
                    }
                }
            }
        }
        var b = (1 << a) - 1,
            c, d = p,
            e = "",
            f = this.b,
            h = this.f - f * this.f % a;
        if (0 < f--) {
            if (h < this.f && 0 < (c = this[f] >> h)) {
                d = l, e = "0123456789abcdefghijklmnopqrstuvwxyz".charAt(c)
            }
            for (; 0 <= f;) {
                h < a ? (c = (this[f] & (1 << h) - 1) << a - h, c |= this[--f] >> (h += this.f - a)) : (c = this[f] >> (h -= a) & b, 0 >= h && (h += this.f, --f)), 0 < c && (d = l), d && (e += "0123456789abcdefghijklmnopqrstuvwxyz".charAt(c))
            }
        }
        return d ? e : "0"
    };
    q.i = function () {
        var a = Yc();
        X.ZERO.t(this, a);
        return a
    };
    q.abs = function () {
        return 0 > this.c ? this.i() : this
    };
    q.U = function (a) {
        var b = this.c - a.c;
        if (0 != b) {
            return b
        }
        var c = this.b,
            b = c - a.b;
        if (0 != b) {
            return 0 > this.c ? -b : b
        }
        for (; 0 <= --c;) {
            if (0 != (b = this[c] - a[c])) {
                return b
            }
        }
        return 0
    };
    X.ZERO = ad(0);
    X.ONE = ad(1);
    q = X.prototype;
    q.nb = function (a, b) {
        this.D(0);
        b == m && (b = 10);
        for (var c = this.S(b), d = Math.pow(b, c), e = p, f = 0, h = 0, i = 0; i < a.length; ++i) {
            var j = Zc(a, i);
            0 > j ? "-" == a.charAt(i) && 0 == this.ra() && (e = l) : (h = b * h + j, ++f >= c && (this.Ia(d), this.Ha(h), h = f = 0))
        }
        0 < f && (this.Ia(Math.pow(b, f)), this.Ha(h));
        e && X.ZERO.t(this, this)
    };
    q.S = function (a) {
        return Math.floor(Math.LN2 * this.f / Math.log(a))
    };
    q.ra = function () {
        return 0 > this.c ? -1 : 0 >= this.b || 1 == this.b && 0 >= this[0] ? 0 : 1
    };
    q.Ia = function (a) {
        this[this.b] = this.ga(a - 1, this, 0, this.b);
        ++this.b;
        this.C()
    };
    q.Ha = function (a) {
        var b = 0;
        if (0 != a) {
            for (; this.b <= b;) {
                this[this.b++] = 0
            }
            for (this[b] += a; this[b] >= this.K;) {
                this[b] -= this.K, ++b >= this.b && (this[this.b++] = 0), ++this[b]
            }
        }
    };
    q.Fb = function (a) {
        a == m && (a = 10);
        if (0 == this.ra() || 2 > a || 36 < a) {
            return "0"
        }
        var b = this.S(a),
            b = Math.pow(a, b),
            c = ad(b),
            d = Yc(),
            e = Yc(),
            f = "";
        for (this.Ja(c, d, e); 0 < d.ra();) {
            f = (b + e.Oa()).toString(a).substr(1) + f, d.Ja(c, d, e)
        }
        return e.Oa().toString(a) + f
    };
    q.Oa = function () {
        if (0 > this.c) {
            if (1 == this.b) {
                return this[0] - this.K
            }
            if (0 == this.b) {
                return -1
            }
        } else {
            if (1 == this.b) {
                return this[0]
            }
            if (0 == this.b) {
                return 0
            }
        }
        return (this[1] & (1 << 32 - this.f) - 1) << this.f | this[0]
    };
    q.fa = function (a, b) {
        for (var c = 0, d = 0, e = Math.min(a.b, this.b); c < e;) {
            d += this[c] + a[c], b[c++] = d & this.u, d >>= this.f
        }
        if (a.b < this.b) {
            for (d += a.c; c < this.b;) {
                d += this[c], b[c++] = d & this.u, d >>= this.f
            }
            d += this.c
        } else {
            for (d += this.c; c < a.b;) {
                d += a[c], b[c++] = d & this.u, d >>= this.f
            }
            d += a.c
        }
        b.c = 0 > d ? -1 : 0;
        0 < d ? b[c++] = d : -1 > d && (b[c++] = this.K + d);
        b.b = c;
        b.C()
    };
    var $ = {
        abs: function (a, b) {
            var c = new Y(a, b),
                c = c.n() ? c.i() : c;
            B[qb >> 2] = c.h;
            B[qb + 4 >> 2] = c.j
        },
        Ka: function () {
            $.kb || ($.kb = l, $.Xa = new X, $.Xa.k("4294967296", 10), $.sa = new X, $.sa.k("18446744073709551616", 10), $.xe = new X, $.ye = new X)
        },
        me: function (a, b) {
            var c = new X;
            c.k(b.toString(), 10);
            var d = new X;
            c.vb(d);
            c = new X;
            c.k(a.toString(), 10);
            var e = new X;
            c.fa(d, e);
            return e
        },
        stringify: function (a, b, c) {
            a = (new Y(a, b)).toString();
            c && "-" == a[0] && ($.Ka(), c = new X, c.k(a, 10), a = new X, $.sa.fa(c, a), a = a.toString(10));
            return a
        },
        k: function (a, b, c, d, e) {
            $.Ka();
            var f = new X;
            f.k(a, b);
            a = new X;
            a.k(c, 10);
            c = new X;
            c.k(d, 10);
            e && 0 > f.U(X.ZERO) && (d = new X, f.fa($.sa, d), f = d);
            d = p;
            0 > f.U(a) ? (f = a, d = l) : 0 < f.U(c) && (f = c, d = l);
            f = Y.k(f.toString());
            B[qb >> 2] = f.h;
            B[qb + 4 >> 2] = f.j;
            d && g("range error")
        }
    };
    lc = $;
    var cd, dd;
    s.callMain = s.$d = function (a) {
        function b() {
            for (var a = 0; 3 > a; a++) {
                d.push(0)
            }
        }
        w(0 == L, "cannot call main when async dependencies remain! (listen on __ATMAIN__)");
        w(0 == Wa.length, "cannot call main when preRun functions remain to be called");
        a = a || [];
        ab || (ab = l, Va(Xa));
        var c = a.length + 1,
            d = [F(J("/bin/this.program"), "i8", Ka)];
        b();
        for (var e = 0; e < c - 1; e += 1) {
            d.push(F(J(a[e]), "i8", Ka)), b()
        }
        d.push(0);
        d = F(d, "i32", Ka);
        cd = u;
        dd = l;
        var f;
        try {
            f = s._main(c, d, 0)
        } catch (h) {
            if (h && "object" == typeof h && "ExitStatus" == h.type) {
                return s.print("Exit Status: " + h.value), h.value
            }
            "SimulateInfiniteLoop" == h ? s.noExitRuntime = l : g(h)
        } finally {
            dd = p
        }
        s.noExitRuntime || ed(f)
    };

    function lb(a) {
        function b() {
            ab || (ab = l, Va(Xa));
            Va(Ya);
            gb = l;
            s._main && kb && s.callMain(a);
            if (s.postRun) {
                for ("function" == typeof s.postRun && (s.postRun = [s.postRun]); s.postRun.length;) {
                    cb(s.postRun.shift())
                }
            }
            Va($a)
        }
        a = a || s.arguments;
        if (0 < L) {
            s.P("run() called, but dependencies remain, so not running")
        } else {
            if (s.preRun) {
                for ("function" == typeof s.preRun && (s.preRun = [s.preRun]); s.preRun.length;) {
                    bb(s.preRun.shift())
                }
            }
            Va(Wa);
            0 < L || (s.setStatus ? (s.setStatus("Running..."), setTimeout(function () {
                setTimeout(function () {
                    s.setStatus("")
                }, 1);
                za || b()
            }, 1)) : b())
        }
    }
    s.run = s.we = lb;

    function ed(a) {
        za = l;
        u = cd;
        Va(Za);
        dd && g({
            type: "ExitStatus",
            value: a
        })
    }
    s.exit = s.de = ed;

    function wa(a) {
        a && s.print(a);
        za = l;
        g("abort() at " + Error().stack)
    }
    s.abort = s.abort = wa;
    if (s.preInit) {
        for ("function" == typeof s.preInit && (s.preInit = [s.preInit]); 0 < s.preInit.length;) {
            s.preInit.pop()()
        }
    }
    var kb = l;
    s.noInitialRun && (kb = p);
    lb();
    var scrypt = (function () {
        var exports = {};

        //---------------------------------------------------------------------------
        // Horrifying UTF-8 and hex codecs

        function encode_utf8(s) {
            return encode_latin1(unescape(encodeURIComponent(s)));
        }

        function encode_latin1(s) {
            var result = new Uint8Array(s.length);
            for (var i = 0; i < s.length; i++) {
                var c = s.charCodeAt(i);
                if ((c & 0xff) !== c) throw {
                    message: "Cannot encode string in Latin1",
                    str: s
                };
                result[i] = (c & 0xff);
            }
            return result;
        }

        function decode_utf8(bs) {
            return decodeURIComponent(escape(decode_latin1(bs)));
        }

        function decode_latin1(bs) {
            var encoded = [];
            for (var i = 0; i < bs.length; i++) {
                encoded.push(String.fromCharCode(bs[i]));
            }
            return encoded.join('');
        }

        function to_hex(bs) {
            var encoded = [];
            for (var i = 0; i < bs.length; i++) {
                encoded.push("0123456789abcdef" [(bs[i] >> 4) & 15]);
                encoded.push("0123456789abcdef" [bs[i] & 15]);
            }
            return encoded.join('');
        }

        //---------------------------------------------------------------------------

        function injectBytes(bs, leftPadding) {
            var p = leftPadding || 0;
            var address = scrypt_raw._malloc(bs.length + p);
            scrypt_raw.HEAPU8.set(bs, address + p);
            for (var i = address; i < address + p; i++) {
                scrypt_raw.HEAPU8[i] = 0;
            }
            return address;
        }

        function check_injectBytes(function_name, what, thing, expected_length, leftPadding) {
            check_length(function_name, what, thing, expected_length);
            return injectBytes(thing, leftPadding);
        }

        function extractBytes(address, length) {
            var result = new Uint8Array(length);
            result.set(scrypt_raw.HEAPU8.subarray(address, address + length));
            return result;
        }

        //---------------------------------------------------------------------------

        function check(function_name, result) {
            if (result !== 0) {
                throw {
                    message: "scrypt_raw." + function_name + " signalled an error"
                };
            }
        }

        function check_length(function_name, what, thing, expected_length) {
            if (thing.length !== expected_length) {
                throw {
                    message: "scrypt." + function_name + " expected " +
                        expected_length + "-byte " + what + " but got length " + thing.length
                };
            }
        }

        function Target(length) {
            this.length = length;
            this.address = scrypt_raw._malloc(length);
        }

        Target.prototype.extractBytes = function (offset) {
            var result = extractBytes(this.address + (offset || 0), this.length - (offset || 0));
            scrypt_raw._free(this.address);
            this.address = null;
            return result;
        };

        function free_all(addresses) {
            for (var i = 0; i < addresses.length; i++) {
                scrypt_raw._free(addresses[i]);
            }
        }

        //---------------------------------------------------------------------------

        function random_bytes(count) {
            var bs = new Uint8Array(count);
            if (typeof (window.crypto) !== "undefined") {
                if (typeof (window.crypto.getRandomValues) !== "undefined") {
                    window.crypto.getRandomValues(bs);
                    return bs;
                }
            }
            if (typeof (window.msCrypto) !== "undefined") {
                if (typeof (window.msCrypto.getRandomValues) !== "undefined") {
                    window.msCrypto.getRandomValues(bs);
                    return bs;
                }
            }
            throw {
                message: "No suitable random number generator found!"
            };
        }

        function crypto_scrypt(passwd, salt, n, r, p, buflen) {
            var buf = new Target(buflen);
            var pa = injectBytes(passwd);
            var sa = injectBytes(salt);
            check("_crypto_scrypt",
                scrypt_raw._crypto_scrypt(pa, passwd.length,
                    sa, salt.length,
                    n, 0, // 64 bits; zero upper half
                    r,
                    p,
                    buf.address, buf.length));
            free_all([pa, sa]);
            return buf.extractBytes();
        }

        //---------------------------------------------------------------------------

        exports.encode_utf8 = encode_utf8;
        exports.encode_latin1 = encode_latin1;
        exports.decode_utf8 = decode_utf8;
        exports.decode_latin1 = decode_latin1;
        exports.to_hex = to_hex;

        exports.random_bytes = random_bytes;
        exports.crypto_scrypt = crypto_scrypt;

        return exports;
    })();
    return scrypt;
};

}).call(this,require('_process'),"/node_modules/augur.js/node_modules/keythereum/lib")

},{"_process":351,"fs":148,"path":350}],80:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"../package.json":105,"./elliptic/curve":83,"./elliptic/curves":86,"./elliptic/ec":87,"./elliptic/eddsa":90,"./elliptic/hmac-drbg":93,"./elliptic/utils":95,"brorand":97,"dup":45}],81:[function(require,module,exports){
'use strict';

var bn = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new bn(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);

  // Useful for many curves
  this.zero = new bn(0).toRed(this.red);
  this.one = new bn(1).toRed(this.red);
  this.two = new bn(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new bn(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;
  return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();
  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {
    return this.point(bytes.slice(1, 1 + len),
                      bytes.slice(1 + len, 1 + 2 * len));
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":80,"bn.js":96}],82:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new bn(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new bn(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new bn(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new bn(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y = rhs.redMul(lhs.redInvm()).redSqrt();
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new bn(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    this.z = z ? new bn(z, 16) : this.curve.one;
    this.t = t && new bn(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":80,"../curve":83,"bn.js":96,"inherits":104}],83:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./base":81,"./edwards":82,"./mont":84,"./short":85,"dup":48}],84:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new bn(conf.a, 16).toRed(this.red);
  this.b = new bn(conf.b, 16).toRed(this.red);
  this.i4 = new bn(4).toRed(this.red).redInvm();
  this.two = new bn(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new bn(x, 16);
    this.z = new bn(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":80,"../curve":83,"bn.js":96,"inherits":104}],85:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new bn(conf.a, 16).toRed(this.red);
  this.b = new bn(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new bn(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new bn(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new bn(vec.a, 16),
        b: new bn(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : bn.mont(num);
  var tinv = new bn(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new bn(1);
  var y1 = new bn(0);
  var x2 = new bn(0);
  var y2 = new bn(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.sign) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.sign) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new bn(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.sign) {
      split.k1.sign = !split.k1.sign;
      p = p.neg(true);
    }
    if (split.k2.sign) {
      split.k2.sign = !split.k2.sign;
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new bn(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new bn(0);
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    this.z = new bn(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new bn(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":80,"../curve":83,"bn.js":96,"inherits":104}],86:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"../elliptic":80,"./precomputed/secp256k1":94,"dup":51,"hash.js":98}],87:[function(require,module,exports){
'use strict';

var bn = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    pers: options.pers,
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new bn(2));
  do {
    var priv = new bn(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new bn(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray();
  for (var i = bkey.length; i < bytes; i++)
    bkey.unshift(0);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray();
  for (var i = nonce.length; i < bytes; i++)
    nonce.unshift(0);

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new bn(1));
  do {
    var k = new bn(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0)
      s = this.n.sub(s);

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  } while (true);
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new bn(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  var p = this.g.mulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  return p.getX().umod(this.n).cmp(r) === 0;
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new bn(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  r = this.curve.pointFromX(r, isYOdd);
  var eNeg = e.neg().umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  var rInv = signature.r.invm(n);
  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime = this.recoverPubKey(e, signature, i);

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":80,"./key":88,"./signature":89,"bn.js":96}],88:[function(require,module,exports){
'use strict';

var bn = require('bn.js');

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new bn(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":96}],89:[function(require,module,exports){
'use strict';

var bn = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new bn(options.r, 16);
  this.s = new bn(options.s, 16);
  if (options.recoveryParam !== null)
    this.recoveryParam = options.recoveryParam;
  else
    this.recoveryParam = null;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new bn(r);
  this.s = new bn(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":80,"bn.js":96}],90:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"../../elliptic":80,"./key":91,"./signature":92,"dup":55,"hash.js":98}],91:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":80}],92:[function(require,module,exports){
'use strict';

var bn = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof bn)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":80,"bn.js":96}],93:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"../elliptic":80,"dup":58,"hash.js":98}],94:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"dup":59}],95:[function(require,module,exports){
'use strict';

var utils = exports;
var bn = require('bn.js');

utils.assert = function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
};

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (!enc) {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  } else if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, computer) {
  var name = computer.name;
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new bn(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":96}],96:[function(require,module,exports){
(function (module, exports) {

'use strict';

// Utils

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

// Could use `inherits` module, but don't want to move from single file
// architecture yet.
function inherits(ctor, superCtor) {
  ctor.super_ = superCtor;
  var TempCtor = function () {};
  TempCtor.prototype = superCtor.prototype;
  ctor.prototype = new TempCtor();
  ctor.prototype.constructor = ctor;
}

// BN

function BN(number, base, endian) {
  // May be `new BN(bn)` ?
  if (number !== null &&
      typeof number === 'object' &&
      Array.isArray(number.words)) {
    return number;
  }

  this.sign = false;
  this.words = null;
  this.length = 0;

  // Reduction context
  this.red = null;

  if (base === 'le' || base === 'be') {
    endian = base;
    base = 10;
  }

  if (number !== null)
    this._init(number || 0, base || 10, endian || 'be');
}
if (typeof module === 'object')
  module.exports = BN;
else
  exports.BN = BN;

BN.BN = BN;
BN.wordSize = 26;

BN.max = function max(left, right) {
  if (left.cmp(right) > 0)
    return left;
  else
    return right;
};

BN.min = function min(left, right) {
  if (left.cmp(right) < 0)
    return left;
  else
    return right;
};

BN.prototype._init = function init(number, base, endian) {
  if (typeof number === 'number') {
    return this._initNumber(number, base, endian);
  } else if (typeof number === 'object') {
    return this._initArray(number, base, endian);
  }
  if (base === 'hex')
    base = 16;
  assert(base === (base | 0) && base >= 2 && base <= 36);

  number = number.toString().replace(/\s+/g, '');
  var start = 0;
  if (number[0] === '-')
    start++;

  if (base === 16)
    this._parseHex(number, start);
  else
    this._parseBase(number, base, start);

  if (number[0] === '-')
    this.sign = true;

  this.strip();

  if (endian !== 'le')
    return;

  this._initArray(this.toArray(), base, endian);
};

BN.prototype._initNumber = function _initNumber(number, base, endian) {
  if (number < 0) {
    this.sign = true;
    number = -number;
  }
  if (number < 0x4000000) {
    this.words = [ number & 0x3ffffff ];
    this.length = 1;
  } else if (number < 0x10000000000000) {
    this.words = [
      number & 0x3ffffff,
      (number / 0x4000000) & 0x3ffffff
    ];
    this.length = 2;
  } else {
    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
    this.words = [
      number & 0x3ffffff,
      (number / 0x4000000) & 0x3ffffff,
      1
    ];
    this.length = 3;
  }

  if (endian !== 'le')
    return;

  // Reverse the bytes
  this._initArray(this.toArray(), base, endian);
};

BN.prototype._initArray = function _initArray(number, base, endian) {
  // Perhaps a Uint8Array
  assert(typeof number.length === 'number');
  if (number.length <= 0) {
    this.words = [ 0 ];
    this.length = 1;
    return this;
  }

  this.length = Math.ceil(number.length / 3);
  this.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    this.words[i] = 0;

  var off = 0;
  if (endian === 'be') {
    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {
      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
  } else if (endian === 'le') {
    for (var i = 0, j = 0; i < number.length; i += 3) {
      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
  }
  return this.strip();
};

function parseHex(str, start, end) {
  var r = 0;
  var len = Math.min(str.length, end);
  for (var i = start; i < len; i++) {
    var c = str.charCodeAt(i) - 48;

    r <<= 4;

    // 'a' - 'f'
    if (c >= 49 && c <= 54)
      r |= c - 49 + 0xa;

    // 'A' - 'F'
    else if (c >= 17 && c <= 22)
      r |= c - 17 + 0xa;

    // '0' - '9'
    else
      r |= c & 0xf;
  }
  return r;
}

BN.prototype._parseHex = function _parseHex(number, start) {
  // Create possibly bigger array to ensure that it fits the number
  this.length = Math.ceil((number.length - start) / 6);
  this.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    this.words[i] = 0;

  // Scan 24-bit chunks and add them to the number
  var off = 0;
  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {
    var w = parseHex(number, i, i + 6);
    this.words[j] |= (w << off) & 0x3ffffff;
    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    off += 24;
    if (off >= 26) {
      off -= 26;
      j++;
    }
  }
  if (i + 6 !== start) {
    var w = parseHex(number, start, i + 6);
    this.words[j] |= (w << off) & 0x3ffffff;
    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
  }
  this.strip();
};

function parseBase(str, start, end, mul) {
  var r = 0;
  var len = Math.min(str.length, end);
  for (var i = start; i < len; i++) {
    var c = str.charCodeAt(i) - 48;

    r *= mul;

    // 'a'
    if (c >= 49)
      r += c - 49 + 0xa;

    // 'A'
    else if (c >= 17)
      r += c - 17 + 0xa;

    // '0' - '9'
    else
      r += c;
  }
  return r;
}

BN.prototype._parseBase = function _parseBase(number, base, start) {
  // Initialize as zero
  this.words = [ 0 ];
  this.length = 1;

  // Find length of limb in base
  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)
    limbLen++;
  limbLen--;
  limbPow = (limbPow / base) | 0;

  var total = number.length - start;
  var mod = total % limbLen;
  var end = Math.min(total, total - mod) + start;

  var word = 0;
  for (var i = start; i < end; i += limbLen) {
    word = parseBase(number, i, i + limbLen, base);

    this.imuln(limbPow);
    if (this.words[0] + word < 0x4000000)
      this.words[0] += word;
    else
      this._iaddn(word);
  }

  if (mod !== 0) {
    var pow = 1;
    var word = parseBase(number, i, number.length, base);

    for (var i = 0; i < mod; i++)
      pow *= base;
    this.imuln(pow);
    if (this.words[0] + word < 0x4000000)
      this.words[0] += word;
    else
      this._iaddn(word);
  }
};

BN.prototype.copy = function copy(dest) {
  dest.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    dest.words[i] = this.words[i];
  dest.length = this.length;
  dest.sign = this.sign;
  dest.red = this.red;
};

BN.prototype.clone = function clone() {
  var r = new BN(null);
  this.copy(r);
  return r;
};

// Remove leading `0` from `this`
BN.prototype.strip = function strip() {
  while (this.length > 1 && this.words[this.length - 1] === 0)
    this.length--;
  return this._normSign();
};

BN.prototype._normSign = function _normSign() {
  // -0 = 0
  if (this.length === 1 && this.words[0] === 0)
    this.sign = false;
  return this;
};

BN.prototype.inspect = function inspect() {
  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
};

/*

var zeros = [];
var groupSizes = [];
var groupBases = [];

var s = '';
var i = -1;
while (++i < BN.wordSize) {
  zeros[i] = s;
  s += '0';
}
groupSizes[0] = 0;
groupSizes[1] = 0;
groupBases[0] = 0;
groupBases[1] = 0;
var base = 2 - 1;
while (++base < 36 + 1) {
  var groupSize = 0;
  var groupBase = 1;
  while (groupBase < (1 << BN.wordSize) / base) {
    groupBase *= base;
    groupSize += 1;
  }
  groupSizes[base] = groupSize;
  groupBases[base] = groupBase;
}

*/

var zeros = [
  '',
  '0',
  '00',
  '000',
  '0000',
  '00000',
  '000000',
  '0000000',
  '00000000',
  '000000000',
  '0000000000',
  '00000000000',
  '000000000000',
  '0000000000000',
  '00000000000000',
  '000000000000000',
  '0000000000000000',
  '00000000000000000',
  '000000000000000000',
  '0000000000000000000',
  '00000000000000000000',
  '000000000000000000000',
  '0000000000000000000000',
  '00000000000000000000000',
  '000000000000000000000000',
  '0000000000000000000000000'
];

var groupSizes = [
  0, 0,
  25, 16, 12, 11, 10, 9, 8,
  8, 7, 7, 7, 7, 6, 6,
  6, 6, 6, 6, 6, 5, 5,
  5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5
];

var groupBases = [
  0, 0,
  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
];

BN.prototype.toString = function toString(base, padding) {
  base = base || 10;
  var padding = padding | 0 || 1;
  if (base === 16 || base === 'hex') {
    var out = '';
    var off = 0;
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = this.words[i];
      var word = (((w << off) | carry) & 0xffffff).toString(16);
      carry = (w >>> (24 - off)) & 0xffffff;
      if (carry !== 0 || i !== this.length - 1)
        out = zeros[6 - word.length] + word + out;
      else
        out = word + out;
      off += 2;
      if (off >= 26) {
        off -= 26;
        i--;
      }
    }
    if (carry !== 0)
      out = carry.toString(16) + out;
    while (out.length % padding !== 0)
      out = '0' + out;
    if (this.sign)
      out = '-' + out;
    return out;
  } else if (base === (base | 0) && base >= 2 && base <= 36) {
    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
    var groupSize = groupSizes[base];
    // var groupBase = Math.pow(base, groupSize);
    var groupBase = groupBases[base];
    var out = '';
    var c = this.clone();
    c.sign = false;
    while (c.cmpn(0) !== 0) {
      var r = c.modn(groupBase).toString(base);
      c = c.idivn(groupBase);

      if (c.cmpn(0) !== 0)
        out = zeros[groupSize - r.length] + r + out;
      else
        out = r + out;
    }
    if (this.cmpn(0) === 0)
      out = '0' + out;
    while (out.length % padding !== 0)
      out = '0' + out;
    if (this.sign)
      out = '-' + out;
    return out;
  } else {
    assert(false, 'Base should be between 2 and 36');
  }
};

BN.prototype.toJSON = function toJSON() {
  return this.toString(16);
};

BN.prototype.toArray = function toArray(endian, length) {
  this.strip();
  var littleEndian = endian === 'le';
  var res = new Array(this.byteLength());
  res[0] = 0;

  var q = this.clone();
  if (!littleEndian) {
    // Assume big-endian
    for (var i = 0; q.cmpn(0) !== 0; i++) {
      var b = q.andln(0xff);
      q.iushrn(8);

      res[res.length - i - 1] = b;
    }
  } else {
    for (var i = 0; q.cmpn(0) !== 0; i++) {
      var b = q.andln(0xff);
      q.iushrn(8);

      res[i] = b;
    }
  }

  if (length) {
    assert(res.length <= length, 'byte array longer than desired length');

    while (res.length < length) {
      if (littleEndian)
        res.push(0);
      else
        res.unshift(0);
    }
  }

  return res;
};

if (Math.clz32) {
  BN.prototype._countBits = function _countBits(w) {
    return 32 - Math.clz32(w);
  };
} else {
  BN.prototype._countBits = function _countBits(w) {
    var t = w;
    var r = 0;
    if (t >= 0x1000) {
      r += 13;
      t >>>= 13;
    }
    if (t >= 0x40) {
      r += 7;
      t >>>= 7;
    }
    if (t >= 0x8) {
      r += 4;
      t >>>= 4;
    }
    if (t >= 0x02) {
      r += 2;
      t >>>= 2;
    }
    return r + t;
  };
}

BN.prototype._zeroBits = function _zeroBits(w) {
  // Short-cut
  if (w === 0)
    return 26;

  var t = w;
  var r = 0;
  if ((t & 0x1fff) === 0) {
    r += 13;
    t >>>= 13;
  }
  if ((t & 0x7f) === 0) {
    r += 7;
    t >>>= 7;
  }
  if ((t & 0xf) === 0) {
    r += 4;
    t >>>= 4;
  }
  if ((t & 0x3) === 0) {
    r += 2;
    t >>>= 2;
  }
  if ((t & 0x1) === 0)
    r++;
  return r;
};

// Return number of used bits in a BN
BN.prototype.bitLength = function bitLength() {
  var hi = 0;
  var w = this.words[this.length - 1];
  var hi = this._countBits(w);
  return (this.length - 1) * 26 + hi;
};

function toBitArray(num) {
  var w = new Array(num.bitLength());

  for (var bit = 0; bit < w.length; bit++) {
    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
  }

  return w;
}

// Number of trailing zero bits
BN.prototype.zeroBits = function zeroBits() {
  if (this.cmpn(0) === 0)
    return 0;

  var r = 0;
  for (var i = 0; i < this.length; i++) {
    var b = this._zeroBits(this.words[i]);
    r += b;
    if (b !== 26)
      break;
  }
  return r;
};

BN.prototype.byteLength = function byteLength() {
  return Math.ceil(this.bitLength() / 8);
};

// Return negative clone of `this`
BN.prototype.neg = function neg() {
  if (this.cmpn(0) === 0)
    return this.clone();

  var r = this.clone();
  r.sign = !this.sign;
  return r;
};


// Or `num` with `this` in-place
BN.prototype.iuor = function iuor(num) {
  while (this.length < num.length)
    this.words[this.length++] = 0;

  for (var i = 0; i < num.length; i++)
    this.words[i] = this.words[i] | num.words[i];

  return this.strip();
};

BN.prototype.ior = function ior(num) {
  assert(!this.sign && !num.sign);
  return this.iuor(num);
};


// Or `num` with `this`
BN.prototype.or = function or(num) {
  if (this.length > num.length)
    return this.clone().ior(num);
  else
    return num.clone().ior(this);
};

BN.prototype.uor = function uor(num) {
  if (this.length > num.length)
    return this.clone().iuor(num);
  else
    return num.clone().iuor(this);
};


// And `num` with `this` in-place
BN.prototype.iuand = function iuand(num) {
  // b = min-length(num, this)
  var b;
  if (this.length > num.length)
    b = num;
  else
    b = this;

  for (var i = 0; i < b.length; i++)
    this.words[i] = this.words[i] & num.words[i];

  this.length = b.length;

  return this.strip();
};

BN.prototype.iand = function iand(num) {
  assert(!this.sign && !num.sign);
  return this.iuand(num);
};


// And `num` with `this`
BN.prototype.and = function and(num) {
  if (this.length > num.length)
    return this.clone().iand(num);
  else
    return num.clone().iand(this);
};

BN.prototype.uand = function uand(num) {
  if (this.length > num.length)
    return this.clone().iuand(num);
  else
    return num.clone().iuand(this);
};


// Xor `num` with `this` in-place
BN.prototype.iuxor = function iuxor(num) {
  // a.length > b.length
  var a;
  var b;
  if (this.length > num.length) {
    a = this;
    b = num;
  } else {
    a = num;
    b = this;
  }

  for (var i = 0; i < b.length; i++)
    this.words[i] = a.words[i] ^ b.words[i];

  if (this !== a)
    for (; i < a.length; i++)
      this.words[i] = a.words[i];

  this.length = a.length;

  return this.strip();
};

BN.prototype.ixor = function ixor(num) {
  assert(!this.sign && !num.sign);
  return this.iuxor(num);
};


// Xor `num` with `this`
BN.prototype.xor = function xor(num) {
  if (this.length > num.length)
    return this.clone().ixor(num);
  else
    return num.clone().ixor(this);
};

BN.prototype.uxor = function uxor(num) {
  if (this.length > num.length)
    return this.clone().iuxor(num);
  else
    return num.clone().iuxor(this);
};


// Set `bit` of `this`
BN.prototype.setn = function setn(bit, val) {
  assert(typeof bit === 'number' && bit >= 0);

  var off = (bit / 26) | 0;
  var wbit = bit % 26;

  while (this.length <= off)
    this.words[this.length++] = 0;

  if (val)
    this.words[off] = this.words[off] | (1 << wbit);
  else
    this.words[off] = this.words[off] & ~(1 << wbit);

  return this.strip();
};


// Add `num` to `this` in-place
BN.prototype.iadd = function iadd(num) {
  // negative + positive
  if (this.sign && !num.sign) {
    this.sign = false;
    var r = this.isub(num);
    this.sign = !this.sign;
    return this._normSign();

  // positive + negative
  } else if (!this.sign && num.sign) {
    num.sign = false;
    var r = this.isub(num);
    num.sign = true;
    return r._normSign();
  }

  // a.length > b.length
  var a;
  var b;
  if (this.length > num.length) {
    a = this;
    b = num;
  } else {
    a = num;
    b = this;
  }

  var carry = 0;
  for (var i = 0; i < b.length; i++) {
    var r = a.words[i] + b.words[i] + carry;
    this.words[i] = r & 0x3ffffff;
    carry = r >>> 26;
  }
  for (; carry !== 0 && i < a.length; i++) {
    var r = a.words[i] + carry;
    this.words[i] = r & 0x3ffffff;
    carry = r >>> 26;
  }

  this.length = a.length;
  if (carry !== 0) {
    this.words[this.length] = carry;
    this.length++;
  // Copy the rest of the words
  } else if (a !== this) {
    for (; i < a.length; i++)
      this.words[i] = a.words[i];
  }

  return this;
};

// Add `num` to `this`
BN.prototype.add = function add(num) {
  if (num.sign && !this.sign) {
    num.sign = false;
    var res = this.sub(num);
    num.sign = true;
    return res;
  } else if (!num.sign && this.sign) {
    this.sign = false;
    var res = num.sub(this);
    this.sign = true;
    return res;
  }

  if (this.length > num.length)
    return this.clone().iadd(num);
  else
    return num.clone().iadd(this);
};

// Subtract `num` from `this` in-place
BN.prototype.isub = function isub(num) {
  // this - (-num) = this + num
  if (num.sign) {
    num.sign = false;
    var r = this.iadd(num);
    num.sign = true;
    return r._normSign();

  // -this - num = -(this + num)
  } else if (this.sign) {
    this.sign = false;
    this.iadd(num);
    this.sign = true;
    return this._normSign();
  }

  // At this point both numbers are positive
  var cmp = this.cmp(num);

  // Optimization - zeroify
  if (cmp === 0) {
    this.sign = false;
    this.length = 1;
    this.words[0] = 0;
    return this;
  }

  // a > b
  var a;
  var b;
  if (cmp > 0) {
    a = this;
    b = num;
  } else {
    a = num;
    b = this;
  }

  var carry = 0;
  for (var i = 0; i < b.length; i++) {
    var r = a.words[i] - b.words[i] + carry;
    carry = r >> 26;
    this.words[i] = r & 0x3ffffff;
  }
  for (; carry !== 0 && i < a.length; i++) {
    var r = a.words[i] + carry;
    carry = r >> 26;
    this.words[i] = r & 0x3ffffff;
  }

  // Copy rest of the words
  if (carry === 0 && i < a.length && a !== this)
    for (; i < a.length; i++)
      this.words[i] = a.words[i];
  this.length = Math.max(this.length, i);

  if (a !== this)
    this.sign = true;

  return this.strip();
};

// Subtract `num` from `this`
BN.prototype.sub = function sub(num) {
  return this.clone().isub(num);
};

/*
// NOTE: This could be potentionally used to generate loop-less multiplications
function _genCombMulTo(alen, blen) {
  var len = alen + blen - 1;
  var src = [
    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +
        'mask = 0x3ffffff, shift = 0x4000000;',
    'out.length = ' + len + ';'
  ];
  for (var k = 0; k < len; k++) {
    var minJ = Math.max(0, k - alen + 1);
    var maxJ = Math.min(k, blen - 1);

    for (var j = minJ; j <= maxJ; j++) {
      var i = k - j;
      var mul = 'a[' + i + '] * b[' + j + ']';

      if (j === minJ) {
        src.push('w = ' + mul + ' + c;');
        src.push('c = (w / shift) | 0;');
      } else {
        src.push('w += ' + mul + ';');
        src.push('c += (w / shift) | 0;');
      }
      src.push('w &= mask;');
    }
    src.push('o[' + k + '] = w;');
  }
  src.push('if (c !== 0) {',
           '  o[' + k + '] = c;',
           '  out.length++;',
           '}',
           'return out;');

  return src.join('\n');
}
*/

BN.prototype._smallMulTo = function _smallMulTo(num, out) {
  out.sign = num.sign !== this.sign;
  out.length = this.length + num.length;

  var carry = 0;
  for (var k = 0; k < out.length - 1; k++) {
    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
    // note that ncarry could be >= 0x3ffffff
    var ncarry = carry >>> 26;
    var rword = carry & 0x3ffffff;
    var maxJ = Math.min(k, num.length - 1);
    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i] | 0;
      var b = num.words[j] | 0;
      var r = a * b;

      var lo = r & 0x3ffffff;
      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
      lo = (lo + rword) | 0;
      rword = lo & 0x3ffffff;
      ncarry = (ncarry + (lo >>> 26)) | 0;
    }
    out.words[k] = rword;
    carry = ncarry;
  }
  if (carry !== 0) {
    out.words[k] = carry;
  } else {
    out.length--;
  }

  return out.strip();
};

BN.prototype._bigMulTo = function _bigMulTo(num, out) {
  out.sign = num.sign !== this.sign;
  out.length = this.length + num.length;

  var carry = 0;
  var hncarry = 0;
  for (var k = 0; k < out.length - 1; k++) {
    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
    // note that ncarry could be >= 0x3ffffff
    var ncarry = hncarry;
    hncarry = 0;
    var rword = carry & 0x3ffffff;
    var maxJ = Math.min(k, num.length - 1);
    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i] | 0;
      var b = num.words[j] | 0;
      var r = a * b;

      var lo = r & 0x3ffffff;
      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
      lo = (lo + rword) | 0;
      rword = lo & 0x3ffffff;
      ncarry = (ncarry + (lo >>> 26)) | 0;

      hncarry += ncarry >>> 26;
      ncarry &= 0x3ffffff;
    }
    out.words[k] = rword;
    carry = ncarry;
    ncarry = hncarry;
  }
  if (carry !== 0) {
    out.words[k] = carry;
  } else {
    out.length--;
  }

  return out.strip();
};

BN.prototype.mulTo = function mulTo(num, out) {
  var res;
  if (this.length + num.length < 63)
    res = this._smallMulTo(num, out);
  else
    res = this._bigMulTo(num, out);
  return res;
};

// Multiply `this` by `num`
BN.prototype.mul = function mul(num) {
  var out = new BN(null);
  out.words = new Array(this.length + num.length);
  return this.mulTo(num, out);
};

// In-place Multiplication
BN.prototype.imul = function imul(num) {
  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {
    this.words[0] = 0;
    this.length = 1;
    return this;
  }

  var tlen = this.length;
  var nlen = num.length;

  this.sign = num.sign !== this.sign;
  this.length = this.length + num.length;
  this.words[this.length - 1] = 0;

  for (var k = this.length - 2; k >= 0; k--) {
    // Sum all words with the same `i + j = k` and accumulate `carry`,
    // note that carry could be >= 0x3ffffff
    var carry = 0;
    var rword = 0;
    var maxJ = Math.min(k, nlen - 1);
    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i];
      var b = num.words[j];
      var r = a * b;

      var lo = r & 0x3ffffff;
      carry += (r / 0x4000000) | 0;
      lo += rword;
      rword = lo & 0x3ffffff;
      carry += lo >>> 26;
    }
    this.words[k] = rword;
    this.words[k + 1] += carry;
    carry = 0;
  }

  // Propagate overflows
  var carry = 0;
  for (var i = 1; i < this.length; i++) {
    var w = this.words[i] + carry;
    this.words[i] = w & 0x3ffffff;
    carry = w >>> 26;
  }

  return this.strip();
};

BN.prototype.imuln = function imuln(num) {
  assert(typeof num === 'number');

  // Carry
  var carry = 0;
  for (var i = 0; i < this.length; i++) {
    var w = this.words[i] * num;
    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
    carry >>= 26;
    carry += (w / 0x4000000) | 0;
    // NOTE: lo is 27bit maximum
    carry += lo >>> 26;
    this.words[i] = lo & 0x3ffffff;
  }

  if (carry !== 0) {
    this.words[i] = carry;
    this.length++;
  }

  return this;
};

BN.prototype.muln = function muln(num) {
  return this.clone().imuln(num);
};

// `this` * `this`
BN.prototype.sqr = function sqr() {
  return this.mul(this);
};

// `this` * `this` in-place
BN.prototype.isqr = function isqr() {
  return this.mul(this);
};

// Math.pow(`this`, `num`)
BN.prototype.pow = function pow(num) {
  var w = toBitArray(num);
  if (w.length === 0)
    return new BN(1);

  // Skip leading zeroes
  var res = this;
  for (var i = 0; i < w.length; i++, res = res.sqr())
    if (w[i] !== 0)
      break;

  if (++i < w.length) {
    for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
      if (w[i] === 0)
        continue;
      res = res.mul(q);
    }
  }

  return res;
};

// Shift-left in-place
BN.prototype.iushln = function iushln(bits) {
  assert(typeof bits === 'number' && bits >= 0);
  var r = bits % 26;
  var s = (bits - r) / 26;
  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);

  if (r !== 0) {
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var newCarry = this.words[i] & carryMask;
      var c = (this.words[i] - newCarry) << r;
      this.words[i] = c | carry;
      carry = newCarry >>> (26 - r);
    }
    if (carry) {
      this.words[i] = carry;
      this.length++;
    }
  }

  if (s !== 0) {
    for (var i = this.length - 1; i >= 0; i--)
      this.words[i + s] = this.words[i];
    for (var i = 0; i < s; i++)
      this.words[i] = 0;
    this.length += s;
  }

  return this.strip();
};

BN.prototype.ishln = function ishln(bits) {
  // TODO(indutny): implement me
  assert(!this.sign);
  return this.iushln(bits);
};

// Shift-right in-place
// NOTE: `hint` is a lowest bit before trailing zeroes
// NOTE: if `extended` is present - it will be filled with destroyed bits
BN.prototype.iushrn = function iushrn(bits, hint, extended) {
  assert(typeof bits === 'number' && bits >= 0);
  var h;
  if (hint)
    h = (hint - (hint % 26)) / 26;
  else
    h = 0;

  var r = bits % 26;
  var s = Math.min((bits - r) / 26, this.length);
  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
  var maskedWords = extended;

  h -= s;
  h = Math.max(0, h);

  // Extended mode, copy masked part
  if (maskedWords) {
    for (var i = 0; i < s; i++)
      maskedWords.words[i] = this.words[i];
    maskedWords.length = s;
  }

  if (s === 0) {
    // No-op, we should not move anything at all
  } else if (this.length > s) {
    this.length -= s;
    for (var i = 0; i < this.length; i++)
      this.words[i] = this.words[i + s];
  } else {
    this.words[0] = 0;
    this.length = 1;
  }

  var carry = 0;
  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
    var word = this.words[i];
    this.words[i] = (carry << (26 - r)) | (word >>> r);
    carry = word & mask;
  }

  // Push carried bits as a mask
  if (maskedWords && carry !== 0)
    maskedWords.words[maskedWords.length++] = carry;

  if (this.length === 0) {
    this.words[0] = 0;
    this.length = 1;
  }

  this.strip();

  return this;
};

BN.prototype.ishrn = function ishrn(bits, hint, extended) {
  // TODO(indutny): implement me
  assert(!this.sign);
  return this.iushrn(bits, hint, extended);
};

// Shift-left
BN.prototype.shln = function shln(bits) {
  return this.clone().ishln(bits);
};

BN.prototype.ushln = function ushln(bits) {
  return this.clone().iushln(bits);
};

// Shift-right
BN.prototype.shrn = function shrn(bits) {
  return this.clone().ishrn(bits);
};

BN.prototype.ushrn = function ushrn(bits) {
  return this.clone().iushrn(bits);
};

// Test if n bit is set
BN.prototype.testn = function testn(bit) {
  assert(typeof bit === 'number' && bit >= 0);
  var r = bit % 26;
  var s = (bit - r) / 26;
  var q = 1 << r;

  // Fast case: bit is much higher than all existing words
  if (this.length <= s) {
    return false;
  }

  // Check bit and return
  var w = this.words[s];

  return !!(w & q);
};

// Return only lowers bits of number (in-place)
BN.prototype.imaskn = function imaskn(bits) {
  assert(typeof bits === 'number' && bits >= 0);
  var r = bits % 26;
  var s = (bits - r) / 26;

  assert(!this.sign, 'imaskn works only with positive numbers');

  if (r !== 0)
    s++;
  this.length = Math.min(s, this.length);

  if (r !== 0) {
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    this.words[this.length - 1] &= mask;
  }

  return this.strip();
};

// Return only lowers bits of number
BN.prototype.maskn = function maskn(bits) {
  return this.clone().imaskn(bits);
};

// Add plain number `num` to `this`
BN.prototype.iaddn = function iaddn(num) {
  assert(typeof num === 'number');
  if (num < 0)
    return this.isubn(-num);

  // Possible sign change
  if (this.sign) {
    if (this.length === 1 && this.words[0] < num) {
      this.words[0] = num - this.words[0];
      this.sign = false;
      return this;
    }

    this.sign = false;
    this.isubn(num);
    this.sign = true;
    return this;
  }

  // Add without checks
  return this._iaddn(num);
};

BN.prototype._iaddn = function _iaddn(num) {
  this.words[0] += num;

  // Carry
  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
    this.words[i] -= 0x4000000;
    if (i === this.length - 1)
      this.words[i + 1] = 1;
    else
      this.words[i + 1]++;
  }
  this.length = Math.max(this.length, i + 1);

  return this;
};

// Subtract plain number `num` from `this`
BN.prototype.isubn = function isubn(num) {
  assert(typeof num === 'number');
  if (num < 0)
    return this.iaddn(-num);

  if (this.sign) {
    this.sign = false;
    this.iaddn(num);
    this.sign = true;
    return this;
  }

  this.words[0] -= num;

  // Carry
  for (var i = 0; i < this.length && this.words[i] < 0; i++) {
    this.words[i] += 0x4000000;
    this.words[i + 1] -= 1;
  }

  return this.strip();
};

BN.prototype.addn = function addn(num) {
  return this.clone().iaddn(num);
};

BN.prototype.subn = function subn(num) {
  return this.clone().isubn(num);
};

BN.prototype.iabs = function iabs() {
  this.sign = false;

  return this;
};

BN.prototype.abs = function abs() {
  return this.clone().iabs();
};

BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
  // Bigger storage is needed
  var len = num.length + shift;
  var i;
  if (this.words.length < len) {
    var t = new Array(len);
    for (var i = 0; i < this.length; i++)
      t[i] = this.words[i];
    this.words = t;
  } else {
    i = this.length;
  }

  // Zeroify rest
  this.length = Math.max(this.length, len);
  for (; i < this.length; i++)
    this.words[i] = 0;

  var carry = 0;
  for (var i = 0; i < num.length; i++) {
    var w = this.words[i + shift] + carry;
    var right = num.words[i] * mul;
    w -= right & 0x3ffffff;
    carry = (w >> 26) - ((right / 0x4000000) | 0);
    this.words[i + shift] = w & 0x3ffffff;
  }
  for (; i < this.length - shift; i++) {
    var w = this.words[i + shift] + carry;
    carry = w >> 26;
    this.words[i + shift] = w & 0x3ffffff;
  }

  if (carry === 0)
    return this.strip();

  // Subtraction overflow
  assert(carry === -1);
  carry = 0;
  for (var i = 0; i < this.length; i++) {
    var w = -this.words[i] + carry;
    carry = w >> 26;
    this.words[i] = w & 0x3ffffff;
  }
  this.sign = true;

  return this.strip();
};

BN.prototype._wordDiv = function _wordDiv(num, mode) {
  var shift = this.length - num.length;

  var a = this.clone();
  var b = num;

  // Normalize
  var bhi = b.words[b.length - 1];
  var bhiBits = this._countBits(bhi);
  shift = 26 - bhiBits;
  if (shift !== 0) {
    b = b.ushln(shift);
    a.iushln(shift);
    bhi = b.words[b.length - 1];
  }

  // Initialize quotient
  var m = a.length - b.length;
  var q;

  if (mode !== 'mod') {
    q = new BN(null);
    q.length = m + 1;
    q.words = new Array(q.length);
    for (var i = 0; i < q.length; i++)
      q.words[i] = 0;
  }

  var diff = a.clone()._ishlnsubmul(b, 1, m);
  if (!diff.sign) {
    a = diff;
    if (q)
      q.words[m] = 1;
  }

  for (var j = m - 1; j >= 0; j--) {
    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];

    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
    // (0x7ffffff)
    qj = Math.min((qj / bhi) | 0, 0x3ffffff);

    a._ishlnsubmul(b, qj, j);
    while (a.sign) {
      qj--;
      a.sign = false;
      a._ishlnsubmul(b, 1, j);
      if (a.cmpn(0) !== 0)
        a.sign = !a.sign;
    }
    if (q)
      q.words[j] = qj;
  }
  if (q)
    q.strip();
  a.strip();

  // Denormalize
  if (mode !== 'div' && shift !== 0)
    a.iushrn(shift);
  return { div: q ? q : null, mod: a };
};

BN.prototype.divmod = function divmod(num, mode, positive) {
  assert(num.cmpn(0) !== 0);

  if (this.sign && !num.sign) {
    var res = this.neg().divmod(num, mode);
    var div;
    var mod;
    if (mode !== 'mod')
      div = res.div.neg();
    if (mode !== 'div') {
      mod = res.mod.neg();
      if (positive && mod.neg)
        mod = mod.add(num);
    }
    return {
      div: div,
      mod: mod
    };
  } else if (!this.sign && num.sign) {
    var res = this.divmod(num.neg(), mode);
    var div;
    if (mode !== 'mod')
      div = res.div.neg();
    return { div: div, mod: res.mod };
  } else if (this.sign && num.sign) {
    var res = this.neg().divmod(num.neg(), mode);
    var mod;
    if (mode !== 'div') {
      mod = res.mod.neg();
      if (positive && mod.neg)
        mod = mod.isub(num);
    }
    return {
      div: res.div,
      mod: mod
    };
  }

  // Both numbers are positive at this point

  // Strip both numbers to approximate shift value
  if (num.length > this.length || this.cmp(num) < 0)
    return { div: new BN(0), mod: this };

  // Very short reduction
  if (num.length === 1) {
    if (mode === 'div')
      return { div: this.divn(num.words[0]), mod: null };
    else if (mode === 'mod')
      return { div: null, mod: new BN(this.modn(num.words[0])) };
    return {
      div: this.divn(num.words[0]),
      mod: new BN(this.modn(num.words[0]))
    };
  }

  return this._wordDiv(num, mode);
};

// Find `this` / `num`
BN.prototype.div = function div(num) {
  return this.divmod(num, 'div', false).div;
};

// Find `this` % `num`
BN.prototype.mod = function mod(num) {
  return this.divmod(num, 'mod', false).mod;
};

BN.prototype.umod = function umod(num) {
  return this.divmod(num, 'mod', true).mod;
};

// Find Round(`this` / `num`)
BN.prototype.divRound = function divRound(num) {
  var dm = this.divmod(num);

  // Fast case - exact division
  if (dm.mod.cmpn(0) === 0)
    return dm.div;

  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;

  var half = num.ushrn(1);
  var r2 = num.andln(1);
  var cmp = mod.cmp(half);

  // Round down
  if (cmp < 0 || r2 === 1 && cmp === 0)
    return dm.div;

  // Round up
  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);
};

BN.prototype.modn = function modn(num) {
  assert(num <= 0x3ffffff);
  var p = (1 << 26) % num;

  var acc = 0;
  for (var i = this.length - 1; i >= 0; i--)
    acc = (p * acc + this.words[i]) % num;

  return acc;
};

// In-place division by number
BN.prototype.idivn = function idivn(num) {
  assert(num <= 0x3ffffff);

  var carry = 0;
  for (var i = this.length - 1; i >= 0; i--) {
    var w = this.words[i] + carry * 0x4000000;
    this.words[i] = (w / num) | 0;
    carry = w % num;
  }

  return this.strip();
};

BN.prototype.divn = function divn(num) {
  return this.clone().idivn(num);
};

BN.prototype.egcd = function egcd(p) {
  assert(!p.sign);
  assert(p.cmpn(0) !== 0);

  var x = this;
  var y = p.clone();

  if (x.sign)
    x = x.umod(p);
  else
    x = x.clone();

  // A * x + B * y = x
  var A = new BN(1);
  var B = new BN(0);

  // C * x + D * y = y
  var C = new BN(0);
  var D = new BN(1);

  var g = 0;

  while (x.isEven() && y.isEven()) {
    x.iushrn(1);
    y.iushrn(1);
    ++g;
  }

  var yp = y.clone();
  var xp = x.clone();

  while (x.cmpn(0) !== 0) {
    while (x.isEven()) {
      x.iushrn(1);
      if (A.isEven() && B.isEven()) {
        A.iushrn(1);
        B.iushrn(1);
      } else {
        A.iadd(yp).iushrn(1);
        B.isub(xp).iushrn(1);
      }
    }

    while (y.isEven()) {
      y.iushrn(1);
      if (C.isEven() && D.isEven()) {
        C.iushrn(1);
        D.iushrn(1);
      } else {
        C.iadd(yp).iushrn(1);
        D.isub(xp).iushrn(1);
      }
    }

    if (x.cmp(y) >= 0) {
      x.isub(y);
      A.isub(C);
      B.isub(D);
    } else {
      y.isub(x);
      C.isub(A);
      D.isub(B);
    }
  }

  return {
    a: C,
    b: D,
    gcd: y.iushln(g)
  };
};

// This is reduced incarnation of the binary EEA
// above, designated to invert members of the
// _prime_ fields F(p) at a maximal speed
BN.prototype._invmp = function _invmp(p) {
  assert(!p.sign);
  assert(p.cmpn(0) !== 0);

  var a = this;
  var b = p.clone();

  if (a.sign)
    a = a.umod(p);
  else
    a = a.clone();

  var x1 = new BN(1);
  var x2 = new BN(0);

  var delta = b.clone();

  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
    while (a.isEven()) {
      a.iushrn(1);
      if (x1.isEven())
        x1.iushrn(1);
      else
        x1.iadd(delta).iushrn(1);
    }
    while (b.isEven()) {
      b.iushrn(1);
      if (x2.isEven())
        x2.iushrn(1);
      else
        x2.iadd(delta).iushrn(1);
    }
    if (a.cmp(b) >= 0) {
      a.isub(b);
      x1.isub(x2);
    } else {
      b.isub(a);
      x2.isub(x1);
    }
  }

  var res;
  if (a.cmpn(1) === 0)
    res = x1;
  else
    res = x2;

  if (res.cmpn(0) < 0)
    res.iadd(p);

  return res;
};

BN.prototype.gcd = function gcd(num) {
  if (this.cmpn(0) === 0)
    return num.clone();
  if (num.cmpn(0) === 0)
    return this.clone();

  var a = this.clone();
  var b = num.clone();
  a.sign = false;
  b.sign = false;

  // Remove common factor of two
  for (var shift = 0; a.isEven() && b.isEven(); shift++) {
    a.iushrn(1);
    b.iushrn(1);
  }

  do {
    while (a.isEven())
      a.iushrn(1);
    while (b.isEven())
      b.iushrn(1);

    var r = a.cmp(b);
    if (r < 0) {
      // Swap `a` and `b` to make `a` always bigger than `b`
      var t = a;
      a = b;
      b = t;
    } else if (r === 0 || b.cmpn(1) === 0) {
      break;
    }

    a.isub(b);
  } while (true);

  return b.iushln(shift);
};

// Invert number in the field F(num)
BN.prototype.invm = function invm(num) {
  return this.egcd(num).a.umod(num);
};

BN.prototype.isEven = function isEven() {
  return (this.words[0] & 1) === 0;
};

BN.prototype.isOdd = function isOdd() {
  return (this.words[0] & 1) === 1;
};

// And first word and num
BN.prototype.andln = function andln(num) {
  return this.words[0] & num;
};

// Increment at the bit position in-line
BN.prototype.bincn = function bincn(bit) {
  assert(typeof bit === 'number');
  var r = bit % 26;
  var s = (bit - r) / 26;
  var q = 1 << r;

  // Fast case: bit is much higher than all existing words
  if (this.length <= s) {
    for (var i = this.length; i < s + 1; i++)
      this.words[i] = 0;
    this.words[s] |= q;
    this.length = s + 1;
    return this;
  }

  // Add bit and propagate, if needed
  var carry = q;
  for (var i = s; carry !== 0 && i < this.length; i++) {
    var w = this.words[i];
    w += carry;
    carry = w >>> 26;
    w &= 0x3ffffff;
    this.words[i] = w;
  }
  if (carry !== 0) {
    this.words[i] = carry;
    this.length++;
  }
  return this;
};

BN.prototype.cmpn = function cmpn(num) {
  var sign = num < 0;
  if (sign)
    num = -num;

  if (this.sign && !sign)
    return -1;
  else if (!this.sign && sign)
    return 1;

  num &= 0x3ffffff;
  this.strip();

  var res;
  if (this.length > 1) {
    res = 1;
  } else {
    var w = this.words[0];
    res = w === num ? 0 : w < num ? -1 : 1;
  }
  if (this.sign)
    res = -res;
  return res;
};

// Compare two numbers and return:
// 1 - if `this` > `num`
// 0 - if `this` == `num`
// -1 - if `this` < `num`
BN.prototype.cmp = function cmp(num) {
  if (this.sign && !num.sign)
    return -1;
  else if (!this.sign && num.sign)
    return 1;

  var res = this.ucmp(num);
  if (this.sign)
    return -res;
  else
    return res;
};

// Unsigned comparison
BN.prototype.ucmp = function ucmp(num) {
  // At this point both numbers have the same sign
  if (this.length > num.length)
    return 1;
  else if (this.length < num.length)
    return -1;

  var res = 0;
  for (var i = this.length - 1; i >= 0; i--) {
    var a = this.words[i];
    var b = num.words[i];

    if (a === b)
      continue;
    if (a < b)
      res = -1;
    else if (a > b)
      res = 1;
    break;
  }
  return res;
};

//
// A reduce context, could be using montgomery or something better, depending
// on the `m` itself.
//
BN.red = function red(num) {
  return new Red(num);
};

BN.prototype.toRed = function toRed(ctx) {
  assert(!this.red, 'Already a number in reduction context');
  assert(!this.sign, 'red works only with positives');
  return ctx.convertTo(this)._forceRed(ctx);
};

BN.prototype.fromRed = function fromRed() {
  assert(this.red, 'fromRed works only with numbers in reduction context');
  return this.red.convertFrom(this);
};

BN.prototype._forceRed = function _forceRed(ctx) {
  this.red = ctx;
  return this;
};

BN.prototype.forceRed = function forceRed(ctx) {
  assert(!this.red, 'Already a number in reduction context');
  return this._forceRed(ctx);
};

BN.prototype.redAdd = function redAdd(num) {
  assert(this.red, 'redAdd works only with red numbers');
  return this.red.add(this, num);
};

BN.prototype.redIAdd = function redIAdd(num) {
  assert(this.red, 'redIAdd works only with red numbers');
  return this.red.iadd(this, num);
};

BN.prototype.redSub = function redSub(num) {
  assert(this.red, 'redSub works only with red numbers');
  return this.red.sub(this, num);
};

BN.prototype.redISub = function redISub(num) {
  assert(this.red, 'redISub works only with red numbers');
  return this.red.isub(this, num);
};

BN.prototype.redShl = function redShl(num) {
  assert(this.red, 'redShl works only with red numbers');
  return this.red.ushl(this, num);
};

BN.prototype.redMul = function redMul(num) {
  assert(this.red, 'redMul works only with red numbers');
  this.red._verify2(this, num);
  return this.red.mul(this, num);
};

BN.prototype.redIMul = function redIMul(num) {
  assert(this.red, 'redMul works only with red numbers');
  this.red._verify2(this, num);
  return this.red.imul(this, num);
};

BN.prototype.redSqr = function redSqr() {
  assert(this.red, 'redSqr works only with red numbers');
  this.red._verify1(this);
  return this.red.sqr(this);
};

BN.prototype.redISqr = function redISqr() {
  assert(this.red, 'redISqr works only with red numbers');
  this.red._verify1(this);
  return this.red.isqr(this);
};

// Square root over p
BN.prototype.redSqrt = function redSqrt() {
  assert(this.red, 'redSqrt works only with red numbers');
  this.red._verify1(this);
  return this.red.sqrt(this);
};

BN.prototype.redInvm = function redInvm() {
  assert(this.red, 'redInvm works only with red numbers');
  this.red._verify1(this);
  return this.red.invm(this);
};

// Return negative clone of `this` % `red modulo`
BN.prototype.redNeg = function redNeg() {
  assert(this.red, 'redNeg works only with red numbers');
  this.red._verify1(this);
  return this.red.neg(this);
};

BN.prototype.redPow = function redPow(num) {
  assert(this.red && !num.red, 'redPow(normalNum)');
  this.red._verify1(this);
  return this.red.pow(this, num);
};

// Prime numbers with efficient reduction
var primes = {
  k256: null,
  p224: null,
  p192: null,
  p25519: null
};

// Pseudo-Mersenne prime
function MPrime(name, p) {
  // P = 2 ^ N - K
  this.name = name;
  this.p = new BN(p, 16);
  this.n = this.p.bitLength();
  this.k = new BN(1).iushln(this.n).isub(this.p);

  this.tmp = this._tmp();
}

MPrime.prototype._tmp = function _tmp() {
  var tmp = new BN(null);
  tmp.words = new Array(Math.ceil(this.n / 13));
  return tmp;
};

MPrime.prototype.ireduce = function ireduce(num) {
  // Assumes that `num` is less than `P^2`
  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
  var r = num;
  var rlen;

  do {
    this.split(r, this.tmp);
    r = this.imulK(r);
    r = r.iadd(this.tmp);
    rlen = r.bitLength();
  } while (rlen > this.n);

  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
  if (cmp === 0) {
    r.words[0] = 0;
    r.length = 1;
  } else if (cmp > 0) {
    r.isub(this.p);
  } else {
    r.strip();
  }

  return r;
};

MPrime.prototype.split = function split(input, out) {
  input.iushrn(this.n, 0, out);
};

MPrime.prototype.imulK = function imulK(num) {
  return num.imul(this.k);
};

function K256() {
  MPrime.call(
    this,
    'k256',
    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
}
inherits(K256, MPrime);

K256.prototype.split = function split(input, output) {
  // 256 = 9 * 26 + 22
  var mask = 0x3fffff;

  var outLen = Math.min(input.length, 9);
  for (var i = 0; i < outLen; i++)
    output.words[i] = input.words[i];
  output.length = outLen;

  if (input.length <= 9) {
    input.words[0] = 0;
    input.length = 1;
    return;
  }

  // Shift by 9 limbs
  var prev = input.words[9];
  output.words[output.length++] = prev & mask;

  for (var i = 10; i < input.length; i++) {
    var next = input.words[i];
    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
    prev = next;
  }
  input.words[i - 10] = prev >>> 22;
  input.length -= 9;
};

K256.prototype.imulK = function imulK(num) {
  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
  num.words[num.length] = 0;
  num.words[num.length + 1] = 0;
  num.length += 2;

  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
  var hi;
  var lo = 0;
  for (var i = 0; i < num.length; i++) {
    var w = num.words[i];
    hi = w * 0x40;
    lo += w * 0x3d1;
    hi += (lo / 0x4000000) | 0;
    lo &= 0x3ffffff;

    num.words[i] = lo;

    lo = hi;
  }

  // Fast length reduction
  if (num.words[num.length - 1] === 0) {
    num.length--;
    if (num.words[num.length - 1] === 0)
      num.length--;
  }
  return num;
};

function P224() {
  MPrime.call(
    this,
    'p224',
    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
}
inherits(P224, MPrime);

function P192() {
  MPrime.call(
    this,
    'p192',
    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
}
inherits(P192, MPrime);

function P25519() {
  // 2 ^ 255 - 19
  MPrime.call(
    this,
    '25519',
    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
}
inherits(P25519, MPrime);

P25519.prototype.imulK = function imulK(num) {
  // K = 0x13
  var carry = 0;
  for (var i = 0; i < num.length; i++) {
    var hi = num.words[i] * 0x13 + carry;
    var lo = hi & 0x3ffffff;
    hi >>>= 26;

    num.words[i] = lo;
    carry = hi;
  }
  if (carry !== 0)
    num.words[num.length++] = carry;
  return num;
};

// Exported mostly for testing purposes, use plain name instead
BN._prime = function prime(name) {
  // Cached version of prime
  if (primes[name])
    return primes[name];

  var prime;
  if (name === 'k256')
    prime = new K256();
  else if (name === 'p224')
    prime = new P224();
  else if (name === 'p192')
    prime = new P192();
  else if (name === 'p25519')
    prime = new P25519();
  else
    throw new Error('Unknown prime ' + name);
  primes[name] = prime;

  return prime;
};

//
// Base reduction engine
//
function Red(m) {
  if (typeof m === 'string') {
    var prime = BN._prime(m);
    this.m = prime.p;
    this.prime = prime;
  } else {
    this.m = m;
    this.prime = null;
  }
}

Red.prototype._verify1 = function _verify1(a) {
  assert(!a.sign, 'red works only with positives');
  assert(a.red, 'red works only with red numbers');
};

Red.prototype._verify2 = function _verify2(a, b) {
  assert(!a.sign && !b.sign, 'red works only with positives');
  assert(a.red && a.red === b.red,
         'red works only with red numbers');
};

Red.prototype.imod = function imod(a) {
  if (this.prime)
    return this.prime.ireduce(a)._forceRed(this);
  return a.umod(this.m)._forceRed(this);
};

Red.prototype.neg = function neg(a) {
  var r = a.clone();
  r.sign = !r.sign;
  return r.iadd(this.m)._forceRed(this);
};

Red.prototype.add = function add(a, b) {
  this._verify2(a, b);

  var res = a.add(b);
  if (res.cmp(this.m) >= 0)
    res.isub(this.m);
  return res._forceRed(this);
};

Red.prototype.iadd = function iadd(a, b) {
  this._verify2(a, b);

  var res = a.iadd(b);
  if (res.cmp(this.m) >= 0)
    res.isub(this.m);
  return res;
};

Red.prototype.sub = function sub(a, b) {
  this._verify2(a, b);

  var res = a.sub(b);
  if (res.cmpn(0) < 0)
    res.iadd(this.m);
  return res._forceRed(this);
};

Red.prototype.isub = function isub(a, b) {
  this._verify2(a, b);

  var res = a.isub(b);
  if (res.cmpn(0) < 0)
    res.iadd(this.m);
  return res;
};

Red.prototype.shl = function shl(a, num) {
  this._verify1(a);
  return this.imod(a.ushln(num));
};

Red.prototype.imul = function imul(a, b) {
  this._verify2(a, b);
  return this.imod(a.imul(b));
};

Red.prototype.mul = function mul(a, b) {
  this._verify2(a, b);
  return this.imod(a.mul(b));
};

Red.prototype.isqr = function isqr(a) {
  return this.imul(a, a);
};

Red.prototype.sqr = function sqr(a) {
  return this.mul(a, a);
};

Red.prototype.sqrt = function sqrt(a) {
  if (a.cmpn(0) === 0)
    return a.clone();

  var mod3 = this.m.andln(3);
  assert(mod3 % 2 === 1);

  // Fast case
  if (mod3 === 3) {
    var pow = this.m.add(new BN(1)).iushrn(2);
    var r = this.pow(a, pow);
    return r;
  }

  // Tonelli-Shanks algorithm (Totally unoptimized and slow)
  //
  // Find Q and S, that Q * 2 ^ S = (P - 1)
  var q = this.m.subn(1);
  var s = 0;
  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {
    s++;
    q.iushrn(1);
  }
  assert(q.cmpn(0) !== 0);

  var one = new BN(1).toRed(this);
  var nOne = one.redNeg();

  // Find quadratic non-residue
  // NOTE: Max is such because of generalized Riemann hypothesis.
  var lpow = this.m.subn(1).iushrn(1);
  var z = this.m.bitLength();
  z = new BN(2 * z * z).toRed(this);
  while (this.pow(z, lpow).cmp(nOne) !== 0)
    z.redIAdd(nOne);

  var c = this.pow(z, q);
  var r = this.pow(a, q.addn(1).iushrn(1));
  var t = this.pow(a, q);
  var m = s;
  while (t.cmp(one) !== 0) {
    var tmp = t;
    for (var i = 0; tmp.cmp(one) !== 0; i++)
      tmp = tmp.redSqr();
    assert(i < m);
    var b = this.pow(c, new BN(1).iushln(m - i - 1));

    r = r.redMul(b);
    c = b.redSqr();
    t = t.redMul(c);
    m = i;
  }

  return r;
};

Red.prototype.invm = function invm(a) {
  var inv = a._invmp(this.m);
  if (inv.sign) {
    inv.sign = false;
    return this.imod(inv).redNeg();
  } else {
    return this.imod(inv);
  }
};

Red.prototype.pow = function pow(a, num) {
  var w = toBitArray(num);
  if (w.length === 0)
    return new BN(1);

  // Skip leading zeroes
  var res = a;
  for (var i = 0; i < w.length; i++, res = this.sqr(res))
    if (w[i] !== 0)
      break;

  if (++i < w.length) {
    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {
      if (w[i] === 0)
        continue;
      res = this.mul(res, q);
    }
  }

  return res;
};

Red.prototype.convertTo = function convertTo(num) {
  var r = num.umod(this.m);
  if (r === num)
    return r.clone();
  else
    return r;
};

Red.prototype.convertFrom = function convertFrom(num) {
  var res = num.clone();
  res.red = null;
  return res;
};

//
// Montgomery method engine
//

BN.mont = function mont(num) {
  return new Mont(num);
};

function Mont(m) {
  Red.call(this, m);

  this.shift = this.m.bitLength();
  if (this.shift % 26 !== 0)
    this.shift += 26 - (this.shift % 26);
  this.r = new BN(1).iushln(this.shift);
  this.r2 = this.imod(this.r.sqr());
  this.rinv = this.r._invmp(this.m);

  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
  this.minv = this.minv.umod(this.r);
  this.minv = this.r.sub(this.minv);
}
inherits(Mont, Red);

Mont.prototype.convertTo = function convertTo(num) {
  return this.imod(num.ushln(this.shift));
};

Mont.prototype.convertFrom = function convertFrom(num) {
  var r = this.imod(num.mul(this.rinv));
  r.red = null;
  return r;
};

Mont.prototype.imul = function imul(a, b) {
  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {
    a.words[0] = 0;
    a.length = 1;
    return a;
  }

  var t = a.imul(b);
  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
  var u = t.isub(c).iushrn(this.shift);
  var res = u;
  if (u.cmp(this.m) >= 0)
    res = u.isub(this.m);
  else if (u.cmpn(0) < 0)
    res = u.iadd(this.m);

  return res._forceRed(this);
};

Mont.prototype.mul = function mul(a, b) {
  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)
    return new BN(0)._forceRed(this);

  var t = a.mul(b);
  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
  var u = t.isub(c).iushrn(this.shift);
  var res = u;
  if (u.cmp(this.m) >= 0)
    res = u.isub(this.m);
  else if (u.cmpn(0) < 0)
    res = u.iadd(this.m);

  return res._forceRed(this);
};

Mont.prototype.invm = function invm(a) {
  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
  var res = this.imod(a._invmp(this.m).mul(this.r2));
  return res._forceRed(this);
};

})(typeof module === 'undefined' || module, this);

},{}],97:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],98:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./hash/common":99,"./hash/hmac":100,"./hash/ripemd":101,"./hash/sha":102,"./hash/utils":103,"dup":62}],99:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"../hash":98,"dup":63}],100:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../hash":98,"dup":64}],101:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"../hash":98,"dup":65}],102:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../hash":98,"dup":66}],103:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67,"inherits":104}],104:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"dup":35}],105:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "5.2.1",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "scripts": {
    "test": "make lint && istanbul test _mocha --reporter=spec test/*-test.js",
    "coveralls": "cat ./coverage/lcov.info | coveralls"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "browserify": "^3.44.2",
    "coveralls": "^2.11.3",
    "istanbul": "^0.3.17",
    "jscs": "^1.11.3",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0",
    "uglify-js": "^2.4.13"
  },
  "dependencies": {
    "bn.js": "^3.1.1",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "gitHead": "676db36e64399e5b4c0e31ae5aa4cdf8e8362014",
  "_id": "elliptic@5.2.1",
  "_shasum": "fa294b6563c6ddbc9ba3dc8594687ae840858f10",
  "_from": "elliptic@>=5.1.0 <6.0.0",
  "_npmVersion": "2.14.7",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "dist": {
    "shasum": "fa294b6563c6ddbc9ba3dc8594687ae840858f10",
    "tarball": "http://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz"
  },
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "directories": {},
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-5.2.1.tgz",
  "readme": "ERROR: No README data found!"
}

},{}],106:[function(require,module,exports){
(function (Buffer){
const SHA3 = require('sha3')
const ec = require('elliptic').ec('secp256k1')
const assert = require('assert')
const rlp = require('rlp')
const BN = require('bn.js')

// the max interger that this VM can handle
exports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16)
exports.TWO_POW256 = new BN('115792089237316195423570985008687907853269984665640564039457584007913129639936')

// hex string of SHA3-256 hash of `null`
exports.SHA3_NULL = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'

// SHA3-256 hash of the rlp of []
exports.SHA3_RLP_ARRAY = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'

// SHA3-256 hash of the rlp of `null`
exports.SHA3_RLP = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'

exports.BN = BN
exports.rlp = rlp

/**
 * Returns a buffer filled with 0s
 * @method zeros
 * @param {Integer} bytes  the number of bytes the buffer should be
 * @return {Buffer}
 */
exports.zeros = function (bytes) {
  var buf = new Buffer(bytes)
  buf.fill(0)
  return buf
}

/**
 * pads an array of buffer with leading zeros till it has `length` bytes
 * @method pad
 * @param {Buffer|Array} array
 * @param {Integer}  length the number of bytes the output should be
 * @return {Buffer|Array}
 */
exports.pad = function (msg, length) {
  msg = exports.toBuffer(msg)
  if (msg.length < length) {
    var buf = exports.zeros(length)
    msg.copy(buf, length - msg.length)
    return buf
  }
  return msg.slice(-length)
}

/**
 * Trims leading zeros from a buffer or an array
 * @method unpad
 * @param {Buffer|Array|String}
 * @return {Buffer|Array|String}
 */
exports.unpad = exports.stripZeros = function (a) {
  a = exports.stripHexPrefix(a)
  var first = a[0]
  while (a.length > 0 && first.toString() === '0') {
    a = a.slice(1)
    first = a[0]
  }
  return a
}

exports.toBuffer = function (v) {
  if (!Buffer.isBuffer(v)) {
    if (typeof v === 'string') {
      v = new Buffer(padToEven(exports.stripHexPrefix(v)), 'hex')
    } else if (typeof v === 'number') {
      v = exports.intToBuffer(v)
    } else if (v === null || v === undefined) {
      v = new Buffer([])
    } else if (v.toArray) {
      // converts a BN to a Buffer
      v = new Buffer(v.toArray())
    } else {
      throw new Error('invalid type')
    }
  }
  return v
}

/**
 * Converts an integer into a hex string
 * @method intToHex
 * @param {Number}
 * @return {String}
 */
exports.intToHex = function (i) {
  assert(i % 1 === 0, 'number is not a interger')
  assert(i >= 0, 'number must be positive')
  var hex = i.toString(16)
  if (hex.length % 2) {
    hex = '0' + hex
  }

  return hex
}

/**
 * Converts an integer to a buffer
 * @method intToBuffer
 * @param {Number}
 * @return {Buffer}
 */
exports.intToBuffer = function (i) {
  var hex = exports.intToHex(i)
  return new Buffer(hex, 'hex')
}

/**
 * Converts a buffer to an Interger
 * @method bufferToInt
 * @par[MaÅam {B[M`Êuffer}
 * @return {Number}
 */
exports.bufferToInt = function (buf) {
  buf = exports.toBuffer(buf)
  if (buf.length === 0) {
    return 0
  }

  return parseInt(buf.toString('hex'), 16)
}

/**
 * interpets a buffer as a signed integer and returns a bignum
 * @method fromSigned
 * @param {Buffer} num
 * @return {BN}
 */
exports.fromSigned = function (num) {
  if (num.length === 32 && num[0] >= 128) {
    return new BN(num).sub(exports.TWO_POW256)
  }

  return new BN(num)
}

/**
 * Converts a bignum to an unsigned interger and returns it as a buffer
 * @method toUnsigned
 * @param {Bignum} num
 * @return {Buffer}
 */
exports.toUnsigned = function (num) {
  if (num.cmpn(0) === -1) {
    return new Buffer(num.add(exports.TWO_POW256).toArray())
  }

  return new Buffer(num.toArray())
}

exports.sha3 = function (a, bytes) {
  a = exports.toBuffer(a)
  if (!bytes) bytes = 256

  var h = new SHA3.SHA3Hash(bytes)
  if (a) {
    h.update(a)
  }
  return new Buffer(h.digest('hex'), 'hex')
}

/**
 * Returns the ethereum address of a given public key
 * @method pubToAddress
 * @param {Buffer}
 * @return {Buffer}
 */
exports.pubToAddress = exports.publicToAddress = function (pubKey) {
  pubKey = exports.toBuffer(pubKey)
  var hash = new SHA3.SHA3Hash(256)
  hash.update(pubKey.slice(-64))
  return new Buffer(hash.digest('hex').slice(-40), 'hex')
}

/**
 * Returns the ethereum public key of a given private key
 * @method privateToPublic
 * @param {Buffer} privateKey
 * @return {Buffer}
 */
var privateToPublic = exports.privateToPublic = function (privateKey) {
  privateKey = exports.toBuffer(privateKey)
  privateKey = new BN(privateKey)
  var key = ec.keyFromPrivate(privateKey).getPublic().toJSON()
  return new Buffer(key[0].toArray().concat(key[1].toArray()))
}

/**
 * Returns the ethereum address of a given private key
 * @method privateToAddress
 * @param {Buffer} privateKey
 * @return {Buffer}
 */
exports.privateToAddress = function (privateKey) {
  return exports.publicToAddress(privateToPublic(privateKey))
}

/**
 * Generates a new address
 * @method generateAddress
 * @param {Buffer} from the address which is creating this new address
 * @param {Buffer} nonce the nonce of the from account
 */
exports.generateAddress = function (from, nonce) {
  from = exports.toBuffer(from)
  nonce = new Buffer(new BN(nonce).toArray())

  if (nonce.toString('hex') === '00') {
    nonce = 0
  }

  var hash = exports.sha3(rlp.encode([new Buffer(from, 'hex'), nonce]))
  return hash.slice(12)
}

// Returns a Boolean on whether or not the a sting starts with 0x
exports.isHexPrefixed = function (str) {
  return str.slice(0, 2) === '0x'
}

// Removes 0x from a given String
exports.stripHexPrefix = function (str) {
  if (typeof str !== 'string') {
    return str
  }
  return exports.isHexPrefixed(str) ? str.slice(2) : str
}

// Adds 0x to a given string if it does not already start with 0x
exports.addHexPrefix = function (str) {
  if (typeof str !== 'string') {
    return str
  }
  return exports.isHexPrefixed(str) ? '0x' + str : str
}

/**
 * defines properties on a `Object`
 * @method defineProperties
 * @para[M`Êm {Object} self the `Object` to define properties on
 * @param {Array} fields an array fields to define
 */
exports.defineProperties = function (self, fields, data) {
  self.raw = []
  self._fields = []

  self.toJSON = function (label) {
    if (label) {
      var obj = {}

      for (var prop in this) {
        if (typeof this[prop] !== 'function' && prop !== 'raw' && prop !== '_fields') {
          obj[prop] = this[prop].toString('hex')
        }
      }
      return obj
    }

    return exports.baToJSON(this.raw)
  }

  fields.forEach(function (field, i) {
    self._fields.push(field.name)
    Object.defineProperty(self, field.name, {
      enumerable: true,
      configurable: true,
      get: function () {
        return this.raw[i]
      },
      set: function (v) {
        v = exports.toBuffer(v)

        if (v.toString('hex') === '00' && !field.allowZero) {
          v = new Buffer([])
        }

        if (field.allowLess && field.length) {
          v = exports.stripZeros(v)
          assert(field.length >= v.length)
        } else if (!(field.empty && v.length === 0) && field.length) {
          assert(field.length === v.length, 'The field ' + field.name + 'must have byte length of ' + field.length)
        }

        this.raw[i] = v
      }
    })

    if (field.default) {
      self[field.name] = field.default
    }
  })

  if (data) {
    if (typeof data === 'string') {
      data = new Buffer(exports.stripHexPrefix(data), 'hex')
    }

    if (Buffer.isBuffer(data)) {
      data = rlp.decode(data)
    }

    if (Array.isArray(data)) {
      if (data.length > self._fields.length) {
        throw (new Error('wrong number of fields in data'))
      }

      // make sure all the items are buffers
      data.forEach(function (d, i) {
        self[self._fields[i]] = typeof d === 'string' ? new Buffer(d, 'hex') : d
      })
    } else if (typeof data === 'object') {
      for (var prop in data) {
        if (self._fields.indexOf(prop) !== -1) {
          self[prop] = data[prop]
        }
      }
    } else {
      throw new Error('invalid data')
    }
  }
}

/**
 * Print a Buffer Array
 * @method printBA
 * @param {Buffer|Array}
 */
exports.printBA = function (ba) {
  if (Buffer.isBuffer(ba)) {
    if (ba.length === 0) {
      console.log('new Buffer(0)')
    } else {
      console.log("new Buffer('" + ba.toString('hex') + "', 'hex')")
    }
  } else if (ba instanceof Array) {
    console.log('[')
    for (var i = 0; i < ba.length; i++) {
      exports.printBA(ba[i])
      console.log(',')
    }
    console.log(']')
  } else {
    console.log(ba)
  }
}

/**
 * converts a buffer array to JSON
 * @method BAToJSON
 * @param {Buffer|Array}
 */
exports.baToJSON = function (ba) {
  if (Buffer.isBuffer(ba)) {
    return ba.toString('hex')
  } else if (ba instanceof Array) {
    var array = []
    for (var i = 0; i < ba.length; i++) {
      array.push(exports.baToJSON(ba[i]))
    }
    return array
  }
}

function padToEven (a) {
  if (a.length % 2) a = '0' + a
  return a
}

}).call(this,require("buffer").Buffer)

},{"assert":149,"bn.js":107,"buffer":151,"elliptic":80,"rlp":110,"sha3":108}],107:[function(require,module,exports){
arguments[4][96][0].apply(exports,arguments)
},{"dup":96}],108:[function(require,module,exports){
(function (Buffer){
const Sha3 = require('js-sha3')

var hash = function (bitcount) {
  this.content = ''
  this.bitcount = bitcount ? 'keccak_' + bitcount : 'keccak_512'
}

hash.prototype.update = function (i) {
  this.content = Buffer.isBuffer(i) ? i : new Buffer(i);
}

hash.prototype.digest = function (encoding) {
  var result = Sha3[this.bitcount](this.content) 
  if(encoding === 'hex')
    return result
  else
    return new Buffer(result, 'hex').toString('binary')
}

module.exports = {
  SHA3Hash: hash
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"js-sha3":109}],109:[function(require,module,exports){
(function (global){
/*
 * js-sha3 v0.3.1
 * https://github.com/emn178/js-sha3
 *
 * Copyright 2015, emn178@gmail.com
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */
;(function(root, undefined) {
  'use strict';

  var NODE_JS = typeof(module) != 'undefined';
  if(NODE_JS) {
    root = global;
    if(root.JS_SHA3_TEST) {
      root.navigator = { userAgent: 'Chrome'};
    }
  }
  var CHROME = (root.JS_SHA3_TEST || !NODE_JS) && navigator.userAgent.indexOf('Chrome') != -1;
  var HEX_CHARS = '0123456789abcdef'.split('');
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 
            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 
            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];

  var blocks = [], s = [];

  var keccak_224 = function(message) {
    return keccak(message, 224, KECCAK_PADDING);
  };

  var keccak_256 = function(message) {
    return keccak(message, 256, KECCAK_PADDING);
  };

  var keccak_384 = function(message) {
    return keccak(message, 384, KECCAK_PADDING);
  };

  var sha3_224 = function(message) {
    return keccak(message, 224, PADDING);
  };

  var sha3_256 = function(message) {
    return keccak(message, 256, PADDING);
  };

  var sha3_384 = function(message) {
    return keccak(message, 384, PADDING);
  };

  var sha3_512 = function(message) {
    return keccak(message, 512, PADDING);
  };

  var keccak = function(message, bits, padding) {
    var notString = typeof(message) != 'string';
    if(notString && message.constructor == root.ArrayBuffer) {
      message = new Uint8Array(message);
    }

    if(bits === undefined) {
      bits = 512;
      padding = KECCAK_PADDING;
    }

    var block, code, end = false, index = 0, start = 0, length = message.length,
        n, i, h, l, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, 
        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, 
        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, 
        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    var blockCount = (1600 - bits * 2) / 32;
    var byteCount = blockCount * 4;

    for(i = 0;i < 50;++i) {
      s[i] = 0;
    }

    block = 0;
    do {
      blocks[0] = block;
      for(i = 1;i < blockCount + 1;++i) {
        blocks[i] = 0;
      }
      if(notString) {
        for (i = start;index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = start;index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      start = i - byteCount;
      if(index == length) {
        blocks[i >> 2] |= padding[i & 3];
        ++index;
      }
      block = blocks[blockCount];
      if(index > length && i < byteCount) {
        blocks[blockCount - 1] |= 0x80000000;
        end = true;
      }

      for(i = 0;i < blockCount;++i) {
        s[i] ^= blocks[i];
      }

      for(n = 0; n < 48; n += 2) {
        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

        h = c8 ^ ((c2 << 1) | (c3 >>> 31));
        l = c9 ^ ((c3 << 1) | (c2 >>> 31));
        s[0] ^= h;
        s[1] ^= l;
        s[10] ^= h;
        s[11] ^= l;
        s[20] ^= h;
        s[21] ^= l;
        s[30] ^= h;
        s[31] ^= l;
        s[40] ^= h;
        s[41] ^= l;
        h = c0 ^ ((c4 << 1) | (c5 >>> 31));
        l = c1 ^ ((c5 << 1) | (c4 >>> 31));
        s[2] ^= h;
        s[3] ^= l;
        s[12] ^= h;
        s[13] ^= l;
        s[22] ^= h;
        s[23] ^= l;
        s[32] ^= h;
        s[33] ^= l;
        s[42] ^= h;
        s[43] ^= l;
        h = c2 ^ ((c6 << 1) | (c7 >>> 31));
        l = c3 ^ ((c7 << 1) | (c6 >>> 31));
        s[4] ^= h;
        s[5] ^= l;
        s[14] ^= h;
        s[15] ^= l;
        s[24] ^= h;
        s[25] ^= l;
        s[34] ^= h;
        s[35] ^= l;
        s[44] ^= h;
        s[45] ^= l;
        h = c4 ^ ((c8 << 1) | (c9 >>> 31));
        l = c5 ^ ((c9 << 1) | (c8 >>> 31));
        s[6] ^= h;
        s[7] ^= l;
        s[16] ^= h;
        s[17] ^= l;
        s[26] ^= h;
        s[27] ^= l;
        s[36] ^= h;
        s[37] ^= l;
        s[46] ^= h;
        s[47] ^= l;
        h = c6 ^ ((c0 << 1) | (c1 >>> 31));
        l = c7 ^ ((c1 << 1) | (c0 >>> 31));
        s[8] ^= h;
        s[9] ^= l;
        s[18] ^= h;
        s[19] ^= l;
        s[28] ^= h;
        s[29] ^= l;
        s[38] ^= h;
        s[39] ^= l;
        s[48] ^= h;
        s[49] ^= l;

        b0 = s[0];
        b1 = s[1];
        b32 = (s[11] << 4) | (s[10] >>> 28);
        b33 = (s[10] << 4) | (s[11] >>> 28);
        b14 = (s[20] << 3) | (s[21] >>> 29);
        b15 = (s[21] << 3) | (s[20] >>> 29);
        b46 = (s[31] << 9) | (s[30] >>> 23);
        b47 = (s[30] << 9) | (s[31] >>> 23);
        b28 = (s[40] << 18) | (s[41] >>> 14);
        b29 = (s[41] << 18) | (s[40] >>> 14);
        b20 = (s[2] << 1) | (s[3] >>> 31);
        b21 = (s[3] << 1) | (s[2] >>> 31);
        b2 = (s[13] << 12) | (s[12] >>> 20);
        b3 = (s[12] << 12) | (s[13] >>> 20);
        b34 = (s[22] << 10) | (s[23] >>> 22);
        b35 = (s[23] << 10) | (s[22] >>> 22);
        b16 = (s[33] << 13) | (s[32] >>> 19);
        b17 = (s[32] << 13) | (s[33] >>> 19);
        b48 = (s[42] << 2) | (s[43] >>> 30);
        b49 = (s[43] << 2) | (s[42] >>> 30);
        b40 = (s[5] << 30) | (s[4] >>> 2);
        b41 = (s[4] << 30) | (s[5] >>> 2);
        b22 = (s[14] << 6) | (s[15] >>> 26);
        b23 = (s[15] << 6) | (s[14] >>> 26);
        b4 = (s[25] << 11) | (s[24] >>> 21);
        b5 = (s[24] << 11) | (s[25] >>> 21);
        b36 = (s[34] << 15) | (s[35] >>> 17);
        b37 = (s[35] << 15) | (s[34] >>> 17);
        b18 = (s[45] << 29) | (s[44] >>> 3);
        b19 = (s[44] << 29) | (s[45] >>> 3);
        b10 = (s[6] << 28) | (s[7] >>> 4);
        b11 = (s[7] << 28) | (s[6] >>> 4);
        b42 = (s[17] << 23) | (s[16] >>> 9);
        b43 = (s[16] << 23) | (s[17] >>> 9);
        b24 = (s[26] << 25) | (s[27] >>> 7);
        b25 = (s[27] << 25) | (s[26] >>> 7);
        b6 = (s[36] << 21) | (s[37] >>> 11);
        b7 = (s[37] << 21) | (s[36] >>> 11);
        b38 = (s[47] << 24) | (s[46] >>> 8);
        b39 = (s[46] << 24) | (s[47] >>> 8);
        b30 = (s[8] << 27) | (s[9] >>> 5);
        b31 = (s[9] << 27) | (s[8] >>> 5);
        b12 = (s[18] << 20) | (s[19] >>> 12);
        b13 = (s[19] << 20) | (s[18] >>> 12);
        b44 = (s[29] << 7) | (s[28] >>> 25);
        b45 = (s[28] << 7) | (s[29] >>> 25);
        b26 = (s[38] << 8) | (s[39] >>> 24);
        b27 = (s[39] << 8) | (s[38] >>> 24);
        b8 = (s[48] << 14) | (s[49] >>> 18);
        b9 = (s[49] << 14) | (s[48] >>> 18);

        s[0] = b0 ^ (~b2 & b4);
        s[1] = b1 ^ (~b3 & b5);
        s[10] = b10 ^ (~b12 & b14);
        s[11] = b11 ^ (~b13 & b15);
        s[20] = b20 ^ (~b22 & b24);
        s[21] = b21 ^ (~b23 & b25);
        s[30] = b30 ^ (~b32 & b34);
        s[31] = b31 ^ (~b33 & b35);
        s[40] = b40 ^ (~b42 & b44);
        s[41] = b41 ^ (~b43 & b45);
        s[2] = b2 ^ (~b4 & b6);
        s[3] = b3 ^ (~b5 & b7);
        s[12] = b12 ^ (~b14 & b16);
        s[13] = b13 ^ (~b15 & b17);
        s[22] = b22 ^ (~b24 & b26);
        s[23] = b23 ^ (~b25 & b27);
        s[32] = b32 ^ (~b34 & b36);
        s[33] = b33 ^ (~b35 & b37);
        s[42] = b42 ^ (~b44 & b46);
        s[43] = b43 ^ (~b45 & b47);
        s[4] = b4 ^ (~b6 & b8);
        s[5] = b5 ^ (~b7 & b9);
        s[14] = b14 ^ (~b16 & b18);
        s[15] = b15 ^ (~b17 & b19);
        s[24] = b24 ^ (~b26 & b28);
        s[25] = b25 ^ (~b27 & b29);
        s[34] = b34 ^ (~b36 & b38);
        s[35] = b35 ^ (~b37 & b39);
        s[44] = b44 ^ (~b46 & b48);
        s[45] = b45 ^ (~b47 & b49);
        s[6] = b6 ^ (~b8 & b0);
        s[7] = b7 ^ (~b9 & b1);
        s[16] = b16 ^ (~b18 & b10);
        s[17] = b17 ^ (~b19 & b11);
        s[26] = b26 ^ (~b28 & b20);
        s[27] = b27 ^ (~b29 & b21);
        s[36] = b36 ^ (~b38 & b30);
        s[37] = b37 ^ (~b39 & b31);
        s[46] = b46 ^ (~b48 & b40);
        s[47] = b47 ^ (~b49 & b41);
        s[8] = b8 ^ (~b0 & b2);
        s[9] = b9 ^ (~b1 & b3);
        s[18] = b18 ^ (~b10 & b12);
        s[19] = b19 ^ (~b11 & b13);
        s[28] = b28 ^ (~b20 & b22);
        s[29] = b29 ^ (~b21 & b23);
        s[38] = b38 ^ (~b30 & b32);
        s[39] = b39 ^ (~b31 & b33);
        s[48] = b48 ^ (~b40 & b42);
        s[49] = b49 ^ (~b41 & b43);

        s[0] ^= RC[n];
        s[1] ^= RC[n + 1];
      }
    } while(!end);

    var hex = '';
    if(CHROME) {
      b0 = s[0];
      b1 = s[1];
      b2 = s[2];
      b3 = s[3];
      b4 = s[4];
      b5 = s[5];
      b6 = s[6];
      b7 = s[7];
      b8 = s[8];
      b9 = s[9];
      b10 = s[10];
      b11 = s[11];
      b12 = s[12];
      b13 = s[13];
      b14 = s[14];
      b15 = s[15];
      hex += HEX_CHARS[(b0 >> 4) & 0x0F] + HEX_CHARS[b0 & 0x0F] +
             HEX_CHARS[(b0 >> 12) & 0x0F] + HEX_CHARS[(b0 >> 8) & 0x0F] +
             HEX_CHARS[(b0 >> 20) & 0x0F] + HEX_CHARS[(b0 >> 16) & 0x0F] +
             HEX_CHARS[(b0 >> 28) & 0x0F] + HEX_CHARS[(b0 >> 24) & 0x0F] +
             HEX_CHARS[(b1 >> 4) & 0x0F] + HEX_CHARS[b1 & 0x0F] +
             HEX_CHARS[(b1 >> 12) & 0x0F] + HEX_CHARS[(b1 >> 8) & 0x0F] +
             HEX_CHARS[(b1 >> 20) & 0x0F] + HEX_CHARS[(b1 >> 16) & 0x0F] +
             HEX_CHARS[(b1 >> 28) & 0x0F] + HEX_CHARS[(b1 >> 24) & 0x0F] +
             HEX_CHARS[(b2 >> 4) & 0x0F] + HEX_CHARS[b2 & 0x0F] +
             HEX_CHARS[(b2 >> 12) & 0x0F] + HEX_CHARS[(b2 >> 8) & 0x0F] +
             HEX_CHARS[(b2 >> 20) & 0x0F] + HEX_CHARS[(b2 >> 16) & 0x0F] +
             HEX_CHARS[(b2 >> 28) & 0x0F] + HEX_CHARS[(b2 >> 24) & 0x0F] +
             HEX_CHARS[(b3 >> 4) & 0x0F] + HEX_CHARS[b3 & 0x0F] +
             HEX_CHARS[(b3 >> 12) & 0x0F] + HEX_CHARS[(b3 >> 8) & 0x0F] +
             HEX_CHARS[(b3 >> 20) & 0x0F] + HEX_CHARS[(b3 >> 16) & 0x0F] +
             HEX_CHARS[(b3 >> 28) & 0x0F] + HEX_CHARS[(b3 >> 24) & 0x0F] +
             HEX_CHARS[(b4 >> 4) & 0x0F] + HEX_CHARS[b4 & 0x0F] +
             HEX_CHARS[(b4 >> 12) & 0x0F] + HEX_CHARS[(b4 >> 8) & 0x0F] +
             HEX_CHARS[(b4 >> 20) & 0x0F] + HEX_CHARS[(b4 >> 16) & 0x0F] +
             HEX_CHARS[(b4 >> 28) & 0x0F] + HEX_CHARS[(b4 >> 24) & 0x0F] +
             HEX_CHARS[(b5 >> 4) & 0x0F] + HEX_CHARS[b5 & 0x0F] +
             HEX_CHARS[(b5 >> 12) & 0x0F] + HEX_CHARS[(b5 >> 8) & 0x0F] +
             HEX_CHARS[(b5 >> 20) & 0x0F] + HEX_CHARS[(b5 >> 16) & 0x0F] +
             HEX_CHARS[(b5 >> 28) & 0x0F] + HEX_CHARS[(b5 >> 24) & 0x0F] +
             HEX_CHARS[(b6 >> 4) & 0x0F] + HEX_CHARS[b6 & 0x0F] +
             HEX_CHARS[(b6 >> 12) & 0x0F] + HEX_CHARS[(b6 >> 8) & 0x0F] +
             HEX_CHARS[(b6 >> 20) & 0x0F] + HEX_CHARS[(b6 >> 16) & 0x0F] +
             HEX_CHARS[(b6 >> 28) & 0x0F] + HEX_CHARS[(b6 >> 24) & 0x0F];

      if(bits >= 256) {
        hex += HEX_CHARS[(b7 >> 4) & 0x0F] + HEX_CHARS[b7 & 0x0F] +
               HEX_CHARS[(b7 >> 12) & 0x0F] + HEX_CHARS[(b7 >> 8) & 0x0F] +
               HEX_CHARS[(b7 >> 20) & 0x0F] + HEX_CHARS[(b7 >> 16) & 0x0F] +
               HEX_CHARS[(b7 >> 28) & 0x0F] + HEX_CHARS[(b7 >> 24) & 0x0F];
      }
      if(bits >= 384) {
        hex += HEX_CHARS[(b8 >> 4) & 0x0F] + HEX_CHARS[b8 & 0x0F] +
               HEX_CHARS[(b8 >> 12) & 0x0F] + HEX_CHARS[(b8 >> 8) & 0x0F] +
               HEX_CHARS[(b8 >> 20) & 0x0F] + HEX_CHARS[(b8 >> 16) & 0x0F] +
               HEX_CHARS[(b8 >> 28) & 0x0F] + HEX_CHARS[(b8 >> 24) & 0x0F] +
               HEX_CHARS[(b9 >> 4) & 0x0F] + HEX_CHARS[b9 & 0x0F] +
               HEX_CHARS[(b9 >> 12) & 0x0F] + HEX_CHARS[(b9 >> 8) & 0x0F] +
               HEX_CHARS[(b9 >> 20) & 0x0F] + HEX_CHARS[(b9 >> 16) & 0x0F] +
               HEX_CHARS[(b9 >> 28) & 0x0F] + HEX_CHARS[(b9 >> 24) & 0x0F] +
               HEX_CHARS[(b10 >> 4) & 0x0F] + HEX_CHARS[b10 & 0x0F] +
               HEX_CHARS[(b10 >> 12) & 0x0F] + HEX_CHARS[(b10 >> 8) & 0x0F] +
               HEX_CHARS[(b10 >> 20) & 0x0F] + HEX_CHARS[(b10 >> 16) & 0x0F] +
               HEX_CHARS[(b10 >> 28) & 0x0F] + HEX_CHARS[(b10 >> 24) & 0x0F] +
               HEX_CHARS[(b11 >> 4) & 0x0F] + HEX_CHARS[b11 & 0x0F] +
               HEX_CHARS[(b11 >> 12) & 0x0F] + HEX_CHARS[(b11 >> 8) & 0x0F] +
               HEX_CHARS[(b11 >> 20) & 0x0F] + HEX_CHARS[(b11 >> 16) & 0x0F] +
               HEX_CHARS[(b11 >> 28) & 0x0F] + HEX_CHARS[(b11 >> 24) & 0x0F];
      }
      if(bits == 512) {
        hex += HEX_CHARS[(b12 >> 4) & 0x0F] + HEX_CHARS[b12 & 0x0F] +
               HEX_CHARS[(b12 >> 12) & 0x0F] + HEX_CHARS[(b12 >> 8) & 0x0F] +
               HEX_CHARS[(b12 >> 20) & 0x0F] + HEX_CHARS[(b12 >> 16) & 0x0F] +
               HEX_CHARS[(b12 >> 28) & 0x0F] + HEX_CHARS[(b12 >> 24) & 0x0F] +
               HEX_CHARS[(b13 >> 4) & 0x0F] + HEX_CHARS[b13 & 0x0F] +
               HEX_CHARS[(b13 >> 12) & 0x0F] + HEX_CHARS[(b13 >> 8) & 0x0F] +
               HEX_CHARS[(b13 >> 20) & 0x0F] + HEX_CHARS[(b13 >> 16) & 0x0F] +
               HEX_CHARS[(b13 >> 28) & 0x0F] + HEX_CHARS[(b13 >> 24) & 0x0F] +
               HEX_CHARS[(b14 >> 4) & 0x0F] + HEX_CHARS[b14 & 0x0F] +
               HEX_CHARS[(b14 >> 12) & 0x0F] + HEX_CHARS[(b14 >> 8) & 0x0F] +
               HEX_CHARS[(b14 >> 20) & 0x0F] + HEX_CHARS[(b14 >> 16) & 0x0F] +
               HEX_CHARS[(b14 >> 28) & 0x0F] + HEX_CHARS[(b14 >> 24) & 0x0F] +
               HEX_CHARS[(b15 >> 4) & 0x0F] + HEX_CHARS[b15 & 0x0F] +
               HEX_CHARS[(b15 >> 12) & 0x0F] + HEX_CHARS[(b15 >> 8) & 0x0F] +
               HEX_CHARS[(b15 >> 20) & 0x0F] + HEX_CHARS[(b15 >> 16) & 0x0F] +
               HEX_CHARS[(b15 >> 28) & 0x0F] + HEX_CHARS[(b15 >> 24) & 0x0F];
      }
    } else {
      for(i = 0, n = bits / 32;i < n;++i) {
        h = s[i];
        hex += HEX_CHARS[(h >> 4) & 0x0F] + HEX_CHARS[h & 0x0F] +
               HEX_CHARS[(h >> 12) & 0x0F] + HEX_CHARS[(h >> 8) & 0x0F] +
               HEX_CHARS[(h >> 20) & 0x0F] + HEX_CHARS[(h >> 16) & 0x0F] +
               HEX_CHARS[(h >> 28) & 0x0F] + HEX_CHARS[(h >> 24) & 0x0F];
      }
    }
    return hex;
  };
  
  if(!root.JS_SHA3_TEST && NODE_JS) {
    module.exports = {
      sha3_512: sha3_512,
      sha3_384: sha3_384,
      sha3_256: sha3_256,
      sha3_224: sha3_224,
      keccak_512: keccak,
      keccak_384: keccak_384,
      keccak_256: keccak_256,
      keccak_224: keccak_224
    };
  } else if(root) {
    root.sha3_512 = sha3_512;
    root.sha3_384 = sha3_384;
    root.sha3_256 = sha3_256;
    root.sha3_224 = sha3_224;
    root.keccak_512 = keccak;
    root.keccak_384 = keccak_384;
    root.keccak_256 = keccak_256;
    root.keccak_224 = keccak_224;
  }
}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],110:[function(require,module,exports){
(function (Buffer){
const assert = require('assert')
/**
 * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP
 * This function takes in a data, convert it to buffer if not, and a length for recursion
 *
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Buffer} - returns buffer of encoded data
 **/
exports.encode = function (input) {
  if (input instanceof Array) {
    var output = []
    for (var i = 0; i < input.length; i++) {
      output.push(exports.encode(input[i]))
    }
    var buf = Buffer.concat(output)
    return Buffer.concat([encodeLength(buf.length, 192), buf])
  } else {
    input = toBuffer(input)
    if (input.length === 1 && input[0] < 128) {
      return input
    } else {
      return Buffer.concat([encodeLength(input.length, 128), input])
    }
  }
}

function safeParseInt (v, base) {
  if (v.slice(0, 2) === '00') {
    throw (new Error('invalid RLP: extra zeros'))
  }

  return parseInt(v, base)
}

function encodeLength (len, offset) {
  if (len < 56) {
    return new Buffer([len + offset])
  } else {
    var hexLength = intToHex(len)
    var lLength = hexLength.length / 2
    var firstByte = intToHex(offset + 55 + lLength)
    return new Buffer(firstByte + hexLength, 'hex')
  }
}

/**
 * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}
 * @param {Buffer,String,Integer,Array} data - will be converted to buffer
 * @returns {Array} - returns decode Array of Buffers containg the original message
 **/
exports.decode = function (input, stream) {
  if (!input || input.length === 0) {
    return new Buffer([])
  }

  input = toBuffer(input)
  var decoded = _decode(input)

  if (stream) {
    return decoded
  }

  assert.equal(decoded.remainder.length, 0, 'invalid remainder')
  return decoded.data
}

exports.getLength = function (input) {
  if (!input || input.length === 0) {
    return new Buffer([])
  }

  input = toBuffer(input)
  var firstByte = input[0]
  if (firstByte <= 0x7f) {
    return input.length
  } else if (firstByte <= 0xb7) {
    return firstByte - 0x7f
  } else if (firstByte <= 0xbf) {
    return firstByte - 0xb6
  } else if (firstByte <= 0xf7) {
    // a list between  0-55 bytes long
    return firstByte - 0xbf
  } else {
    // a list  over 55 bytes long
    var llength = firstByte - 0xf6
    var length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    return llength + length
  }
}

function _decode (input) {
  var length, llength, data, innerRemainder, d
  var decoded = []
  var firstByte = input[0]

  if (firstByte <= 0x7f) {
    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.
    return {
      data: input.slice(0, 1),
      remainder: input.slice(1)
    }
  } else if (firstByte <= 0xb7) {
    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string
    // The range of the first byte is [0x80, 0xb7]
    length = firstByte - 0x7f

    // set 0x80 null to 0
    if (firstByte === 0x80) {
      data = new Buffer([])
    } else {
      data = input.slice(1, length)
    }

    if (length === 2 && data[0] < 0x80) {
      throw new Error('invalid rlp encoding: byte must be less 0x80')
    }

    return {
      data: data,
      remainder: input.slice(length)
    }
  } else if (firstByte <= 0xbf) {
    llength = firstByte - 0xb6
    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    data = input.slice(llength, length + llength)
    if (data.length < length) {
      throw (new Error('invalid RLP'))
    }

    return {
      data: data,
      remainder: input.slice(length + llength)
    }
  } else if (firstByte <= 0xf7) {
    // a list between  0-55 bytes long
    length = firstByte - 0xbf
    innerRemainder = input.slice(1, length)
    while (innerRemainder.length) {
      d = _decode(innerRemainder)
      decoded.push(d.data)
      innerRemainder = d.remainder
    }

    return {
      data: decoded,
      remainder: input.slice(length)
    }
  } else {
    // a list  over 55 bytes long
    llength = firstByte - 0xf6
    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)
    var totalLength = llength + length
    if (totalLength > input.length) {
      throw new Error('invalid rlp: total length is larger than the data')
    }

    innerRemainder = input.slice(llength, totalLength)
    if (innerRemainder.length === 0) {
      throw new Error('invalid rlp, List has a invalid length')
    }

    while (innerRemainder.length) {
      d = _decode(innerRemainder)
      decoded.push(d.data)
      innerRemainder = d.remainder
    }
    return {
      data: decoded,
      remainder: input.slice(totalLength)
    }
  }
}

function isHexPrefixed (str) {
  return str.slice(0, 2) === '0x'
}

// Removes 0x from a given String
function stripHexPrefix (str) {
  if (typeof str !== 'string') {
    return str
  }
  return isHexPrefixed(str) ? str.slice(2) : str
}

function intToHex (i) {
  var hex = i.toString(16)
  if (hex.length % 2) {
    hex = '0' + hex
  }

  return hex
}

function padToEven (a) {
  if (a.length % 2) a = '0' + a
  return a
}

function intToBuffer (i) {
  var hex = intToHex(i)
  return new Buffer(hex, 'hex')
}

function toBuffer (v) {
  if (!Buffer.isBuffer(v)) {
    if (typeof v === 'string') {
      v = new Buffer(padToEven(stripHexPrefix(v)), 'hex')
    } else if (typeof v === 'number') {
      if (!v) {
        v = new Buffer([])
      } else {
        v = intToBuffer(v)
      }
    } else if (v === null || v === undefined) {
      v = new Buffer([])
    } else if (v.toArray) {
      // converts a BN to a Buffer
      v = new Buffer(v.toArray())
    } else {
      throw new Error('invalid type')
    }
  }
  return v
}

}).call(this,require("buffer").Buffer)

},{"assert":149,"buffer":151}],111:[function(require,module,exports){
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module exports.
 * @public
 */

module.exports = depd

/**
 * Create deprecate for namespace in caller.
 */

function depd(namespace) {
  if (!namespace) {
    throw new TypeError('argument namespace is required')
  }

  function deprecate(message) {
    // no-op in browser
  }

  deprecate._file = undefined
  deprecate._ignored = true
  deprecate._namespace = namespace
  deprecate._traced = false
  deprecate._warned = Object.create(null)

  deprecate.function = wrapfunction
  deprecate.property = wrapproperty

  return deprecate
}

/**
 * Return a wrapped function in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */

function wrapfunction(fn, message) {
  if (typeof fn !== 'function') {
    throw new TypeError('argument fn must be a function')
  }

  return fn
}

/**
 * Wrap property in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */

function wrapproperty(obj, prop, message) {
  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
    throw new TypeError('argument obj must be object')
  }

  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)

  if (!descriptor) {
    throw new TypeError('must call property on owner object')
  }

  if (!descriptor.configurable) {
    throw new TypeError('property must be configurable')
  }

  return
}

},{}],112:[function(require,module,exports){
(function (process){
/*!
 * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

(function (name, definition) {
    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        module.exports = definition();
    } else if (typeof define === 'function' && typeof define.amd === 'object') {
        define(definition);
    } else if (typeof define === 'function' && typeof define.petal === 'object') {
        define(name, [], definition);
    } else {
        this[name] = definition();
    }
})('validator', function (validator) {

    'use strict';

    validator = { version: '4.9.0', coerce: true };

    var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
    var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;

    var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
    var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;

    var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;

    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;

    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/
      , isbn13Maybe = /^(?:[0-9]{13})$/;

    var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;

    var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/
      , ipv6Block = /^[0-9A-F]{1,4}$/i;

    var uuid = {
        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i
      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
    };

    var alpha = {
        'en-US': /^[A-Z]+$/i,
        'de-DE': /^[A-ZÄÖÜß]+$/i,
        'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,
        'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
        'nl-NL': /^[A-ZÉËÏÓÖÜ]+$/i,
        'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
        'ru-RU': /^[А-ЯЁа-яё]+$/i
      }
      , alphanumeric = {
        'en-US': /^[0-9A-Z]+$/i,
        'de-DE': /^[0-9A-ZÄÖÜß]+$/i,
        'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
        'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
        'nl-NL': /^[0-9A-ZÉËÏÓÖÜ]+$/i,
        'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
        'ru-RU': /^[0-9А-ЯЁа-яё]+$/i
      };

    var englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];
    for (var locale, i = 0; i < englishLocales.length; i++) {
        locale = 'en-' + englishLocales[i];
        alpha[locale] = alpha['en-US'];
        alphanumeric[locale] = alphanumeric['en-US'];
    }

    var numeric = /^[-+]?[0-9]+$/
      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/
      , float = /^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/
      , hexadecimal = /^[0-9A-F]+$/i
      , decimal = /^[-+]?([0-9]+|\.[0-9]+|[0-9]+\.[0-9]+)$/
      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

    var ascii = /^[\x00-\x7F]+$/
      , multibyte = /[^\x00-\x7F]/
      , fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/
      , halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

    var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

    var base64 = /^(?:[A-Z0-9+\/]{4})*(?:[A-Z0-9+\/]{2}==|[A-Z0-9+\/]{3}=|[A-Z0-9+\/]{4})$/i;

    var phones = {
      'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
      'de-DE': /^(\+?49[ \.\-])?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,
      'el-GR': /^(\+?30)?(69\d{8})$/,
      'en-AU': /^(\+?61|0)4\d{8}$/,
      'en-GB': /^(\+?44|0)7\d{9}$/,
      'en-HK': /^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,
      'en-IN': /^(\+?91|0)?[789]\d{9}$/,
      'en-NZ': /^(\+?64|0)2\d{7,9}$/,
      'en-ZA': /^(\+?27|0)\d{9}$/,
      'en-ZM': /^(\+?26)?09[567]\d{7}$/,
      'es-ES': /^(\+?34)?(6\d{1}|7[1234])\d{7}$/,
      'fi-FI': /^(\+?358|0)\s?(4(0|1|2|4|5)?|50)\s?(\d\s?){4,8}\d$/,
      'fr-FR': /^(\+?33|0)[67]\d{8}$/,
      'nb-NO': /^(\+?47)?[49]\d{7}$/,
      'nn-NO': /^(\+?47)?[49]\d{7}$/,
      'pt-BR': /^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,
      'pt-PT': /^(\+?351)?9[1236]\d{7}$/,
      'ru-RU': /^(\+?7|8)?9\d{9}$/,
      'vi-VN': /^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,
      'zh-CN': /^(\+?0?86\-?)?((13\d|14[57]|15[^4,\D]|17[678]|18\d)\d{8}|170[059]\d{7})$/,
      'zh-TW': /^(\+?886\-?|0)?9\d{8}$/
    };

    // from http://goo.gl/0ejHHW
    var iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;

    validator.extend = function (name, fn) {
        validator[name] = function () {
            var args = Array.prototype.slice.call(arguments);
            args[0] = validator.toString(args[0]);
            return fn.apply(validator, args);
        };
    };

    //Right before exporting the validator object, pass each of the builtins
    //through extend() so that their first argument is coerced to a string
    validator.init = function () {
        for (var name in validator) {
            if (typeof validator[name] !== 'function' || name === 'toString' ||
                    name === 'toDate' || name === 'extend' || name === 'init' ||
                    name === 'isServerSide') {
                continue;
            }
            validator.extend(name, validator[name]);
        }
    };

    validator.isServerSide = function () {
        return typeof module === 'object' && module &&
            typeof module.exports === 'object' &&
            typeof process === 'object' &&
            typeof require === 'function';
    };

    var depd = null;
    validator.deprecation = function (msg) {
        if (depd === null) {
            if (!validator.isServerSide()) {
                return;
            }
            depd = require('depd')('validator');
        }
        depd(msg);
    };

    validator.toString = function (input) {
        if (typeof input !== 'string') {
            // The library validates strings only. Currently it coerces all input to a string, but this
            // will go away in an upcoming major version change. Print a deprecation notice for now
            if (!validator.coerce) {
                throw new Error('this library validates strings only');
            }
            validator.deprecation('you tried to validate a ' + typeof input + ' but this library ' +
                    '(validator.js) validates strings only. Please update your code as this will ' +
                    'be an error soon.');
        }
        if (typeof input === 'object' && input !== null) {
            if (typeof input.toString === 'function') {
                input = input.toString();
            } else {
                input = '[object Object]';
            }
        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {
            input = '';
        }
        return '' + input;
    };

    validator.toDate = function (date) {
        if (Object.prototype.toString.call(date) === '[object Date]') {
            return date;
        }
        date = Date.parse(date);
        return !isNaN(date) ? new Date(date) : null;
    };

    validator.toFloat = function (str) {
        return parseFloat(str);
    };

    validator.toInt = function (str, radix) {
        return parseInt(str, radix || 10);
    };

    validator.toBoolean = function (str, strict) {
        if (strict) {
            return str === '1' || str === 'true';
        }
        return str !== '0' && str !== 'false' && str !== '';
    };

    validator.equals = function (str, comparison) {
        return str === validator.toString(comparison);
    };

    validator.contains = function (str, elem) {
        return str.indexOf(validator.toString(elem)) >= 0;
    };

    validator.matches = function (str, pattern, modifiers) {
        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
            pattern = new RegExp(pattern, modifiers);
        }
        return pattern.test(str);
    };

    var default_email_options = {
        allow_display_name: false,
        allow_utf8_local_part: true,
        require_tld: true
    };

    validator.isEmail = function (str, options) {
        options = merge(options, default_email_options);

        if (options.allow_display_name) {
            var display_email = str.match(displayName);
            if (display_email) {
                str = display_email[1];
            }
        }

        var parts = str.split('@')
          , domain = parts.pop()
          , user = parts.join('@');

        var lower_domain = domain.toLowerCase();
        if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {
            user = user.replace(/\./g, '').toLowerCase();
        }

        if (!validator.isByteLength(user, {max: 64}) ||
                !validator.isByteLength(domain, {max: 256})) {
            return false;
        }

        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {
            return false;
        }

        if (user[0] === '"') {
            user = user.slice(1, user.length - 1);
            return options.allow_utf8_local_part ?
                quotedEmailUserUtf8.test(user) :
                quotedEmailUser.test(user);
        }

        var pattern = options.allow_utf8_local_part ?
            emailUserUtf8Part : emailUserPart;

        var user_parts = user.split('.');
        for (var i = 0; i < user_parts.length; i++) {
            if (!pattern.test(user_parts[i])) {
                return false;
            }
        }

        return true;
    };

    var default_url_options = {
        protocols: [ 'http', 'https', 'ftp' ]
      , require_tld: true
      , require_protocol: false
      , require_valid_protocol: true
      , allow_underscores: false
      , allow_trailing_dot: false
      , allow_protocol_relative_urls: false
    };

    validator.isURL = function (url, options) {
        if (!url || url.length >= 2083 || /\s/.test(url)) {
            return false;
        }
        if (url.indexOf('mailto:') === 0) {
            return false;
        }
        options = merge(options, default_url_options);
        var protocol, auth, host, hostname, port,
            port_str, split;
        split = url.split('://');
        if (split.length > 1) {
            protocol = split.shift();
            if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
                return false;
            }
        } else if (options.require_protocol) {
            return false;
        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
            split[0] = url.substr(2);
        }
        url = split.join('://');
        split = url.split('#');
        url = split.shift();

        split = url.split('?');
        url = split.shift();

        split = url.split('/');
        url = split.shift();
        split = url.split('@');
        if (split.length > 1) {
            auth = split.shift();
            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
                return false;
            }
        }
        hostname = split.join('@');
        split = hostname.split(':');
        host = split.shift();
        if (split.length) {
            port_str = split.join(':');
            port = parseInt(port_str, 10);
            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
                return false;
            }
        }
        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&
                host !== 'localhost') {
            return false;
        }
        if (options.host_whitelist &&
                options.host_whitelist.indexOf(host) === -1) {
            return false;
        }
        if (options.host_blacklist &&
                options.host_blacklist.indexOf(host) !== -1) {
            return false;
        }
        return true;
    };

    validator.isMACAddress = function (str) {
        return macAddress.test(str);
    };

    validator.isIP = function (str, version) {
        version = version ? version + '' : '';
        if (!version) {
            return validator.isIP(str, 4) || validator.isIP(str, 6);
        } else if (version === '4') {
            if (!ipv4Maybe.test(str)) {
                return false;
            }
            var parts = str.split('.').sort(function (a, b) {
                return a - b;
            });
            return parts[3] <= 255;
        } else if (version === '6') {
            var blocks = str.split(':');
            var foundOmissionBlock = false; // marker to indicate ::

            // At least some OS accept the last 32 bits of an IPv6 address
            // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
            // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
            // and '::a.b.c.d' is deprecated, but also valid.
            var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);
            var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

            if (blocks.length > expectedNumberOfBlocks)
                return false;

            // initial or final ::
            if (str === '::') {
                return true;
            } else if (str.substr(0, 2) === '::') {
                blocks.shift();
                blocks.shift();
                foundOmissionBlock = true;
            } else if (str.substr(str.length - 2) === '::') {
                blocks.pop();
                blocks.pop();
                foundOmissionBlock = true;
            }

            for (var i = 0; i < blocks.length; ++i) {
                // test for a :: which can not be at the string start/end
                // since those cases have been handled above
                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {
                    if (foundOmissionBlock)
                        return false; // multiple :: in address
                    foundOmissionBlock = true;
                } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {
                    // it has been checked before that the last
                    // block is a valid IPv4 address
                } else if (!ipv6Block.test(blocks[i])) {
                    return false;
                }
            }

            if (foundOmissionBlock) {
                return blocks.length >= 1;
            } else {
                return blocks.length === expectedNumberOfBlocks;
            }
        }
        return false;
    };

    var default_fqdn_options = {
        require_tld: true
      , allow_underscores: false
      , allow_trailing_dot: false
    };

    validator.isFQDN = function (str, options) {
        options = merge(options, default_fqdn_options);

        /* Remove the optional trailing dot before checking validity */
        if (options.allow_trailing_dot && str[str.length - 1] === '.') {
            str = str.substring(0, str.length - 1);
        }
        var parts = str.split('.');
        if (options.require_tld) {
            var tld = parts.pop();
            if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
                return false;
            }
        }
        for (var part, i = 0; i < parts.length; i++) {
            part = parts[i];
            if (options.allow_underscores) {
                if (part.indexOf('__') >= 0) {
                    return false;
                }
                part = part.replace(/_/g, '');
            }
            if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
                return false;
            }
            if (/[\uff01-\uff5e]/.test(part)) {
                // disallow full-width chars
                return false;
            }
            if (part[0] === '-' || part[part.length - 1] === '-') {
                return false;
            }
        }
        return true;
    };

    validator.isBoolean = function(str) {
        return (['true', 'false', '1', '0'].indexOf(str) >= 0);
    };

    validator.isAlpha = function (str, locale) {
        locale = locale || 'en-US';
        if (locale in alpha) {
            return alpha[locale].test(str);
        }
        throw new Error('Invalid locale \'' + locale + '\'');
    };

    validator.isAlphanumeric = function (str, locale) {
        locale = locale || 'en-US';
        if (locale in alphanumeric) {
            return alphanumeric[locale].test(str);
        }
        throw new Error('Invalid locale \'' + locale + '\'');
    };

    validator.isNumeric = function (str) {
        return numeric.test(str);
    };

    validator.isDecimal = function (str) {
        return str !== '' && decimal.test(str);
    };

    validator.isHexadecimal = function (str) {
        return hexadecimal.test(str);
    };

    validator.isHexColor = function (str) {
        return hexcolor.test(str);
    };

    validator.isLowercase = function (str) {
        return str === str.toLowerCase();
    };

    validator.isUppercase = function (str) {
        return str === str.toUpperCase();
    };

    validator.isInt = function (str, options) {
        options = options || {};
        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
    };

    validator.isFloat = function (str, options) {
        options = options || {};
        if (str === '' || str === '.') {
            return false;
        }
        return float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
    };

    validator.isDivisibleBy = function (str, num) {
        return validator.toFloat(str) % parseInt(num, 10) === 0;
    };

    validator.isNull = function (str) {
        return str.length === 0;
    };

    validator.isLength = function (str, options) {
        var min, max;
        if (typeof(options) === 'object') {
            min = options.min || 0;
            max = options.max;
        } else { // backwards compatibility: isLength(str, min [, max])
            min = arguments[1];
            max = arguments[2];
        }
        var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
        var len = str.length - surrogatePairs.length;
        return len >= min && (typeof max === 'undefined' || len <= max);
    };
    validator.isByteLength = function (str, options) {
        var min, max;
        if (typeof(options) === 'object') {
            min = options.min || 0;
            max = options.max;
        } else { // backwards compatibility: isByteLength(str, min [, max])
            min = arguments[1];
            max = arguments[2];
        }
        var len = encodeURI(str).split(/%..|./).length - 1;
        return len >= min && (typeof max === 'undefined' || len <= max);
    };

    validator.isUUID = function (str, version) {
        var pattern = uuid[version ? version : 'all'];
        return pattern && pattern.test(str);
    };

    function getTimezoneOffset(str) {
        var iso8601Parts = str.match(iso8601)
          , timezone, sign, hours, minutes;
        if (!iso8601Parts) {
            str = str.toLowerCase();
            timezone = str.match(/(?:\s|gmt\s*)(-|\+)(\d{1,4})(\s|$)/);
            if (!timezone) {
                return str.indexOf('gmt') !== -1 ? 0 : null;
            }
            sign = timezone[1];
            var offset = timezone[2];
            if (offset.length === 3) {
                offset = '0' + offset;
            }
            if (offset.length <= 2) {
                hours = 0;
                minutes = parseInt(offset);
            } else {
                hours = parseInt(offset.slice(0, 2));
                minutes = parseInt(offset.slice(2, 4));
            }
        } else {
            timezone = iso8601Parts[21];
            if (!timezone) {
                // if no hour/minute was provided, the date is GMT
                return !iso8601Parts[12] ? 0 : null;
            }
            if (timezone === 'z' || timezone === 'Z') {
                return 0;
            }
            sign = iso8601Parts[22];
            if (timezone.indexOf(':') !== -1) {
                hours = parseInt(iso8601Parts[23]);
                minutes = parseInt(iso8601Parts[24]);
            } else {
                hours = 0;
                minutes = parseInt(iso8601Parts[23]);
            }
        }
        return (hours * 60 + minutes) * (sign === '-' ? 1 : -1);
    }

    validator.isDate = function (str) {
        var normalizedDate = new Date(Date.parse(str));
        if (isNaN(normalizedDate)) {
            return false;
        }

        // normalizedDate is in the user's timezone. Apply the input
        // timezone offset to the date so that the year and day match
        // the input
        var timezoneOffset = getTimezoneOffset(str);
        if (timezoneOffset !== null) {
            var timezoneDifference = normalizedDate.getTimezoneOffset() -
                timezoneOffset;
            normalizedDate = new Date(normalizedDate.getTime() +
                60000 * timezoneDifference);
        }

        var day = String(normalizedDate.getDate());
        var dayOrYear, dayOrYearMatches, year;
        //check for valid double digits that could be late days
        //check for all matches since a string like '12/23' is a valid date
        //ignore everything with nearby colons
        dayOrYearMatches = str.match(/(^|[^:\d])[23]\d([^:\d]|$)/g);
        if (!dayOrYearMatches) {
            return true;
        }
        dayOrYear = dayOrYearMatches.map(function(digitString) {
            return digitString.match(/\d+/g)[0];
        }).join('/');

        year = String(normalizedDate.getFullYear()).slice(-2);
        if (dayOrYear === day || dayOrYear === year) {
            return true;
        } else if ((dayOrYear === (day + '/' + year)) || (dayOrYear === (year + '/' + day))) {
            return true;
        }
        return false;
    };

    validator.isAfter = function (str, date) {
        var comparison = validator.toDate(date || new Date())
          , original = validator.toDate(str);
        return !!(original && comparison && original > comparison);
    };

    validator.isBefore = function (str, date) {
        var comparison = validator.toDate(date || new Date())
          , original = validator.toDate(str);
        return !!(original && comparison && original < comparison);
    };

    validator.isIn = function (str, options) {
        var i;
        if (Object.prototype.toString.call(options) === '[object Array]') {
            var array = [];
            for (i in options) {
                array[i] = validator.toString(options[i]);
            }
            return array.indexOf(str) >= 0;
        } else if (typeof options === 'object') {
            return options.hasOwnProperty(str);
        } else if (options && typeof options.indexOf === 'function') {
            return options.indexOf(str) >= 0;
        }
        return false;
    };

    validator.isWhitelisted = function (str, chars) {
        for (var i = str.length - 1; i >= 0; i--) {
            if (chars.indexOf(str[i]) === -1) {
                return false;
            }
        }

        return true;
    };

    validator.isCreditCard = function (str) {
        var sanitized = str.replace(/[^0-9]+/g, '');
        if (!creditCard.test(sanitized)) {
            return false;
        }
        var sum = 0, digit, tmpNum, shouldDouble;
        for (var i = sanitized.length - 1; i >= 0; i--) {
            digit = sanitized.substring(i, (i + 1));
            tmpNum = parseInt(digit, 10);
            if (shouldDouble) {
                tmpNum *= 2;
                if (tmpNum >= 10) {
                    sum += ((tmpNum % 10) + 1);
                } else {
                    sum += tmpNum;
                }
            } else {
                sum += tmpNum;
            }
            shouldDouble = !shouldDouble;
        }
        return !!((sum % 10) === 0 ? sanitized : false);
    };

    validator.isISIN = function (str) {
        if (!isin.test(str)) {
            return false;
        }

        var checksumStr = str.replace(/[A-Z]/g, function(character) {
            return parseInt(character, 36);
        });

        var sum = 0, digit, tmpNum, shouldDouble = true;
        for (var i = checksumStr.length - 2; i >= 0; i--) {
            digit = checksumStr.substring(i, (i + 1));
            tmpNum = parseInt(digit, 10);
            if (shouldDouble) {
                tmpNum *= 2;
                if (tmpNum >= 10) {
                    sum += tmpNum + 1;
                } else {
                    sum += tmpNum;
                }
            } else {
                sum += tmpNum;
            }
            shouldDouble = !shouldDouble;
        }

        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
    };

    validator.isISBN = function (str, version) {
        version = version ? version + '' : '';
        if (!version) {
            return validator.isISBN(str, 10) || validator.isISBN(str, 13);
        }
        var sanitized = str.replace(/[\s-]+/g, '')
          , checksum = 0, i;
        if (version === '10') {
            if (!isbn10Maybe.test(sanitized)) {
                return false;
            }
            for (i = 0; i < 9; i++) {
                checksum += (i + 1) * sanitized.charAt(i);
            }
            if (sanitized.charAt(9) === 'X') {
                checksum += 10 * 10;
            } else {
                checksum += 10 * sanitized.charAt(9);
            }
            if ((checksum % 11) === 0) {
                return !!sanitized;
            }
        } else  if (version === '13') {
            if (!isbn13Maybe.test(sanitized)) {
                return false;
            }
            var factor = [ 1, 3 ];
            for (i = 0; i < 12; i++) {
                checksum += factor[i % 2] * sanitized.charAt(i);
            }
            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {
                return !!sanitized;
            }
        }
        return false;
    };

    validator.isMobilePhone = function(str, locale) {
        if (locale in phones) {
            return phones[locale].test(str);
        }
        return false;
    };

    var default_currency_options = {
        symbol: '$'
      , require_symbol: false
      , allow_space_after_symbol: false
      , symbol_after_digits: false
      , allow_negatives: true
      , parens_for_negatives: false
      , negative_sign_before_digits: false
      , negative_sign_after_digits: false
      , allow_negative_sign_placeholder: false
      , thousands_separator: ','
      , decimal_separator: '.'
      , allow_space_after_digits: false
    };

    validator.isCurrency = function (str, options) {
        options = merge(options, default_currency_options);

        return currencyRegex(options).test(str);
    };

    validator.isJSON = function (str) {
        try {
            var obj = JSON.parse(str);
            return !!obj && typeof obj === 'object';
        } catch (e) {}
        return false;
    };

    validator.isMultibyte = function (str) {
        return multibyte.test(str);
    };

    validator.isAscii = function (str) {
        return ascii.test(str);
    };

    validator.isFullWidth = function (str) {
        return fullWidth.test(str);
    };

    validator.isHalfWidth = function (str) {
        return halfWidth.test(str);
    };

    validator.isVariableWidth = function (str) {
        return fullWidth.test(str) && halfWidth.test(str);
    };

    validator.isSurrogatePair = function (str) {
        return surrogatePair.test(str);
    };

    validator.isBase64 = function (str) {
        return base64.test(str);
    };

    validator.isMongoId = function (str) {
        return validator.isHexadecimal(str) && str.length === 24;
    };

    validator.isISO8601 = function (str) {
        return iso8601.test(str);
    };

    validator.ltrim = function (str, chars) {
        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
        return str.replace(pattern, '');
    };

    validator.rtrim = function (str, chars) {
        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\s+$/g;
        return str.replace(pattern, '');
    };

    validator.trim = function (str, chars) {
        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\s+|\s+$/g;
        return str.replace(pattern, '');
    };

    validator.escape = function (str) {
        return (str.replace(/&/g, '&amp;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#x27;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\//g, '&#x2F;')
            .replace(/\`/g, '&#96;'));
    };

    validator.stripLow = function (str, keep_new_lines) {
        var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
        return validator.blacklist(str, chars);
    };

    validator.whitelist = function (str, chars) {
        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
    };

    validator.blacklist = function (str, chars) {
        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
    };

    var default_normalize_email_options = {
        lowercase: true,
        remove_dots: true,
        remove_extension: true
    };

    validator.normalizeEmail = function (email, options) {
        options = merge(options, default_normalize_email_options);
        if (!validator.isEmail(email)) {
            return false;
        }
        var parts = email.split('@', 2);
        parts[1] = parts[1].toLowerCase();
        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
            if (options.remove_extension) {
                parts[0] = parts[0].split('+')[0];
            }
            if (options.remove_dots) {
                parts[0] = parts[0].replace(/\./g, '');
            }
            if (!parts[0].length) {
                return false;
            }
            parts[0] = parts[0].toLowerCase();
            parts[1] = 'gmail.com';
        } else if (options.lowercase) {
            parts[0] = parts[0].toLowerCase();
        }
        return parts.join('@');
    };

    function merge(obj, defaults) {
        obj = obj || {};
        for (var key in defaults) {
            if (typeof obj[key] === 'undefined') {
                obj[key] = defaults[key];
            }
        }
        return obj;
    }

    function currencyRegex(options) {
        var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?')
            , negative = '-?'
            , whole_dollar_amount_without_sep = '[1-9]\\d*'
            , whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*'
            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]
            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'
            , decimal_amount = '(\\' + options.decimal_separator + '\\d{2})?';
        var pattern = whole_dollar_amount + decimal_amount;
        // default is negative sign before symbol, but there are two other options (besides parens)
        if (options.allow_negatives && !options.parens_for_negatives) {
            if (options.negative_sign_after_digits) {
                pattern += negative;
            }
            else if (options.negative_sign_before_digits) {
                pattern = negative + pattern;
            }
        }
        // South African Rand, for example, uses R 123 (space) and R-123 (no space)
        if (options.allow_negative_sign_placeholder) {
            pattern = '( (?!\\-))?' + pattern;
        }
        else if (options.allow_space_after_symbol) {
            pattern = ' ?' + pattern;
        }
        else if (options.allow_space_after_digits) {
            pattern += '( (?!$))?';
        }
        if (options.symbol_after_digits) {
            pattern += symbol;
        } else {
            pattern = symbol + pattern;
        }
        if (options.allow_negatives) {
            if (options.parens_for_negatives) {
                pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
            }
            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
                pattern = negative + pattern;
            }
        }
        return new RegExp(
            '^' +
            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space
            '(?!-? )(?=.*\\d)' +
            pattern +
            '$'
        );
    }

    validator.init();

    return validator;

});

}).call(this,require('_process'))

},{"_process":351,"depd":111}],113:[function(require,module,exports){
var Semaphore = require('./lib/Semaphore');
var CondVariable = require('./lib/CondVariable');
var Mutex = require('./lib/Mutex');
var ReadWriteLock = require('./lib/ReadWriteLock');


exports.Semaphore = Semaphore;
exports.CondVariable = CondVariable;
exports.Mutex = Mutex;
exports.ReadWriteLock = ReadWriteLock;


exports.createCondVariable = function (initialValue) {
	return new CondVariable(initialValue);
};

exports.createSemaphore = function (initialCount) {
	return new Semaphore(initialCount);
};

exports.createMutex = function () {
	return new Mutex();
};

exports.createReadWriteLock = function () {
	return new ReadWriteLock();
};

},{"./lib/CondVariable":114,"./lib/Mutex":115,"./lib/ReadWriteLock":116,"./lib/Semaphore":117}],114:[function(require,module,exports){
function CondVariable(initialValue) {
	this._value = initialValue;
	this._waiting = [];
}

module.exports = CondVariable;


function condToFunc(cond) {
	if (typeof cond === 'function') {
		return cond;
	}

	if (typeof cond === 'number' || typeof cond === 'boolean' || typeof cond === 'string') {
		return function (value) {
			return value === cond;
		};
	}

	if (cond && typeof cond === 'object' && cond instanceof RegExp) {
		return function (value) {
			return cond.test(value);
		};
	}

	throw new TypeError('Unknown condition type: ' + (typeof cond));
}


CondVariable.prototype.get = function () {
	return this._value;
};


CondVariable.prototype.wait = function (cond, cb) {
	var test = condToFunc(cond);

	if (test(this._value)) {
		return cb.call(this);
	}

	this._waiting.push({ test: test, cb: cb });
};


CondVariable.prototype.set = function (value) {
	this._value = value;

	for (var i = 0; i < this._waiting.length; i++) {
		var waiter = this._waiting[i];

		if (waiter.test(value)) {
			this._waiting.splice(i, 1);
			i -= 1;
			waiter.cb.call(this);
		}
	}
};

},{}],115:[function(require,module,exports){
function Mutex() {
	this.isLocked = false;
	this._waiting = [];
}

module.exports = Mutex;


Mutex.prototype.lock = function (cb) {
	if (this.isLocked) {
		this._waiting.push(cb);
	} else {
		this.isLocked = true;
		cb.call(this);
	}
};


Mutex.prototype.timedLock = function (ttl, cb) {
	if (!this.isLocked) {
		this.isLocked = true;
		return cb.call(this);
	}

	var timer, that = this;

	this._waiting.push(function () {
		clearTimeout(timer);

		if (!cb) {
			that.unlock();
			return;
		}

		cb.call(this);
		cb = null;
	});

	timer = setTimeout(function () {
		if (cb) {
			cb.call(this, new Error('Lock timed out'));
			cb = null;
		}
	}, ttl);
};


Mutex.prototype.tryLock = function () {
	if (this.isLocked) {
		return false;
	}

	this.isLocked = true;
	return true;
};


Mutex.prototype.unlock = function () {
	if (!this.isLocked) {
		throw new Error('Mutex is not locked');
	}

	var waiter = this._waiting.shift();

	if (waiter) {
		waiter.call(this);
	} else {
		this.isLocked = false;
	}
};

},{}],116:[function(require,module,exports){
function ReadWriteLock() {
	this.isLocked = false;
	this._readLocks = 0;
	this._waitingToRead = [];
	this._waitingToWrite = [];
}

module.exports = ReadWriteLock;


ReadWriteLock.prototype.readLock = function (cb) {
	if (this.isLocked === 'W') {
		this._waitingToRead.push(cb);
	} else {
		this._readLocks += 1;
		this.isLocked = 'R';
		cb.call(this);
	}
};


ReadWriteLock.prototype.writeLock = function (cb) {
	if (this.isLocked) {
		this._waitingToWrite.push(cb);
	} else {
		this.isLocked = 'W';
		cb.call(this);
	}
};


ReadWriteLock.prototype.timedReadLock = function (ttl, cb) {
	if (this.tryReadLock()) {
		return cb.call(this);
	}

	var timer, that = this;

	function waiter() {
		clearTimeout(timer);

		if (cb) {
			var callback = cb;
			cb = null;
			callback.apply(that, arguments);
		}
	}

	this._waitingToRead.push(waiter);

	timer = setTimeout(function () {
		var index = that._waitingToRead.indexOf(waiter);
		if (index !== -1) {
			that._waitingToRead.splice(index, 1);
			waiter(new Error('ReadLock timed out'));
		}
	}, ttl);
};


ReadWriteLock.prototype.timedWriteLock = function (ttl, cb) {
	if (this.tryWriteLock()) {
		return cb.call(this);
	}

	var timer, that = this;

	function waiter() {
		clearTimeout(timer);

		if (cb) {
			var callback = cb;
			cb = null;
			callback.apply(that, arguments);
		}
	}

	this._waitingToWrite.push(waiter);

	timer = setTimeout(function () {
		var index = that._waitingToWrite.indexOf(waiter);
		if (index !== -1) {
			that._waitingToWrite.splice(index, 1);
			waiter(new Error('WriteLock timed out'));
		}
	}, ttl);
};


ReadWriteLock.prototype.tryReadLock = function () {
	if (this.isLocked === 'W') {
		return false;
	}

	this.isLocked = 'R';
	this._readLocks += 1;
	return true;
};


ReadWriteLock.prototype.tryWriteLock = function () {
	if (this.isLocked) {
		return false;
	}

	this.isLocked = 'W';
	return true;
};


ReadWriteLock.prototype.unlock = function () {
	var waiter;

	if (this.isLocked === 'R') {
		this._readLocks -= 1;

		if (this._readLocks === 0) {
			// allow one write lock through

			waiter = this._waitingToWrite.shift();
			if (waiter) {
				this.isLocked = 'W';
				waiter.call(this);
			} else {
				this.isLocked = false;
			}
		}
	} else if (this.isLocked === 'W') {
		// allow all read locks or one write lock through

		var rlen = this._waitingToRead.length;

		if (rlen === 0) {
			waiter = this._waitingToWrite.shift();
			if (waiter) {
				this.isLocked = 'W';
				waiter.call(this);
			} else {
				this.isLocked = false;
			}
		} else {
			this.isLocked = 'R';
			this._readLocks = rlen;

			var waiters = this._waitingToRead.slice();
			this._waitingToRead = [];

			for (var i = 0; i < rlen; i++) {
				waiters[i].call(this);
			}
		}
	} else {
		throw new Error('ReadWriteLock is not locked');
	}
};

},{}],117:[function(require,module,exports){
function Semaphore(initialCount) {
	this._count = initialCount || 1;
	this._waiting = [];
}

module.exports = Semaphore;


Semaphore.prototype.wait = function (cb) {
	this._count -= 1;

	if (this._count < 0) {
		this._waiting.push(cb);
	} else {
		cb.call(this);
	}
};


Semaphore.prototype.signal = function () {
	this._count += 1;

	if (this._count <= 0) {
		var waiter = this._waiting.shift();
		if (waiter) {
			waiter.call(this);
		}
	}
};

},{}],118:[function(require,module,exports){
(function (process){
// Generated by CoffeeScript 1.10.0
(function() {
  var JSONStorage, KEY_FOR_EMPTY_STRING, LocalStorage, MetaKey, QUOTA_EXCEEDED_ERR, StorageEvent, _emptyDirectory, _escapeKey, _rm, createMap, events, fs, path,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  path = require('path');

  fs = require('fs');

  events = require('events');

  KEY_FOR_EMPTY_STRING = '---.EMPTY_STRING.---';

  _emptyDirectory = function(target) {
    var i, len, p, ref, results;
    ref = fs.readdirSync(target);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      p = ref[i];
      results.push(_rm(path.join(target, p)));
    }
    return results;
  };

  _rm = function(target) {
    if (fs.statSync(target).isDirectory()) {
      _emptyDirectory(target);
      return fs.rmdirSync(target);
    } else {
      return fs.unlinkSync(target);
    }
  };

  _escapeKey = function(key) {
    var newKey;
    if (key === '') {
      newKey = KEY_FOR_EMPTY_STRING;
    } else {
      newKey = key.toString();
    }
    return newKey;
  };

  QUOTA_EXCEEDED_ERR = (function(superClass) {
    extend(QUOTA_EXCEEDED_ERR, superClass);

    function QUOTA_EXCEEDED_ERR(message) {
      this.message = message != null ? message : 'Unknown error.';
      if (Error.captureStackTrace != null) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = this.constructor.name;
    }

    QUOTA_EXCEEDED_ERR.prototype.toString = function() {
      return this.name + ": " + this.message;
    };

    return QUOTA_EXCEEDED_ERR;

  })(Error);

  StorageEvent = (function() {
    function StorageEvent(key1, oldValue1, newValue1, url, storageArea) {
      this.key = key1;
      this.oldValue = oldValue1;
      this.newValue = newValue1;
      this.url = url;
      this.storageArea = storageArea != null ? storageArea : 'localStorage';
    }

    return StorageEvent;

  })();

  MetaKey = (function() {
    function MetaKey(key1, index1) {
      this.key = key1;
      this.index = index1;
      if (!(this instanceof MetaKey)) {
        return new MetaKey(this.key, this.index);
      }
    }

    return MetaKey;

  })();

  createMap = function() {
    var Map;
    Map = function() {};
    Map.prototype = Object.create(null);
    return new Map();
  };

  LocalStorage = (function(superClass) {
    var instanceMap;

    extend(LocalStorage, superClass);

    instanceMap = {};

    function LocalStorage(_location, quota) {
      var handler;
      this._location = _location;
      this.quota = quota != null ? quota : 5 * 1024 * 1024;
      if (!(this instanceof LocalStorage)) {
        return new LocalStorage(this._location, this.quota);
      }
      this._location = path.resolve(this._location);
      if (instanceMap[this._location] != null) {
        return instanceMap[this._location];
      }
      this.length = 0;
      this._bytesInUse = 0;
      this._keys = [];
      this._metaKeyMap = createMap();
      this._eventUrl = "pid:" + process.pid;
      this._init();
      this._QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;
      if (typeof Proxy !== "undefined" && Proxy !== null) {
        handler = {
          set: (function(_this) {
            return function(receiver, key, value) {
              if (_this[key] != null) {
                return _this[key] = value;
              } else {
                return _this.setItem(key, value);
              }
            };
          })(this),
          get: (function(_this) {
            return function(receiver, key) {
              if (_this[key] != null) {
                return _this[key];
              } else {
                return _this.getItem(key);
              }
            };
          })(this)
        };
        instanceMap[this._location] = Proxy.create(handler, this);
        return instanceMap[this._location];
      }
      instanceMap[this._location] = this;
      return instanceMap[this._location];
    }

    LocalStorage.prototype._init = function() {
      var _MetaKey, _decodedKey, _keys, error, i, index, k, len, stat;
      try {
        stat = fs.statSync(this._location);
        if ((stat != null) && !stat.isDirectory()) {
          throw new Error("A file exists at the location '" + this._location + "' when trying to create/open localStorage");
        }
        this._bytesInUse = 0;
        this.length = 0;
        _keys = fs.readdirSync(this._location);
        for (index = i = 0, len = _keys.length; i < len; index = ++i) {
          k = _keys[index];
          _decodedKey = decodeURIComponent(k);
          this._keys.push(_decodedKey);
          _MetaKey = new MetaKey(k, index);
          this._metaKeyMap[_decodedKey] = _MetaKey;
          stat = this._getStat(k);
          if ((stat != null ? stat.size : void 0) != null) {
            _MetaKey.size = stat.size;
            this._bytesInUse += stat.size;
          }
        }
        this.length = _keys.length;
      } catch (error) {
        fs.mkdirSync(this._location);
      }
    };

    LocalStorage.prototype.setItem = function(key, value) {
      var encodedKey, evnt, existsBeforeSet, filename, hasListeners, metaKey, oldLength, oldValue, valueString, valueStringLength;
      hasListeners = events.EventEmitter.listenerCount(this, 'storage');
      oldValue = null;
      if (hasListeners) {
        oldValue = this.getItem(key);
      }
      key = _escapeKey(key);
      encodedKey = encodeURIComponent(key);
      filename = path.join(this._location, encodedKey);
      valueString = value.toString();
      valueStringLength = valueString.length;
      metaKey = this._metaKeyMap[key];
      existsBeforeSet = !!metaKey;
      if (existsBeforeSet) {
        oldLength = metaKey.size;
      } else {
        oldLength = 0;
      }
      if (this._bytesInUse - oldLength + valueStringLength > this.quota) {
        throw new QUOTA_EXCEEDED_ERR();
      }
      fs.writeFileSync(filename, valueString, 'utf8');
      if (!existsBeforeSet) {
        metaKey = new MetaKey(encodedKey, (this._keys.push(key)) - 1);
        metaKey.size = valueStringLength;
        this._metaKeyMap[key] = metaKey;
        this.length += 1;
        this._bytesInUse += valueStringLength;
      }
      if (hasListeners) {
        evnt = new StorageEvent(key, oldValue, value, this._eventUrl);
        return this.emit('storage', evnt);
      }
    };

    LocalStorage.prototype.getItem = function(key) {
      var filename, metaKey;
      key = _escapeKey(key);
      metaKey = this._metaKeyMap[key];
      if (!!metaKey) {
        filename = path.join(this._location, metaKey.key);
        return fs.readFileSync(filename, 'utf8');
      } else {
        return null;
      }
    };

    LocalStorage.prototype._getStat = function(key) {
      var error, filename;
      key = _escapeKey(key);
      filename = path.join(this._location, encodeURIComponent(key));
      try {
        return fs.statSync(filename);
      } catch (error) {
        return null;
      }
    };

    LocalStorage.prototype.removeItem = function(key) {
      var evnt, filename, hasListeners, k, meta, metaKey, oldValue, ref, v;
      key = _escapeKey(key);
      metaKey = this._metaKeyMap[key];
      if (!!metaKey) {
        hasListeners = events.EventEmitter.listenerCount(this, 'storage');
        oldValue = null;
        if (hasListeners) {
          oldValue = this.getItem(key);
        }
        delete this._metaKeyMap[key];
        this.length -= 1;
        this._bytesInUse -= metaKey.size;
        filename = path.join(this._location, metaKey.key);
        this._keys.splice(metaKey.index, 1);
        ref = this._metaKeyMap;
        for (k in ref) {
          v = ref[k];
          meta = this._metaKeyMap[k];
          if (meta.index > metaKey.index) {
            meta.index -= 1;
          }
        }
        _rm(filename);
        if (hasListeners) {
          evnt = new StorageEvent(key, oldValue, null, this._eventUrl);
          return this.emit('storage', evnt);
        }
      }
    };

    LocalStorage.prototype.key = function(n) {
      return this._keys[n];
    };

    LocalStorage.prototype.clear = function() {
      var evnt;
      _emptyDirectory(this._location);
      this._metaKeyMap = createMap();
      this._keys = [];
      this.length = 0;
      this._bytesInUse = 0;
      if (events.EventEmitter.listenerCount(this, 'storage')) {
        evnt = new StorageEvent(null, null, null, this._eventUrl);
        return this.emit('storage', evnt);
      }
    };

    LocalStorage.prototype._getBytesInUse = function() {
      return this._bytesInUse;
    };

    LocalStorage.prototype._deleteLocation = function() {
      delete instanceMap[this._location];
      _rm(this._location);
      this._metaKeyMap = {};
      this._keys = [];
      this.length = 0;
      return this._bytesInUse = 0;
    };

    return LocalStorage;

  })(events.EventEmitter);

  JSONStorage = (function(superClass) {
    extend(JSONStorage, superClass);

    function JSONStorage() {
      return JSONStorage.__super__.constructor.apply(this, arguments);
    }

    JSONStorage.prototype.setItem = function(key, value) {
      var newValue;
      newValue = JSON.stringify(value);
      return JSONStorage.__super__.setItem.call(this, key, newValue);
    };

    JSONStorage.prototype.getItem = function(key) {
      return JSON.parse(JSONStorage.__super__.getItem.call(this, key));
    };

    return JSONStorage;

  })(LocalStorage);

  exports.LocalStorage = LocalStorage;

  exports.JSONStorage = JSONStorage;

  exports.QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;

}).call(this);

}).call(this,require('_process'))

},{"_process":351,"events":347,"fs":148,"path":350}],119:[function(require,module,exports){
(function (Buffer){
//     uuid.js
//
//     Copyright (c) 2010-2012 Robert Kieffer
//     MIT License - http://opensource.org/licenses/mit-license.php

/*global window, require, define */
(function(_window) {
  'use strict';

  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;

  function setupBrowser() {
    // Allow for MSIE11 msCrypto
    var _crypto = _window.crypto || _window.msCrypto;

    if (!_rng && _crypto && _crypto.getRandomValues) {
      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
      //
      // Moderately fast, high quality
      try {
        var _rnds8 = new Uint8Array(16);
        _whatwgRNG = _rng = function whatwgRNG() {
          _crypto.getRandomValues(_rnds8);
          return _rnds8;
        };
        _rng();
      } catch(e) {}
    }

    if (!_rng) {
      // Math.random()-based (RNG)
      //
      // If all else fails, use Math.random().  It's fast, but is of unspecified
      // quality.
      var  _rnds = new Array(16);
      _mathRNG = _rng = function() {
        for (var i = 0, r; i < 16; i++) {
          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }
          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
        }

        return _rnds;
      };
      if ('undefined' !== typeof console && console.warn) {
        console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()");
      }
    }
  }

  function setupNode() {
    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
    //
    // Moderately fast, high quality
    if ('function' === typeof require) {
      try {
        var _rb = require('crypto').randomBytes;
        _nodeRNG = _rng = _rb && function() {return _rb(16);};
        _rng();
      } catch(e) {}
    }
  }

  if (_window) {
    setupBrowser();
  } else {
    setupNode();
  }

  // Buffer class to use
  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;

  // Maps for number <-> hex string conversion
  var _byteToHex = [];
  var _hexToByte = {};
  for (var i = 0; i < 256; i++) {
    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
    _hexToByte[_byteToHex[i]] = i;
  }

  // **`parse()` - Parse a UUID into it's component bytes**
  function parse(s, buf, offset) {
    var i = (buf && offset) || 0, ii = 0;

    buf = buf || [];
    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
      if (ii < 16) { // Don't overflow!
        buf[i + ii++] = _hexToByte[oct];
      }
    });

    // Zero out remaining bytes if string was short
    while (ii < 16) {
      buf[i + ii++] = 0;
    }

    return buf;
  }

  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
  function unparse(buf, offset) {
    var i = offset || 0, bth = _byteToHex;
    return  bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]];
  }

  // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html

  // random #'s we need to init node and clockseq
  var _seedBytes = _rng();

  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var _nodeId = [
    _seedBytes[0] | 0x01,
    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
  ];

  // Per 4.2.2, randomize (14 bit) clockseq
  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

  // Previous uuid creation time
  var _lastMSecs = 0, _lastNSecs = 0;

  // See https://github.com/broofa/node-uuid for API details
  function v1(options, buf, offset) {
    var i = buf && offset || 0;
    var b = buf || [];

    options = options || {};

    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;

    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();

    // Per 4.2.1.2, use count of uuid's generated during the current clock
    // cycle to simulate higher resolution clock
    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;

    // Time since last uuid creation (in msecs)
    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

    // Per 4.2.1.2, Bump clockseq on clock regression
    if (dt < 0 && options.clockseq == null) {
      clockseq = clockseq + 1 & 0x3fff;
    }

    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
    // time interval
    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
      nsecs = 0;
    }

    // Per 4.2.1.2 Throw error if too many uuids are requested
    if (nsecs >= 10000) {
      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
    }

    _lastMSecs = msecs;
    _lastNSecs = nsecs;
    _clockseq = clockseq;

    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
    msecs += 12219292800000;

    // `time_low`
    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
    b[i++] = tl >>> 24 & 0xff;
    b[i++] = tl >>> 16 & 0xff;
    b[i++] = tl >>> 8 & 0xff;
    b[i++] = tl & 0xff;

    // `time_mid`
    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
    b[i++] = tmh >>> 8 & 0xff;
    b[i++] = tmh & 0xff;

    // `time_high_and_version`
    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
    b[i++] = tmh >>> 16 & 0xff;

    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
    b[i++] = clockseq >>> 8 | 0x80;

    // `clock_seq_low`
    b[i++] = clockseq & 0xff;

    // `node`
    var node = options.node || _nodeId;
    for (var n = 0; n < 6; n++) {
      b[i + n] = node[n];
    }

    return buf ? buf : unparse(b);
  }

  // **`v4()` - Generate random UUID**

  // See https://github.com/broofa/node-uuid for API details
  function v4(options, buf, offset) {
    // Deprecated - 'format' argument, as supported in v1.2
    var i = buf && offset || 0;

    if (typeof(options) === 'string') {
      buf = (options === 'binary') ? new BufferClass(16) : null;
      options = null;
    }
    options = options || {};

    var rnds = options.random || (options.rng || _rng)();

    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = (rnds[6] & 0x0f) | 0x40;
    rnds[8] = (rnds[8] & 0x3f) | 0x80;

    // Copy bytes to buffer, if provided
    if (buf) {
      for (var ii = 0; ii < 16; ii++) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || unparse(rnds);
  }

  // Export public API
  var uuid = v4;
  uuid.v1 = v1;
  uuid.v4 = v4;
  uuid.parse = parse;
  uuid.unparse = unparse;
  uuid.BufferClass = BufferClass;
  uuid._rng = _rng;
  uuid._mathRNG = _mathRNG;
  uuid._nodeRNG = _nodeRNG;
  uuid._whatwgRNG = _whatwgRNG;

  if (('undefined' !== typeof module) && module.exports) {
    // Publish as node.js module
    module.exports = uuid;
  } else if (typeof define === 'function' && define.amd) {
    // Publish as AMD module
    define(function() {return uuid;});


  } else {
    // Publish as global (in browsers)
    _previousRoot = _window.uuid;

    // **`noConflict()` - (browser only) to reset global 'uuid' var**
    uuid.noConflict = function() {
      _window.uuid = _previousRoot;
      return uuid;
    };

    _window.uuid = uuid;
  }
})('undefined' !== typeof window ? window : null);

}).call(this,require("buffer").Buffer)

},{"buffer":151,"crypto":155}],120:[function(require,module,exports){
/**
 * Batch interface:
 * var b = augur.createBatch();
 * b.add("getCashBalance", [augur.coinbase], callback);
 * b.add("getRepBalance", [augur.constants.DEFAULT_BRANCH_ID, augur.coinbase], callback);
 * b.execute();
 */

"use strict";

var clone = require("clone");

var Batch = function (tx, rpc) {
    this.tx = tx;
    this.rpc = rpc;
    this.txlist = [];
};

Batch.prototype.add = function (contract, method, params, callback) {
    if (method) {
        var tx = clone(this.tx[contract][method]);
        tx.params = params;
        if (callback) tx.callback = callback;
        this.txlist.push(tx);
    }
};

Batch.prototype.execute = function () {
    this.rpc.batch(this.txlist, true);
};

module.exports = function () {
    return new Batch(this.tx, this.rpc);
};

},{"clone":14}],121:[function(require,module,exports){
(function (process,Buffer){
/**
 * Client-side accounts
 */

"use strict";

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;

var BigNumber = require("bignumber.js");
var ethTx = require("ethereumjs-tx");
var keys = require("keythereum");
var uuid = require("node-uuid");
var clone = require("clone");
var locks = require("locks");
var request = (NODE_JS) ? require("request") : require("browser-request");
var abi = require("augur-abi");
var errors = require("augur-contracts").errors;
var constants = require("../constants");
var utils = require("../utilities");

request = request.defaults({timeout: 120000});
BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

keys.constants.pbkdf2.c = constants.ROUNDS;
keys.constants.scrypt.n = constants.ROUNDS;

module.exports = function () {

    var augur = this;

    return {

        // The account object is set when logged in
        account: {},

        // free (testnet) ether for new accounts on registration
        fund: function (account, branch, onRegistered, onSendEther, onSent, onSuccess, onFailed) {
            var self = this;
            if (onRegistered.constructor === Object && onRegistered.onRegistered) {
                if (onRegistered.onSendEther) onSendEther = onRegistered.onSendEther;
                if (onRegistered.onSent) onSent = onRegistered.onSent;
                if (onRegistered.onSuccess) onSuccess = onRegistered.onSuccess;
                if (onRegistered.onFailed) onFailed = onRegistered.onFailed;
                onRegistered = onRegistered.onRegistered;
            }
            onRegistered = onRegistered || utils.noop;
            onSendEther = onSendEther || utils.noop;
            onSent = onSent || utils.noop;
            onSuccess = onSuccess || utils.noop;
            onFailed = onFailed || utils.noop;
            onRegistered(account);
            if (process.env.BUILD_AZURE) {
                var FREEBIE_ETH = 5;
                augur.rpc.sendEther({
                    to: account.address,
                    value: FREEBIE_ETH,
                    from: augur.coinbase,
                    onFailed: onFailed,
                    onSent: utils.noop,
                    onSuccess: function (res) {
                        onSendEther(account);
                        augur.fundNewAccount({
                            branch: branch || augur.constants.DEFAULT_BRANCH_ID,
                            onSent: onSent,
                            onSuccess: onSuccess,
                            onFailed: onFailed
                        });
                    }
                });
            } else {
                var url = constants.FAUCET + abi.format_address(account.address);
                request(url, function (err, response, body) {
                    if (err) return onFailed(err);
                    if (response.statusCode !== 200) {
                        return onFailed(response.statusCode);
                    }
                    console.log("sent ether to account:", account);
                    onSendEther(account);
                    augur.fundNewAccount({
                        branch: branch || augur.constants.DEFAULT_BRANCH_ID,
                        onSent: onSent,
                        onSuccess: onSuccess,
                        onFailed: onFailed
                    });
                });
            }
        },

        // options: {doNotFund, persist}
        register: function (handle, password, options, onRegistered, onSendEther, onSent, onSuccess, onFailed) {
            var i, self = this;
            if (!onRegistered && options) {
                if (utils.is_function(options)) {
                    onRegistered = options;
                    options = {};
                }
            }
            if (onRegistered && onRegistered.constructor === Object && onRegistered.onRegistered) {
                if (onRegistered.onSendEther) onSendEther = onRegistered.onSendEther;
                if (onRegistered.onSent) onSent = onRegistered.onSent;
                if (onRegistered.onSuccess) onSuccess = onRegistered.onSuccess;
                if (onRegistered.onFailed) onFailed = onRegistered.onFailed;
                onRegistered = onRegistered.onRegistered;
            }
            onRegistered = onRegistered || utils.noop;
            onSendEther = onSendEther || utils.noop;
            onSent = onSent || utils.noop;
            onSuccess = onSuccess || utils.noop;
            onFailed = onFailed || utils.noop;
            options = options || {};
            if (!password || password.length < 6) return onRegistered(errors.PASSWORD_TOO_SHORT);
            augur.db.get(handle, function (record) {
                if (!record || !record.error) return onRegistered(errors.HANDLE_TAKEN);

                // generate ECDSA private key and initialization vector
                keys.create(null, function (plain) {
                    if (plain.error) return onRegistered(plain);

                    // derive secret key from password
                    keys.deriveKey(password, plain.salt, null, function (derivedKey) {
                        if (derivedKey.error) return onRegistered(derivedKey);

                        if (!Buffer.isBuffer(derivedKey)) {
                            derivedKey = new Buffer(derivedKey, "hex");
                        }

                        var encryptedPrivateKey = new Buffer(keys.encrypt(
                            plain.privateKey,
                            derivedKey.slice(0, 16),
                            plain.iv
                        ), "base64").toString("hex");

                        // encrypt private key using derived key and IV, then
                        // store encrypted key & IV, indexed by handle
                        var keystore = {
                            address: abi.format_address(keys.privateKeyToAddress(plain.privateKey)),
                            crypto: {
                                cipher: keys.constants.cipher,
                                ciphertext: encryptedPrivateKey,
                                cipherparams: {iv: plain.iv.toString("hex")},
                                kdf: constants.KDF,
                                kdfparams: {
                                    c: keys.constants[constants.KDF].c,
                                    dklen: keys.constants[constants.KDF].dklen,
                                    prf: keys.constants[constants.KDF].prf,
                                    salt: plain.salt.toString("hex")
                                },
                                mac: keys.getMAC(derivedKey, encryptedPrivateKey)
                            },
                            version: 3,
                            id: uuid.v4()
                        };
                        augur.db.put(handle, keystore, function (result) {
                            if (!result) return onRegistered(errors.DB_WRITE_FAILED);
                            if (result.error) return onRegistered(result);

                            // set web.account object
                            self.account = {
                                handle: handle,
                                privateKey: plain.privateKey,
                                address: keystore.address,
                                keystore: keystore
                            };
                            if (options.persist) {
                                augur.db.putPersistent(self.account);
                            }

                            if (options.doNotFund) return onRegistered(self.account);
                            self.fund(self.account, augur.constants.DEFAULT_BRANCH_ID, onRegistered, onSendEther, onSent, onSuccess, onFailed);

                        }); // augur.db.put
                    }); // deriveKey
                }); // create
            }); // augur.db.get
        },

        login: function (handle, password, options, cb) {
            var self = this;
            if (!cb && utils.is_function(options)) {
                cb = options;
                options = {};
            }
            options = options || {};

            // blank password
            if (!password || password === "") return cb(errors.BAD_CREDENTIALS);

            // retrieve account info from database
            augur.db.get(handle, function (keystore) {
                if (!keystore || keystore.error) return cb(errors.BAD_CREDENTIALS);

                // derive secret key from password
                keys.deriveKey(password, keystore.crypto.kdfparams.salt, null, function (derived) {
                    if (!derived || derived.error) return cb(errors.BAD_CREDENTIALS);

                    // verify that message authentication codes match
                    var storedKey = keystore.crypto.ciphertext;
                    if (keys.getMAC(derived, storedKey) !== keystore.crypto.mac.toString("hex")) {
                        return cb(errors.BAD_CREDENTIALS);
                    }

                    if (!Buffer.isBuffer(derived)) {
                        derived = new Buffer(derived, "hex");
                    }

                    // decrypt stored private key using secret key
                    try {
                        var privateKey = new Buffer(keys.decrypt(
                            storedKey,
                            derived.slice(0, 16),
                            keystore.crypto.cipherparams.iv
                        ), "hex");

                        // while logged in, web.account object is set
                        self.account = {
                            handle: handle,
                            privateKey: privateKey,
                            address: keystore.address,
                            keystore: keystore
                        };
                        if (options.persist) {
                            augur.db.putPersistent(self.account);
                        }

                        cb(self.account);

                    // decryption failure: bad password
                    } catch (exc) {
                        var e = clone(errors.BAD_CREDENTIALS);
                        e.bubble = exc;
                        if (utils.is_function(cb)) cb(e);
                    }
                }); // deriveKey
            }); // augur.db.get
        },

        persist: function () {
            var account = augur.db.getPersistent();
            if (account && account.privateKey) {
                this.account = account;
            }
            return account;
        },

        logout: function () {
            this.account = {};
            augur.db.removePersistent();
            augur.rpc.clear();
        },

        invoke: function (itx, cb) {
            var self = this;
            var tx, packaged;

            // if this is just a call, use ethrpc's regular invoke method
            if (!itx.send) return augur.rpc.fire(itx, cb);

            cb = cb || utils.pass;
            if (!this.account.address) return cb(errors.NOT_LOGGED_IN);
            if (!this.account.privateKey || !itx || itx.constructor !== Object) {
                return cb(errors.TRANSACTION_FAILED);
            }

            // parse and serialize transaction parameters
            tx = clone(itx);
            if (tx.params === undefined || tx.params === null) {
                tx.params = [];
            } else if (tx.params.constructor !== Array) {
                tx.params = [tx.params];
            }
            for (var j = 0; j < tx.params.length; ++j) {
                if (tx.params[j] !== undefined && tx.params[j] !== null &&
                    tx.params[j].constructor === Number) {
                    tx.params[j] = abi.prefix_hex(tx.params[j].toString(16));
                }
            }
            if (tx.to) tx.to = abi.prefix_hex(tx.to);

            // package up the transaction and submit it to the network
            packaged = {
                to: tx.to,
                from: this.account.address,
                gasLimit: tx.gas || constants.DEFAULT_GAS,
                nonce: 0,
                value: tx.value || "0x0",
                data: abi.encode(tx)
            };
            if (tx.timeout) packaged.timeout = tx.timeout;
            if (tx.gasPrice && abi.number(tx.gasPrice) > 0) {
                packaged.gasPrice = tx.gasPrice;
                return this.getTxNonce(packaged, cb);
            }
            augur.rpc.gasPrice(function (gasPrice) {
                if (!gasPrice || gasPrice.error) {
                    return cb(errors.TRANSACTION_FAILED);
                }
                packaged.gasPrice = gasPrice;
                self.getTxNonce(packaged, cb);
            });
        },

        submitTx: function (packaged, cb) {
            var self = this;
            var mutex = locks.createMutex();
            mutex.lock(function () {
                for (var rawTxHash in augur.rpc.rawTxs) {
                    if (!augur.rpc.rawTxs.hasOwnProperty(rawTxHash)) continue;
                    if (augur.rpc.rawTxs[rawTxHash].nonce === packaged.nonce) {
                        ++packaged.nonce;
                        break;
                    }
                }
                mutex.unlock();
                var etx = new ethTx(packaged);

                // sign, validate, and send the transaction
                etx.sign(self.account.privateKey);

                // calculate the cost (in ether) of this transaction
                var cost = etx.getUpfrontCost().toString();

                // transaction validation
                if (!etx.validate()) return cb(errors.TRANSACTION_INVALID);

                // send the raw signed transaction to geth
                augur.rpc.sendRawTx(etx.serialize().toString("hex"), function (res) {
                    var err;
                    if (res) {
                        if (res.error) {
                            if (res.message.indexOf("rlp") > -1) {
                                err = clone(errors.RLP_ENCODING_ERROR);
                                err.bubble = res;
                                err.packaged = packaged;
                                return cb(err);
                            } else if (res.message.indexOf("Nonce too low") > -1 ||
                                res.message.indexOf("Known transaction") > -1) {
                                console.debug("bad nonce, retry", res.message);
                                return self.getTxNonce(packaged, cb);
                            } else {
                                err = clone(errors.RAW_TRANSACTION_ERROR);
                                err.bubble = res;
                                err.packaged = packaged;
                                return cb(err);
                            }
                        }

                        // res is the txhash if nothing failed immediately
                        // (even if the tx is nulled, still index the hash)
                        augur.rpc.rawTxs[res] = {
                            tx: packaged,
                            cost: new BigNumber(cost, 10).dividedBy(augur.rpc.ETHER).toFixed()
                        };

                        // nonce ok, execute callback
                        return cb(res);
                    }
                    cb(errors.TRANSACTION_FAILED);
                });
            });
        },

        // get nonce: number of transactions
        getTxNonce: function (packaged, cb) {
            var self = this;
            augur.rpc.pendingTxCount(self.account.address, function (txCount) {
                if (txCount && !txCount.error && !(txCount instanceof Error)) {
                    packaged.nonce = parseInt(txCount);
                }
                self.submitTx(packaged, cb);
            });
        }

    };
};

}).call(this,require('_process'),require("buffer").Buffer)

},{"../constants":123,"../utilities":146,"_process":351,"augur-abi":3,"augur-contracts":11,"bignumber.js":147,"browser-request":13,"buffer":151,"clone":14,"ethereumjs-tx":16,"keythereum":77,"locks":113,"node-uuid":119,"request":150}],122:[function(require,module,exports){
(function (process,Buffer){
/* global localStorage:true */
/**
 * Locally stored account info.
 */

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;

var clone = require("clone");
var abi = require("augur-abi");
var keys = require("keythereum");
if (typeof localStorage === "undefined" || localStorage === null) {
    var LocalStorage = require("node-localstorage").LocalStorage;
    localStorage = new LocalStorage("./scratch");
}
var errors = require("augur-contracts").errors;
var constants = require("../constants");
var utils = require("../utilities");

module.exports = {

    put: function (label, keystore, cb) {
        if (label !== null && label !== undefined && label !== '' && keystore) {
            label = encodeURIComponent(label);
            var item = JSON.stringify(keystore);
            localStorage.setItem(label, item);
            if (utils.is_function(cb)) cb(true);
            return true;
        } else {
            var err = errors.DB_WRITE_FAILED;
            err.bubble = {label: label, keystore: keystore};
            if (!utils.is_function(cb)) return err;
            cb(err);
        }
    },

    get: function (label, cb) {
        var account, item, err = errors.DB_READ_FAILED;
        if (label !== null && label !== undefined) {
            if (label === '') {
                account = localStorage.getItem('');
                if (account === null) {
                    if (!utils.is_function(cb)) return err;
                    return cb(err);
                }
                try {
                    account = JSON.parse(account);
                    account.privateKey = new Buffer(abi.unfork(account.privateKey), "hex");
                    if (!utils.is_function(cb)) return account;
                    return cb(account);
                } catch (exc) {
                    err.bubble = {exception: exc, label: label};
                    if (!utils.is_function(cb)) return err;
                    return cb(err);
                }
            }
            label = encodeURIComponent(label);
            item = localStorage.getItem(label);
            if (item !== null) {
                try {
                    item = JSON.parse(item);
                    if (item && item.constructor === Object && item.crypto) {
                        if (!utils.is_function(cb)) return item;
                        return cb(item);
                    }
                    err.bubble = {item: item, label: label};
                    if (!utils.is_function(cb)) return err;
                    return cb(err);
                } catch (exc) {
                    err.bubble = {exception: exc, label: label};
                    if (!utils.is_function(cb)) return err;
                    return cb(err);
                }
            }
            err.bubble = {label: label};
            if (!utils.is_function(cb)) return err;
            return cb(err);
        }
        err.bubble = {label: label};
        if (!utils.is_function(cb)) return err;
        cb(err);
    },

    putPersistent: function (account) {
        if (!account || !account.privateKey) return errors.DB_WRITE_FAILED;
        var persist = abi.copy(account);
        if (Buffer.isBuffer(account.privateKey)) {
            persist.privateKey = abi.hex(account.privateKey, true);
        }
        localStorage.setItem('', JSON.stringify(persist));
        return true;
    },

    getPersistent: function () {
        var account = localStorage.getItem('');
        if (account === null) return null;
        account = JSON.parse(account);
        account.privateKey = new Buffer(abi.unfork(account.privateKey), "hex");
        return account;
    },

    removePersistent: function () {
        return this.remove('');
    },

    remove: function (label) {
        if (label === '') {
            localStorage.removeItem('');
        } else {
            localStorage.removeItem(label);
        }
        return true;
    }

};

}).call(this,require('_process'),require("buffer").Buffer)

},{"../constants":123,"../utilities":146,"_process":351,"augur-abi":3,"augur-contracts":11,"buffer":151,"clone":14,"keythereum":77,"node-localstorage":118}],123:[function(require,module,exports){
/** 
 * augur.js constants
 */

"use strict";

var BigNumber = require("bignumber.js");
var abi = require("augur-abi");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {
    ZERO: new BigNumber(0),
    ONE: new BigNumber(2).toPower(64),
    ETHER: new BigNumber(10).toPower(18),

    DEFAULT_BRANCH_ID: "0xf69b5",
    BID: 1,
    ASK: 2,

    // default gas: 3.135M
    DEFAULT_GAS: "0x2fd618",

    // expected block interval
    SECONDS_PER_BLOCK: 12,

    // keythereum crypto parameters
    KDF: "pbkdf2",
    SCRYPT: "scrypt",
    ROUNDS: 65536,
    KEYSIZE: 32,
    IVSIZE: 16,

    // Morden testnet faucet endpoint
    FAUCET: "https://faucet.augur.net/faucet/",

    // event (log) signatures
    LOGS: {
        // event log_add_tx(market:indexed, sender:indexed, type, price, amount, outcome, tradeid)
        add_tx: {
            signature: abi.prefix_hex(abi.keccak_256("log_add_tx(int256,int256,int256,int256,int256,int256,int256)")),
            contract: "BuyAndSellShares"
        },
        
        // event log_cancel(market:indexed, sender:indexed, price, amount, tradeid, outcome, type)
        cancel: {
            signature: abi.prefix_hex(abi.keccak_256("log_cancel(int256,int256,int256,int256,int256,int256,int256)")),
            contract: "BuyAndSellShares"
        },

        // event thru(user:indexed, time)
        thru: {
            signature: abi.prefix_hex(abi.keccak_256("thru(int256,int256)")),
            contract: "CloseMarket"
        },

        // event penalize(user:indexed, outcome, oldrep, repchange, newafterrep, p, reportValue)
        penalize: {
            signature: abi.prefix_hex(abi.keccak_256("penalize(int256,int256,int256,int256,int256,int256,int256)")),
            contract: "Consensus"
        },

        // event marketCreated(marketID)
        marketCreated: {
            signature: abi.prefix_hex(abi.keccak_256("marketCreated(int256)")),
            contract: "CreateMarket"
        },

        // event tradingFeeUpdated(marketID, tradingFee)
        tradingFeeUpdated: {
            signature: abi.prefix_hex(abi.keccak_256("tradingFeeUpdated(int256,int256)")),
            contract: "CreateMarket"
        },

        // event Approval(_owner:indexed, _spender:indexed, value)
        approval: {
            signature: abi.prefix_hex(abi.keccak_256("Approval(int256,int256,int256)")),
            contract: "SendReputation"
        },

        // event Transfer(_from:indexed, _to:indexed, _value)
        transfer: {
            signature: abi.prefix_hex(abi.keccak_256("Transfer(int256,int256,int256)")),
            contract: "SendReputation"
        },

        // event log_fill_tx(market:indexed, sender:indexed, owner:indexed, type, price, amount, tradeid, outcome)
        fill_tx: {
            signature: abi.prefix_hex(abi.keccak_256("log_fill_tx(int256,int256,int256,int256,int256,int256,int256,int256)")),
            contract: "Trade"
        },

        // event log_price(market:indexed, type, price, amount, timestamp, outcome, trader:indexed)
        price: {
            signature: abi.prefix_hex(abi.keccak_256("log_price(int256,int256,int256,int256,int256,int256,int256)")),
            contract: "Trade"
        }
    }
};

},{"augur-abi":3,"bignumber.js":147}],124:[function(require,module,exports){
/**
 * Filters / logging
 */

"use strict";

var async = require("async");
var abi = require("augur-abi");
var errors = require("augur-contracts").errors;
var utils = require("./utilities");
var constants = require("./constants");

var FILTER_LABELS = [
    "block",
    "contracts",
    "price",
    "fill_tx",
    "add_tx",
    "cancel",
    "thru",
    "penalize",
    "marketCreated",
    "tradingFeeUpdated",
    "approval",
    "transfer"
];
var filters = {};
for (var i = 0, n = FILTER_LABELS.length; i < n; ++i) {
    filters[FILTER_LABELS[i]] = {id: null, heartbeat: null};
}

module.exports = function () {

    var augur = this;

    return {

        PULSE: constants.SECONDS_PER_BLOCK * 500,

        filter: filters,

        parse_block_message: function (message, onMessage) {
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) onMessage(message[i].hash);
                    }
                } else {
                    if (message.hash) onMessage(message.hash);
                }
            }
        },
        parse_contracts_message: function (message, onMessage) {
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_add_tx_message: function (message, onMessage) {
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_cancel_message: function (message, onMessage) {
            console.log("cancel:", JSON.stringify(message, null, 2));
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_thru_message: function (message, onMessage) {
            console.log("thru:", JSON.stringify(message, null, 2));
            for (var i = 0, len = message.length; i < len; ++i) {
                if (message[i]) {
                    if (message[i].constructor === Object && message[i].data) {
                        message[i].data = augur.rpc.unmarshal(message[i].data);
                    }
                    if (onMessage) onMessage(message[i]);
                }
            }
        },
        parse_penalize_message: function (message, onMessage) {
            console.log("penalize:", JSON.stringify(message, null, 2));
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_marketCreated_message: function (message, onMessage) {
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) onMessage(message[i].data);
                    }
                } else {
                    if (message.data) onMessage(message.data);
                }
            }
        },
        parse_tradingFeeUpdated_message: function (message, onMessage) {
            console.log("tradingFeeUpdated:", JSON.stringify(message, null, 2));
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_approval_message: function (message, onMessage) {
            console.log("approval:", JSON.stringify(message, null, 2));
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_transfer_message: function (message, onMessage) {
            console.log("transfer:", JSON.stringify(message, null, 2));
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_fill_tx_message: function (message, onMessage) {
            if (message) {
                if (message.length && message.constructor === Array) {
                    for (var i = 0, len = message.length; i < len; ++i) {
                        if (message[i]) {
                            if (message[i].constructor === Object && message[i].data) {
                                message[i].data = augur.rpc.unmarshal(message[i].data);
                            }
                            if (onMessage) onMessage(message[i]);
                        }
                    }
                } else {
                    onMessage(message);
                }
            }
        },
        parse_price_message: function (message, onMessage) {
            var data_array, market, marketplus, outcome;
            if (message && message.length) {
                for (var i = 0, len = message.length; i < len; ++i) {
                    if (message[i] && message[i].topics && message[i].topics.length === 3) {
                        data_array = augur.rpc.unmarshal(message[i].data);
                        if (data_array && data_array.constructor === Array &&
                            data_array.length > 1) {
                            onMessage({
                                marketId: message[i].topics[1],
                                trader: abi.format_address(message[i].topics[2]),
                                type: (parseInt(data_array[0]) === 1) ? "buy" : "sell",
                                price: abi.unfix(data_array[1], "string"),
                                amount: abi.unfix(data_array[2], "string"),
                                timestamp: parseInt(data_array[3]),
                                outcome: abi.string(data_array[4]),
                                blockNumber: message[i].blockNumber
                            });
                        }
                    }
                }
            }
        },

        poll_filter: function (label, onMessage) {
            var callback, self = this;
            if (this.filter[label]) {
                switch (label) {
                case "price":
                    callback = function (msg) {
                        self.parse_price_message(msg, onMessage);
                    };
                    break;
                case "contracts":
                    callback = function (msg) {
                        self.parse_contracts_message(msg, onMessage);
                    };
                    break;
                case "block":
                    callback = function (msg) {
                        self.parse_block_message(msg, onMessage);
                    };
                    break;
                default:
                    callback = onMessage;
                }
                augur.rpc.getFilterChanges(this.filter[label].id, callback);
            }
        },

        // clear/uninstall filters
        clear_filter: function (label, cb) {
            if (utils.is_function(cb)) {
                var self = this;
                this.unsubscribe(this.filter[label].id, function (uninst) {
                    self.filter[label].id = null;
                    cb(uninst);
                });
            } else {
                var uninst = this.unsubscribe(this.filter[label].id);
                this.filter[label].id = null;
                return uninst;
            }
        },

        // set up filters
        setup_event_filter: function (contract, label, f) {
            return this.subscribeLogs({
                address: augur.contracts[contract],
                topics: [constants.LOGS[label].signature]
            }, f);
        },
        setup_contracts_filter: function (f) {
            var self = this;
            var contract_list = [];
            for (var c in augur.contracts) {
                if (!augur.contracts.hasOwnProperty(c)) continue;
                contract_list.push(augur.contracts[c]);
            }
            var params = {
                address: contract_list,
                fromBlock: "0x01",
                toBlock: "latest"
            };
            if (!utils.is_function(f)) {
                this.filter.contracts = {
                    id: this.subscribeLogs(params),
                    heartbeat: null
                };
                return this.filter.contracts;
            }
            this.subscribeLogs(params, function (filter_id) {
                self.filter.contracts = {
                    id: filter_id,
                    heartbeat: null
                };
                f(self.filter.contracts);
            });
        },
        setup_block_filter: function (f) {
            var self = this;
            if (!utils.is_function(f)) {
                this.filter.block = {
                    id: this.subscribeNewBlocks(),
                    heartbeat: null
                };
                return this.filter.block;
            }
            this.subscribeNewBlocks(function (filter_id) {
                self.filter.block = {id: filter_id, heartbeat: null};
                f(self.filter.block);
            });
        },

        // start listeners
        start_event_listener: function (label, cb) {
            var self = this;
            var contract = constants.LOGS[label].contract;
            if (this.filter[label] && this.filter[label].id) {
                if (!utils.is_function(cb)) return this.filter[label].id;
                return cb(this.filter[label].id);
            }
            if (!utils.is_function(cb)) {
                var filter_id = this.setup_event_filter(contract, label);
                if (!filter_id || filter_id === "0x") {
                    return errors.FILTER_NOT_CREATED;
                }
                if (filter_id.error) return filter_id;
                self.filter[label] = {
                    id: filter_id,
                    heartbeat: null
                };
                return filter_id;
            }
            this.setup_event_filter(contract, label, function (filter_id) {
                if (!filter_id || filter_id === "0x") {
                    return cb(errors.FILTER_NOT_CREATED);
                }
                if (filter_id.error) return cb(filter_id);
                self.filter[label] = {
                    id: filter_id,
                    heartbeat: null
                };
                cb(filter_id);
            });
        },
        start_contracts_listener: function (cb) {
            if (this.filter.contracts.id === null) {
                if (utils.is_function(cb)) {
                    this.setup_contracts_filter(cb);
                } else {
                    return this.setup_contracts_filter();
                }
            }
        },
        start_block_listener: function (cb) {
            if (this.filter.block.id === null) {
                if (utils.is_function(cb)) {
                    this.setup_block_filter(cb);
                } else {
                    return this.setup_block_filter();
                }
            }
        },

        // start/stop polling
        pacemaker: function (cb) {
            var self = this;
            if (!cb || cb.constructor !== Object) return;
            if (!augur.rpc.wsUrl && !augur.rpc.ipcpath) {
                async.forEachOf(this.filter, function (filter, label, next) {
                    if (utils.is_function(cb[label])) {
                        self.poll_filter(label, cb[label]);
                        self.filter[label].heartbeat = setInterval(function () {
                            self.poll_filter(label, cb[label]);
                        }, self.PULSE);
                    }
                    next();
                });
            } else {
                async.forEachOf(this.filter, function (filter, label, next) {
                    if (utils.is_function(cb[label])) {
                        var callback;
                        switch (label) {
                        case "block":
                            callback = cb.block;
                            cb.block = function (block) {
                                self.parse_block_message(block, callback);
                            };
                            break;
                        case "contracts":
                            callback = cb.contracts;
                            cb.contracts = function (msg) {
                                self.parse_contracts_message(msg, callback);
                            };
                            break;
                        case "price":
                            callback = cb.price;
                            cb.price = function (msg) {
                                self.parse_price_message(msg, callback);
                            };
                            break;
                        case "marketCreated":
                            callback = cb.marketCreated;
                            cb.marketCreated = function (msg) {
                                self.parse_marketCreated_message(msg, callback);
                            };
                            break;
                        }
                        augur.rpc.registerSubscriptionCallback(self.filter[label].id, cb[label]);
                        next();
                    }
                });
            }
        },
        listen: function (cb, setup_complete) {
            var run, self = this;
            if (!augur.rpc.wsUrl && !augur.rpc.ipcpath) {
                this.subscribeLogs = augur.rpc.newFilter.bind(augur.rpc);
                this.subscribeNewBlocks = augur.rpc.newBlockFilter.bind(augur.rpc);
                this.unsubscribe = augur.rpc.uninstallFilter.bind(augur.rpc);
                run = async.parallel;
            } else {
                this.subscribeLogs = augur.rpc.subscribeLogs.bind(augur.rpc);
                this.subscribeNewBlocks = augur.rpc.subscribeNewBlocks.bind(augur.rpc);
                this.unsubscribe = augur.rpc.unsubscribe.bind(augur.rpc);
                run = async.series;
            }
            async.forEachOfSeries(cb, function (callback, label, next) {
                if (self.filter[label].id === null && callback) {
                    switch (label) {
                    case "contracts":
                        self.start_contracts_listener(function () {
                            self.pacemaker({contracts: callback});
                            next(null, [label, self.filter[label].id]);
                        });
                        break;
                    case "block":
                        self.start_block_listener(function () {
                            self.pacemaker({block: callback});
                            next(null, [label, self.filter[label].id]);
                        });
                        break;
                    default:
                        self.start_event_listener(label, function () {
                            var p = {};
                            p[label] = callback;
                            self.pacemaker(p);
                            next(null, [label, self.filter[label].id]);
                        });
                    }
                }
            }, function (err) {
                if (err) console.error(err);
                if (utils.is_function(setup_complete)) setup_complete(self.filter);
            });
        },
        all_filters_removed: function () {
            var f, isRemoved = true;
            for (var label in this.filter) {
                if (!this.filter.hasOwnProperty(label)) continue;
                f = this.filter[label];
                if (f.heartbeat !== null || f.id !== null) {
                    isRemoved = false;
                    break;
                }
            }
            return isRemoved;
        },

        ignore: function (uninstall, cb, complete) {
            var label, self = this;

            function cleared(uninst, callback, complete) {
                callback(uninst);
                if (uninst && uninst.constructor === Object) {
                    return complete(uninst);
                }
                if (self.all_filters_removed()) complete();
            }

            if (!complete && utils.is_function(cb)) {
                complete = cb;
                cb = null;
            }
            if (uninstall && uninstall.constructor === Object) {
                cb = {};
                for (label in this.filter) {
                    if (!this.filter.hasOwnProperty(label)) continue;
                    if (utils.is_function(uninstall[label])) {
                        cb[label] = uninstall[label];
                    }
                }
                uninstall = false;
            }
            cb = cb || {}; // individual filter removal callbacks
            for (label in this.filter) {
                if (!this.filter.hasOwnProperty(label)) continue;
                cb[label] = utils.is_function(cb[label]) ? cb[label] : utils.noop;
            }
            complete = utils.is_function(complete) ? complete : utils.noop; // after all filters removed
            for (label in this.filter) {
                if (!this.filter.hasOwnProperty(label)) continue;
                if (this.filter[label].heartbeat !== null) {
                    clearInterval(this.filter[label].heartbeat);
                    this.filter[label].heartbeat = null;
                    if (!uninstall && utils.is_function(cb[label])) {
                        cb[label]();
                        if (this.all_filters_removed()) complete();
                    }
                }
            }
            if (uninstall) {
                async.forEachOfSeries(this.filter, function (filter, label, next) {
                    if (filter.id !== null) {
                        self.clear_filter(label, function (uninst) {
                            cleared(uninst, cb[label], complete);
                            next();
                        });
                    } else {
                        next();
                    }
                });
            }
        }
    };
};

},{"./constants":123,"./utilities":146,"async":2,"augur-abi":3,"augur-contracts":11}],125:[function(require,module,exports){
/**
 * generateOrderBook: convenience method for generating an initial order book
 * for a newly created market. generateOrderBook calculates the number of
 * orders to create, as well as the spacing between orders.
 *
 * @param {Object} p
 *     market: market ID
 *     liquidity: initial cash to be placed on the order book
 *     initialFairPrices: array of midpoints used for bid/offer prices when the market opens
 *     startingQuantity: number of shares in each order
 *     bestStartingQuantity: number of shares in best bid/offer orders (optional)
 *     priceWidth: spread between best bid/offer
 *     isSimulation: if falsy generate order book; otherwise pass basic info to onSimulate callback
 * @param {Object} cb
 *     onSimulate, onBuyCompleteSets, onSetupOutcome, onSetupOrder, onSuccess, onFailed
 *     (note: callbacks can also be properties of the p object)
 */

"use strict";

var async = require("async");
var BigNumber = require("bignumber.js");
var abi = require("augur-abi");
var constants = require("./constants");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = function (p, cb) {
    var self = this;
    var liquidity = abi.bignum(p.liquidity);
    var numOutcomes = p.initialFairPrices.length;
    var initialFairPrices = new Array(numOutcomes);
    for (var i = 0; i < numOutcomes; ++i) {
        initialFairPrices[i] = abi.bignum(p.initialFairPrices[i]);
    }
    var startingQuantity = abi.bignum(p.startingQuantity);
    var bestStartingQuantity = abi.bignum(p.bestStartingQuantity || p.startingQuantity);
    var halfPriceWidth = abi.bignum(p.priceWidth).dividedBy(new BigNumber(2));
    cb = cb || {};
    var onBuyCompleteSets = cb.onBuyCompleteSets || p.onBuyCompleteSets || this.utils.noop;
    var onSetupOutcome = cb.onSetupOutcome || p.onSetupOutcome || this.utils.noop;
    var onSetupOrder = cb.onSetupOrder || p.onSetupOrder || this.utils.noop;
    var onSuccess = cb.onSuccess || p.onSuccess || this.utils.noop;
    var onFailed = cb.onFailed || p.onFailed || this.utils.noop;
    this.getMarketInfo(p.market, function (marketInfo) {
        var minValue, maxValue;
        if (!marketInfo) return onFailed(self.errors.NO_MARKET_INFO);
        if (marketInfo.numOutcomes !== numOutcomes) {
            return onFailed(self.errors.WRONG_NUMBER_OF_OUTCOMES);
        }
        if (marketInfo.type === "scalar") {
            minValue = abi.bignum(marketInfo.events[0].minValue);
            maxValue = abi.bignum(marketInfo.events[0].maxValue);
        } else {
            minValue = new BigNumber(0);
            maxValue = new BigNumber(1);
        }
        var priceDepth = self.calculatePriceDepth(liquidity, startingQuantity, bestStartingQuantity, halfPriceWidth, minValue, maxValue);
        if (priceDepth.lte(constants.ZERO) || priceDepth.toNumber() === Infinity) {
            return onFailed(self.errors.INSUFFICIENT_LIQUIDITY);
        }
        var buyPrices = new Array(numOutcomes);
        var sellPrices = new Array(numOutcomes);
        var numSellOrders = new Array(numOutcomes);
        var numBuyOrders = new Array(numOutcomes);
        var shares = new BigNumber(0);
        var i, j, buyPrice, sellPrice, outcomeShares;
        for (i = 0; i < numOutcomes; ++i) {
            if (initialFairPrices[i].lt(minValue.plus(halfPriceWidth)) ||
                initialFairPrices[i].gt(maxValue.minus(halfPriceWidth))) {
                console.log("initialFairPrice[" + i + "]:", initialFairPrices[i].toFixed());
                console.log("minValue:", minValue.toFixed());
                console.log("maxValue:", maxValue.toFixed());
                console.log("halfPriceWidth:", halfPriceWidth.toFixed());
                console.log("minValue + halfPriceWidth:", minValue.plus(halfPriceWidth).toFixed());
                console.log("maxValue - halfPriceWidth:", maxValue.minus(halfPriceWidth).toFixed());
                console.log(initialFairPrices[i].lt(minValue.plus(halfPriceWidth)), initialFairPrices[i].gt(maxValue.minus(halfPriceWidth)));
                return onFailed(self.errors.INITIAL_PRICE_OUT_OF_BOUNDS);
            }
            if (initialFairPrices[i].plus(halfPriceWidth).gte(maxValue) ||
                initialFairPrices[i].minus(halfPriceWidth).lte(minValue)) {
                return onFailed(self.errors.PRICE_WIDTH_OUT_OF_BOUNDS);
            }
            buyPrice = initialFairPrices[i].minus(halfPriceWidth);
            sellPrice = initialFairPrices[i].plus(halfPriceWidth);
            numBuyOrders[i] = buyPrice.minus(minValue).dividedBy(priceDepth).floor().toNumber();
            numSellOrders[i] = maxValue.minus(sellPrice).dividedBy(priceDepth).floor();
            outcomeShares = bestStartingQuantity.plus(startingQuantity.times(numSellOrders[i]));
            if (outcomeShares.gt(shares)) shares = outcomeShares;
            numSellOrders[i] = numSellOrders[i].toNumber();
            buyPrices[i] = new Array(numBuyOrders[i]);
            buyPrices[i][0] = buyPrice;
            for (j = 1; j < numBuyOrders[i]; ++j) {
                buyPrices[i][j] = buyPrices[i][j - 1].minus(priceDepth);
                if (buyPrices[i][j].lte(minValue)) {
                    buyPrices[i][j] = minValue.plus(priceDepth.dividedBy(new BigNumber(10)));
                }
                if (marketInfo.type === "scalar") {
                    buyPrices[i][j] = buyPrices[i][j].minus(minValue);
                }
            }
            sellPrices[i] = new Array(numSellOrders[i]);
            sellPrices[i][0] = sellPrice;
            for (j = 1; j < numSellOrders[i]; ++j) {
                sellPrices[i][j] = sellPrices[i][j - 1].plus(priceDepth);
                if (sellPrices[i][j].gte(maxValue)) {
                    sellPrices[i][j] = maxValue.minus(priceDepth.dividedBy(new BigNumber(10)));
                }
                if (marketInfo.type === "scalar") {
                    sellPrices[i][j] = maxValue.minus(sellPrices[i][j]);
                }
            }
        }
        var numTransactions = 0;
        for (i = 0; i < numOutcomes; ++i) {
            numTransactions += numBuyOrders[i] + numSellOrders[i] + 3;
        }
        var onSimulate = cb.onSimulate || p.onSimulate;
        if (self.utils.is_function(onSimulate)) {
            onSimulate({
                shares: shares.toFixed(),
                numBuyOrders: numBuyOrders,
                numSellOrders: numSellOrders,
                buyPrices: abi.string(buyPrices),
                sellPrices: abi.string(sellPrices),
                numTransactions: numTransactions,
                priceDepth: priceDepth.toFixed()
            });
            if (p.isSimulation) return;
        }
        self.buyCompleteSets({
            market: p.market,
            amount: abi.hex(shares),
            onSent: function (res) {
                // console.log("generateOrderBook.buyCompleteSets sent:", res);
            },
            onSuccess: function (res) {
                // console.log("generateOrderBook.buyCompleteSets success:", res);
                onBuyCompleteSets(res);
                var outcomes = new Array(numOutcomes);
                for (var i = 0; i < numOutcomes; ++i) {
                    outcomes[i] = i + 1;
                }
                async.forEachOf(outcomes, function (outcome, index, nextOutcome) {
                    async.parallel([
                        function (callback) {
                            async.forEachOf(buyPrices[index], function (buyPrice, i, nextBuyPrice) {
                                var amount = (!i) ? bestStartingQuantity : startingQuantity;
                                self.buy({
                                    amount: amount.toFixed(),
                                    price: buyPrice.toFixed(),
                                    market: p.market,
                                    outcome: outcome,
                                    onSent: function (res) {
                                        // console.log("generateOrderBook.buy", amount.toFixed(), buyPrice.toFixed(), outcome, "sent:", res);
                                    },
                                    onSuccess: function (res) {
                                        // console.log("generateOrderBook.buy", amount.toFixed(), buyPrice.toFixed(), outcome, "success:", res);
                                        onSetupOrder({
                                            tradeId: res.callReturn,
                                            market: p.market,
                                            outcome: outcome,
                                            amount: amount.toFixed(),
                                            buyPrice: buyPrice.toFixed()
                                        });
                                        nextBuyPrice();
                                    },
                                    onFailed: function (err) {
                                        // console.error("generateOrderBook.buy", amount.toFixed(), buyPrice.toFixed(), outcome, "failed:", err);
                                        nextBuyPrice(err);
                                    }
                                });
                            }, function (err) {
                                if (err) console.error("async.each buy:", err);
                                callback(err);
                            });
                        },
                        function (callback) {
                            async.forEachOf(sellPrices[index], function (sellPrice, i, nextSellPrice) {
                                var amount = (!i) ? bestStartingQuantity : startingQuantity;
                                self.sell({
                                    amount: amount.toFixed(),
                                    price: sellPrice.toFixed(),
                                    market: p.market,
                                    outcome: outcome,
                                    onSent: function (res) {
                                        // console.log("generateOrderBook.sell", amount.toFixed(), sellPrice.toFixed(), outcome, "sent:", res);
                                    },
                                    onSuccess: function (res) {
                                        // console.log("generateOrderBook.sell", amount.toFixed(), sellPrice.toFixed(), outcome, "success:", res);
                                        onSetupOrder({
                                            tradeId: res.callReturn,
                                            market: p.market,
                                            outcome: outcome,
                                            amount: amount.toFixed(),
                                            sellPrice: sellPrice.toFixed()
                                        });
                                        nextSellPrice();
                                    },
                                    onFailed: function (err) {
                                        // console.error("generateOrderBook.sell", amount.toFixed(), sellPrice.toFixed(), outcome, "failed:", err);
                                        nextSellPrice(err);
                                    }
                                });
                            }, function (err) {
                                if (err) console.error("async.each sell:", err);
                                callback(err);
                            });
                        }
                    ], function (err) {
                        if (err) console.error("buy/sell:", err);
                        onSetupOutcome({market: p.market, outcome: outcome});
                        nextOutcome(err);
                    });
                }, function (err) {
                    if (err) return onFailed(err);
                    var scalarMinMax = {};
                    if (marketInfo.type === "scalar") {
                        scalarMinMax.minValue = minValue;
                        scalarMinMax.maxValue = maxValue;
                    }
                    self.getOrderBook(p.market, scalarMinMax, onSuccess);
                });
            },
            onFailed: function (err) {
                console.error("generateOrderBook.buyCompleteSets failed:", err);
                onFailed(err);
            }
        });
    });
};

},{"./constants":123,"async":2,"augur-abi":3,"bignumber.js":147}],126:[function(require,module,exports){
(function (process){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;

var modules = [
    require("./modules/connect"),
    require("./modules/transact"),
    require("./modules/cash"),
    require("./modules/branches"),
    require("./modules/events"),
    require("./modules/markets"),
    require("./modules/trades"),
    require("./modules/buyAndSellShares"),
    require("./modules/trade"),
    require("./modules/completeSets"),
    require("./modules/createBranch"),
    require("./modules/sendReputation"),
    require("./modules/makeReports"),
    require("./modules/createMarket"),
    require("./modules/compositeGetters"),
    require("./modules/whitelist"),
    require("./modules/logs"),
    require("./modules/abacus")
];

function Augur() {
    this.version = "1.5.12";

    this.options = {debug: {broadcast: false, fallback: false}};
    this.protocol = NODE_JS || document.location.protocol;

    this.connection = null;
    this.coinbase = null;
    this.from = null;

    this.constants = require("./constants");
    this.abi = require("augur-abi");
    this.utils = require("./utilities");
    this.db = require("./client/db");
    this.errors = require("augur-contracts").errors;
    this.rpc = require("ethrpc");
    this.rpc.debug = this.options.debug;

    // Load submodules
    for (var i = 0, len = modules.length; i < len; ++i) {
        for (var fn in modules[i]) {
            if (!modules[i].hasOwnProperty(fn)) continue;
            this[fn] = modules[i][fn].bind(this);
            this[fn].toString = Function.prototype.toString.bind(modules[i][fn]);
        }
    }
    this.generateOrderBook = require("./generateOrderBook").bind(this);
    this.processOrder = require("./processOrder").bind(this);
    this.createBatch = require("./batch").bind(this);
    this.web = this.Accounts();
    this.filters = this.Filters();
}

Augur.prototype.Accounts = require("./client/accounts");
Augur.prototype.Filters = require("./filters");

module.exports = new Augur();

}).call(this,require('_process'))

},{"./batch":120,"./client/accounts":121,"./client/db":122,"./constants":123,"./filters":124,"./generateOrderBook":125,"./modules/abacus":127,"./modules/branches":128,"./modules/buyAndSellShares":129,"./modules/cash":130,"./modules/completeSets":131,"./modules/compositeGetters":132,"./modules/connect":133,"./modules/createBranch":134,"./modules/createMarket":135,"./modules/events":136,"./modules/logs":137,"./modules/makeReports":138,"./modules/markets":139,"./modules/sendReputation":140,"./modules/trade":141,"./modules/trades":142,"./modules/transact":143,"./modules/whitelist":144,"./processOrder":145,"./utilities":146,"_process":351,"augur-abi":3,"augur-contracts":11,"ethrpc":70}],127:[function(require,module,exports){
/**
 * Utility functions that do a local calculation (i.e., these functions do not
 * make RPC requests).
 */

"use strict";

var async = require("async");
var BigNumber = require("bignumber.js");
var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    // expects BigNumber inputs
    calculatePriceDepth: function (liquidity, startingQuantity, bestStartingQuantity, halfPriceWidth, minValue, maxValue) {
        return startingQuantity.times(minValue.plus(maxValue).minus(halfPriceWidth)).dividedBy(liquidity.minus(new BigNumber(2).times(bestStartingQuantity)));
    },

    // type: "buy" or "sell"
    // minValue, maxValue as BigNumber
    // price: unadjusted price
    adjustScalarPrice: function (type, minValue, maxValue, price) {
        if (type === "buy") {
            return new BigNumber(price, 10).minus(minValue).toFixed();
        }
        return maxValue.minus(new BigNumber(price, 10)).toFixed();
    },

    parseTradeInfo: function (trade) {
        return {
            id: trade[0],
            type: (trade[1] === "0x1") ? "buy" : "sell", // 0x1=buy, 0x2=sell
            market: trade[2],
            amount: abi.unfix(trade[3], "string"),
            price: abi.unfix(trade[4], "string"),
            owner: abi.format_address(trade[5], true),
            block: parseInt(trade[6]),
            outcome: abi.string(trade[7])
        };
    },

    decodeTag: function (tag) {
        try {
            return (tag && tag !== "0x0" && tag !== "0x") ?
                abi.int256_to_short_string(abi.unfork(tag, true)) : null;
        } catch (exc) {
            if (this.options.debug.broadcast) console.error(exc, tag);
            return null;
        }
    },

    parseMarketInfo: function (rawInfo, options, callback) {
        var EVENTS_FIELDS = 6;
        var OUTCOMES_FIELDS = 2;
        var WINNING_OUTCOMES_FIELDS = 8;
        var info = {};
        if (rawInfo && rawInfo.length > 14 && rawInfo[0] && rawInfo[4] && rawInfo[7] && rawInfo[8]) {

            // all-inclusive except price history
            // info[1] = self.Markets[marketID].currentParticipant
            // info[2] = self.Markets[marketID].makerFees
            // info[3] = participantNumber
            // info[4] = self.Markets[marketID].numOutcomes
            // info[5] = self.Markets[marketID].tradingPeriod
            // info[6] = self.Markets[marketID].tradingFee
            // info[7] = self.Markets[marketID].branch
            // info[8] = self.Markets[marketID].lenEvents
            // info[9] = self.Markets[marketID].cumulativeScale
            // info[10] = self.Markets[marketID].blockNum
            // info[11] = self.Markets[marketID].volume
            // info[12] = INFO.getCreationFee(marketID)
            // info[13] = INFO.getCreator(marketID)
            // info[14] = self.Markets[marketID].tag1
            // info[15] = self.Markets[marketID].tag2
            // info[16] = self.Markets[marketID].tag3
            var index = 17;
            var makerProportionOfFee = abi.unfix(rawInfo[2]);
            var tradingFee = abi.unfix(rawInfo[6]);
            var makerFee = tradingFee.times(makerProportionOfFee);
            info = {
                network: this.network_id,
                makerFee: makerFee.toFixed(),
                takerFee: new BigNumber("1.5").times(tradingFee).minus(makerFee).toFixed(),
                numOutcomes: abi.number(rawInfo[4]),
                tradingPeriod: abi.number(rawInfo[5]),
                branchId: rawInfo[7],
                numEvents: parseInt(rawInfo[8]),
                cumulativeScale: abi.unfix(rawInfo[9], "string"),
                creationTime: parseInt(rawInfo[10]),
                volume: abi.unfix(rawInfo[11], "string"),
                creationFee: abi.unfix(rawInfo[12], "string"),
                author: abi.format_address(rawInfo[13]),
                tags: [
                    this.decodeTag(rawInfo[14]),
                    this.decodeTag(rawInfo[15]),
                    this.decodeTag(rawInfo[16])
                ],
                type: null,
                endDate: null,
                winningOutcomes: [],
                description: null
            };
            info.outcomes = new Array(info.numOutcomes);
            info.events = new Array(info.numEvents);

            // organize event info
            // [eventID, expirationDate, outcome, minValue, maxValue, numOutcomes]
            var endDate;
            for (var i = 0; i < info.numEvents; ++i) {
                endDate = parseInt(rawInfo[i*EVENTS_FIELDS + index + 1]);
                info.events[i] = {
                    id: rawInfo[i*EVENTS_FIELDS + index],
                    endDate: endDate,
                    outcome: abi.unfix(rawInfo[i*EVENTS_FIELDS + index + 2], "string"),
                    minValue: abi.unfix(rawInfo[i*EVENTS_FIELDS + index + 3], "string"),
                    maxValue: abi.unfix(rawInfo[i*EVENTS_FIELDS + index + 4], "string"),
                    numOutcomes: abi.number(rawInfo[i*EVENTS_FIELDS + index + 5])
                };
                // market type: binary, categorical, or scalar
                if (info.events[i].numOutcomes !== 2) {
                    info.events[i].type = "categorical";
                } else if (info.events[i].minValue === '1' && info.events[i].maxValue === '2') {
                    info.events[i].type = "binary";
                } else {
                    info.events[i].type = "scalar";
                }
                if (info.endDate === null || endDate > info.endDate) {
                    info.endDate = endDate;
                }
            }

            // organize outcome info
            index += info.numEvents*EVENTS_FIELDS;
            for (i = 0; i < info.numOutcomes; ++i) {
                info.outcomes[i] = {
                    id: i + 1,
                    outstandingShares: abi.unfix(rawInfo[i*OUTCOMES_FIELDS + index], "string"),
                    price: abi.unfix(rawInfo[i*OUTCOMES_FIELDS + index + 1], "string")
                };
            }
            index += info.numOutcomes*OUTCOMES_FIELDS;
            info.winningOutcomes = abi.string(
                rawInfo.slice(index, index + WINNING_OUTCOMES_FIELDS)
            );
            index += WINNING_OUTCOMES_FIELDS;

            // convert description byte array to unicode
            try {
                info.description = abi.bytes_to_utf16(rawInfo.slice(rawInfo.length - parseInt(rawInfo[index])));
            } catch (exc) {
                if (this.options.debug.broadcast) console.error(exc, rawInfo);
                info.description = "";
            }

            // market types: binary, categorical, scalar, combinatorial
            if (info.numEvents === 1) {
                info.type = info.events[0].type;
                if (!utils.is_function(callback)) return info;
                return callback(info);
            }

            // multi-event (combinatorial) markets: batch event descriptions
            info.type = "combinatorial";
            // if (options && options.combinatorial) {
            //     var txList = new Array(info.numEvents);
            //     for (i = 0; i < info.numEvents; ++i) {
            //         txList[i] = clone(this.tx.getDescription);
            //         txList[i].params = info.events[i].id;
            //     }
            //     if (utils.is_function(callback)) {
            //         return rpc.batch(txList, function (response) {
            //             for (var i = 0, len = response.length; i < len; ++i) {
            //                 info.events[i].description = response[i];
            //             }
            //             callback(info);
            //         });
            //     }
            //     var response = rpc.batch(txList);
            //     for (i = 0; i < response.length; ++i) {
            //         info.events[i].description = response[i];
            //     }
            // }
        }
        if (!utils.is_function(callback)) return info;
        callback(info);
    },


    parseMarketInfoCache: function (rawInfo, callback) {
        var BASE_CACHE_FIELDS = 10;
        var info = {};
        if (!rawInfo || rawInfo.length < BASE_CACHE_FIELDS){
            return (utils.is_function(callback) ? callback(null) : null);
        }

        var makerProportionOfFee = abi.unfix(rawInfo[1]);
        var tradingFee = abi.unfix(rawInfo[3]);
        var makerFee = tradingFee.times(makerProportionOfFee);
        var descr_length = parseInt(rawInfo[11]);

        info = {
            makerFee: makerFee.toFixed(),
            takerFee: new BigNumber("1.5").times(tradingFee).minus(makerFee).toFixed(),
            tradingPeriod: abi.number(rawInfo[2]),
            tradingFee: abi.unfix(rawInfo[3], "string"),
            creationTime: parseInt(rawInfo[4]),
            volume: abi.unfix(rawInfo[5], "string"),
            tags: [
                this.decodeTag(rawInfo[6]),
                this.decodeTag(rawInfo[7]),
                this.decodeTag(rawInfo[8])
            ],
            endDate: parseInt(rawInfo[9]),
            description: null
        };

        // convert description byte array to unicode
        try {
            info.description = abi.bytes_to_utf16(rawInfo.slice(11));
        } catch (exc) {
            if (this.options.debug.broadcast) console.error(exc, rawInfo);
            info.description = "";
        }

        if (!utils.is_function(callback)) return info;

        callback(info);
    },

    parseMarketsArray: function (marketsArray) {
        var numMarkets, marketsInfo, totalLen, len, shift, marketID;
        if (!marketsArray || marketsArray.constructor !== Array || !marketsArray.length) {
            return marketsArray;
        }
        numMarkets = parseInt(marketsArray.shift());
        marketsInfo = {};
        totalLen = 0;
        for (var i = 0; i < numMarkets; ++i) {
            len = parseInt(marketsArray[totalLen]);
            shift = totalLen + 1;
            marketID = marketsArray[shift];
            var makerProportionOfFee = abi.unfix(marketsArray[shift + 9]);
            var tradingFee = abi.unfix(marketsArray[shift + 2]);
            var makerFee = tradingFee.times(makerProportionOfFee);
            marketsInfo[marketID] = {
                _id: marketID,
                sortOrder: i,
                tradingPeriod: parseInt(marketsArray[shift + 1]),
                tradingFee: abi.unfix(marketsArray[shift + 2], "string"),
                creationTime: parseInt(marketsArray[shift + 3]),
                volume: abi.unfix(marketsArray[shift + 4], "string"),
                tags: [
                    this.decodeTag(marketsArray[shift + 5]),
                    this.decodeTag(marketsArray[shift + 6]),
                    this.decodeTag(marketsArray[shift + 7])
                ],
                endDate: parseInt(marketsArray[shift + 8]),
                makerFee: makerFee.toFixed(),
                takerFee: new BigNumber("1.5").times(tradingFee).minus(makerFee).toFixed(),
                description: abi.bytes_to_utf16(marketsArray.slice(shift + 10, shift + len - 1))
            };
            totalLen += len;
        }
        return marketsInfo;
    }
};

},{"../utilities":146,"async":2,"augur-abi":3,"bignumber.js":147,"clone":14}],128:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var utils = require("../utilities");

module.exports = {

    getCurrentPeriod: function (branch, callback) {
        var self = this;
        if (!utils.is_function(callback)) {
            return new Date().getTime() / 1000 / parseInt(this.getPeriodLength(branch));
        }
        this.getPeriodLength(branch, function (periodLength) {
            callback(new Date().getTime() / 1000 / parseInt(periodLength));
        });
    }
};

},{"../utilities":146,"clone":14}],129:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");
var constants = require("../constants");

module.exports = {

    buy: function (amount, price, market, outcome, onSent, onSuccess, onFailed) {
        var self = this;
        if (amount.constructor === Object && amount.amount) {
            price = amount.price;
            market = amount.market;
            outcome = amount.outcome;
            onSent = amount.onSent;
            onSuccess = amount.onSuccess;
            onFailed = amount.onFailed;
            amount = amount.amount;
        }
        onSent = onSent || utils.noop;
        onSuccess = onSuccess || utils.noop;
        onFailed = onFailed || utils.noop;
        var tx = clone(this.tx.BuyAndSellShares.buy);
        tx.params = [abi.fix(amount, "hex"), abi.fix(price, "hex"), market, outcome];
        this.transact(tx, onSent, function (res) {
            res.callReturn = utils.sha3([
                constants.BID,
                market,
                abi.fix(amount, "hex"),
                abi.fix(price, "hex"),
                res.from,
                res.blockNumber,
                parseInt(outcome)
            ]);
            onSuccess(res);
        }, onFailed);
    },

    sell: function (amount, price, market, outcome, onSent, onSuccess, onFailed) {
        var self = this;
        if (amount.constructor === Object && amount.amount) {
            price = amount.price;
            market = amount.market;
            outcome = amount.outcome;
            onSent = amount.onSent;
            onSuccess = amount.onSuccess;
            onFailed = amount.onFailed;
            amount = amount.amount;
        }
        onSent = onSent || utils.noop;
        onSuccess = onSuccess || utils.noop;
        onFailed = onFailed || utils.noop;
        var tx = clone(this.tx.BuyAndSellShares.sell);
        tx.params = [abi.fix(amount, "hex"), abi.fix(price, "hex"), market, outcome];
        this.transact(tx, onSent, function (res) {
            res.callReturn = utils.sha3([
                constants.ASK,
                market,
                abi.fix(amount, "hex"),
                abi.fix(price, "hex"),
                res.from,
                res.blockNumber,
                parseInt(outcome)
            ]);
            onSuccess(res);
        }, onFailed);
    }
};

},{"../constants":123,"../utilities":146,"augur-abi":3,"clone":14}],130:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {
    
    setCash: function (address, balance, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Cash.setCash);
        var unpacked = utils.unpack(address, utils.labels(this.setCash), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },
    
    addCash: function (ID, amount, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Cash.addCash);
        var unpacked = utils.unpack(ID, utils.labels(this.addCash), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },
    
    getCashBalance: function (account, callback) {
        return this.Cash.balance(account, callback);
    },

    sendCash: function (to, value, onSent, onSuccess, onFailed) {
        // to: ethereum account
        // value: number -> fixed-point
        if (to && to.value !== null && to.value !== undefined) {
            value = to.value;
            if (to.onSent) onSent = to.onSent;
            if (to.onSuccess) onSuccess = to.onSuccess;
            if (to.onFailed) onFailed = to.onFailed;
            to = to.to;
        }
        var tx = clone(this.tx.Cash.send);
        tx.params = [to, abi.fix(value, "hex")];
        return this.transact(tx, onSent, onSuccess, onFailed);
    },

    sendCashFrom: function (to, value, from, onSent, onSuccess, onFailed) {
        // to: ethereum account
        // value: number -> fixed-point
        // from: ethereum account
        if (to && to.value) {
            value = to.value;
            from = to.from;
            if (to.onSent) onSent = to.onSent;
            if (to.onSuccess) onSuccess = to.onSuccess;
            if (to.onFailed) onFailed = to.onFailed;
            to = to.to;
        }
        var tx = clone(this.tx.Cash.sendFrom);
        tx.params = [to, abi.fix(value, "hex"), from];
        return this.transact(tx, onSent, onSuccess, onFailed);
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],131:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {

    buyCompleteSets: function (market, amount, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.CompleteSets.buyCompleteSets);
        var unpacked = utils.unpack(arguments[0], utils.labels(this.buyCompleteSets), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },

    sellCompleteSets: function (market, amount, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.CompleteSets.sellCompleteSets);
        var unpacked = utils.unpack(arguments[0], utils.labels(this.sellCompleteSets), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],132:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var BigNumber = require("bignumber.js");
var clone = require("clone");
var utils = require("../utilities");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    // scalarMinMax: null if not scalar; {minValue, maxValue} if scalar
    getOrderBook: function (marketID, scalarMinMax, callback) {
        var self = this;
        if (!callback && utils.is_function(scalarMinMax)) {
            callback = scalarMinMax;
            scalarMinMax = null;
        }
        var isScalar = scalarMinMax &&
            scalarMinMax.minValue !== undefined &&
            scalarMinMax.maxValue !== undefined;
        function getOrderBook(orderArray) {
            if (!orderArray || orderArray.error) return orderArray;
            var minValue, maxValue, numOrders, order;
            if (isScalar) {
                minValue = new BigNumber(scalarMinMax.minValue, 10);
                maxValue = new BigNumber(scalarMinMax.maxValue, 10);
            }
            numOrders = orderArray.length / 8;
            var orderBook = {buy: [], sell: []};
            for (var i = 0; i < numOrders; ++i) {
                order = self.parseTradeInfo(orderArray.slice(8*i, 8*(i+1)));
                if (isScalar) {
                    order.price = self.adjustScalarPrice(order.type, minValue, maxValue, order.price);
                }
                orderBook[order.type].push(order);
            }
            return orderBook;
        }
        var tx = clone(this.tx.CompositeGetters.getOrderBook);
        tx.params = marketID;
        if (!utils.is_function(callback)) return getOrderBook(this.fire(tx));
        this.fire(tx, function (orderArray) {
            callback(getOrderBook(orderArray));
        });
    },

    getMarketInfo: function (market, callback) {
        var self = this;
        var tx = clone(this.tx.CompositeGetters.getMarketInfo);
        var unpacked = utils.unpack(market, utils.labels(this.getMarketInfo), arguments);
        tx.params = unpacked.params;
        tx.timeout = 45000;
        if (unpacked && utils.is_function(unpacked.cb[0])) {
            return this.fire(tx, function (marketInfo) {
                if (!marketInfo) return callback(self.errors.NO_MARKET_INFO);
                self.parseMarketInfo(marketInfo, {combinatorial: true}, function (info) {
                    if (info.numEvents && info.numOutcomes) {
                        unpacked.cb[0](info);
                    } else {
                        unpacked.cb[0](null);
                    }
                });
            });
        }
        var marketInfo = this.parseMarketInfo(this.fire(tx));
        if (marketInfo.numOutcomes && marketInfo.numEvents) {
            return marketInfo;
        } else {
            return null;
        }
    },

    getMarketInfoCache: function (market, callback) {
        var self = this;
        var tx = clone(this.tx.CompositeGetters.getMarketInfoCache);
        var unpacked = utils.unpack(market, utils.labels(this.getMarketInfoCache), arguments);
        tx.params = unpacked.params;
        tx.timeout = 45000;
        if (unpacked && utils.is_function(unpacked.cb[0])) {
            return this.fire(tx, function (marketInfo) {
                if (!marketInfo) return callback(self.errors.NO_MARKET_INFO);
                self.parseMarketInfoCache(marketInfo, function (info) {
                    unpacked.cb[0](info);
                });
            });
        }
        var marketInfo = this.parseMarketInfoCache(this.fire(tx));
        return marketInfo;
    },

    batchGetMarketInfo: function (marketIDs, callback) {
        var self = this;
        function batchGetMarketInfo(marketsArray) {
            var len, shift, rawInfo, info, marketID;
            if (!marketsArray || marketsArray.constructor !== Array || !marketsArray.length) {
                return marketsArray;
            }
            var numMarkets = marketIDs.length;
            var marketsInfo = {};
            var totalLen = 0;
            for (var i = 0; i < numMarkets; ++i) {
                len = parseInt(marketsArray[totalLen]);
                shift = totalLen + 1;
                rawInfo = marketsArray.slice(shift, shift + len - 1);
                marketID = marketsArray[shift];
                info = self.parseMarketInfo(rawInfo);
                if (info && parseInt(info.numEvents) && info.numOutcomes) {
                    marketsInfo[marketID] = info;
                    marketsInfo[marketID].sortOrder = i;
                }
                totalLen += len;
            }
            return marketsInfo;
        }
        var tx = clone(this.tx.CompositeGetters.batchGetMarketInfo);
        tx.params = [marketIDs];
        if (!utils.is_function(callback)) {
            return batchGetMarketInfo(this.fire(tx));
        }
        this.fire(tx, function (marketsArray) {
            callback(batchGetMarketInfo(marketsArray));
        });
    },

    getMarketsInfo: function (options, callback) {
        // options: {branch, offset, numMarketsToLoad, callback}
        var self = this;
        if (utils.is_function(options) && !callback) {
            callback = options;
            options = {};
        }
        options = options || {};
        var branch = options.branch || this.constants.DEFAULT_BRANCH_ID;
        var offset = options.offset || 0;
        var numMarketsToLoad = options.numMarketsToLoad || 0;
        if (!callback && utils.is_function(options.callback)) {
            callback = options.callback;
        }
        var tx = clone(this.tx.CompositeGetters.getMarketsInfo);
        tx.params = [branch, offset, numMarketsToLoad];
        tx.timeout = 240000;
        if (!utils.is_function(callback)) {
            return this.parseMarketsArray(this.fire(tx));
        }
        this.fire(tx, function (marketsArray) {
            callback(self.parseMarketsArray(marketsArray));
        });
    }
};

},{"../utilities":146,"bignumber.js":147,"clone":14}],133:[function(require,module,exports){
/**
 * Ethereum network connection / contract lookup
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var connector = require("ethereumjs-connect");
var constants = require("../constants");
var utils = require("../utilities");

module.exports = {

    /**
     * Direct no-frills bindings to Augur's Serpent (contract) API.
     *  - Parameter positions and types are the same as the underlying
     *    contract method's parameters.
     *  - Parameters should be passed in exactly as they would be
     *    passed to the contract method (e.g., if the contract method
     *    expects a fixed-point number, you must do that conversion
     *    yourself and pass the fixed-point number in).
     */
    bindContractMethod: function (contract, method) {
        var self = this;
        return function (args) {
            var tx, params, cb, i, onSent, onSuccess, onFailed;
            tx = clone(self.tx[contract][method]);
            if (!arguments) {
                if (!tx.send) return self.fire(tx);
                return self.transact(tx);
            }
            params = Array.prototype.slice.call(arguments);
            if (!tx.send) {
                if (params[0] !== undefined && params[0] !== null &&
                    params[0].constructor === Object) {
                    cb = params[0].callback || utils.pass;
                    if (tx.inputs && tx.inputs.length) {
                        tx.params = new Array(tx.inputs.length);
                        for (i = 0; i < tx.inputs.length; ++i) {
                            tx.params[i] = params[0][tx.inputs[i]];
                        }
                    }
                } else {
                    if (utils.is_function(params[params.length - 1])) {
                        cb = params.pop();
                    }
                    tx.params = params;
                }
                return self.fire(tx, cb);
            }
            if (params[0] !== undefined && params[0] !== null &&
                params[0].constructor === Object) {
                onSent = params[0].onSent || utils.pass;
                onSuccess = params[0].onSuccess || utils.pass;
                onFailed = params[0].onFailed || utils.pass;
                if (tx.inputs && tx.inputs.length) {
                    tx.params = new Array(tx.inputs.length);
                    for (i = 0; i < tx.inputs.length; ++i) {
                        tx.params[i] = params[0][tx.inputs[i]];
                    }
                }
                return self.transact(tx, onSent, onSuccess, onFailed);
            }
            cb = [];
            while (utils.is_function(params[params.length - 1])) {
                cb.push(params.pop());
            }
            tx.params = params;
            cb.reverse();
            return self.transact.apply(self, [tx].concat(cb));
        };
    },
    bindContractAPI: function (methods) {
        var self = this;
        methods = methods || this.tx;
        for (var contract in methods) {
            if (!methods.hasOwnProperty(contract)) continue;
            this[contract] = {};
            for (var method in methods[contract]) {
                if (!methods[contract].hasOwnProperty(method)) continue;
                this[contract][method] = this.bindContractMethod(contract, method);
                if (!this[method]) this[method] = this[contract][method];
            }
        }
        return methods;
    },

    sync: function () {
        var self = this;
        if (connector && connector.constructor === Object) {
            this.network_id = connector.network_id;
            this.from = connector.from;
            this.coinbase = connector.coinbase;
            this.tx = connector.tx;
            this.contracts = connector.contracts;
            this.init_contracts = connector.init_contracts;
            this.bindContractAPI();
            return true;
        }
        return false;
    },

    useAccount: function (account) {
        connector.from = account;
        connector.from_field_tx(account);
        this.sync();
    },

    updateContracts: function (newContracts) {
        if (connector && connector.constructor === Object) {
            connector.contracts = clone(newContracts);
            connector.update_contracts();
            return this.sync();
        }
        return false;
    },

    /** 
     * @param rpcinfo {Object|string=} Two forms accepted:
     *    1. Object with connection info fields:
     *       { http: "https://eth3.augur.net",
     *         ipc: "/path/to/geth.ipc",
     *         ws: "wss://ws.augur.net" }
     *    2. URL string for HTTP RPC: "https://eth3.augur.net"
     * @param ipcpath {string=} Local IPC path, if not provided in rpcinfo object.
     * @param cb {function=} Callback function.
     */
    connect: function (rpcinfo, ipcpath, cb) {
        var options = {};
        if (rpcinfo) {
            switch (rpcinfo.constructor) {
            case String:
                options.http = rpcinfo;
                break;
            case Function:
                cb = rpcinfo;
                options.http = null;
                break;
            case Object:
                options = rpcinfo;
                break;
            default:
                options.http = null;
            }
        }
        if (ipcpath) {
            switch (ipcpath.constructor) {
            case String:
                options.ipc = ipcpath;
                break;
            case Function:
                if (!cb) {
                    cb = ipcpath;
                    options.ipc = null;
                }
                break;
            default:
                options.ipc = null;
            }
        }
        if (!utils.is_function(cb)) {
            var connection = connector.connect(options);
            this.sync();
            return connection;
        }
        var self = this;
        connector.connect(options, function (connection) {
            self.sync();
            cb(connection);
        });
    }
};

},{"../constants":123,"../utilities":146,"clone":14,"ethereumjs-connect":15}],134:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {

    createBranch: function (description, periodLength, parent, tradingFee, oracleOnly, onSent, onSuccess, onFailed) {
        var self = this;
        if (description && description.parent) {
            periodLength = description.periodLength;
            parent = description.parent;
            tradingFee = description.tradingFee;
            oracleOnly = description.oracleOnly;
            if (description.onSent) onSent = description.onSent;
            if (description.onSuccess) onSuccess = description.onSuccess;
            if (description.onFailed) onFailed = description.onFailed;
            description = description.description;
        }
        onSent = onSent || utils.noop;
        onSuccess = onSuccess || utils.noop;
        onFailed = onFailed || utils.noop;
        oracleOnly = oracleOnly || 0;
        description = description.trim();
        return this.createSubbranch({
            description: description,
            periodLength: periodLength,
            parent: parent,
            tradingFee: tradingFee,
            oracleOnly: oracleOnly,
            onSent: onSent,
            onSuccess: function (response) {
                self.rpc.getBlock(response.blockNumber, false, function (block) {
                    response.branchID = utils.sha3([
                        response.from,
                        "0x2f0000000000000000",
                        periodLength,
                        block.timestamp,
                        parent,
                        abi.fix(tradingFee, "hex"),
                        oracleOnly,
                        description
                    ]);
                    onSuccess(response);
                });
            },
            onFailed: onFailed
        });
    },

    createSubbranch: function (description, periodLength, parent, tradingFee, oracleOnly, onSent, onSuccess, onFailed) {
        if (description && description.parent) {
            periodLength = description.periodLength;
            parent = description.parent;
            tradingFee = description.tradingFee;
            oracleOnly = description.oracleOnly;
            if (description.onSent) onSent = description.onSent;
            if (description.onSuccess) onSuccess = description.onSuccess;
            if (description.onFailed) onFailed = description.onFailed;
            description = description.description;
        }
        oracleOnly = oracleOnly || 0;
        var tx = clone(this.tx.CreateBranch.createSubbranch);
        tx.params = [
            description,
            periodLength,
            parent,
            abi.fix(tradingFee, "hex"),
            oracleOnly
        ];
        return this.transact(tx, onSent, onSuccess, onFailed);
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],135:[function(require,module,exports){
(function (Buffer){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var BigNumber = require("bignumber.js");
var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    createSingleEventMarket: function (branchId, description, expDate, minValue, maxValue, numOutcomes, resolution, takerFee, tags, makerFee, extraInfo, onSent, onSuccess, onFailed) {
        var self = this;
        if (branchId.constructor === Object && branchId.branchId) {
            description = branchId.description;         // string
            expDate = branchId.expDate;
            minValue = branchId.minValue;               // integer (1 for binary)
            maxValue = branchId.maxValue;               // integer (2 for binary)
            numOutcomes = branchId.numOutcomes;         // integer (2 for binary)
            resolution = branchId.resolution;
            takerFee = branchId.takerFee;
            tags = branchId.tags;
            makerFee = branchId.makerFee;
            extraInfo = branchId.extraInfo;
            onSent = branchId.onSent;                   // function
            onSuccess = branchId.onSuccess;             // function
            onFailed = branchId.onFailed;               // function
            branchId = branchId.branchId;               // sha256 hash
        }
        onSent = onSent || utils.noop;
        onSuccess = onSuccess || utils.noop;
        onFailed = onFailed || utils.noop;
        if (!tags || tags.constructor !== Array) tags = [];
        if (tags.length) {
            for (var i = 0; i < tags.length; ++i) {
                if (tags[i] === null || tags[i] === undefined || tags[i] === "") {
                    tags[i] = "0x0";
                } else {
                    tags[i] = abi.short_string_to_int256(tags[i]);
                }
            }
        }
        while (tags.length < 3) {
            tags.push("0x0");
        }
        var bnMakerFee = abi.bignum(makerFee);
        var tradingFee = abi.bignum(takerFee).plus(bnMakerFee).dividedBy(new BigNumber("1.5"));
        var makerProportionOfFee = bnMakerFee.dividedBy(tradingFee);
        description = description.trim();
        expDate = parseInt(expDate);
        var tx = clone(this.tx.CreateMarket.createEvent);
        tx.params = [
            branchId,
            description,
            expDate,
            abi.fix(minValue, "hex"),
            abi.fix(maxValue, "hex"),
            numOutcomes,
            resolution
        ];
        this.transact(tx, utils.noop, function (res) {
            var tx = clone(self.tx.CreateMarket.createMarket);
            tx.params = [
                branchId,
                description,
                abi.fix(tradingFee, "hex"),
                res.callReturn,
                tags[0],
                tags[1],
                tags[2],
                abi.fix(makerProportionOfFee, "hex"),
                extraInfo || ""
            ];
            self.rpc.gasPrice(function (gasPrice) {
                tx.gasPrice = gasPrice;
                gasPrice = abi.bignum(gasPrice);
                tx.value = abi.prefix_hex((new BigNumber("1200000").times(gasPrice).plus(new BigNumber("500000").times(gasPrice))).toString(16));
                self.getPeriodLength(branchId, function (periodLength) {
                    self.transact(tx, onSent, function (res) {
                        self.rpc.getBlock(res.blockNumber, false, function (block) {
                            var futurePeriod = abi.prefix_hex(new BigNumber(expDate, 10).dividedBy(new BigNumber(periodLength)).floor().toString(16));
                            res.marketID = utils.sha3([
                                futurePeriod,
                                abi.fix(tradingFee, "hex"),
                                block.timestamp,
                                tags[0],
                                tags[1],
                                tags[2],
                                expDate,
                                new Buffer(description, "utf8").length,
                                description
                            ]);
                            res.callReturn = res.marketID;
                            onSuccess(res);
                        });
                    }, onFailed);
                });
            });
        }, onFailed);
    },

    createEvent: function (branchId, description, expDate, minValue, maxValue, numOutcomes, resolution, onSent, onSuccess, onFailed) {
        if (branchId.constructor === Object && branchId.branchId) {
            description = branchId.description;         // string
            minValue = branchId.minValue;               // integer (1 for binary)
            maxValue = branchId.maxValue;               // integer (2 for binary)
            numOutcomes = branchId.numOutcomes;         // integer (2 for binary)
            expDate = branchId.expDate;
            resolution = branchId.resolution;
            onSent = branchId.onSent;                   // function
            onSuccess = branchId.onSuccess;             // function
            onFailed = branchId.onFailed;               // function
            branchId = branchId.branchId;               // sha256 hash
        }
        var tx = clone(this.tx.CreateMarket.createEvent);
        tx.params = [
            branchId,
            description.trim(),
            parseInt(expDate),
            abi.fix(minValue, "hex"),
            abi.fix(maxValue, "hex"),
            numOutcomes,
            resolution
        ];
        return this.transact(tx, onSent, onSuccess, onFailed);
    },

    createMarket: function (branchId, description, takerFee, events, tags, makerFee, extraInfo, onSent, onSuccess, onFailed) {
        var self = this;
        if (branchId.constructor === Object && branchId.branchId) {
            description = branchId.description; // string
            takerFee = branchId.takerFee;
            events = branchId.events;           // array [sha256, ...]
            tags = branchId.tags;
            makerFee = branchId.makerFee;
            extraInfo = branchId.extraInfo;
            onSent = branchId.onSent;           // function
            onSuccess = branchId.onSuccess;     // function
            onFailed = branchId.onFailed;       // function
            branchId = branchId.branchId;       // sha256 hash
        }
        onSent = onSent || utils.noop;
        onSuccess = onSuccess || utils.noop;
        onFailed = onFailed || utils.noop;
        if (!tags || tags.constructor !== Array) tags = [];
        if (tags.length) {
            for (var i = 0; i < tags.length; ++i) {
                if (tags[i] === null || tags[i] === undefined || tags[i] === "") {
                    tags[i] = "0x0";
                } else {
                    tags[i] = abi.short_string_to_int256(tags[i]);
                }
            }
        }
        while (tags.length < 3) {
            tags.push("0x0");
        }
        var bnMakerFee = abi.bignum(makerFee);
        var tradingFee = abi.bignum(takerFee).plus(bnMakerFee).dividedBy(new BigNumber("1.5"));
        var makerProportionOfFee = bnMakerFee.dividedBy(tradingFee);
        var tx = clone(this.tx.CreateMarket.createMarket);
        description = description.trim();
        tx.params = [
            branchId,
            description,
            abi.fix(tradingFee, "hex"),
            events,
            tags[0],
            tags[1],
            tags[2],
            abi.fix(makerProportionOfFee, "hex"),
            extraInfo || ""
        ];
        this.rpc.gasPrice(function (gasPrice) {
            tx.gasPrice = gasPrice;
            gasPrice = abi.bignum(gasPrice);
            tx.value = abi.prefix_hex((new BigNumber("1200000").times(gasPrice).plus(new BigNumber("1000000").times(gasPrice).times(new BigNumber(events.length - 1)).plus(new BigNumber("500000").times(gasPrice)))).toString(16));
            self.getPeriodLength(branchId, function (periodLength) {
                self.transact(tx, onSent, function (res) {
                    self.getExpiration(events, function (expDate) {
                        expDate = parseInt(expDate);
                        self.rpc.getBlock(res.blockNumber, false, function (block) {
                            var futurePeriod = abi.prefix_hex(new BigNumber(expDate, 10).dividedBy(new BigNumber(periodLength)).floor().toString(16));
                            res.marketID = utils.sha3([
                                futurePeriod,
                                abi.fix(tradingFee, "hex"),
                                block.timestamp,
                                tags[0],
                                tags[1],
                                tags[2],
                                expDate,
                                new Buffer(description, "utf8").length,
                                description
                            ]);
                            res.callReturn = res.marketID;
                            onSuccess(res);
                        });
                    });
                }, onFailed);
            });
        });
    },

    updateTradingFee: function (branch, market, tradingFee, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.CreateMarket.updateTradingFee);
        var unpacked = utils.unpack(branch, utils.labels(this.updateTradingFee), arguments);
        tx.params = unpacked.params;
        tx.params[2] = abi.fix(tx.params[2], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    }
};

}).call(this,require("buffer").Buffer)

},{"../utilities":146,"augur-abi":3,"bignumber.js":147,"buffer":151,"clone":14}],136:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {

    getEventInfo: function (eventId, callback) {
        // eventId: hash id
        var self = this;
        var parse_info = function (info) {
            // eventinfo = string(7*32 + length)
            // eventinfo[0] = self.Events[event].branch
            // eventinfo[1] = self.Events[event].expirationDate 
            // eventinfo[2] = self.Events[event].outcome
            // eventinfo[3] = self.Events[event].minValue
            // eventinfo[4] = self.Events[event].maxValue
            // eventinfo[5] = self.Events[event].numOutcomes
            // eventinfo[6] = self.Events[event].bond
            if (info && info.length) {
                info[0] = abi.hex(info[0]);
                info[1] = abi.bignum(info[1]).toFixed();
                info[2] = abi.unfix(info[2], "string");
                info[3] = abi.unfix(info[3], "string");
                info[4] = abi.unfix(info[4], "string");
                info[5] = parseInt(info[5]);
                info[6] = abi.unfix(info[6], "string");
            }
            return info;
        };
        var tx = clone(this.tx.Events.getEventInfo);
        tx.params = eventId;
        if (utils.is_function(callback)) {
            this.fire(tx, function (info) {
                callback(parse_info(info));
            });
        } else {
            return parse_info(this.fire(tx));
        }
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],137:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var BigNumber = require("bignumber.js");
var abi = require("augur-abi");
var constants = require("../constants");
var utils = require("../utilities");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    getMarketPriceHistory: function (market, options, cb) {
        var self = this;
        function parsePriceLogs(logs) {
            if (!logs || (logs && (logs.constructor !== Array || !logs.length))) {
                return null;
            }
            if (logs.error) throw new Error(JSON.stringify(logs));
            var outcome, parsed, priceHistory = {};
            for (var i = 0, n = logs.length; i < n; ++i) {
                if (logs[i] && logs[i].data !== undefined &&
                    logs[i].data !== null && logs[i].data !== "0x") {
                    parsed = self.rpc.unmarshal(logs[i].data);
                    outcome = parseInt(parsed[4], 16);
                    if (!priceHistory[outcome]) priceHistory[outcome] = [];
                    priceHistory[outcome].push({
                        market: market,
                        type: parseInt(parsed[0], 16),
                        user: abi.format_address(logs[i].topics[2]),
                        price: abi.unfix(parsed[1], "string"),
                        shares: abi.unfix(parsed[2], "string"),
                        timestamp: parseInt(parsed[3], 16),
                        blockNumber: parseInt(logs[i].blockNumber, 16)
                    });
                }
            }
            return priceHistory;
        }
        if (!cb && utils.is_function(options)) {
            cb = options;
            options = null;
        }
        options = options || {};
        var filter = {
            fromBlock: options.fromBlock || "0x1",
            toBlock: options.toBlock || "latest",
            address: this.contracts.Trade,
            topics: [constants.LOGS.price.signature, market]
        };
        if (!utils.is_function(cb)) {
            return parsePriceLogs(this.rpc.getLogs(filter));
        }
        this.rpc.getLogs(filter, function (logs) {
            cb(parsePriceLogs(logs));
        });
    },

    meanTradePrice: function (trades, sell) {
        var price, shares, totalShares, outcomeMeanPrice, meanPrice = {};
        function include(shares) {
            return (sell) ? shares.lt(new BigNumber(0)) : shares.gt(new BigNumber(0));
        }
        for (var outcome in trades) {
            if (!trades.hasOwnProperty(outcome)) continue;
            outcomeMeanPrice = new BigNumber(0);
            totalShares = new BigNumber(0);
            for (var i = 0, n = trades[outcome].length; i < n; ++i) {
                price = new BigNumber(trades[outcome][i].price, 10);
                shares = new BigNumber(trades[outcome][i].amount, 10);
                if (include(shares)) {
                    outcomeMeanPrice = outcomeMeanPrice.plus(price.mul(shares));
                    totalShares = totalShares.plus(shares);
                }
            }
            if (include(totalShares)) {
                meanPrice[outcome] = outcomeMeanPrice.dividedBy(totalShares).toFixed();
            }
        }
        return meanPrice;
    },

    getAccountTrades: function (account, options, cb) {
        var self = this;
        if (!cb && utils.is_function(options)) {
            cb = options;
            options = null;
        }
        options = options || {};
        if (!account || !utils.is_function(cb)) return;
        this.rpc.getLogs({
            fromBlock: options.fromBlock || "0x1",
            toBlock: options.toBlock || "latest",
            address: this.contracts.Trade,
            topics: [
                constants.LOGS.price.signature,
                null,
                abi.prefix_hex(abi.pad_left(account))
            ],
            timeout: 480000
        }, function (logs) {
            if (!logs || (logs && (logs.constructor !== Array || !logs.length))) {
                return cb(null);
            }
            if (logs.error) return cb(logs);
            var market, outcome, parsed, price, timestamp, shares, type, trades = {};
            for (var i = 0, n = logs.length; i < n; ++i) {
                if (logs[i] && logs[i].data !== undefined &&
                    logs[i].data !== null && logs[i].data !== "0x") {
                    market = logs[i].topics[1];
                    if (!trades[market]) trades[market] = {};
                    parsed = self.rpc.unmarshal(logs[i].data);
                    outcome = parseInt(parsed[4]);
                    if (!trades[market][outcome]) trades[market][outcome] = [];
                    trades[market][outcome].push({
                        type: parseInt(parsed[0], 16),
                        market: market,
                        price: abi.unfix(parsed[1], "string"),
                        shares: abi.unfix(parsed[2], "string"),
                        timestamp: parseInt(parsed[3], 16),
                        blockNumber: parseInt(logs[i].blockNumber, 16)
                    });
                }
            }
            cb(trades);
        });
    },

    getAccountMeanTradePrices: function (account, cb) {
        var self = this;
        if (!utils.is_function(cb)) return;
        this.getAccountTrades(account, function (trades) {
            if (!trades) return cb(null);
            if (trades.error) return (trades);
            var meanPrices = {buy: {}, sell: {}};
            for (var marketId in trades) {
                if (!trades.hasOwnProperty(marketId)) continue;
                meanPrices.buy[marketId] = self.meanTradePrice(trades[marketId]);
                meanPrices.sell[marketId] = self.meanTradePrice(trades[marketId], true);
            }
            cb(meanPrices);
        });
    }
};

},{"../constants":123,"../utilities":146,"augur-abi":3,"bignumber.js":147}],138:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var contracts = require("augur-contracts");
var utils = require("../utilities");

module.exports = {

    makeHash: function (salt, report, event, from, isScalar) {
        var fixedReport;
        if (isScalar && report === "0") {
            fixedReport = "0x1";
        } else {
            fixedReport = abi.fix(report, "hex");
        }
        return utils.sha3([
            from || this.from,
            abi.hex(salt),
            fixedReport,
            event
        ]);
    },

    submitReport: function (event, salt, report, ethics, isScalar, onSent, onSuccess, onFailed) {
        var self = this;
        if (event.constructor === Object && event.event) {
            salt = event.salt;
            report = event.report;
            ethics = event.ethics;
            isScalar = event.isScalar;
            if (event.onSent) onSent = event.onSent;
            if (event.onSuccess) onSuccess = event.onSuccess;
            if (event.onFailed) onFailed = event.onFailed;
            event = event.event;
        }
        onSent = onSent || utils.pass;
        onSuccess = onSuccess || utils.pass;
        onFailed = onFailed || utils.pass;
        var fixedReport;
        if (isScalar && report === "0") {
            fixedReport = "0x1";
        } else {
            fixedReport = abi.fix(report, "hex");
        }
        var tx = clone(this.tx.MakeReports.submitReport);
        tx.params = [
            event,
            abi.hex(salt),
            fixedReport,
            abi.fix(ethics, "hex")
        ];
        return this.transact(tx, onSent, onSuccess, onFailed);
    },

    validateReport: function (eventID, branch, reportPeriod, report, forkedOverEthicality, forkedOverThisEvent, roundTwo, balance, callback) {
        var tx = clone(this.tx.MakeReports.validateReport);
        tx.params = [
            eventID,
            branch,
            reportPeriod,
            abi.fix(report, "hex"),
            forkedOverEthicality,
            forkedOverThisEvent,
            roundTwo,
            abi.fix(balance, "hex")
        ];
        return this.fire(tx, callback);
    }
};

},{"../utilities":146,"augur-abi":3,"augur-contracts":11,"clone":14}],139:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var utils = require("../utilities");

module.exports = {

    getWinningOutcomes: function (market, callback) {
        // market: hash id
        var self = this;
        var tx = clone(this.tx.Markets.getWinningOutcomes);
        tx.params = market;
        if (!utils.is_function(callback)) {
            var winningOutcomes = this.fire(tx);
            if (!winningOutcomes) return null;
            if (winningOutcomes.error || winningOutcomes.constructor !== Array) {
                return winningOutcomes;
            }
            return winningOutcomes.slice(0, this.getMarketNumOutcomes(market));
        }
        this.fire(tx, function (winningOutcomes) {
            if (!winningOutcomes) return callback(null);
            if (winningOutcomes.error || winningOutcomes.constructor !== Array) {
                return callback(winningOutcomes);
            }
            self.getMarketNumOutcomes(market, function (numOutcomes) {
                if (numOutcomes && numOutcomes.error) {
                    return callback(numOutcomes);
                }
                callback(winningOutcomes.slice(0, numOutcomes));
            });
        });
    }
};

},{"../utilities":146,"clone":14}],140:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");

module.exports = {

    sendReputation: function (branchId, to, value, onSent, onSuccess, onFailed) {
        // branchId: hash id
        // to: ethereum address of recipient
        // value: number -> fixed-point
        if (branchId && branchId.branchId) {
            to = branchId.to;
            value = branchId.value;
            onSent = branchId.onSent;
            onSuccess = branchId.onSuccess;
            onFailed = branchId.onFailed;
            branchId = branchId.branchId;
        }
        var tx = clone(this.tx.SendReputation.sendReputation);
        tx.params = [branchId, to, abi.fix(value, "hex")];
        return this.transact(tx, onSent, onSuccess, onFailed);
    }
};

},{"augur-abi":3,"clone":14}],141:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var rpc = require("ethrpc");
var utils = require("../utilities");

module.exports = {

    trade: function (max_value, max_amount, trade_ids, onTradeHash, onCommitSent, onCommitSuccess, onCommitFailed, onNextBlock, onTradeSent, onTradeSuccess, onTradeFailed) {
        var self = this;
        if (max_value.constructor === Object && max_value.max_value) {
            max_amount = max_value.max_amount;
            trade_ids = max_value.trade_ids;
            onTradeHash = max_value.onTradeHash;
            onCommitSent = max_value.onCommitSent;
            onCommitSuccess = max_value.onCommitSuccess;
            onCommitFailed = max_value.onCommitFailed;
            onNextBlock = max_value.onNextBlock;
            onTradeSent = max_value.onTradeSent;
            onTradeSuccess = max_value.onTradeSuccess;
            onTradeFailed = max_value.onTradeFailed;
            max_value = max_value.max_value;
        }
        onTradeHash = onTradeHash || utils.noop;
        onCommitSent = onCommitSent || utils.noop;
        onCommitSuccess = onCommitSuccess || utils.noop;
        onCommitFailed = onCommitFailed || utils.noop;
        onNextBlock = onNextBlock || utils.noop;
        onTradeSent = onTradeSent || utils.noop;
        onTradeSuccess = onTradeSuccess || utils.noop;
        onTradeFailed = onTradeFailed || utils.noop;
        this.makeTradeHash(max_value, max_amount, trade_ids, function (tradeHash) {
            onTradeHash(tradeHash);
            self.commitTrade({
                hash: tradeHash,
                onSent: onCommitSent,
                onSuccess: function (res) {
                    onCommitSuccess(res);
                    self.rpc.fastforward(1, function (blockNumber) {
                        onNextBlock(blockNumber);
                        var tx = clone(self.tx.Trade.trade);
                        tx.params = [
                            abi.fix(max_value, "hex"),
                            abi.fix(max_amount, "hex"),
                            trade_ids
                        ];
                        self.transact(tx, function (sentResult) {
                            var result = clone(sentResult);
                            if (result.callReturn && result.callReturn.constructor === Array) {
                                result.callReturn[0] = parseInt(result.callReturn[0]);
                                if (result.callReturn[0] === 1 && result.callReturn.length === 3) {
                                    result.callReturn[1] = abi.unfix(result.callReturn[1], "string");
                                    result.callReturn[2] = abi.unfix(result.callReturn[2], "string");
                                }
                                return onTradeSent(result);
                            }
                            var err = self.rpc.errorCodes("trade", "number", result.callReturn);
                            if (!err) return onTradeFailed(result);
                            onTradeFailed({error: err, message: self.errors[err], tx: tx});
                        }, function (successResult) {
                            var result = clone(successResult);
                            if (result.callReturn && result.callReturn.constructor === Array) {
                                result.callReturn[0] = parseInt(result.callReturn[0]);
                                if (result.callReturn[0] === 1 && result.callReturn.length === 3) {
                                    result.callReturn[1] = abi.unfix(result.callReturn[1], "string");
                                    result.callReturn[2] = abi.unfix(result.callReturn[2], "string");
                                }
                                return onTradeSuccess(result);
                            }
                            var err = self.rpc.errorCodes("trade", "number", result.callReturn);
                            if (!err) return onTradeFailed(result);
                            onTradeFailed({error: err, message: self.errors[err], tx: tx});
                        }, onTradeFailed);
                    });
                },
                onFailed: onCommitFailed
            });
        });
    },

    short_sell: function (buyer_trade_id, max_amount, onTradeHash, onCommitSent, onCommitSuccess, onCommitFailed, onNextBlock, onTradeSent, onTradeSuccess, onTradeFailed) {
        var self = this;
        if (buyer_trade_id.constructor === Object && buyer_trade_id.buyer_trade_id) {
            max_amount = buyer_trade_id.max_amount;
            onTradeHash = buyer_trade_id.onTradeHash;
            onCommitSent = buyer_trade_id.onCommitSent;
            onCommitSuccess = buyer_trade_id.onCommitSuccess;
            onCommitFailed = buyer_trade_id.onCommitFailed;
            onNextBlock = buyer_trade_id.onNextBlock;
            onTradeSent = buyer_trade_id.onTradeSent;
            onTradeSuccess = buyer_trade_id.onTradeSuccess;
            onTradeFailed = buyer_trade_id.onTradeFailed;
            buyer_trade_id = buyer_trade_id.buyer_trade_id;
        }
        onTradeHash = onTradeHash || utils.noop;
        onCommitSent = onCommitSent || utils.noop;
        onCommitSuccess = onCommitSuccess || utils.noop;
        onCommitFailed = onCommitFailed || utils.noop;
        onNextBlock = onNextBlock || utils.noop;
        onTradeSent = onTradeSent || utils.noop;
        onTradeSuccess = onTradeSuccess || utils.noop;
        onTradeFailed = onTradeFailed || utils.noop;
        this.makeTradeHash(0, max_amount, [buyer_trade_id], function (tradeHash) {
            onTradeHash(tradeHash);
            self.commitTrade({
                hash: tradeHash,
                onSent: onCommitSent,
                onSuccess: function (res) {
                    onCommitSuccess(res);
                    self.rpc.fastforward(1, function (blockNumber) {
                        onNextBlock(blockNumber);
                        var tx = clone(self.tx.Trade.short_sell);
                        tx.params = [
                            buyer_trade_id,
                            abi.fix(max_amount, "hex")
                        ];
                        self.transact(tx, function (sentResult) {
                            var result = clone(sentResult);
                            if (result.callReturn && result.callReturn.constructor === Array) {
                                result.callReturn[0] = parseInt(result.callReturn[0]);
                                if (result.callReturn[0] === 1 && result.callReturn.length === 4) {
                                    result.callReturn[1] = abi.unfix(result.callReturn[1], "string");
                                    result.callReturn[2] = abi.unfix(result.callReturn[2], "string");
                                    result.callReturn[3] = abi.unfix(result.callReturn[3], "string");
                                }
                                return onTradeSent(result);
                            }
                            var err = self.rpc.errorCodes("trade", "number", result.callReturn);
                            if (!err) return onTradeFailed(result);
                            onTradeFailed({error: err, message: self.errors[err], tx: tx});
                        }, function (successResult) {
                            var result = clone(successResult);
                            if (result.callReturn && result.callReturn.constructor === Array) {
                                result.callReturn[0] = parseInt(result.callReturn[0]);
                                if (result.callReturn[0] === 1 && result.callReturn.length === 4) {
                                    result.callReturn[1] = abi.unfix(result.callReturn[1], "string");
                                    result.callReturn[2] = abi.unfix(result.callReturn[2], "string");
                                    result.callReturn[3] = abi.unfix(result.callReturn[3], "string");
                                }
                                return onTradeSuccess(result);
                            }
                            var err = self.rpc.errorCodes("trade", "number", result.callReturn);
                            if (!err) return onTradeFailed(result);
                            onTradeFailed({error: err, message: self.errors[err], tx: tx});
                        }, onTradeFailed);
                    });
                },
                onFailed: onCommitFailed
            });
        });
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14,"ethrpc":70}],142:[function(require,module,exports){
/**
 * Augur JavaScript API
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {

    makeTradeHash: function (max_value, max_amount, trade_ids, callback) {
        var tx = clone(this.tx.Trades.makeTradeHash);
        tx.params = [abi.fix(max_value, "hex"), abi.fix(max_amount, "hex"), trade_ids];
        return this.fire(tx, callback);
    },

    saveTrade: function (trade_id, type, market, amount, price, sender, outcome, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Trades.saveTrade);
        var unpacked = utils.unpack(arguments[0], utils.labels(this.saveTrade), arguments);
        tx.params = unpacked.params;
        tx.params[3] = abi.fix(tx.params[3], "hex");
        tx.params[4] = abi.fix(tx.params[4], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },

    get_trade: function (id, callback) {
        // trade = array(9)
        // trade[0] = self.trades[id].id
        // trade[1] = self.trades[id].type
        // trade[2] = self.trades[id].market
        // trade[3] = self.trades[id].amount
        // trade[4] = self.trades[id].price
        // trade[5] = self.trades[id].owner
        // trade[6] = self.trades[id].block
        // trade[7] = self.trades[id].outcome
        var self = this;
        var tx = clone(this.tx.Trades.get_trade);
        tx.params = id;
        if (!utils.is_function(callback)) {
            var trade = this.fire(tx);
            if (!trade || trade.error) return trade;
            return this.parseTradeInfo(trade);
        }
        this.fire(tx, function (trade) {
            if (!trade || trade.error) return callback(trade);
            callback(self.parseTradeInfo(trade));
        });
    },

    update_trade: function (id, price, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Trades.update_trade);
        var unpacked = utils.unpack(arguments[0], utils.labels(this.update_trade), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },

    fill_trade: function (id, fill, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Trades.fill_trade);
        var unpacked = utils.unpack(arguments[0], utils.labels(this.fill_trade), arguments);
        tx.params = unpacked.params;
        tx.params[1] = abi.fix(tx.params[1], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],143:[function(require,module,exports){
/**
 * ethrpc fire/transact wrappers
 * @author Jack Peterson (jack@tinybike.net)
 */

"use strict";

module.exports = {

    fire: function (tx, callback) {
        if (this.web && this.web.account && this.web.account.address) {
            tx.from = this.web.account.address;
        } else {
            tx.from = tx.from || this.from || this.coinbase;
        }
        return this.rpc.fire(tx, callback);
    },

    transact: function (tx, onSent, onSuccess, onFailed) {
        if (this.web && this.web.account && this.web.account.address) {
            tx.from = this.web.account.address;
            tx.invocation = {invoke: this.web.invoke, context: this.web};
        } else {
            tx.from = tx.from || this.from || this.coinbase;
        }
        this.rpc.transact(tx, onSent, onSuccess, onFailed);
    }
};

},{}],144:[function(require,module,exports){
/**
 * Testing-only: these methods are whitelisted on production contracts!
 */

"use strict";

var clone = require("clone");
var abi = require("augur-abi");
var utils = require("../utilities");

module.exports = {

    setInfo: function (id, description, creator, fee, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Info.setInfo);
        var unpacked = utils.unpack(id, utils.labels(this.setInfo), arguments);
        tx.params = unpacked.params;
        tx.params[3] = abi.fix(tx.params[3], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },

    modifyShares: function (marketID, outcome, amount, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.Markets.modifyShares);
        var unpacked = utils.unpack(marketID, utils.labels(this.modifyShares), arguments);
        tx.params = unpacked.params;
        tx.params[2] = abi.fix(tx.params[2], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    },

    setTotalRepReported: function (branchId, reportPeriod, repReported, onSent, onSuccess, onFailed) {
        var tx = clone(this.tx.ExpiringEvents.setTotalRepReported);
        var unpacked = utils.unpack(branchId, utils.labels(this.setTotalRepReported), arguments);
        tx.params = unpacked.params;
        tx.params[2] = abi.fix(tx.params[2], "hex");
        return this.transact.apply(this, [tx].concat(unpacked.cb));
    }
};

},{"../utilities":146,"augur-abi":3,"clone":14}],145:[function(require,module,exports){
/**
 * multiTrade: allows trading multiple outcomes in market.
 *
 * This method can result in multiple ethereum transactions per trade order (e.g. when user wants to buy 20 shares but
 * there are only 10 ask shares on order book, this method does trade() and buy()). Callbacks are called with
 * requestId to allow client map transactions to individual trade order
 *
 * Important fields in userTradeOrder are: sharesToSell, etherToBuy (total cost + fees) and limitPrice
 *
 * Algorithm:
 *
 * for each user trade order do this:
 * 1.1/ when user wants to buy: find all asks for that outcome which have less or equal price (user
 * doesn't want to pay more than specified). Sort asks by price ascendingly (lower prices first)
 * 1.2/ when user wants to sell: find all bids in order book for that outcome which have greater or equal price
 * (user doesn't want to sell at lower price than specified). Sort bids by price descendingly (higher prices first)
 *
 * 2/ if there are no orders to match, place order to order book. exit
 *
 * if there are suitable orders in order book let's trade:
 *
 * 3/ Trade user's buy order:
 *      3.1/ if user order was filled there is nothing to do. exit
 *      3.1/ if user order was partially filled we place bid for remaining shares to order book. exit
 *
 * 4/ Trade user's sell order:
 *      4.1/ if user has position, sell shares he owns:
 *          4.1.1/ if user order was filled there is nothing to do. exit
 *          4.1.2/ if order was partially filled place ask to order book. exit
 *      4.2/ if user doesn't have position do short sell
 *          4.2.1/ if there is bid for short_sell, try to fill it. if there are still shares after filling it try again
 *          4.2.2/ if there is no bid for short_sell user has to buy complete set and then sell the outcome he wants, which
 *          results in the equal position
 *
 *
 * @param {Number} requestId Value to be passed to callbacks so client can pair callbacks with client call to this method
 * @param {String} market The market ID on which trading occurs
 * @param {Object} marketOrderBook Bids and asks for market (mixed for all outcomes)
 * @param {Object} userTradeOrder Trade order to execute (usually from UI).
 * @param {Object} userPosition User's position
 * @param {Object} scalarMinMax: {minValue, maxValue} if scalar market; null/undefined otherwise
 * @param {Function} onTradeHash
 * @param {Function} onCommitSent
 * @param {Function} onCommitSuccess
 * @param {Function} onCommitFailed
 * @param {Function} onNextBlock
 * @param {Function} onTradeSent
 * @param {Function} onTradeSuccess
 * @param {Function} onTradeFailed
 * @param {Function} onBuySellSent
 * @param {Function} onBuySellSuccess
 * @param {Function} onBuySellFailed
 * @param {Function} onBuyCompleteSetsSent
 * @param {Function} onBuyCompleteSetsSuccess
 * @param {Function} onBuyCompleteSetsFailed
 */

"use strict";

var BigNumber = require("bignumber.js");
var constants = require("./constants");
var utils = require("./utilities");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = function (
    requestId, market, marketOrderBook,
    userTradeOrder, userPosition, scalarMinMax,
    onTradeHash, onCommitSent, onCommitSuccess, onCommitFailed, onNextBlock,
    onTradeSent, onTradeSuccess, onTradeFailed,
    onBuySellSent, onBuySellSuccess, onBuySellFailed,
    onShortSellSent, onShortSellSuccess, onShortSellFailed,
    onBuyCompleteSetsSent, onBuyCompleteSetsSuccess, onBuyCompleteSetsFailed
) {
    var self = this;
    if (requestId.constructor === Object && requestId.requestId) {
        market = requestId.market;
        marketOrderBook = requestId.marketOrderBook;
        userTradeOrder = requestId.userTradeOrder;
        userPosition = requestId.userPosition;
        scalarMinMax = requestId.scalarMinMax;
        onTradeHash = requestId.onTradeHash || utils.noop;
        onCommitSent = requestId.onCommitSent || utils.noop;
        onCommitSuccess = requestId.onCommitSuccess || utils.noop;
        onCommitFailed = requestId.onCommitFailed || utils.noop;
        onNextBlock = requestId.onNextBlock || utils.noop;
        onTradeSent = requestId.onTradeSent || utils.noop;
        onTradeSuccess = requestId.onTradeSuccess || utils.noop;
        onTradeFailed = requestId.onTradeFailed || utils.noop;
        onBuySellSent = requestId.onBuySellSent || utils.noop;
        onBuySellSuccess = requestId.onBuySellSuccess || utils.noop;
        onBuySellFailed = requestId.onBuySellFailed || utils.noop;
        onBuyCompleteSetsSent = requestId.onBuyCompleteSetsSent || utils.noop;
        onBuyCompleteSetsSuccess = requestId.onBuyCompleteSetsSuccess || utils.noop;
        onBuyCompleteSetsFailed = requestId.onBuyCompleteSetsFailed || utils.noop;
        requestId = requestId.requestId;
    }
    var isScalar = scalarMinMax &&
        scalarMinMax.minValue !== undefined &&
        scalarMinMax.maxValue !== undefined;
    var minValue, maxValue;
    if (isScalar) {
        minValue = new BigNumber(scalarMinMax.minValue, 10);
        maxValue = new BigNumber(scalarMinMax.maxValue, 10);
    }
    /**
     * Recursive. Uses either short_sell or buyCompleteSets + sell
     *
     * @param tradeOrderId
     * @param matchingSortedBidIds
     * @param userTradeOrder
     */
    function shortSellUntilZero(tradeOrderId, matchingSortedBidIds, userTradeOrder) {
        var sharesLeft = new BigNumber(userTradeOrder.sharesToSell, 10);
        if (matchingSortedBidIds.length > 0) {
            // 4.2.1/ there is order to fill
            var firstBuyerTradeId = matchingSortedBidIds[0];
            self.short_sell({
                buyer_trade_id: firstBuyerTradeId,
                max_amount: sharesLeft,
                onTradeHash: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onTradeHash:", data);
                    onTradeHash(tradeOrderId, data);
                },
                onCommitSent: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onCommitSent:", data);
                    onCommitSent(tradeOrderId, data);
                },
                onCommitSuccess: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onCommitSuccess:", data);
                    onCommitSuccess(tradeOrderId, data);
                },
                onCommitFailed: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onCommitFailed:", data);
                    onCommitFailed(tradeOrderId, data);
                },
                onNextBlock: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onNextBlock:", data);
                    onNextBlock(tradeOrderId, data);
                },
                onTradeSent: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onTradeSent:", data);
                    onTradeSent(tradeOrderId, data);
                },
                onTradeSuccess: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onTradeSuccess:", data);
                    onTradeSuccess(tradeOrderId, data);
                    var newSharesLeft = new BigNumber(data.callReturn[1], 10);
                    if (newSharesLeft.gt(constants.ZERO)) {
                        // not all user shares were shorted, recursively short
                        userTradeOrder.sharesToSell = newSharesLeft.toFixed();
                        shortSellUntilZero(tradeOrderId, matchingSortedBidIds.slice(1), userTradeOrder);
                    }
                },
                onTradeFailed: function (data) {
                    console.log("[multiTrade] shortSellUntilZero: onTradeFailed:", data);
                    onTradeFailed(tradeOrderId, data);
                }
            });
        } else {
            // 4.2.2/ no order to fill
            self.buyCompleteSets({
                market: market,
                amount: userTradeOrder.sharesToSell,
                onSent: function (data) {
                    onBuyCompleteSetsSent(requestId, data);
                },
                onSuccess: function (data) {
                    onBuyCompleteSetsSuccess(requestId, data);
                    self.sell({
                        amount: sharesLeft.toFixed(),
                        price: userTradeOrder.limitPrice,
                        market: market,
                        outcome: userTradeOrder.outcomeID,
                        onSent: function (data) {
                            onBuySellSent(requestId, data);
                        },
                        onSuccess: function (data) {
                            onBuySellSuccess(requestId, data);
                        },
                        onFailed: function (data) {
                            onBuySellFailed(requestId, data);
                        }
                    });
                },
                onFailed: function (data) {
                    onBuyCompleteSetsFailed(requestId, data);
                }
            });
        }
    }

    if (isScalar) {
        userTradeOrder.limitPrice = self.adjustScalarPrice(userTradeOrder.type, minValue, maxValue, userTradeOrder.limitPrice);
    }
    if (userTradeOrder.type === "buy") {
        // 1.1/ user wants to buy
        var matchingSortedAskIds = marketOrderBook.sell
            .filter(function (ask) {
                return ask.outcome === userTradeOrder.outcomeID &&
                    parseFloat(ask.price) <= userTradeOrder.limitPrice;
            }, this)
            .sort(function compareOrdersByPriceAsc(order1, order2) {
                return order1.price < order2.price ? -1 : 0;
            })
            .map(function (ask) {
                return ask.id;
            });

        if (matchingSortedAskIds.length === 0) {
            // 2/ there are no suitable asks on order book
            this.buy({
                amount: userTradeOrder.etherToBuy,
                price: userTradeOrder.limitPrice,
                market: market,
                outcome: userTradeOrder.outcomeID,
                onSent: function onBuySentInner(data) {
                    console.log("[multiTrade] trade: buy: onSent:", data);
                    onBuySellSent(requestId, data);
                },
                onSuccess: function onBuySuccessInner(data) {
                    console.log("[multiTrade] trade: buy: onSuccess:", data);
                    onBuySellSuccess(requestId, data);
                },
                onFailed: function onBuyFailureInner(data) {
                    console.log("[multiTrade] trade: buy: onFail:", data);
                    onBuySellFailed(requestId, data);
                }
            });
        } else {
            // 3/ there are orders on order book to match
            this.trade({
                max_value: userTradeOrder.etherToBuy,
                max_amount: 0,
                trade_ids: matchingSortedAskIds,
                onTradeHash: function (data) {
                    onTradeHash(requestId, data);
                },
                onCommitSent: function (data) {
                    onCommitSent(requestId, data);
                },
                onCommitSuccess: function (data) {
                    onCommitSuccess(requestId, data);
                },
                onCommitFailed: function (data) {
                    onCommitFailed(requestId, data);
                },
                onNextBlock: function (data) {
                    onNextBlock(requestId, data);
                },
                onTradeSent: function (data) {
                    onTradeSent(requestId, data);
                },
                onTradeSuccess: function localOnTradeSuccess(data) {
                    var etherNotFilled = Number(data.callReturn[1]);
                    if (etherNotFilled > 0) {
                        // 3.1/ order was partially filled so place bid on order book
                        self.buy({
                            amount: etherNotFilled,
                            price: userTradeOrder.limitPrice,
                            market: market,
                            outcome: userTradeOrder.outcomeID,
                            onSent: function localOnBuySent(data) {
                                console.log("[multiTrade] trade: buy: onSent:", data);
                                onBuySellSent(requestId, data);
                            },
                            onSuccess: function localOnBuySuccess(data) {
                                console.log("[multiTrade] trade: buy: onSuccess:", data);
                                onBuySellSuccess(requestId, data);
                            },
                            onFailed: function localOnBuyFailure(data) {
                                console.log("[multiTrade] trade: buy: onFail:", data);
                                onBuySellFailed(requestId, data);
                            }
                        });
                    }
                    onTradeSuccess(requestId, data);
                },
                onTradeFailed: function (data) {
                    onTradeFailed(requestId, data);
                }
            });
        }
    } else {
        // 1.2/ user wants to sell
        var matchingSortedBidIds = marketOrderBook.buy
            .filter(function (bid) {
                return bid.outcome === userTradeOrder.outcomeID &&
                    parseFloat(bid.price) >= userTradeOrder.limitPrice;
            })
            .sort(function compareOrdersByPriceDesc(order1, order2) {
                return order1.price < order2.price ? 1 : 0;
            })
            .map(function (bid) {
                return bid.id;
            });

        var hasUserPosition = userPosition && userPosition.qtyShares > 0;
        if (hasUserPosition) {
            if (matchingSortedBidIds.length === 0) {
                // 2/ no bids to match => place ask on order book
                this.sell({
                    amount: userTradeOrder.sharesToSell,
                    price: userTradeOrder.limitPrice,
                    market: market,
                    outcome: userTradeOrder.outcomeID,
                    onSent: function localOnSellSent(data) {
                        console.log("[multiTrade] trade: sell: onSent:", data);
                        onBuySellSent(requestId, data);
                    },
                    onSuccess: function localOnSellSuccess(data) {
                        console.log("[multiTrade] trade: sell: onSuccess:", data);
                        onBuySellSuccess(requestId, data);
                    },
                    onFailed: function localOnSellFailure(data) {
                        console.log("[multiTrade] trade: sell: onFail:", data);
                        onBuySellFailed(requestId, data);
                    }
                });
            } else {
                // 4.1/ there are bids to match
                this.trade({
                    max_value: 0,
                    max_amount: userTradeOrder.sharesToSell,
                    trade_ids: matchingSortedBidIds,
                    onTradeHash: function (data) {
                        onTradeHash(requestId, data);
                    },
                    onCommitSent: function (data) {
                        onCommitSent(requestId, data);
                    },
                    onCommitSuccess: function (data) {
                        onCommitSuccess(requestId, data);
                    },
                    onCommitFailed: function (data) {
                        onCommitFailed(requestId, data);
                    },
                    onNextBlock: function (data) {
                        onNextBlock(requestId, data);
                    },
                    onTradeSent: function (data) {
                        onTradeSent(requestId, data);
                    },
                    onTradeSuccess: function localOnTradeSuccess(data) {
                        var sharesNotSold = Number(data.callReturn[2]);
                        if (sharesNotSold > 0) {
                            // 4.1.2 order was partially filled
                            self.sell({
                                amount: sharesNotSold,
                                price: userTradeOrder.limitPrice,
                                market: market,
                                outcome: userTradeOrder.outcomeID,
                                onSent: function (data) {
                                    console.log("[multiTrade] trade: sell: onSent:", data);
                                    onBuySellSent(requestId, data);
                                },
                                onSuccess: function (data) {
                                    console.log("[multiTrade] trade: sell: onSuccess:", data);
                                    onBuySellSuccess(requestId, data);
                                },
                                onFailed: function (data) {
                                    console.log("[multiTrade] trade: sell: onFail:", data);
                                    onBuySellFailed(requestId, data);
                                }
                            });
                        }
                        onTradeSuccess(requestId, data);
                    },
                    onTradeFailed: function (data) {
                        onTradeFailed(requestId, data);
                    }
                });
            }
        } else {
            // 4.2/ no user position
            shortSellUntilZero(requestId, matchingSortedBidIds, userTradeOrder);
        }
    }
};

},{"./constants":123,"./utilities":146,"bignumber.js":147}],146:[function(require,module,exports){
(function (process,Buffer){
"use strict";

var NODE_JS = (typeof module !== "undefined") && process && !process.browser;

var crypto = require("crypto");
var BigNumber = require("bignumber.js");
var clone = require("clone");
var abi = require("augur-abi");
var constants = require("./constants");

BigNumber.config({MODULO_MODE: BigNumber.EUCLID});

module.exports = {

    noop: function () {},

    pass: function (o) { return o; },

    is_function: function (f) {
        return Object.prototype.toString.call(f) === "[object Function]";
    },

    STRIP_COMMENTS: /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,

    ARGUMENT_NAMES: /([^\s,]+)/g,

    labels: function (func) {
        var fnStr = func.toString().replace(this.STRIP_COMMENTS, '');
        var result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).match(this.ARGUMENT_NAMES);
        if (result === null) result = [];
        return result;
    },

    unpack: function (o, labels, args) {
        var params = [], cb = [];

        // unpack object argument
        if (o !== undefined && o !== null && o.constructor === Object &&
            labels && labels.constructor === Array && labels.length) {
            for (var i = 0, len = labels.length; i < len; ++i) {
                if (o[labels[i]] !== undefined) {
                    if (o[labels[i]].constructor === Function) {
                        cb.push(o[labels[i]]);
                    } else {
                        params.push(o[labels[i]]);
                    }
                }
            }

        // unpack positional arguments
        } else {
            for (var j = 0, arglen = args.length; j < arglen; ++j) {
                if (args[j] !== undefined) {
                    if (args[j] && args[j].constructor === Function) {
                        cb.push(args[j]);
                    } else {
                        params.push(args[j]);
                    }
                }
            }
        }

        return { params: params, cb: cb };
    },

    sha256: function (hashable) {
        var x = clone(hashable);
        if (x && x.constructor === Array) {
            var digest, cat = "";
            for (var i = 0, n = x.length; i < n; ++i) {
                if (x[i] !== null && x[i] !== undefined) {

                    // array element is a javascript number
                    // (base-10 numbers)
                    if (x[i].constructor === Number) {
                        x[i] = abi.bignum(x[i]);
                        if (x[i].lt(constants.ZERO)) {
                            x[i] = x[i].add(abi.constants.MOD);
                        }
                        cat += abi.encode_int(x[i]);

                    // array element is a string: text or hex
                    } else if (x[i].constructor === String) {

                        // negative hex
                        if (x[i].slice(0,1) === '-') {
                            x[i] = abi.bignum(x[i]).add(abi.constants.MOD).toFixed();
                            cat += abi.encode_int(x[i]);

                        // positive hex
                        } else if (x[i].slice(0,2) === "0x") {
                            cat += abi.pad_left(x[i].slice(2));

                        // text string
                        } else {
                            cat += new Buffer(x[i], "utf8").toString("hex");
                        }
                    }
                }
            }
            digest = new BigNumber(this.sha256(new Buffer(cat, "hex")), 16);
            if (digest.gt(new BigNumber(2).toPower(255))) {
                return abi.hex(digest.sub(abi.constants.MOD));
            }
            return abi.hex(digest);
        }
        return crypto.createHash("sha256").update(x).digest("hex");
    },

    sha3: function (hashable) {
        var x = clone(hashable);
        if (x && x.constructor === Array) {
            var digest, cat = "";
            for (var i = 0, n = x.length; i < n; ++i) {
                if (x[i] !== null && x[i] !== undefined) {

                    // array element is a javascript number
                    // (base-10 numbers)
                    if (x[i].constructor === Number) {
                        x[i] = abi.bignum(x[i]);
                        if (x[i].lt(constants.ZERO)) {
                            x[i] = x[i].add(abi.constants.MOD);
                        }
                        cat += abi.encode_int(x[i]);

                    // array element is a string: text or hex
                    } else if (x[i].constructor === String) {

                        // negative hex
                        if (x[i].slice(0,1) === '-') {
                            x[i] = abi.bignum(x[i]).add(abi.constants.MOD).toFixed();
                            cat += abi.encode_int(x[i]);

                        // positive hex
                        } else if (x[i].slice(0,2) === "0x") {
                            cat += abi.pad_left(x[i].slice(2));

                        // text string
                        } else {
                            cat += new Buffer(x[i], "utf8").toString("hex");
                        }
                    }
                }
            }
            return abi.prefix_hex(this.sha3(cat));
        }
        return abi.sha3(hashable);
    }

};

}).call(this,require('_process'),require("buffer").Buffer)

},{"./constants":123,"_process":351,"augur-abi":3,"bignumber.js":147,"buffer":151,"clone":14,"crypto":155}],147:[function(require,module,exports){
/*! bignumber.js v2.3.0 https://github.com/MikeMcl/bignumber.js/LICENCE */

;(function (globalObj) {
    'use strict';

    /*
      bignumber.js v2.3.0
      A JavaScript library for arbitrary-precision arithmetic.
      https://github.com/MikeMcl/bignumber.js
      Copyright (c) 2016 Michael Mclaughlin <M8ch88l@gmail.com>
      MIT Expat Licence
    */


    var cryptoObj, parseNumeric,
        isNumeric = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        notBool = ' not a boolean or binary digit',
        roundingMode = 'rounding mode',
        tooManyDigits = 'number type has more than 15 significant digits',
        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,

        /*
         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an
         * exception is thrown (if ERRORS is true).
         */
        MAX = 1E9;                                   // 0 to MAX_INT32

    if ( typeof crypto != 'undefined' ) cryptoObj = crypto;


    /*
     * Create and return a BigNumber constructor.
     */
    function constructorFactory(configObj) {
        var div,

            // id tracks the caller function, so its name can be included in error messages.
            id = 0,
            P = BigNumber.prototype,
            ONE = new BigNumber(1),


            /********************************* EDITABLE DEFAULTS **********************************/


            /*
             * The default values below must be integers within the inclusive ranges stated.
             * The values can also be changed at run-time using BigNumber.config.
             */

            // The maximum number of decimal places for operations involving division.
            DECIMAL_PLACES = 20,                     // 0 to MAX

            /*
             * The rounding mode used when rounding to the above decimal places, and when using
             * toExponential, toFixed, toFormat and toPrecision, and round (default value).
             * UP         0 Away from zero.
             * DOWN       1 Towards zero.
             * CEIL       2 Towards +Infinity.
             * FLOOR      3 Towards -Infinity.
             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.
             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
             */
            ROUNDING_MODE = 4,                       // 0 to 8

            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

            // The exponent value at and beneath which toString returns exponential notation.
            // Number type: -7
            TO_EXP_NEG = -7,                         // 0 to -MAX

            // The exponent value at and above which toString returns exponential notation.
            // Number type: 21
            TO_EXP_POS = 21,                         // 0 to MAX

            // RANGE : [MIN_EXP, MAX_EXP]

            // The minimum exponent value, beneath which underflow to zero occurs.
            // Number type: -324  (5e-324)
            MIN_EXP = -1e7,                          // -1 to -MAX

            // The maximum exponent value, above which overflow to Infinity occurs.
            // Number type:  308  (1.7976931348623157e+308)
            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
            MAX_EXP = 1e7,                           // 1 to MAX

            // Whether BigNumber Errors are ever thrown.
            ERRORS = true,                           // true or false

            // Change to intValidatorNoErrors if ERRORS is false.
            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors

            // Whether to use cryptographically-secure random number generation, if available.
            CRYPTO = false,                          // true or false

            /*
             * The modulo mode used when calculating the modulus: a mod n.
             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.
             * The remainder (r) is calculated as: r = a - n * q.
             *
             * UP        0 The remainder is positive if the dividend is negative, else is negative.
             * DOWN      1 The remainder has the same sign as the dividend.
             *             This modulo mode is commonly known as 'truncated division' and is
             *             equivalent to (a % n) in JavaScript.
             * FLOOR     3 The remainder has the same sign as the divisor (Python %).
             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
             *             The remainder is always positive.
             *
             * The truncated division, floored division, Euclidian division and IEEE 754 remainder
             * modes are commonly used for the modulus operation.
             * Although the other rounding modes can also be used, they may not give useful results.
             */
            MODULO_MODE = 1,                         // 0 to 9

            // The maximum number of significant digits of the result of the toPower operation.
            // If POW_PRECISION is 0, there will be unlimited significant digits.
            POW_PRECISION = 100,                     // 0 to MAX

            // The format specification used by the BigNumber.prototype.toFormat method.
            FORMAT = {
                decimalSeparator: '.',
                groupSeparator: ',',
                groupSize: 3,
                secondaryGroupSize: 0,
                fractionGroupSeparator: '\xA0',      // non-breaking space
                fractionGroupSize: 0
            };


        /******************************************************************************************/


        // CONSTRUCTOR


        /*
         * The BigNumber constructor and exported function.
         * Create and return a new instance of a BigNumber object.
         *
         * n {number|string|BigNumber} A numeric value.
         * [b] {number} The base of n. Integer, 2 to 64 inclusive.
         */
        function BigNumber( n, b ) {
            var c, e, i, num, len, str,
                x = this;

            // Enable constructor usage without new.
            if ( !( x instanceof BigNumber ) ) {

                // 'BigNumber() constructor call without new: {n}'
                if (ERRORS) raise( 26, 'constructor call without new', n );
                return new BigNumber( n, b );
            }

            // 'new BigNumber() base not an integer: {b}'
            // 'new BigNumber() base out of range: {b}'
            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {

                // Duplicate.
                if ( n instanceof BigNumber ) {
                    x.s = n.s;
                    x.e = n.e;
                    x.c = ( n = n.c ) ? n.slice() : n;
                    id = 0;
                    return;
                }

                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {
                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;

                    // Fast path for integers.
                    if ( n === ~~n ) {
                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );
                        x.e = e;
                        x.c = [n];
                        id = 0;
                        return;
                    }

                    str = n + '';
                } else {
                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );
                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;
                }
            } else {
                b = b | 0;
                str = n + '';

                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.
                // Allow exponential notation to be used with base 10 argument.
                if ( b == 10 ) {
                    x = new BigNumber( n instanceof BigNumber ? n : str );
                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );
                }

                // Avoid potential interpretation of Infinity and NaN as base 44+ values.
                // Any number in exponential form will fail due to the [Ee][+-].
                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||
                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +
                    '(?:\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {
                    return parseNumeric( x, str, num, b );
                }

                if (num) {
                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;

                    if ( ERRORS && str.replace( /^0\.0*|\./, '' ).length > 15 ) {

                        // 'new BigNumber() number type has more than 15 significant digits: {n}'
                        raise( id, tooManyDigits, n );
                    }

                    // Prevent later check for length on converted number.
                    num = false;
                } else {
                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;
                }

                str = convertBase( str, 10, b, x.s );
            }

            // Decimal point?
            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );

            // Exponential form?
            if ( ( i = str.search( /e/i ) ) > 0 ) {

                // Determine exponent.
                if ( e < 0 ) e = i;
                e += +str.slice( i + 1 );
                str = str.substring( 0, i );
            } else if ( e < 0 ) {

                // Integer.
                e = str.length;
            }

            // Determine leading zeros.
            for ( i = 0; str.charCodeAt(i) === 48; i++ );

            // Determine trailing zeros.
            for ( len = str.length; str.charCodeAt(--len) === 48; );
            str = str.slice( i, len + 1 );

            if (str) {
                len = str.length;

                // Disallow numbers with over 15 significant digits if number type.
                // 'new BigNumber() number type has more than 15 significant digits: {n}'
                if ( num && ERRORS && len > 15 && ( n > MAX_SAFE_INTEGER || n !== mathfloor(n) ) ) {
                    raise( id, tooManyDigits, x.s * n );
                }

                e = e - i - 1;

                 // Overflow?
                if ( e > MAX_EXP ) {

                    // Infinity.
                    x.c = x.e = null;

                // Underflow?
                } else if ( e < MIN_EXP ) {

                    // Zero.
                    x.c = [ x.e = 0 ];
                } else {
                    x.e = e;
                    x.c = [];

                    // Transform base

                    // e is the base 10 exponent.
                    // i is where to slice str to get the first element of the coefficient array.
                    i = ( e + 1 ) % LOG_BASE;
                    if ( e < 0 ) i += LOG_BASE;

                    if ( i < len ) {
                        if (i) x.c.push( +str.slice( 0, i ) );

                        for ( len -= LOG_BASE; i < len; ) {
                            x.c.push( +str.slice( i, i += LOG_BASE ) );
                        }

                        str = str.slice(i);
                        i = LOG_BASE - str.length;
                    } else {
                        i -= len;
                    }

                    for ( ; i--; str += '0' );
                    x.c.push( +str );
                }
            } else {

                // Zero.
                x.c = [ x.e = 0 ];
            }

            id = 0;
        }


        // CONSTRUCTOR PROPERTIES


        BigNumber.another = constructorFactory;

        BigNumber.ROUND_UP = 0;
        BigNumber.ROUND_DOWN = 1;
        BigNumber.ROUND_CEIL = 2;
        BigNumber.ROUND_FLOOR = 3;
        BigNumber.ROUND_HALF_UP = 4;
        BigNumber.ROUND_HALF_DOWN = 5;
        BigNumber.ROUND_HALF_EVEN = 6;
        BigNumber.ROUND_HALF_CEIL = 7;
        BigNumber.ROUND_HALF_FLOOR = 8;
        BigNumber.EUCLID = 9;


        /*
         * Configure infrequently-changing library-wide settings.
         *
         * Accept an object or an argument list, with one or many of the following properties or
         * parameters respectively:
         *
         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive
         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive
         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or
         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]
         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or
         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]
         *   ERRORS          {boolean|number}   true, false, 1 or 0
         *   CRYPTO          {boolean|number}   true, false, 1 or 0
         *   MODULO_MODE     {number}           0 to 9 inclusive
         *   POW_PRECISION   {number}           0 to MAX inclusive
         *   FORMAT          {object}           See BigNumber.prototype.toFormat
         *      decimalSeparator       {string}
         *      groupSeparator         {string}
         *      groupSize              {number}
         *      secondaryGroupSize     {number}
         *      fractionGroupSeparator {string}
         *      fractionGroupSize      {number}
         *
         * (The values assigned to the above FORMAT object properties are not checked for validity.)
         *
         * E.g.
         * BigNumber.config(20, 4) is equivalent to
         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
         *
         * Ignore properties/parameters set to null or undefined.
         * Return an object with the properties current values.
         */
        BigNumber.config = function () {
            var v, p,
                i = 0,
                r = {},
                a = arguments,
                o = a[0],
                has = o && typeof o == 'object'
                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }
                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };

            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
            // 'config() DECIMAL_PLACES not an integer: {v}'
            // 'config() DECIMAL_PLACES out of range: {v}'
            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {
                DECIMAL_PLACES = v | 0;
            }
            r[p] = DECIMAL_PLACES;

            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
            // 'config() ROUNDING_MODE not an integer: {v}'
            // 'config() ROUNDING_MODE out of range: {v}'
            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {
                ROUNDING_MODE = v | 0;
            }
            r[p] = ROUNDING_MODE;

            // EXPONENTIAL_AT {number|number[]}
            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].
            // 'config() EXPONENTIAL_AT not an integer: {v}'
            // 'config() EXPONENTIAL_AT out of range: {v}'
            if ( has( p = 'EXPONENTIAL_AT' ) ) {

                if ( isArray(v) ) {
                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {
                        TO_EXP_NEG = v[0] | 0;
                        TO_EXP_POS = v[1] | 0;
                    }
                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {
                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );
                }
            }
            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];

            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
            // 'config() RANGE not an integer: {v}'
            // 'config() RANGE cannot be zero: {v}'
            // 'config() RANGE out of range: {v}'
            if ( has( p = 'RANGE' ) ) {

                if ( isArray(v) ) {
                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {
                        MIN_EXP = v[0] | 0;
                        MAX_EXP = v[1] | 0;
                    }
                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {
                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );
                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );
                }
            }
            r[p] = [ MIN_EXP, MAX_EXP ];

            // ERRORS {boolean|number} true, false, 1 or 0.
            // 'config() ERRORS not a boolean or binary digit: {v}'
            if ( has( p = 'ERRORS' ) ) {

                if ( v === !!v || v === 1 || v === 0 ) {
                    id = 0;
                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;
                } else if (ERRORS) {
                    raise( 2, p + notBool, v );
                }
            }
            r[p] = ERRORS;

            // CRYPTO {boolean|number} true, false, 1 or 0.
            // 'config() CRYPTO not a boolean or binary digit: {v}'
            // 'config() crypto unavailable: {crypto}'
            if ( has( p = 'CRYPTO' ) ) {

                if ( v === !!v || v === 1 || v === 0 ) {
                    CRYPTO = !!( v && cryptoObj );
                    if ( v && !CRYPTO && ERRORS ) raise( 2, 'crypto unavailable', cryptoObj );
                } else if (ERRORS) {
                    raise( 2, p + notBool, v );
                }
            }
            r[p] = CRYPTO;

            // MODULO_MODE {number} Integer, 0 to 9 inclusive.
            // 'config() MODULO_MODE not an integer: {v}'
            // 'config() MODULO_MODE out of range: {v}'
            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {
                MODULO_MODE = v | 0;
            }
            r[p] = MODULO_MODE;

            // POW_PRECISION {number} Integer, 0 to MAX inclusive.
            // 'config() POW_PRECISION not an integer: {v}'
            // 'config() POW_PRECISION out of range: {v}'
            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {
                POW_PRECISION = v | 0;
            }
            r[p] = POW_PRECISION;

            // FORMAT {object}
            // 'config() FORMAT not an object: {v}'
            if ( has( p = 'FORMAT' ) ) {

                if ( typeof v == 'object' ) {
                    FORMAT = v;
                } else if (ERRORS) {
                    raise( 2, p + ' not an object', v );
                }
            }
            r[p] = FORMAT;

            return r;
        };


        /*
         * Return a new BigNumber whose value is the maximum of the arguments.
         *
         * arguments {number|string|BigNumber}
         */
        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };


        /*
         * Return a new BigNumber whose value is the minimum of the arguments.
         *
         * arguments {number|string|BigNumber}
         */
        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };


        /*
         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
         * zeros are produced).
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         *
         * 'random() decimal places not an integer: {dp}'
         * 'random() decimal places out of range: {dp}'
         * 'random() crypto unavailable: {crypto}'
         */
        BigNumber.random = (function () {
            var pow2_53 = 0x20000000000000;

            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
            // Check if Math.random() produces more than 32 bits of randomness.
            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
              ? function () { return mathfloor( Math.random() * pow2_53 ); }
              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
                  (Math.random() * 0x800000 | 0); };

            return function (dp) {
                var a, b, e, k, v,
                    i = 0,
                    c = [],
                    rand = new BigNumber(ONE);

                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;
                k = mathceil( dp / LOG_BASE );

                if (CRYPTO) {

                    // Browsers supporting crypto.getRandomValues.
                    if ( cryptoObj && cryptoObj.getRandomValues ) {

                        a = cryptoObj.getRandomValues( new Uint32Array( k *= 2 ) );

                        for ( ; i < k; ) {

                            // 53 bits:
                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000
                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
                            //                                     11111 11111111 11111111
                            // 0x20000 is 2^21.
                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                            // Rejection sampling:
                            // 0 <= v < 9007199254740992
                            // Probability that v >= 9e15, is
                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
                            if ( v >= 9e15 ) {
                                b = cryptoObj.getRandomValues( new Uint32Array(2) );
                                a[i] = b[0];
                                a[i + 1] = b[1];
                            } else {

                                // 0 <= v <= 8999999999999999
                                // 0 <= (v % 1e14) <= 99999999999999
                                c.push( v % 1e14 );
                                i += 2;
                            }
                        }
                        i = k / 2;

                    // Node.js supporting crypto.randomBytes.
                    } else if ( cryptoObj && cryptoObj.randomBytes ) {

                        // buffer
                        a = cryptoObj.randomBytes( k *= 7 );

                        for ( ; i < k; ) {

                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
                            // 0x100000000 is 2^32, 0x1000000 is 2^24
                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111
                            // 0 <= v < 9007199254740992
                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +
                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +
                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];

                            if ( v >= 9e15 ) {
                                cryptoObj.randomBytes(7).copy( a, i );
                            } else {

                                // 0 <= (v % 1e14) <= 99999999999999
                                c.push( v % 1e14 );
                                i += 7;
                            }
                        }
                        i = k / 7;
                    } else if (ERRORS) {
                        raise( 14, 'crypto unavailable', cryptoObj );
                    }
                }

                // Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.
                if (!i) {

                    for ( ; i < k; ) {
                        v = random53bitInt();
                        if ( v < 9e15 ) c[i++] = v % 1e14;
                    }
                }

                k = c[--i];
                dp %= LOG_BASE;

                // Convert trailing digits to zeros according to dp.
                if ( k && dp ) {
                    v = POWS_TEN[LOG_BASE - dp];
                    c[i] = mathfloor( k / v ) * v;
                }

                // Remove trailing elements which are zero.
                for ( ; c[i] === 0; c.pop(), i-- );

                // Zero?
                if ( i < 0 ) {
                    c = [ e = 0 ];
                } else {

                    // Remove leading elements which are zero and adjust exponent accordingly.
                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);

                    // Count the digits of the first element of c to determine leading zeros, and...
                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);

                    // adjust the exponent accordingly.
                    if ( i < LOG_BASE ) e -= LOG_BASE - i;
                }

                rand.e = e;
                rand.c = c;
                return rand;
            };
        })();


        // PRIVATE FUNCTIONS


        // Convert a numeric string of baseIn to a numeric string of baseOut.
        function convertBase( str, baseOut, baseIn, sign ) {
            var d, e, k, r, x, xc, y,
                i = str.indexOf( '.' ),
                dp = DECIMAL_PLACES,
                rm = ROUNDING_MODE;

            if ( baseIn < 37 ) str = str.toLowerCase();

            // Non-integer.
            if ( i >= 0 ) {
                k = POW_PRECISION;

                // Unlimited precision.
                POW_PRECISION = 0;
                str = str.replace( '.', '' );
                y = new BigNumber(baseIn);
                x = y.pow( str.length - i );
                POW_PRECISION = k;

                // Convert str as if an integer, then restore the fraction part by dividing the
                // result by its base raised to a power.
                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );
                y.e = y.c.length;
            }

            // Convert the number as integer.
            xc = toBaseOut( str, baseIn, baseOut );
            e = k = xc.length;

            // Remove trailing zeros.
            for ( ; xc[--k] == 0; xc.pop() );
            if ( !xc[0] ) return '0';

            if ( i < 0 ) {
                --e;
            } else {
                x.c = xc;
                x.e = e;

                // sign is needed for correct rounding.
                x.s = sign;
                x = div( x, y, dp, rm, baseOut );
                xc = x.c;
                r = x.r;
                e = x.e;
            }

            d = e + dp + 1;

            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.
            i = xc[d];
            k = baseOut / 2;
            r = r || d < 0 || xc[d + 1] != null;

            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )
                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
                         rm == ( x.s < 0 ? 8 : 7 ) );

            if ( d < 1 || !xc[0] ) {

                // 1^-dp or 0.
                str = r ? toFixedPoint( '1', -dp ) : '0';
            } else {
                xc.length = d;

                if (r) {

                    // Rounding up may mean the previous digit has to be rounded up and so on.
                    for ( --baseOut; ++xc[--d] > baseOut; ) {
                        xc[d] = 0;

                        if ( !d ) {
                            ++e;
                            xc.unshift(1);
                        }
                    }
                }

                // Determine trailing zeros.
                for ( k = xc.length; !xc[--k]; );

                // E.g. [4, 11, 15] becomes 4bf.
                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );
                str = toFixedPoint( str, e );
            }

            // The caller will add the sign.
            return str;
        }


        // Perform division in the specified base. Called by div and convertBase.
        div = (function () {

            // Assume non-zero x and k.
            function multiply( x, k, base ) {
                var m, temp, xlo, xhi,
                    carry = 0,
                    i = x.length,
                    klo = k % SQRT_BASE,
                    khi = k / SQRT_BASE | 0;

                for ( x = x.slice(); i--; ) {
                    xlo = x[i] % SQRT_BASE;
                    xhi = x[i] / SQRT_BASE | 0;
                    m = khi * xlo + xhi * klo;
                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;
                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;
                    x[i] = temp % base;
                }

                if (carry) x.unshift(carry);

                return x;
            }

            function compare( a, b, aL, bL ) {
                var i, cmp;

                if ( aL != bL ) {
                    cmp = aL > bL ? 1 : -1;
                } else {

                    for ( i = cmp = 0; i < aL; i++ ) {

                        if ( a[i] != b[i] ) {
                            cmp = a[i] > b[i] ? 1 : -1;
                            break;
                        }
                    }
                }
                return cmp;
            }

            function subtract( a, b, aL, base ) {
                var i = 0;

                // Subtract b from a.
                for ( ; aL--; ) {
                    a[aL] -= i;
                    i = a[aL] < b[aL] ? 1 : 0;
                    a[aL] = i * base + a[aL] - b[aL];
                }

                // Remove leading zeros.
                for ( ; !a[0] && a.length > 1; a.shift() );
            }

            // x: dividend, y: divisor.
            return function ( x, y, dp, rm, base ) {
                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
                    yL, yz,
                    s = x.s == y.s ? 1 : -1,
                    xc = x.c,
                    yc = y.c;

                // Either NaN, Infinity or 0?
                if ( !xc || !xc[0] || !yc || !yc[0] ) {

                    return new BigNumber(

                      // Return NaN if either NaN, or both Infinity or 0.
                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :

                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0
                    );
                }

                q = new BigNumber(s);
                qc = q.c = [];
                e = x.e - y.e;
                s = dp + e + 1;

                if ( !base ) {
                    base = BASE;
                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );
                    s = s / LOG_BASE | 0;
                }

                // Result exponent may be one less then the current value of e.
                // The coefficients of the BigNumbers from convertBase may have trailing zeros.
                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );
                if ( yc[i] > ( xc[i] || 0 ) ) e--;

                if ( s < 0 ) {
                    qc.push(1);
                    more = true;
                } else {
                    xL = xc.length;
                    yL = yc.length;
                    i = 0;
                    s += 2;

                    // Normalise xc and yc so highest order digit of yc is >= base / 2.

                    n = mathfloor( base / ( yc[0] + 1 ) );

                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.
                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {
                    if ( n > 1 ) {
                        yc = multiply( yc, n, base );
                        xc = multiply( xc, n, base );
                        yL = yc.length;
                        xL = xc.length;
                    }

                    xi = yL;
                    rem = xc.slice( 0, yL );
                    remL = rem.length;

                    // Add zeros to make remainder as long as divisor.
                    for ( ; remL < yL; rem[remL++] = 0 );
                    yz = yc.slice();
                    yz.unshift(0);
                    yc0 = yc[0];
                    if ( yc[1] >= base / 2 ) yc0++;
                    // Not necessary, but to prevent trial digit n > base, when using base 3.
                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;

                    do {
                        n = 0;

                        // Compare divisor and remainder.
                        cmp = compare( yc, rem, yL, remL );

                        // If divisor < remainder.
                        if ( cmp < 0 ) {

                            // Calculate trial digit, n.

                            rem0 = rem[0];
                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );

                            // n is how many times the divisor goes into the current remainder.
                            n = mathfloor( rem0 / yc0 );

                            //  Algorithm:
                            //  1. product = divisor * trial digit (n)
                            //  2. if product > remainder: product -= divisor, n--
                            //  3. remainder -= product
                            //  4. if product was < remainder at 2:
                            //    5. compare new remainder and divisor
                            //    6. If remainder > divisor: remainder -= divisor, n++

                            if ( n > 1 ) {

                                // n may be > base only when base is 3.
                                if (n >= base) n = base - 1;

                                // product = divisor * trial digit.
                                prod = multiply( yc, n, base );
                                prodL = prod.length;
                                remL = rem.length;

                                // Compare product and remainder.
                                // If product > remainder.
                                // Trial digit n too high.
                                // n is 1 too high about 5% of the time, and is not known to have
                                // ever been more than 1 too high.
                                while ( compare( prod, rem, prodL, remL ) == 1 ) {
                                    n--;

                                    // Subtract divisor from product.
                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );
                                    prodL = prod.length;
                                    cmp = 1;
                                }
                            } else {

                                // n is 0 or 1, cmp is -1.
                                // If n is 0, there is no need to compare yc and rem again below,
                                // so change cmp to 1 to avoid it.
                                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                                if ( n == 0 ) {

                                    // divisor < remainder, so n must be at least 1.
                                    cmp = n = 1;
                                }

                                // product = divisor
                                prod = yc.slice();
                                prodL = prod.length;
                            }

                            if ( prodL < remL ) prod.unshift(0);

                            // Subtract product from remainder.
                            subtract( rem, prod, remL, base );
                            remL = rem.length;

                             // If product was < remainder.
                            if ( cmp == -1 ) {

                                // Compare divisor and new remainder.
                                // If divisor < new remainder, subtract divisor from remainder.
                                // Trial digit n too low.
                                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                                while ( compare( yc, rem, yL, remL ) < 1 ) {
                                    n++;

                                    // Subtract divisor from remainder.
                                    subtract( rem, yL < remL ? yz : yc, remL, base );
                                    remL = rem.length;
                                }
                            }
                        } else if ( cmp === 0 ) {
                            n++;
                            rem = [0];
                        } // else cmp === 1 and n will be 0

                        // Add the next digit, n, to the result array.
                        qc[i++] = n;

                        // Update the remainder.
                        if ( rem[0] ) {
                            rem[remL++] = xc[xi] || 0;
                        } else {
                            rem = [ xc[xi] ];
                            remL = 1;
                        }
                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );

                    more = rem[0] != null;

                    // Leading zero?
                    if ( !qc[0] ) qc.shift();
                }

                if ( base == BASE ) {

                    // To calculate q.e, first get the number of digits of qc[0].
                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );
                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );

                // Caller is convertBase.
                } else {
                    q.e = e;
                    q.r = +more;
                }

                return q;
            };
        })();


        /*
         * Return a string representing the value of BigNumber n in fixed-point or exponential
         * notation rounded to the specified decimal places or significant digits.
         *
         * n is a BigNumber.
         * i is the index of the last digit required (i.e. the digit that may be rounded up).
         * rm is the rounding mode.
         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.
         */
        function format( n, i, rm, caller ) {
            var c0, e, ne, len, str;

            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )
              ? rm | 0 : ROUNDING_MODE;

            if ( !n.c ) return n.toString();
            c0 = n.c[0];
            ne = n.e;

            if ( i == null ) {
                str = coeffToString( n.c );
                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG
                  ? toExponential( str, ne )
                  : toFixedPoint( str, ne );
            } else {
                n = round( new BigNumber(n), i, rm );

                // n.e may have changed if the value was rounded up.
                e = n.e;

                str = coeffToString( n.c );
                len = str.length;

                // toPrecision returns exponential notation if the number of significant digits
                // specified is less than the number of digits necessary to represent the integer
                // part of the value in fixed-point notation.

                // Exponential notation.
                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {

                    // Append zeros?
                    for ( ; len < i; str += '0', len++ );
                    str = toExponential( str, e );

                // Fixed-point notation.
                } else {
                    i -= ne;
                    str = toFixedPoint( str, e );

                    // Append zeros?
                    if ( e + 1 > len ) {
                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );
                    } else {
                        i += e - len;
                        if ( i > 0 ) {
                            if ( e + 1 == len ) str += '.';
                            for ( ; i--; str += '0' );
                        }
                    }
                }
            }

            return n.s < 0 && c0 ? '-' + str : str;
        }


        // Handle BigNumber.max and BigNumber.min.
        function maxOrMin( args, method ) {
            var m, n,
                i = 0;

            if ( isArray( args[0] ) ) args = args[0];
            m = new BigNumber( args[0] );

            for ( ; ++i < args.length; ) {
                n = new BigNumber( args[i] );

                // If any number is NaN, return NaN.
                if ( !n.s ) {
                    m = n;
                    break;
                } else if ( method.call( m, n ) ) {
                    m = n;
                }
            }

            return m;
        }


        /*
         * Return true if n is an integer in range, otherwise throw.
         * Use for argument validation when ERRORS is true.
         */
        function intValidatorWithErrors( n, min, max, caller, name ) {
            if ( n < min || n > max || n != truncate(n) ) {
                raise( caller, ( name || 'decimal places' ) +
                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );
            }

            return true;
        }


        /*
         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
         * Called by minus, plus and times.
         */
        function normalise( n, c, e ) {
            var i = 1,
                j = c.length;

             // Remove trailing zeros.
            for ( ; !c[--j]; c.pop() );

            // Calculate the base 10 exponent. First get the number of digits of c[0].
            for ( j = c[0]; j >= 10; j /= 10, i++ );

            // Overflow?
            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {

                // Infinity.
                n.c = n.e = null;

            // Underflow?
            } else if ( e < MIN_EXP ) {

                // Zero.
                n.c = [ n.e = 0 ];
            } else {
                n.e = e;
                n.c = c;
            }

            return n;
        }


        // Handle values that fail the validity test in BigNumber.
        parseNumeric = (function () {
            var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                dotAfter = /^([^.]+)\.$/,
                dotBefore = /^\.([^.]+)$/,
                isInfinityOrNaN = /^-?(Infinity|NaN)$/,
                whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

            return function ( x, str, num, b ) {
                var base,
                    s = num ? str : str.replace( whitespaceOrPlus, '' );

                // No exception on ±Infinity or NaN.
                if ( isInfinityOrNaN.test(s) ) {
                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                } else {
                    if ( !num ) {

                        // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
                        s = s.replace( basePrefix, function ( m, p1, p2 ) {
                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                            return !b || b == base ? p1 : m;
                        });

                        if (b) {
                            base = b;

                            // E.g. '1.' to '1', '.1' to '0.1'
                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );
                        }

                        if ( str != s ) return new BigNumber( s, base );
                    }

                    // 'new BigNumber() not a number: {n}'
                    // 'new BigNumber() not a base {b} number: {n}'
                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );
                    x.s = null;
                }

                x.c = x.e = null;
                id = 0;
            }
        })();


        // Throw a BigNumber Error.
        function raise( caller, msg, val ) {
            var error = new Error( [
                'new BigNumber',     // 0
                'cmp',               // 1
                'config',            // 2
                'div',               // 3
                'divToInt',          // 4
                'eq',                // 5
                'gt',                // 6
                'gte',               // 7
                'lt',                // 8
                'lte',               // 9
                'minus',             // 10
                'mod',               // 11
                'plus',              // 12
                'precision',         // 13
                'random',            // 14
                'round',             // 15
                'shift',             // 16
                'times',             // 17
                'toDigits',          // 18
                'toExponential',     // 19
                'toFixed',           // 20
                'toFormat',          // 21
                'toFraction',        // 22
                'pow',               // 23
                'toPrecision',       // 24
                'toString',          // 25
                'BigNumber'          // 26
            ][caller] + '() ' + msg + ': ' + val );

            error.name = 'BigNumber Error';
            id = 0;
            throw error;
        }


        /*
         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
         * If r is truthy, it is known that there are more digits after the rounding digit.
         */
        function round( x, sd, rm, r ) {
            var d, i, j, k, n, ni, rd,
                xc = x.c,
                pows10 = POWS_TEN;

            // if x is not Infinity or NaN...
            if (xc) {

                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
                // n is a base 1e14 number, the value of the element of array x.c containing rd.
                // ni is the index of n within x.c.
                // d is the number of digits of n.
                // i is the index of rd within n including leading zeros.
                // j is the actual index of rd within n (if < 0, rd is a leading zero).
                out: {

                    // Get the number of digits of the first element of xc.
                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );
                    i = sd - d;

                    // If the rounding digit is in the first element of xc...
                    if ( i < 0 ) {
                        i += LOG_BASE;
                        j = sd;
                        n = xc[ ni = 0 ];

                        // Get the rounding digit at index j of n.
                        rd = n / pows10[ d - j - 1 ] % 10 | 0;
                    } else {
                        ni = mathceil( ( i + 1 ) / LOG_BASE );

                        if ( ni >= xc.length ) {

                            if (r) {

                                // Needed by sqrt.
                                for ( ; xc.length <= ni; xc.push(0) );
                                n = rd = 0;
                                d = 1;
                                i %= LOG_BASE;
                                j = i - LOG_BASE + 1;
                            } else {
                                break out;
                            }
                        } else {
                            n = k = xc[ni];

                            // Get the number of digits of n.
                            for ( d = 1; k >= 10; k /= 10, d++ );

                            // Get the index of rd within n.
                            i %= LOG_BASE;

                            // Get the index of rd within n, adjusted for leading zeros.
                            // The number of leading zeros of n is given by LOG_BASE - d.
                            j = i - LOG_BASE + d;

                            // Get the rounding digit at index j of n.
                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;
                        }
                    }

                    r = r || sd < 0 ||

                    // Are there any non-zero digits after the rounding digit?
                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right
                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );

                    r = rm < 4
                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )
                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&

                        // Check whether the digit to the left of the rounding digit is odd.
                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||
                          rm == ( x.s < 0 ? 8 : 7 ) );

                    if ( sd < 1 || !xc[0] ) {
                        xc.length = 0;

                        if (r) {

                            // Convert sd to decimal places.
                            sd -= x.e + 1;

                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.
                            xc[0] = pows10[ ( LOG_BASE - sd % LOG_BASE ) % LOG_BASE ];
                            x.e = -sd || 0;
                        } else {

                            // Zero.
                            xc[0] = x.e = 0;
                        }

                        return x;
                    }

                    // Remove excess digits.
                    if ( i == 0 ) {
                        xc.length = ni;
                        k = 1;
                        ni--;
                    } else {
                        xc.length = ni + 1;
                        k = pows10[ LOG_BASE - i ];

                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.
                        // j > 0 means i > number of leading zeros of n.
                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;
                    }

                    // Round up?
                    if (r) {

                        for ( ; ; ) {

                            // If the digit to be rounded up is in the first element of xc...
                            if ( ni == 0 ) {

                                // i will be the length of xc[0] before k is added.
                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );
                                j = xc[0] += k;
                                for ( k = 1; j >= 10; j /= 10, k++ );

                                // if i != k the length has increased.
                                if ( i != k ) {
                                    x.e++;
                                    if ( xc[0] == BASE ) xc[0] = 1;
                                }

                                break;
                            } else {
                                xc[ni] += k;
                                if ( xc[ni] != BASE ) break;
                                xc[ni--] = 0;
                                k = 1;
                            }
                        }
                    }

                    // Remove trailing zeros.
                    for ( i = xc.length; xc[--i] === 0; xc.pop() );
                }

                // Overflow? Infinity.
                if ( x.e > MAX_EXP ) {
                    x.c = x.e = null;

                // Underflow? Zero.
                } else if ( x.e < MIN_EXP ) {
                    x.c = [ x.e = 0 ];
                }
            }

            return x;
        }


        // PROTOTYPE/INSTANCE METHODS


        /*
         * Return a new BigNumber whose value is the absolute value of this BigNumber.
         */
        P.absoluteValue = P.abs = function () {
            var x = new BigNumber(this);
            if ( x.s < 0 ) x.s = 1;
            return x;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole
         * number in the direction of Infinity.
         */
        P.ceil = function () {
            return round( new BigNumber(this), this.e + 1, 2 );
        };


        /*
         * Return
         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
         * 0 if they have the same value,
         * or null if the value of either is NaN.
         */
        P.comparedTo = P.cmp = function ( y, b ) {
            id = 1;
            return compare( this, new BigNumber( y, b ) );
        };


        /*
         * Return the number of decimal places of the value of this BigNumber, or null if the value
         * of this BigNumber is ±Infinity or NaN.
         */
        P.decimalPlaces = P.dp = function () {
            var n, v,
                c = this.c;

            if ( !c ) return null;
            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;

            // Subtract the number of trailing zeros of the last number.
            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );
            if ( n < 0 ) n = 0;

            return n;
        };


        /*
         *  n / 0 = I
         *  n / N = N
         *  n / I = 0
         *  0 / n = 0
         *  0 / 0 = N
         *  0 / N = N
         *  0 / I = 0
         *  N / n = N
         *  N / 0 = N
         *  N / N = N
         *  N / I = N
         *  I / n = I
         *  I / 0 = I
         *  I / N = N
         *  I / I = N
         *
         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
         */
        P.dividedBy = P.div = function ( y, b ) {
            id = 3;
            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );
        };


        /*
         * Return a new BigNumber whose value is the integer part of dividing the value of this
         * BigNumber by the value of BigNumber(y, b).
         */
        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {
            id = 4;
            return div( this, new BigNumber( y, b ), 0, 1 );
        };


        /*
         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.equals = P.eq = function ( y, b ) {
            id = 5;
            return compare( this, new BigNumber( y, b ) ) === 0;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole
         * number in the direction of -Infinity.
         */
        P.floor = function () {
            return round( new BigNumber(this), this.e + 1, 3 );
        };


        /*
         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.greaterThan = P.gt = function ( y, b ) {
            id = 6;
            return compare( this, new BigNumber( y, b ) ) > 0;
        };


        /*
         * Return true if the value of this BigNumber is greater than or equal to the value of
         * BigNumber(y, b), otherwise returns false.
         */
        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {
            id = 7;
            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;

        };


        /*
         * Return true if the value of this BigNumber is a finite number, otherwise returns false.
         */
        P.isFinite = function () {
            return !!this.c;
        };


        /*
         * Return true if the value of this BigNumber is an integer, otherwise return false.
         */
        P.isInteger = P.isInt = function () {
            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;
        };


        /*
         * Return true if the value of this BigNumber is NaN, otherwise returns false.
         */
        P.isNaN = function () {
            return !this.s;
        };


        /*
         * Return true if the value of this BigNumber is negative, otherwise returns false.
         */
        P.isNegative = P.isNeg = function () {
            return this.s < 0;
        };


        /*
         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.
         */
        P.isZero = function () {
            return !!this.c && this.c[0] == 0;
        };


        /*
         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.lessThan = P.lt = function ( y, b ) {
            id = 8;
            return compare( this, new BigNumber( y, b ) ) < 0;
        };


        /*
         * Return true if the value of this BigNumber is less than or equal to the value of
         * BigNumber(y, b), otherwise returns false.
         */
        P.lessThanOrEqualTo = P.lte = function ( y, b ) {
            id = 9;
            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;
        };


        /*
         *  n - 0 = n
         *  n - N = N
         *  n - I = -I
         *  0 - n = -n
         *  0 - 0 = 0
         *  0 - N = N
         *  0 - I = -I
         *  N - n = N
         *  N - 0 = N
         *  N - N = N
         *  N - I = N
         *  I - n = I
         *  I - 0 = I
         *  I - N = N
         *  I - I = N
         *
         * Return a new BigNumber whose value is the value of this BigNumber minus the value of
         * BigNumber(y, b).
         */
        P.minus = P.sub = function ( y, b ) {
            var i, j, t, xLTy,
                x = this,
                a = x.s;

            id = 10;
            y = new BigNumber( y, b );
            b = y.s;

            // Either NaN?
            if ( !a || !b ) return new BigNumber(NaN);

            // Signs differ?
            if ( a != b ) {
                y.s = -b;
                return x.plus(y);
            }

            var xe = x.e / LOG_BASE,
                ye = y.e / LOG_BASE,
                xc = x.c,
                yc = y.c;

            if ( !xe || !ye ) {

                // Either Infinity?
                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );

                // Either zero?
                if ( !xc[0] || !yc[0] ) {

                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :

                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
                      ROUNDING_MODE == 3 ? -0 : 0 );
                }
            }

            xe = bitFloor(xe);
            ye = bitFloor(ye);
            xc = xc.slice();

            // Determine which is the bigger number.
            if ( a = xe - ye ) {

                if ( xLTy = a < 0 ) {
                    a = -a;
                    t = xc;
                } else {
                    ye = xe;
                    t = yc;
                }

                t.reverse();

                // Prepend zeros to equalise exponents.
                for ( b = a; b--; t.push(0) );
                t.reverse();
            } else {

                // Exponents equal. Check digit by digit.
                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;

                for ( a = b = 0; b < j; b++ ) {

                    if ( xc[b] != yc[b] ) {
                        xLTy = xc[b] < yc[b];
                        break;
                    }
                }
            }

            // x < y? Point xc to the array of the bigger number.
            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;

            b = ( j = yc.length ) - ( i = xc.length );

            // Append zeros to xc if shorter.
            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );
            b = BASE - 1;

            // Subtract yc from xc.
            for ( ; j > a; ) {

                if ( xc[--j] < yc[j] ) {
                    for ( i = j; i && !xc[--i]; xc[i] = b );
                    --xc[i];
                    xc[j] += BASE;
                }

                xc[j] -= yc[j];
            }

            // Remove leading zeros and adjust exponent accordingly.
            for ( ; xc[0] == 0; xc.shift(), --ye );

            // Zero?
            if ( !xc[0] ) {

                // Following IEEE 754 (2008) 6.3,
                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
                y.s = ROUNDING_MODE == 3 ? -1 : 1;
                y.c = [ y.e = 0 ];
                return y;
            }

            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
            // for finite x and y.
            return normalise( y, xc, ye );
        };


        /*
         *   n % 0 =  N
         *   n % N =  N
         *   n % I =  n
         *   0 % n =  0
         *  -0 % n = -0
         *   0 % 0 =  N
         *   0 % N =  N
         *   0 % I =  0
         *   N % n =  N
         *   N % 0 =  N
         *   N % N =  N
         *   N % I =  N
         *   I % n =  N
         *   I % 0 =  N
         *   I % N =  N
         *   I % I =  N
         *
         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
         * BigNumber(y, b). The result depends on the value of MODULO_MODE.
         */
        P.modulo = P.mod = function ( y, b ) {
            var q, s,
                x = this;

            id = 11;
            y = new BigNumber( y, b );

            // Return NaN if x is Infinity or NaN, or y is NaN or zero.
            if ( !x.c || !y.s || y.c && !y.c[0] ) {
                return new BigNumber(NaN);

            // Return x if y is Infinity or x is zero.
            } else if ( !y.c || x.c && !x.c[0] ) {
                return new BigNumber(x);
            }

            if ( MODULO_MODE == 9 ) {

                // Euclidian division: q = sign(y) * floor(x / abs(y))
                // r = x - qy    where  0 <= r < abs(y)
                s = y.s;
                y.s = 1;
                q = div( x, y, 0, 3 );
                y.s = s;
                q.s *= s;
            } else {
                q = div( x, y, 0, MODULO_MODE );
            }

            return x.minus( q.times(y) );
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber negated,
         * i.e. multiplied by -1.
         */
        P.negated = P.neg = function () {
            var x = new BigNumber(this);
            x.s = -x.s || null;
            return x;
        };


        /*
         *  n + 0 = n
         *  n + N = N
         *  n + I = I
         *  0 + n = n
         *  0 + 0 = 0
         *  0 + N = N
         *  0 + I = I
         *  N + n = N
         *  N + 0 = N
         *  N + N = N
         *  N + I = N
         *  I + n = I
         *  I + 0 = I
         *  I + N = N
         *  I + I = I
         *
         * Return a new BigNumber whose value is the value of this BigNumber plus the value of
         * BigNumber(y, b).
         */
        P.plus = P.add = function ( y, b ) {
            var t,
                x = this,
                a = x.s;

            id = 12;
            y = new BigNumber( y, b );
            b = y.s;

            // Either NaN?
            if ( !a || !b ) return new BigNumber(NaN);

            // Signs differ?
             if ( a != b ) {
                y.s = -b;
                return x.minus(y);
            }

            var xe = x.e / LOG_BASE,
                ye = y.e / LOG_BASE,
                xc = x.c,
                yc = y.c;

            if ( !xe || !ye ) {

                // Return ±Infinity if either ±Infinity.
                if ( !xc || !yc ) return new BigNumber( a / 0 );

                // Either zero?
                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );
            }

            xe = bitFloor(xe);
            ye = bitFloor(ye);
            xc = xc.slice();

            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
            if ( a = xe - ye ) {
                if ( a > 0 ) {
                    ye = xe;
                    t = yc;
                } else {
                    a = -a;
                    t = xc;
                }

                t.reverse();
                for ( ; a--; t.push(0) );
                t.reverse();
            }

            a = xc.length;
            b = yc.length;

            // Point xc to the longer array, and b to the shorter length.
            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;

            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
            for ( a = 0; b; ) {
                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;
                xc[b] %= BASE;
            }

            if (a) {
                xc.unshift(a);
                ++ye;
            }

            // No need to check for zero, as +x + +y != 0 && -x + -y != 0
            // ye = MAX_EXP + 1 possible
            return normalise( y, xc, ye );
        };


        /*
         * Return the number of significant digits of the value of this BigNumber.
         *
         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
         */
        P.precision = P.sd = function (z) {
            var n, v,
                x = this,
                c = x.c;

            // 'precision() argument not a boolean or binary digit: {z}'
            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {
                if (ERRORS) raise( 13, 'argument' + notBool, z );
                if ( z != !!z ) z = null;
            }

            if ( !c ) return null;
            v = c.length - 1;
            n = v * LOG_BASE + 1;

            if ( v = c[v] ) {

                // Subtract the number of trailing zeros of the last element.
                for ( ; v % 10 == 0; v /= 10, n-- );

                // Add the number of digits of the first element.
                for ( v = c[0]; v >= 10; v /= 10, n++ );
            }

            if ( z && x.e + 1 > n ) n = x.e + 1;

            return n;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of
         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if
         * omitted.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'round() decimal places out of range: {dp}'
         * 'round() decimal places not an integer: {dp}'
         * 'round() rounding mode not an integer: {rm}'
         * 'round() rounding mode out of range: {rm}'
         */
        P.round = function ( dp, rm ) {
            var n = new BigNumber(this);

            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {
                round( n, ~~dp + this.e + 1, rm == null ||
                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );
            }

            return n;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
         *
         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
         *
         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity
         * otherwise.
         *
         * 'shift() argument not an integer: {k}'
         * 'shift() argument out of range: {k}'
         */
        P.shift = function (k) {
            var n = this;
            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )

              // k < 1e+21, or truncate(k) will produce exponential notation.
              ? n.times( '1e' + truncate(k) )
              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )
                ? n.s * ( k < 0 ? 0 : 1 / 0 )
                : n );
        };


        /*
         *  sqrt(-n) =  N
         *  sqrt( N) =  N
         *  sqrt(-I) =  N
         *  sqrt( I) =  I
         *  sqrt( 0) =  0
         *  sqrt(-0) = -0
         *
         * Return a new BigNumber whose value is the square root of the value of this BigNumber,
         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
         */
        P.squareRoot = P.sqrt = function () {
            var m, n, r, rep, t,
                x = this,
                c = x.c,
                s = x.s,
                e = x.e,
                dp = DECIMAL_PLACES + 4,
                half = new BigNumber('0.5');

            // Negative/NaN/Infinity/zero?
            if ( s !== 1 || !c || !c[0] ) {
                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );
            }

            // Initial estimate.
            s = Math.sqrt( +x );

            // Math.sqrt underflow/overflow?
            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
            if ( s == 0 || s == 1 / 0 ) {
                n = coeffToString(c);
                if ( ( n.length + e ) % 2 == 0 ) n += '0';
                s = Math.sqrt(n);
                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );

                if ( s == 1 / 0 ) {
                    n = '1e' + e;
                } else {
                    n = s.toExponential();
                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;
                }

                r = new BigNumber(n);
            } else {
                r = new BigNumber( s + '' );
            }

            // Check for zero.
            // r could be zero if MIN_EXP is changed after the this value was created.
            // This would cause a division by zero (x/t) and hence Infinity below, which would cause
            // coeffToString to throw.
            if ( r.c[0] ) {
                e = r.e;
                s = e + dp;
                if ( s < 3 ) s = 0;

                // Newton-Raphson iteration.
                for ( ; ; ) {
                    t = r;
                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );

                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =
                         coeffToString( r.c ) ).slice( 0, s ) ) {

                        // The exponent of r may here be one less than the final result exponent,
                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
                        // are indexed correctly.
                        if ( r.e < e ) --s;
                        n = n.slice( s - 3, s + 1 );

                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
                        // iteration.
                        if ( n == '9999' || !rep && n == '4999' ) {

                            // On the first iteration only, check to see if rounding up gives the
                            // exact result as the nines may infinitely repeat.
                            if ( !rep ) {
                                round( t, t.e + DECIMAL_PLACES + 2, 0 );

                                if ( t.times(t).eq(x) ) {
                                    r = t;
                                    break;
                                }
                            }

                            dp += 4;
                            s += 4;
                            rep = 1;
                        } else {

                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
                            // result. If not, then there are further digits and m will be truthy.
                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {

                                // Truncate to the first rounding digit.
                                round( r, r.e + DECIMAL_PLACES + 2, 1 );
                                m = !r.times(r).eq(x);
                            }

                            break;
                        }
                    }
                }
            }

            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );
        };


        /*
         *  n * 0 = 0
         *  n * N = N
         *  n * I = I
         *  0 * n = 0
         *  0 * 0 = 0
         *  0 * N = N
         *  0 * I = N
         *  N * n = N
         *  N * 0 = N
         *  N * N = N
         *  N * I = N
         *  I * n = I
         *  I * 0 = N
         *  I * N = N
         *  I * I = I
         *
         * Return a new BigNumber whose value is the value of this BigNumber times the value of
         * BigNumber(y, b).
         */
        P.times = P.mul = function ( y, b ) {
            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
                base, sqrtBase,
                x = this,
                xc = x.c,
                yc = ( id = 17, y = new BigNumber( y, b ) ).c;

            // Either NaN, ±Infinity or ±0?
            if ( !xc || !yc || !xc[0] || !yc[0] ) {

                // Return NaN if either is NaN, or one is 0 and the other is Infinity.
                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {
                    y.c = y.e = y.s = null;
                } else {
                    y.s *= x.s;

                    // Return ±Infinity if either is ±Infinity.
                    if ( !xc || !yc ) {
                        y.c = y.e = null;

                    // Return ±0 if either is ±0.
                    } else {
                        y.c = [0];
                        y.e = 0;
                    }
                }

                return y;
            }

            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );
            y.s *= x.s;
            xcL = xc.length;
            ycL = yc.length;

            // Ensure xc points to longer array and xcL to its length.
            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

            // Initialise the result array with zeros.
            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );

            base = BASE;
            sqrtBase = SQRT_BASE;

            for ( i = ycL; --i >= 0; ) {
                c = 0;
                ylo = yc[i] % sqrtBase;
                yhi = yc[i] / sqrtBase | 0;

                for ( k = xcL, j = i + k; j > i; ) {
                    xlo = xc[--k] % sqrtBase;
                    xhi = xc[k] / sqrtBase | 0;
                    m = yhi * xlo + xhi * ylo;
                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;
                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;
                    zc[j--] = xlo % base;
                }

                zc[j] = c;
            }

            if (c) {
                ++e;
            } else {
                zc.shift();
            }

            return normalise( y, zc, e );
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of
         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.
         *
         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toDigits() precision out of range: {sd}'
         * 'toDigits() precision not an integer: {sd}'
         * 'toDigits() rounding mode not an integer: {rm}'
         * 'toDigits() rounding mode out of range: {rm}'
         */
        P.toDigits = function ( sd, rm ) {
            var n = new BigNumber(this);
            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;
            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;
            return sd ? round( n, sd, rm ) : n;
        };


        /*
         * Return a string representing the value of this BigNumber in exponential notation and
         * rounded using ROUNDING_MODE to dp fixed decimal places.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toExponential() decimal places not an integer: {dp}'
         * 'toExponential() decimal places out of range: {dp}'
         * 'toExponential() rounding mode not an integer: {rm}'
         * 'toExponential() rounding mode out of range: {rm}'
         */
        P.toExponential = function ( dp, rm ) {
            return format( this,
              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );
        };


        /*
         * Return a string representing the value of this BigNumber in fixed-point notation rounding
         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
         *
         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
         * but e.g. (-0.00001).toFixed(0) is '-0'.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toFixed() decimal places not an integer: {dp}'
         * 'toFixed() decimal places out of range: {dp}'
         * 'toFixed() rounding mode not an integer: {rm}'
         * 'toFixed() rounding mode out of range: {rm}'
         */
        P.toFixed = function ( dp, rm ) {
            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )
              ? ~~dp + this.e + 1 : null, rm, 20 );
        };


        /*
         * Return a string representing the value of this BigNumber in fixed-point notation rounded
         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
         * of the FORMAT object (see BigNumber.config).
         *
         * FORMAT = {
         *      decimalSeparator : '.',
         *      groupSeparator : ',',
         *      groupSize : 3,
         *      secondaryGroupSize : 0,
         *      fractionGroupSeparator : '\xA0',    // non-breaking space
         *      fractionGroupSize : 0
         * };
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toFormat() decimal places not an integer: {dp}'
         * 'toFormat() decimal places out of range: {dp}'
         * 'toFormat() rounding mode not an integer: {rm}'
         * 'toFormat() rounding mode out of range: {rm}'
         */
        P.toFormat = function ( dp, rm ) {
            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )
              ? ~~dp + this.e + 1 : null, rm, 21 );

            if ( this.c ) {
                var i,
                    arr = str.split('.'),
                    g1 = +FORMAT.groupSize,
                    g2 = +FORMAT.secondaryGroupSize,
                    groupSeparator = FORMAT.groupSeparator,
                    intPart = arr[0],
                    fractionPart = arr[1],
                    isNeg = this.s < 0,
                    intDigits = isNeg ? intPart.slice(1) : intPart,
                    len = intDigits.length;

                if (g2) i = g1, g1 = g2, g2 = i, len -= i;

                if ( g1 > 0 && len > 0 ) {
                    i = len % g1 || g1;
                    intPart = intDigits.substr( 0, i );

                    for ( ; i < len; i += g1 ) {
                        intPart += groupSeparator + intDigits.substr( i, g1 );
                    }

                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);
                    if (isNeg) intPart = '-' + intPart;
                }

                str = fractionPart
                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )
                    ? fractionPart.replace( new RegExp( '\\d{' + g2 + '}\\B', 'g' ),
                      '$&' + FORMAT.fractionGroupSeparator )
                    : fractionPart )
                  : intPart;
            }

            return str;
        };


        /*
         * Return a string array representing the value of this BigNumber as a simple fraction with
         * an integer numerator and an integer denominator. The denominator will be a positive
         * non-zero value less than or equal to the specified maximum denominator. If a maximum
         * denominator is not specified, the denominator will be the lowest value necessary to
         * represent the number exactly.
         *
         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.
         *
         * 'toFraction() max denominator not an integer: {md}'
         * 'toFraction() max denominator out of range: {md}'
         */
        P.toFraction = function (md) {
            var arr, d0, d2, e, exp, n, n0, q, s,
                k = ERRORS,
                x = this,
                xc = x.c,
                d = new BigNumber(ONE),
                n1 = d0 = new BigNumber(ONE),
                d1 = n0 = new BigNumber(ONE);

            if ( md != null ) {
                ERRORS = false;
                n = new BigNumber(md);
                ERRORS = k;

                if ( !( k = n.isInt() ) || n.lt(ONE) ) {

                    if (ERRORS) {
                        raise( 22,
                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );
                    }

                    // ERRORS is false:
                    // If md is a finite non-integer >= 1, round it to an integer and use it.
                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;
                }
            }

            if ( !xc ) return x.toString();
            s = coeffToString(xc);

            // Determine initial denominator.
            // d is a power of 10 and the minimum max denominator that specifies the value exactly.
            e = d.e = s.length - x.e - 1;
            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];
            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;

            exp = MAX_EXP;
            MAX_EXP = 1 / 0;
            n = new BigNumber(s);

            // n0 = d1 = 0
            n0.c[0] = 0;

            for ( ; ; )  {
                q = div( n, d, 0, 1 );
                d2 = d0.plus( q.times(d1) );
                if ( d2.cmp(md) == 1 ) break;
                d0 = d1;
                d1 = d2;
                n1 = n0.plus( q.times( d2 = n1 ) );
                n0 = d2;
                d = n.minus( q.times( d2 = d ) );
                n = d2;
            }

            d2 = div( md.minus(d0), d1, 0, 1 );
            n0 = n0.plus( d2.times(n1) );
            d0 = d0.plus( d2.times(d1) );
            n0.s = n1.s = x.s;
            e *= 2;

            // Determine which fraction is closer to x, n0/d0 or n1/d1
            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(
                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1
                    ? [ n1.toString(), d1.toString() ]
                    : [ n0.toString(), d0.toString() ];

            MAX_EXP = exp;
            return arr;
        };


        /*
         * Return the value of this BigNumber converted to a number primitive.
         */
        P.toNumber = function () {
            return +this;
        };


        /*
         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.
         * If m is present, return the result modulo m.
         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
         * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using
         * ROUNDING_MODE.
         *
         * The modular power operation works efficiently when x, n, and m are positive integers,
         * otherwise it is equivalent to calculating x.toPower(n).modulo(m) (with POW_PRECISION 0).
         *
         * n {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
         * [m] {number|string|BigNumber} The modulus.
         *
         * 'pow() exponent not an integer: {n}'
         * 'pow() exponent out of range: {n}'
         *
         * Performs 54 loop iterations for n of 9007199254740991.
         */
        P.toPower = P.pow = function ( n, m ) {
            var k, y, z,
                i = mathfloor( n < 0 ? -n : +n ),
                x = this;

            if ( m != null ) {
                id = 23;
                m = new BigNumber(m);
            }

            // Pass ±Infinity to Math.pow if exponent is out of range.
            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&
              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||
                parseFloat(n) != n && !( n = NaN ) ) || n == 0 ) {
                k = Math.pow( +x, n );
                return new BigNumber( m ? k % m : k );
            }

            if (m) {
                if ( n > 1 && x.gt(ONE) && x.isInt() && m.gt(ONE) && m.isInt() ) {
                    x = x.mod(m);
                } else {
                    z = m;

                    // Nullify m so only a single mod operation is performed at the end.
                    m = null;
                }
            } else if (POW_PRECISION) {

                // Truncating each coefficient array to a length of k after each multiplication
                // equates to truncating significant digits to POW_PRECISION + [28, 41],
                // i.e. there will be a minimum of 28 guard digits retained.
                // (Using + 1.5 would give [9, 21] guard digits.)
                k = mathceil( POW_PRECISION / LOG_BASE + 2 );
            }

            y = new BigNumber(ONE);

            for ( ; ; ) {
                if ( i % 2 ) {
                    y = y.times(x);
                    if ( !y.c ) break;
                    if (k) {
                        if ( y.c.length > k ) y.c.length = k;
                    } else if (m) {
                        y = y.mod(m);
                    }
                }

                i = mathfloor( i / 2 );
                if ( !i ) break;
                x = x.times(x);
                if (k) {
                    if ( x.c && x.c.length > k ) x.c.length = k;
                } else if (m) {
                    x = x.mod(m);
                }
            }

            if (m) return y;
            if ( n < 0 ) y = ONE.div(y);

            return z ? y.mod(z) : k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;
        };


        /*
         * Return a string representing the value of this BigNumber rounded to sd significant digits
         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
         * necessary to represent the integer part of the value in fixed-point notation, then use
         * exponential notation.
         *
         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toPrecision() precision not an integer: {sd}'
         * 'toPrecision() precision out of range: {sd}'
         * 'toPrecision() rounding mode not an integer: {rm}'
         * 'toPrecision() rounding mode out of range: {rm}'
         */
        P.toPrecision = function ( sd, rm ) {
            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )
              ? sd | 0 : null, rm, 24 );
        };


        /*
         * Return a string representing the value of this BigNumber in base b, or base 10 if b is
         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
         * TO_EXP_NEG, return exponential notation.
         *
         * [b] {number} Integer, 2 to 64 inclusive.
         *
         * 'toString() base not an integer: {b}'
         * 'toString() base out of range: {b}'
         */
        P.toString = function (b) {
            var str,
                n = this,
                s = n.s,
                e = n.e;

            // Infinity or NaN?
            if ( e === null ) {

                if (s) {
                    str = 'Infinity';
                    if ( s < 0 ) str = '-' + str;
                } else {
                    str = 'NaN';
                }
            } else {
                str = coeffToString( n.c );

                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {
                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS
                      ? toExponential( str, e )
                      : toFixedPoint( str, e );
                } else {
                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );
                }

                if ( s < 0 && n.c[0] ) str = '-' + str;
            }

            return str;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole
         * number.
         */
        P.truncated = P.trunc = function () {
            return round( new BigNumber(this), this.e + 1, 1 );
        };



        /*
         * Return as toString, but do not accept a base argument, and include the minus sign for
         * negative zero.
         */
        P.valueOf = P.toJSON = function () {
            var str,
                n = this,
                e = n.e;

            if ( e === null ) return n.toString();

            str = coeffToString( n.c );

            str = e <= TO_EXP_NEG || e >= TO_EXP_POS
                ? toExponential( str, e )
                : toFixedPoint( str, e );

            return n.s < 0 ? '-' + str : str;
        };


        // Aliases for BigDecimal methods.
        //P.add = P.plus;         // P.add included above
        //P.subtract = P.minus;   // P.sub included above
        //P.multiply = P.times;   // P.mul included above
        //P.divide = P.div;
        //P.remainder = P.mod;
        //P.compareTo = P.cmp;
        //P.negate = P.neg;


        if ( configObj != null ) BigNumber.config(configObj);

        return BigNumber;
    }


    // PRIVATE HELPER FUNCTIONS


    function bitFloor(n) {
        var i = n | 0;
        return n > 0 || n === i ? i : i - 1;
    }


    // Return a coefficient array as a string of base 10 digits.
    function coeffToString(a) {
        var s, z,
            i = 1,
            j = a.length,
            r = a[0] + '';

        for ( ; i < j; ) {
            s = a[i++] + '';
            z = LOG_BASE - s.length;
            for ( ; z--; s = '0' + s );
            r += s;
        }

        // Determine trailing zeros.
        for ( j = r.length; r.charCodeAt(--j) === 48; );
        return r.slice( 0, j + 1 || 1 );
    }


    // Compare the value of BigNumbers x and y.
    function compare( x, y ) {
        var a, b,
            xc = x.c,
            yc = y.c,
            i = x.s,
            j = y.s,
            k = x.e,
            l = y.e;

        // Either NaN?
        if ( !i || !j ) return null;

        a = xc && !xc[0];
        b = yc && !yc[0];

        // Either zero?
        if ( a || b ) return a ? b ? 0 : -j : i;

        // Signs differ?
        if ( i != j ) return i;

        a = i < 0;
        b = k == l;

        // Either Infinity?
        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;

        // Compare exponents.
        if ( !b ) return k > l ^ a ? 1 : -1;

        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;

        // Compare digit by digit.
        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;

        // Compare lengths.
        return k == l ? 0 : k > l ^ a ? 1 : -1;
    }


    /*
     * Return true if n is a valid number in range, otherwise false.
     * Use for argument validation when ERRORS is false.
     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.
     */
    function intValidatorNoErrors( n, min, max ) {
        return ( n = truncate(n) ) >= min && n <= max;
    }


    function isArray(obj) {
        return Object.prototype.toString.call(obj) == '[object Array]';
    }


    /*
     * Convert string of baseIn to an array of numbers of baseOut.
     * Eg. convertBase('255', 10, 16) returns [15, 15].
     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].
     */
    function toBaseOut( str, baseIn, baseOut ) {
        var j,
            arr = [0],
            arrL,
            i = 0,
            len = str.length;

        for ( ; i < len; ) {
            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );
            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );

            for ( ; j < arr.length; j++ ) {

                if ( arr[j] > baseOut - 1 ) {
                    if ( arr[j + 1] == null ) arr[j + 1] = 0;
                    arr[j + 1] += arr[j] / baseOut | 0;
                    arr[j] %= baseOut;
                }
            }
        }

        return arr.reverse();
    }


    function toExponential( str, e ) {
        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +
          ( e < 0 ? 'e' : 'e+' ) + e;
    }


    function toFixedPoint( str, e ) {
        var len, z;

        // Negative exponent?
        if ( e < 0 ) {

            // Prepend zeros.
            for ( z = '0.'; ++e; z += '0' );
            str = z + str;

        // Positive exponent
        } else {
            len = str.length;

            // Append zeros.
            if ( ++e > len ) {
                for ( z = '0', e -= len; --e; z += '0' );
                str += z;
            } else if ( e < len ) {
                str = str.slice( 0, e ) + '.' + str.slice(e);
            }
        }

        return str;
    }


    function truncate(n) {
        n = parseFloat(n);
        return n < 0 ? mathceil(n) : mathfloor(n);
    }


    // EXPORT


   // AMD.
    if ( typeof define == 'function' && define.amd ) {
        define( function () { return constructorFactory(); } );

    // Node.js and other environments that support module.exports.
    } else if ( typeof module != 'undefined' && module.exports ) {
        module.exports = constructorFactory();

        // Split string stops browserify adding crypto shim.
        if ( !cryptoObj ) try { cryptoObj = require('cry' + 'pto'); } catch (e) {}

    // Browser.
    } else {
        if ( !globalObj ) globalObj = typeof self != 'undefined' ? self : Function('return this')();
        globalObj.BigNumber = constructorFactory();
    }
})(this);

},{}],148:[function(require,module,exports){

},{}],149:[function(require,module,exports){
// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// when used in node, this will actually load the util module we depend on
// versus loading the builtin util module as happens otherwise
// this is a bug in node module loading as far as I am concerned
var util = require('util/');

var pSlice = Array.prototype.slice;
var hasOwn = Object.prototype.hasOwnProperty;

// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  }
  else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = stackStartFunction.name;
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function replacer(key, value) {
  if (util.isUndefined(value)) {
    return '' + value;
  }
  if (util.isNumber(value) && !isFinite(value)) {
    return value.toString();
  }
  if (util.isFunction(value) || util.isRegExp(value)) {
    return value.toString();
  }
  return value;
}

function truncate(s, n) {
  if (util.isString(s)) {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}

function getMessage(self) {
  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +
         self.operator + ' ' +
         truncate(JSON.stringify(self.expected, replacer), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

function _deepEqual(actual, expected) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {
    if (actual.length != expected.length) return false;

    for (var i = 0; i < actual.length; i++) {
      if (actual[i] !== expected[i]) return false;
    }

    return true;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!util.isObject(actual) && !util.isObject(expected)) {
    return actual == expected;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b) {
  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b)) {
    return a === b;
  }
  var aIsArgs = isArguments(a),
      bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b);
  }
  var ka = objectKeys(a),
      kb = objectKeys(b),
      key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key])) return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  } else if (actual instanceof expected) {
    return true;
  } else if (expected.call({}, actual) === true) {
    return true;
  }

  return false;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (util.isString(expected)) {
    message = expected;
    expected = null;
  }

  try {
    block();
  } catch (e) {
    actual = e;
  }

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  if (!shouldThrow && expectedException(actual, expected)) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws.apply(this, [true].concat(pSlice.call(arguments)));
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/message) {
  _throws.apply(this, [false].concat(pSlice.call(arguments)));
};

assert.ifError = function(err) { if (err) {throw err;}};

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

},{"util/":370}],150:[function(require,module,exports){
arguments[4][148][0].apply(exports,arguments)
},{"dup":148}],151:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  that.write(string, encoding)
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

function arrayIndexOf (arr, val, byteOffset, encoding) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var foundIndex = -1
  for (var i = byteOffset; i < arrLength; ++i) {
    if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
      if (foundIndex === -1) foundIndex = i
      if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
    } else {
      if (foundIndex !== -1) i -= i - foundIndex
      foundIndex = -1
    }
  }

  return -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  if (Buffer.isBuffer(val)) {
    // special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(this, val, byteOffset, encoding)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset, encoding)
  }

  throw new TypeError('val must be string, number or Buffer')
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"base64-js":152,"ieee754":153,"isarray":154}],152:[function(require,module,exports){
'use strict'

exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

function init () {
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i]
    revLookup[code.charCodeAt(i)] = i
  }

  revLookup['-'.charCodeAt(0)] = 62
  revLookup['_'.charCodeAt(0)] = 63
}

init()

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0

  // base64 is 4/3 + up to two characters of the original data
  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],153:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],154:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],155:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')))
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')
;[
  'Cipher',
  'createCipher',
  'Cipheriv',
  'createCipheriv',
  'Decipher',
  'createDecipher',
  'Decipheriv',
  'createDecipheriv',
  'getCiphers',
  'listCiphers'
].forEach(function (key) {
  exports[key] = aes[key]
})

var dh = require('diffie-hellman')
;[
  'DiffieHellmanGroup',
  'createDiffieHellmanGroup',
  'getDiffieHellman',
  'createDiffieHellman',
  'DiffieHellman'
].forEach(function (key) {
  exports[key] = dh[key]
})

var sign = require('browserify-sign')
;[
  'createSign',
  'Sign',
  'createVerify',
  'Verify'
].forEach(function (key) {
  exports[key] = sign[key]
})

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

;[
  'publicEncrypt',
  'privateEncrypt',
  'publicDecrypt',
  'privateDecrypt'
].forEach(function (key) {
  exports[key] = publicEncrypt[key]
})

// the least I can do is make error messages for the rest of the node.js/crypto api.
;[
  'createCredentials'
].forEach(function (name) {
  exports[name] = function () {
    throw new Error([
      'sorry, ' + name + ' is not implemented yet',
      'we accept pull requests',
      'https://github.com/crypto-browserify/crypto-browserify'
    ].join('\n'))
  }
})

},{"browserify-cipher":156,"browserify-sign":186,"browserify-sign/algos":185,"create-ecdh":253,"create-hash":279,"create-hmac":292,"diffie-hellman":293,"pbkdf2":300,"public-encrypt":301,"randombytes":346}],156:[function(require,module,exports){
var ebtk = require('evp_bytestokey')
var aes = require('browserify-aes/browser')
var DES = require('browserify-des')
var desModes = require('browserify-des/modes')
var aesModes = require('browserify-aes/modes')
function createCipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}
function createDecipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createCipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createDecipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite,
      decrypt: true
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":159,"browserify-aes/modes":163,"browserify-des":174,"browserify-des/modes":175,"evp_bytestokey":184}],157:[function(require,module,exports){
(function (Buffer){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec

// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function scrub_vec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
  return false
}

function Global () {
  this.SBOX = []
  this.INV_SBOX = []
  this.SUB_MIX = [[], [], [], []]
  this.INV_SUB_MIX = [[], [], [], []]
  this.init()
  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
}

Global.prototype.init = function () {
  var d, i, sx, t, x, x2, x4, x8, xi, _i
  d = (function () {
    var _i, _results
    _results = []
    for (i = _i = 0; _i < 256; i = ++_i) {
      if (i < 128) {
        _results.push(i << 1)
      } else {
        _results.push((i << 1) ^ 0x11b)
      }
    }
    return _results
  })()
  x = 0
  xi = 0
  for (i = _i = 0; _i < 256; i = ++_i) {
    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    this.SBOX[x] = sx
    this.INV_SBOX[sx] = x
    x2 = d[x]
    x4 = d[x2]
    x8 = d[x4]
    t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    this.SUB_MIX[3][x] = t
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    this.INV_SUB_MIX[3][sx] = t
    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }
  return true
}

var G = new Global()

AES.blockSize = 4 * 4

AES.prototype.blockSize = AES.blockSize

AES.keySize = 256 / 8

AES.prototype.keySize = AES.keySize

function bufferToArray (buf) {
  var len = buf.length / 4
  var out = new Array(len)
  var i = -1
  while (++i < len) {
    out[i] = buf.readUInt32BE(i * 4)
  }
  return out
}
function AES (key) {
  this._key = bufferToArray(key)
  this._doReset()
}

AES.prototype._doReset = function () {
  var invKsRow, keySize, keyWords, ksRow, ksRows, t
  keyWords = this._key
  keySize = keyWords.length
  this._nRounds = keySize + 6
  ksRows = (this._nRounds + 1) * 4
  this._keySchedule = []
  for (ksRow = 0; ksRow < ksRows; ksRow++) {
    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)
  }
  this._invKeySchedule = []
  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
    ksRow = ksRows - invKsRow
    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]
    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]
  }
  return true
}

AES.prototype.encryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var temp = [M[3], M[1]]
  M[1] = temp[0]
  M[3] = temp[1]
  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrub_vec(this._keySchedule)
  scrub_vec(this._invKeySchedule)
  scrub_vec(this._key)
}

AES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {
  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3

  s0 = M[0] ^ keySchedule[0]
  s1 = M[1] ^ keySchedule[1]
  s2 = M[2] ^ keySchedule[2]
  s3 = M[3] ^ keySchedule[3]
  ksRow = 4
  for (var round = 1; round < this._nRounds; round++) {
    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }
  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  return [
    fixup_uint32(t0),
    fixup_uint32(t1),
    fixup_uint32(t2),
    fixup_uint32(t3)
  ]
}

exports.AES = AES

}).call(this,require("buffer").Buffer)

},{"buffer":151}],158:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
inherits(StreamCipher, Transform)
module.exports = StreamCipher

function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])
  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  iv.copy(this._prev)
  this._mode = mode
  var h = new Buffer(4)
  h.fill(0)
  this._ghash = new GHASH(this._cipher.encryptBlock(h))
  this._authTag = null
  this._called = false
}
StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = new Buffer(rump)
      rump.fill(0)
      this._ghash.update(rump)
    }
  }
  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}
StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) {
    throw new Error('Unsupported state or unable to authenticate data')
  }
  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt) {
    if (xorTest(tag, this._authTag)) {
      throw new Error('Unsupported state or unable to authenticate data')
    }
  } else {
    this._authTag = tag
  }
  this._cipher.scrub()
}
StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
    return this._authTag
  } else {
    throw new Error('Attempting to get auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (this._decrypt) {
    this._authTag = tag
  } else {
    throw new Error('Attempting to set auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (!this._called) {
    this._ghash.update(buf)
    this._alen += buf.length
  } else {
    throw new Error('Attempting to set AAD in unsupported state')
  }
}
function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) {
    out++
  }
  var len = Math.min(a.length, b.length)
  var i = -1
  while (++i < len) {
    out += (a[i] ^ b[i])
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"./aes":157,"./ghash":162,"buffer":151,"buffer-xor":171,"cipher-base":172,"inherits":348}],159:[function(require,module,exports){
var ciphers = require('./encrypter')
exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
var deciphers = require('./decrypter')
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
var modes = require('./modes')
function getCiphers () {
  return Object.keys(modes)
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":160,"./encrypter":161,"./modes":163}],160:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
var ebtk = require('evp_bytestokey')

inherits(Decipher, Transform)
function Decipher (mode, key, iv) {
  if (!(this instanceof Decipher)) {
    return new Decipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}
Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}
function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }
  return null
}
Splitter.prototype.flush = function () {
  if (this.cache.length) {
    return this.cache
  }
}
function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) {
    return
  }
  return last.slice(0, 16 - padded)
}

var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createDecipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv, true)
  }
  return new Decipher(modelist[config.mode], password, iv)
}

function createDecipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}
exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

}).call(this,require("buffer").Buffer)

},{"./aes":157,"./authCipher":158,"./modes":163,"./modes/cbc":164,"./modes/cfb":165,"./modes/cfb1":166,"./modes/cfb8":167,"./modes/ctr":168,"./modes/ecb":169,"./modes/ofb":170,"./streamCipher":173,"buffer":151,"cipher-base":172,"evp_bytestokey":184,"inherits":348}],161:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var ebtk = require('evp_bytestokey')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
inherits(Cipher, Transform)
function Cipher (mode, key, iv) {
  if (!(this instanceof Cipher)) {
    return new Cipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}
Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}
Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = new Buffer(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }
  var out = Buffer.concat([this.cache, padBuff])
  return out
}
var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createCipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv)
  }
  return new Cipher(modelist[config.mode], password, iv)
}
function createCipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

}).call(this,require("buffer").Buffer)

},{"./aes":157,"./authCipher":158,"./modes":163,"./modes/cbc":164,"./modes/cfb":165,"./modes/cfb1":166,"./modes/cfb8":167,"./modes/ctr":168,"./modes/ecb":169,"./modes/ofb":170,"./streamCipher":173,"buffer":151,"cipher-base":172,"evp_bytestokey":184,"inherits":348}],162:[function(require,module,exports){
(function (Buffer){
var zeros = new Buffer(16)
zeros.fill(0)
module.exports = GHASH
function GHASH (key) {
  this.h = key
  this.state = new Buffer(16)
  this.state.fill(0)
  this.cache = new Buffer('')
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsb_Vi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi = xor(Zi, Vi)
    }

    // Store the value of LSB(V_i)
    lsb_Vi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsb_Vi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}
GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}
GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, zeros], 16))
  }
  this.ghash(fromArray([
    0, abl,
    0, bl
  ]))
  return this.state
}

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}
function fromArray (out) {
  out = out.map(fixup_uint32)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}
var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function xor (a, b) {
  return [
    a[0] ^ b[0],
    a[1] ^ b[1],
    a[2] ^ b[2],
    a[3] ^ b[3]
  ]
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],163:[function(require,module,exports){
exports['aes-128-ecb'] = {
  cipher: 'AES',
  key: 128,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-192-ecb'] = {
  cipher: 'AES',
  key: 192,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-256-ecb'] = {
  cipher: 'AES',
  key: 256,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-128-cbc'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes-192-cbc'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes-256-cbc'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes128'] = exports['aes-128-cbc']
exports['aes192'] = exports['aes-192-cbc']
exports['aes256'] = exports['aes-256-cbc']
exports['aes-128-cfb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-192-cfb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-256-cfb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-128-cfb8'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-192-cfb8'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-256-cfb8'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-128-cfb1'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-192-cfb1'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-256-cfb1'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-128-ofb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-192-ofb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-256-ofb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-128-ctr'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-192-ctr'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-256-ctr'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-128-gcm'] = {
  cipher: 'AES',
  key: 128,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}
exports['aes-192-gcm'] = {
  cipher: 'AES',
  key: 192,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}
exports['aes-256-gcm'] = {
  cipher: 'AES',
  key: 256,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}

},{}],164:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":171}],165:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

exports.encrypt = function (self, data, decrypt) {
  var out = new Buffer('')
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = new Buffer('')
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}
function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":171}],166:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}
function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = new Buffer(buffer.length)
  buffer = Buffer.concat([buffer, new Buffer([value])])
  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],167:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam
  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],168:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}

function getBlock (self) {
  var out = self._cipher.encryptBlock(self._prev)
  incr32(self._prev)
  return out
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":171}],169:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}
exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],170:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":171}],171:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],172:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":348,"stream":367,"string_decoder":368}],173:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')

inherits(StreamCipher, Transform)
module.exports = StreamCipher
function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  iv.copy(this._prev)
  this._mode = mode
}
StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}
StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

}).call(this,require("buffer").Buffer)

},{"./aes":157,"buffer":151,"cipher-base":172,"inherits":348}],174:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"cipher-base":176,"des.js":177,"inherits":348}],175:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],176:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":348,"stream":367,"string_decoder":368}],177:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":178,"./des/cipher":179,"./des/des":180,"./des/ede":181,"./des/utils":182}],178:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":348,"minimalistic-assert":183}],179:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":183}],180:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":177,"inherits":348,"minimalistic-assert":183}],181:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":177,"inherits":348,"minimalistic-assert":183}],182:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],183:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],184:[function(require,module,exports){
(function (Buffer){
var md5 = require('create-hash/md5')
module.exports = EVP_BytesToKey
function EVP_BytesToKey (password, salt, keyLen, ivLen) {
  if (!Buffer.isBuffer(password)) {
    password = new Buffer(password, 'binary')
  }
  if (salt && !Buffer.isBuffer(salt)) {
    salt = new Buffer(salt, 'binary')
  }
  keyLen = keyLen / 8
  ivLen = ivLen || 0
  var ki = 0
  var ii = 0
  var key = new Buffer(keyLen)
  var iv = new Buffer(ivLen)
  var addmd = 0
  var md_buf
  var i
  var bufs = []
  while (true) {
    if (addmd++ > 0) {
      bufs.push(md_buf)
    }
    bufs.push(password)
    if (salt) {
      bufs.push(salt)
    }
    md_buf = md5(Buffer.concat(bufs))
    bufs = []
    i = 0
    if (keyLen > 0) {
      while (true) {
        if (keyLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        key[ki++] = md_buf[i]
        keyLen--
        i++
      }
    }
    if (ivLen > 0 && i !== md_buf.length) {
      while (true) {
        if (ivLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        iv[ii++] = md_buf[i]
        ivLen--
        i++
      }
    }
    if (keyLen === 0 && ivLen === 0) {
      break
    }
  }
  for (i = 0; i < md_buf.length; i++) {
    md_buf[i] = 0
  }
  return {
    key: key,
    iv: iv
  }
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hash/md5":281}],185:[function(require,module,exports){
(function (Buffer){
'use strict'
exports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha224',
  id: new Buffer('302d300d06096086480165030402040500041c', 'hex')
}
exports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha256',
  id: new Buffer('3031300d060960864801650304020105000420', 'hex')
}
exports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha384',
  id: new Buffer('3041300d060960864801650304020205000430', 'hex')
}
exports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha512',
  id: new Buffer('3051300d060960864801650304020305000440', 'hex')
}
exports['RSA-SHA1'] = {
  sign: 'rsa',
  hash: 'sha1',
  id: new Buffer('3021300906052b0e03021a05000414', 'hex')
}
exports['ecdsa-with-SHA1'] = {
  sign: 'ecdsa',
  hash: 'sha1',
  id: new Buffer('', 'hex')
}

exports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {
  sign: 'dsa',
  hash: 'sha1',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {
  sign: 'dsa',
  hash: 'sha224',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {
  sign: 'dsa',
  hash: 'sha256',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {
  sign: 'dsa',
  hash: 'sha384',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {
  sign: 'dsa',
  hash: 'sha512',
  id: new Buffer('', 'hex')
}
exports['DSA-RIPEMD160'] = {
  sign: 'dsa',
  hash: 'rmd160',
  id: new Buffer('', 'hex')
}
exports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {
  sign: 'rsa',
  hash: 'rmd160',
  id: new Buffer('3021300906052b2403020105000414', 'hex')
}
exports['RSA-MD5'] = exports.md5WithRSAEncryption = {
  sign: 'rsa',
  hash: 'md5',
  id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],186:[function(require,module,exports){
(function (Buffer){
var _algos = require('./algos')
var createHash = require('create-hash')
var inherits = require('inherits')
var sign = require('./sign')
var stream = require('stream')
var verify = require('./verify')

var algos = {}
Object.keys(_algos).forEach(function (key) {
  algos[key] = algos[key.toLowerCase()] = _algos[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algos[algorithm]
  if (!data) {
    throw new Error('Unknown message digest')
  }

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') {
    data = new Buffer(data, enc)
  }

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._signType)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algos[algorithm]
  if (!data) {
    throw new Error('Unknown message digest')
  }

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)

  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') {
    data = new Buffer(data, enc)
  }

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') {
    sig = new Buffer(sig, enc)
  }

  this.end()
  var hash = this._hash.digest()

  return verify(sig, Buffer.concat([this._tag, hash]), key, this._signType)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)

},{"./algos":185,"./sign":251,"./verify":252,"buffer":151,"create-hash":279,"inherits":348,"stream":367}],187:[function(require,module,exports){
'use strict'
exports['1.3.132.0.10'] = 'secp256k1'

exports['1.3.132.0.33'] = 'p224'

exports['1.2.840.10045.3.1.1'] = 'p192'

exports['1.2.840.10045.3.1.7'] = 'p256'

exports['1.3.132.0.34'] = 'p384'

exports['1.3.132.0.35'] = 'p521'

},{}],188:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],189:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)

},{"bn.js":188,"buffer":151,"randombytes":346}],190:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"../package.json":213,"./elliptic/curve":193,"./elliptic/curves":196,"./elliptic/ec":197,"./elliptic/eddsa":200,"./elliptic/hmac-drbg":203,"./elliptic/utils":205,"brorand":206,"dup":45}],191:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"../../elliptic":190,"bn.js":188,"dup":46}],192:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"../../elliptic":190,"../curve":193,"bn.js":188,"dup":47,"inherits":348}],193:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./base":191,"./edwards":192,"./mont":194,"./short":195,"dup":48}],194:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"../../elliptic":190,"../curve":193,"bn.js":188,"dup":49,"inherits":348}],195:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"../../elliptic":190,"../curve":193,"bn.js":188,"dup":50,"inherits":348}],196:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"../elliptic":190,"./precomputed/secp256k1":204,"dup":51,"hash.js":207}],197:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"../../elliptic":190,"./key":198,"./signature":199,"bn.js":188,"dup":52}],198:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"bn.js":188,"dup":53}],199:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"../../elliptic":190,"bn.js":188,"dup":54}],200:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"../../elliptic":190,"./key":201,"./signature":202,"dup":55,"hash.js":207}],201:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"../../elliptic":190,"dup":56}],202:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"../../elliptic":190,"bn.js":188,"dup":57}],203:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"../elliptic":190,"dup":58,"hash.js":207}],204:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"dup":59}],205:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"bn.js":188,"dup":60}],206:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],207:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./hash/common":208,"./hash/hmac":209,"./hash/ripemd":210,"./hash/sha":211,"./hash/utils":212,"dup":62}],208:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"../hash":207,"dup":63}],209:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../hash":207,"dup":64}],210:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"../hash":207,"dup":65}],211:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../hash":207,"dup":66}],212:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67,"inherits":348}],213:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "6.3.1",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "gitHead": "c53f5cf3d832c0073eb4a4ed423a464cbce68f3e",
  "_id": "elliptic@6.3.1",
  "_shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
  "_from": "elliptic@>=6.0.0 <7.0.0",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "6.0.0",
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "dist": {
    "shasum": "17781f2109ab0ec686b146bdcff5d2e8c6aeceda",
    "tarball": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz"
  },
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/elliptic-6.3.1.tgz_1465921413402_0.5202967382501811"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.1.tgz",
  "readme": "ERROR: No README data found!"
}

},{}],214:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],215:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.

var asn1 = require('asn1.js')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})
var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey
var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"asn1.js":218}],216:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m
var startRegex = /^-----BEGIN (.*) KEY-----\r?\n/m
var fullRegex = /^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1] + ' KEY'
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)

},{"browserify-aes":235,"buffer":151,"evp_bytestokey":250}],217:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'PUBLIC KEY':
      ndata = asn1.PublicKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)

},{"./aesid.json":214,"./asn1":215,"./fixProc":216,"browserify-aes":235,"buffer":151,"pbkdf2":300}],218:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":219,"./asn1/base":221,"./asn1/constants":225,"./asn1/decoders":227,"./asn1/encoders":230,"bn.js":188}],219:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":218,"inherits":348,"vm":371}],220:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":221,"buffer":151,"inherits":348}],221:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":220,"./node":222,"./reporter":223}],222:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input));

  var result = state['default'];
  var present = true;

  var prevKey;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input);
        else
          this._decodeChoice(input);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input);
    else
      result = this._decodeChoice(input);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)._decode(data);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0]);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1]);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag);
  else if (tag === 'null_')
    return this._decodeNull(input);
  else if (tag === 'bool')
    return this._decodeBool(input);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0]);
  else if (state.use !== null)
    return this._getUse(state.use, input._reporterState.obj)._decode(input);
  else
    return input.error('unknown tag: ' + tag);
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be ommited only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":221,"minimalistic-assert":232}],223:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":348}],224:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":225}],225:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":224}],226:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der');
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num >= 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":218,"inherits":348}],227:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":226,"./pem":228}],228:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":226,"buffer":151,"inherits":348}],229:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":218,"buffer":151,"inherits":348}],230:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":229,"./pem":231}],231:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":229,"inherits":348}],232:[function(require,module,exports){
arguments[4][183][0].apply(exports,arguments)
},{"dup":183}],233:[function(require,module,exports){
(function (Buffer){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec

// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function scrub_vec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
  return false
}

function Global () {
  this.SBOX = []
  this.INV_SBOX = []
  this.SUB_MIX = [[], [], [], []]
  this.INV_SUB_MIX = [[], [], [], []]
  this.init()
  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
}

Global.prototype.init = function () {
  var d, i, sx, t, x, x2, x4, x8, xi, _i
  d = (function () {
    var _i, _results
    _results = []
    for (i = _i = 0; _i < 256; i = ++_i) {
      if (i < 128) {
        _results.push(i << 1)
      } else {
        _results.push((i << 1) ^ 0x11b)
      }
    }
    return _results
  })()
  x = 0
  xi = 0
  for (i = _i = 0; _i < 256; i = ++_i) {
    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    this.SBOX[x] = sx
    this.INV_SBOX[sx] = x
    x2 = d[x]
    x4 = d[x2]
    x8 = d[x4]
    t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    this.SUB_MIX[3][x] = t
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    this.INV_SUB_MIX[3][sx] = t
    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }
  return true
}

var G = new Global()

AES.blockSize = 4 * 4

AES.prototype.blockSize = AES.blockSize

AES.keySize = 256 / 8

AES.prototype.keySize = AES.keySize

function bufferToArray (buf) {
  var len = buf.length / 4
  var out = new Array(len)
  var i = -1
  while (++i < len) {
    out[i] = buf.readUInt32BE(i * 4)
  }
  return out
}
function AES (key) {
  this._key = bufferToArray(key)
  this._doReset()
}

AES.prototype._doReset = function () {
  var invKsRow, keySize, keyWords, ksRow, ksRows, t
  keyWords = this._key
  keySize = keyWords.length
  this._nRounds = keySize + 6
  ksRows = (this._nRounds + 1) * 4
  this._keySchedule = []
  for (ksRow = 0; ksRow < ksRows; ksRow++) {
    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)
  }
  this._invKeySchedule = []
  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
    ksRow = ksRows - invKsRow
    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]
    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]
  }
  return true
}

AES.prototype.encryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var temp = [M[3], M[1]]
  M[1] = temp[0]
  M[3] = temp[1]
  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrub_vec(this._keySchedule)
  scrub_vec(this._invKeySchedule)
  scrub_vec(this._key)
}

AES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {
  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3

  s0 = M[0] ^ keySchedule[0]
  s1 = M[1] ^ keySchedule[1]
  s2 = M[2] ^ keySchedule[2]
  s3 = M[3] ^ keySchedule[3]
  ksRow = 4
  for (var round = 1; round < this._nRounds; round++) {
    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }
  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  return [
    fixup_uint32(t0),
    fixup_uint32(t1),
    fixup_uint32(t2),
    fixup_uint32(t3)
  ]
}

exports.AES = AES

}).call(this,require("buffer").Buffer)

},{"buffer":151}],234:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
inherits(StreamCipher, Transform)
module.exports = StreamCipher

function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])
  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  iv.copy(this._prev)
  this._mode = mode
  var h = new Buffer(4)
  h.fill(0)
  this._ghash = new GHASH(this._cipher.encryptBlock(h))
  this._authTag = null
  this._called = false
}
StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = new Buffer(rump)
      rump.fill(0)
      this._ghash.update(rump)
    }
  }
  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}
StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) {
    throw new Error('Unsupported state or unable to authenticate data')
  }
  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt) {
    if (xorTest(tag, this._authTag)) {
      throw new Error('Unsupported state or unable to authenticate data')
    }
  } else {
    this._authTag = tag
  }
  this._cipher.scrub()
}
StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
    return this._authTag
  } else {
    throw new Error('Attempting to get auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (this._decrypt) {
    this._authTag = tag
  } else {
    throw new Error('Attempting to set auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (!this._called) {
    this._ghash.update(buf)
    this._alen += buf.length
  } else {
    throw new Error('Attempting to set AAD in unsupported state')
  }
}
function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) {
    out++
  }
  var len = Math.min(a.length, b.length)
  var i = -1
  while (++i < len) {
    out += (a[i] ^ b[i])
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"./aes":233,"./ghash":238,"buffer":151,"buffer-xor":247,"cipher-base":248,"inherits":348}],235:[function(require,module,exports){
arguments[4][159][0].apply(exports,arguments)
},{"./decrypter":236,"./encrypter":237,"./modes":239,"dup":159}],236:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
var ebtk = require('evp_bytestokey')

inherits(Decipher, Transform)
function Decipher (mode, key, iv) {
  if (!(this instanceof Decipher)) {
    return new Decipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}
Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}
function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }
  return null
}
Splitter.prototype.flush = function () {
  if (this.cache.length) {
    return this.cache
  }
}
function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) {
    return
  }
  return last.slice(0, 16 - padded)
}

var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createDecipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv, true)
  }
  return new Decipher(modelist[config.mode], password, iv)
}

function createDecipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}
exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

}).call(this,require("buffer").Buffer)

},{"./aes":233,"./authCipher":234,"./modes":239,"./modes/cbc":240,"./modes/cfb":241,"./modes/cfb1":242,"./modes/cfb8":243,"./modes/ctr":244,"./modes/ecb":245,"./modes/ofb":246,"./streamCipher":249,"buffer":151,"cipher-base":248,"evp_bytestokey":250,"inherits":348}],237:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var ebtk = require('evp_bytestokey')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
inherits(Cipher, Transform)
function Cipher (mode, key, iv) {
  if (!(this instanceof Cipher)) {
    return new Cipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}
Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}
Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = new Buffer(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }
  var out = Buffer.concat([this.cache, padBuff])
  return out
}
var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createCipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv)
  }
  return new Cipher(modelist[config.mode], password, iv)
}
function createCipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

}).call(this,require("buffer").Buffer)

},{"./aes":233,"./authCipher":234,"./modes":239,"./modes/cbc":240,"./modes/cfb":241,"./modes/cfb1":242,"./modes/cfb8":243,"./modes/ctr":244,"./modes/ecb":245,"./modes/ofb":246,"./streamCipher":249,"buffer":151,"cipher-base":248,"evp_bytestokey":250,"inherits":348}],238:[function(require,module,exports){
(function (Buffer){
var zeros = new Buffer(16)
zeros.fill(0)
module.exports = GHASH
function GHASH (key) {
  this.h = key
  this.state = new Buffer(16)
  this.state.fill(0)
  this.cache = new Buffer('')
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsb_Vi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi = xor(Zi, Vi)
    }

    // Store the value of LSB(V_i)
    lsb_Vi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsb_Vi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}
GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}
GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, zeros], 16))
  }
  this.ghash(fromArray([
    0, abl,
    0, bl
  ]))
  return this.state
}

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}
function fromArray (out) {
  out = out.map(fixup_uint32)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}
var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function xor (a, b) {
  return [
    a[0] ^ b[0],
    a[1] ^ b[1],
    a[2] ^ b[2],
    a[3] ^ b[3]
  ]
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],239:[function(require,module,exports){
arguments[4][163][0].apply(exports,arguments)
},{"dup":163}],240:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"buffer-xor":247,"dup":164}],241:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

exports.encrypt = function (self, data, decrypt) {
  var out = new Buffer('')
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = new Buffer('')
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}
function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":247}],242:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}
function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = new Buffer(buffer.length)
  buffer = Buffer.concat([buffer, new Buffer([value])])
  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],243:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam
  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],244:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}

function getBlock (self) {
  var out = self._cipher.encryptBlock(self._prev)
  incr32(self._prev)
  return out
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":247}],245:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],246:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":247}],247:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],248:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":348,"stream":367,"string_decoder":368}],249:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')

inherits(StreamCipher, Transform)
module.exports = StreamCipher
function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  iv.copy(this._prev)
  this._mode = mode
}
StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}
StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

}).call(this,require("buffer").Buffer)

},{"./aes":233,"buffer":151,"cipher-base":248,"inherits":348}],250:[function(require,module,exports){
(function (Buffer){
var md5 = require('create-hash/md5')
module.exports = EVP_BytesToKey
function EVP_BytesToKey (password, salt, keyLen, ivLen) {
  if (!Buffer.isBuffer(password)) {
    password = new Buffer(password, 'binary')
  }
  if (salt && !Buffer.isBuffer(salt)) {
    salt = new Buffer(salt, 'binary')
  }
  keyLen = keyLen / 8
  ivLen = ivLen || 0
  var ki = 0
  var ii = 0
  var key = new Buffer(keyLen)
  var iv = new Buffer(ivLen)
  var addmd = 0
  var md_buf
  var i
  var bufs = []
  while (true) {
    if (addmd++ > 0) {
      bufs.push(md_buf)
    }
    bufs.push(password)
    if (salt) {
      bufs.push(salt)
    }
    md_buf = md5(Buffer.concat(bufs))
    bufs = []
    i = 0
    if (keyLen > 0) {
      while (true) {
        if (keyLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        key[ki++] = md_buf[i]
        keyLen--
        i++
      }
    }
    if (ivLen > 0 && i !== md_buf.length) {
      while (true) {
        if (ivLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        iv[ii++] = md_buf[i]
        ivLen--
        i++
      }
    }
    if (keyLen === 0 && ivLen === 0) {
      break
    }
  }
  for (i = 0; i < md_buf.length; i++) {
    md_buf[i] = 0
  }
  return {
    key: key,
    iv: iv
  }
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hash/md5":281}],251:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var curves = require('./curves')
var elliptic = require('elliptic')
var parseKeys = require('parse-asn1')

var BN = require('bn.js')
var EC = elliptic.ec

function sign (hash, key, hashType, signType) {
  var priv = parseKeys(key)
  if (priv.curve) {
    if (signType !== 'ecdsa') throw new Error('wrong private key type')

    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') {
      throw new Error('wrong private key type')
    }
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa') throw new Error('wrong private key type')
  }

  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) {
    pad.push(0xff)
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.genKeyPair()

  key._importPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (!s.cmpn(0)) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) {
    r = [ 0 ].concat(r)
  }
  // Pad values
  if (s[0] & 0x80) {
    s = [0].concat(s)
  }

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k)
    .update(v)
    .update(new Buffer([0]))
    .update(x)
    .update(hbits)
    .digest()
  v = createHmac(algo, k)
    .update(v)
    .digest()
  k = createHmac(algo, k)
    .update(v)
    .update(new Buffer([1]))
    .update(x)
    .update(hbits)
    .digest()
  v = createHmac(algo, k)
    .update(v)
    .digest()
  return {
    k: k,
    v: v
  }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) {
    bits.ishrn(shift)
  }
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t, k

  do {
    t = new Buffer('')

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k)
        .update(kv.v)
        .digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k)
      .update(kv.v)
      .update(new Buffer([0]))
      .digest()
    kv.v = createHmac(algo, kv.k)
      .update(kv.v)
      .digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)

},{"./curves":187,"bn.js":188,"browserify-rsa":189,"buffer":151,"create-hmac":292,"elliptic":190,"parse-asn1":217}],252:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var curves = require('./curves')
var elliptic = require('elliptic')
var parseKeys = require('parse-asn1')

var BN = require('bn.js')
var EC = elliptic.ec

function verify (sig, hash, key, signType) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    if (signType !== 'ecdsa') {
      throw new Error('wrong public key type')
    }
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') {
      throw new Error('wrong public key type')
    }
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa') {
      throw new Error('wrong public key type')
    }
  }
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))

  sig = new Buffer(sig.fromRed().toArray())
  var out = 0
  if (padNum < 8) {
    out = 1
  }
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) {
    out = 1
  }

  i = -1
  while (++i < len) {
    out |= (sig[i] ^ pad[i])
  }
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(
      y.toRed(montp)
        .redPow(r.mul(w).mod(q))
        .fromRed()
  ).mod(p).mod(q)
  return !v.cmp(r)
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) {
    throw new Error('invalid sig')
  }
  if (b.cmp(q) >= q) {
    throw new Error('invalid sig')
  }
}

module.exports = verify

}).call(this,require("buffer").Buffer)

},{"./curves":187,"bn.js":188,"buffer":151,"elliptic":190,"parse-asn1":217}],253:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

}).call(this,require("buffer").Buffer)

},{"bn.js":254,"buffer":151,"elliptic":255}],254:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],255:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"../package.json":278,"./elliptic/curve":258,"./elliptic/curves":261,"./elliptic/ec":262,"./elliptic/eddsa":265,"./elliptic/hmac-drbg":268,"./elliptic/utils":270,"brorand":271,"dup":45}],256:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"../../elliptic":255,"bn.js":254,"dup":46}],257:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"../../elliptic":255,"../curve":258,"bn.js":254,"dup":47,"inherits":348}],258:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./base":256,"./edwards":257,"./mont":259,"./short":260,"dup":48}],259:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"../../elliptic":255,"../curve":258,"bn.js":254,"dup":49,"inherits":348}],260:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"../../elliptic":255,"../curve":258,"bn.js":254,"dup":50,"inherits":348}],261:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"../elliptic":255,"./precomputed/secp256k1":269,"dup":51,"hash.js":272}],262:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"../../elliptic":255,"./key":263,"./signature":264,"bn.js":254,"dup":52}],263:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"bn.js":254,"dup":53}],264:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"../../elliptic":255,"bn.js":254,"dup":54}],265:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"../../elliptic":255,"./key":266,"./signature":267,"dup":55,"hash.js":272}],266:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"../../elliptic":255,"dup":56}],267:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"../../elliptic":255,"bn.js":254,"dup":57}],268:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"../elliptic":255,"dup":58,"hash.js":272}],269:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"dup":59}],270:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"bn.js":254,"dup":60}],271:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],272:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./hash/common":273,"./hash/hmac":274,"./hash/ripemd":275,"./hash/sha":276,"./hash/utils":277,"dup":62}],273:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"../hash":272,"dup":63}],274:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../hash":272,"dup":64}],275:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"../hash":272,"dup":65}],276:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../hash":272,"dup":66}],277:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67,"inherits":348}],278:[function(require,module,exports){
arguments[4][213][0].apply(exports,arguments)
},{"dup":213}],279:[function(require,module,exports){
(function (Buffer){
'use strict';
var inherits = require('inherits')
var md5 = require('./md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var Base = require('cipher-base')

function HashNoConstructor(hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash(hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if ('md5' === alg) return new HashNoConstructor(md5)
  if ('rmd160' === alg || 'ripemd160' === alg) return new HashNoConstructor(rmd160)

  return new Hash(sha(alg))
}

}).call(this,require("buffer").Buffer)

},{"./md5":281,"buffer":151,"cipher-base":282,"inherits":348,"ripemd160":283,"sha.js":285}],280:[function(require,module,exports){
(function (Buffer){
'use strict';
var intSize = 4;
var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
var chrsz = 8;

function toArray(buf, bigEndian) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize));
    buf = Buffer.concat([buf, zeroBuffer], len);
  }

  var arr = [];
  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
  for (var i = 0; i < buf.length; i += intSize) {
    arr.push(fn.call(buf, i));
  }
  return arr;
}

function toBuffer(arr, size, bigEndian) {
  var buf = new Buffer(size);
  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
  for (var i = 0; i < arr.length; i++) {
    fn.call(buf, arr[i], i * 4, true);
  }
  return buf;
}

function hash(buf, fn, hashSize, bigEndian) {
  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
  return toBuffer(arr, hashSize, bigEndian);
}
exports.hash = hash;
}).call(this,require("buffer").Buffer)

},{"buffer":151}],281:[function(require,module,exports){
arguments[4][33][0].apply(exports,arguments)
},{"./helpers":280,"dup":33}],282:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":348,"stream":367,"string_decoder":368}],283:[function(require,module,exports){
(function (Buffer){
/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
/** @preserve
(c) 2012 by Cédric Mesnil. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// constants table
var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]
var hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]

function bytesToWords (bytes) {
  var words = []
  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
    words[b >>> 5] |= bytes[i] << (24 - b % 32)
  }
  return words
}

function wordsToBytes (words) {
  var bytes = []
  for (var b = 0; b < words.length * 32; b += 8) {
    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)
  }
  return bytes
}

function processBlock (H, M, offset) {
  // swap endian
  for (var i = 0; i < 16; i++) {
    var offset_i = offset + i
    var M_offset_i = M[offset_i]

    // Swap
    M[offset_i] = (
      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |
      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)
    )
  }

  // Working variables
  var al, bl, cl, dl, el
  var ar, br, cr, dr, er

  ar = al = H[0]
  br = bl = H[1]
  cr = cl = H[2]
  dr = dl = H[3]
  er = el = H[4]

  // computation
  var t
  for (i = 0; i < 80; i += 1) {
    t = (al + M[offset + zl[i]]) | 0
    if (i < 16) {
      t += f1(bl, cl, dl) + hl[0]
    } else if (i < 32) {
      t += f2(bl, cl, dl) + hl[1]
    } else if (i < 48) {
      t += f3(bl, cl, dl) + hl[2]
    } else if (i < 64) {
      t += f4(bl, cl, dl) + hl[3]
    } else {// if (i<80) {
      t += f5(bl, cl, dl) + hl[4]
    }
    t = t | 0
    t = rotl(t, sl[i])
    t = (t + el) | 0
    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = t

    t = (ar + M[offset + zr[i]]) | 0
    if (i < 16) {
      t += f5(br, cr, dr) + hr[0]
    } else if (i < 32) {
      t += f4(br, cr, dr) + hr[1]
    } else if (i < 48) {
      t += f3(br, cr, dr) + hr[2]
    } else if (i < 64) {
      t += f2(br, cr, dr) + hr[3]
    } else {// if (i<80) {
      t += f1(br, cr, dr) + hr[4]
    }

    t = t | 0
    t = rotl(t, sr[i])
    t = (t + er) | 0
    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = t
  }

  // intermediate hash value
  t = (H[1] + cl + dr) | 0
  H[1] = (H[2] + dl + er) | 0
  H[2] = (H[3] + el + ar) | 0
  H[3] = (H[4] + al + br) | 0
  H[4] = (H[0] + bl + cr) | 0
  H[0] = t
}

function f1 (x, y, z) {
  return ((x) ^ (y) ^ (z))
}

function f2 (x, y, z) {
  return (((x) & (y)) | ((~x) & (z)))
}

function f3 (x, y, z) {
  return (((x) | (~(y))) ^ (z))
}

function f4 (x, y, z) {
  return (((x) & (z)) | ((y) & (~(z))))
}

function f5 (x, y, z) {
  return ((x) ^ ((y) | (~(z))))
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function ripemd160 (message) {
  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]

  if (typeof message === 'string') {
    message = new Buffer(message, 'utf8')
  }

  var m = bytesToWords(message)

  var nBitsLeft = message.length * 8
  var nBitsTotal = message.length * 8

  // Add padding
  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)
  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
    (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |
    (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)
  )

  for (var i = 0; i < m.length; i += 16) {
    processBlock(H, m, i)
  }

  // swap endian
  for (i = 0; i < 5; i++) {
    // shortcut
    var H_i = H[i]

    // Swap
    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |
      (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00)
  }

  var digestbytes = wordsToBytes(H)
  return new Buffer(digestbytes)
}

module.exports = ripemd160

}).call(this,require("buffer").Buffer)

},{"buffer":151}],284:[function(require,module,exports){
(function (Buffer){
// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this,require("buffer").Buffer)

},{"buffer":151}],285:[function(require,module,exports){
arguments[4][38][0].apply(exports,arguments)
},{"./sha":286,"./sha1":287,"./sha224":288,"./sha256":289,"./sha384":290,"./sha512":291,"dup":38}],286:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

}).call(this,require("buffer").Buffer)

},{"./hash":284,"buffer":151,"inherits":348}],287:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

}).call(this,require("buffer").Buffer)

},{"./hash":284,"buffer":151,"inherits":348}],288:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this,require("buffer").Buffer)

},{"./hash":284,"./sha256":289,"buffer":151,"inherits":348}],289:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this,require("buffer").Buffer)

},{"./hash":284,"buffer":151,"inherits":348}],290:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this,require("buffer").Buffer)

},{"./hash":284,"./sha512":291,"buffer":151,"inherits":348}],291:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this,require("buffer").Buffer)

},{"./hash":284,"buffer":151,"inherits":348}],292:[function(require,module,exports){
(function (Buffer){
'use strict';
var createHash = require('create-hash/browser');
var inherits = require('inherits')

var Transform = require('stream').Transform

var ZEROS = new Buffer(128)
ZEROS.fill(0)

function Hmac(alg, key) {
  Transform.call(this)
  alg = alg.toLowerCase()
  if (typeof key === 'string') {
    key = new Buffer(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = createHash(alg).update(key).digest()

  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = new Buffer(blocksize)
  var opad = this._opad = new Buffer(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = createHash(alg).update(ipad)
}

inherits(Hmac, Transform)

Hmac.prototype.update = function (data, enc) {
  this._hash.update(data, enc)

  return this
}

Hmac.prototype._transform = function (data, _, next) {
  this._hash.update(data)

  next()
}

Hmac.prototype._flush = function (next) {
  this.push(this.digest())

  next()
}

Hmac.prototype.digest = function (enc) {
  var h = this._hash.digest()

  return createHash(this._alg).update(this._opad).update(h).digest(enc)
}

module.exports = function createHmac(alg, key) {
  return new Hmac(alg, key)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hash/browser":279,"inherits":348,"stream":367}],293:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)

},{"./lib/dh":294,"./lib/generatePrime":295,"./lib/primes.json":296,"buffer":151}],294:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)

},{"./generatePrime":295,"bn.js":297,"buffer":151,"miller-rabin":298,"randombytes":346}],295:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":297,"miller-rabin":298,"randombytes":346}],296:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],297:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],298:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._rand = function _rand(n) {
  var len = n.bitLength();
  var buf = this.rand.generate(Math.ceil(len / 8));

  // Set low bits
  buf[0] |= 3;

  // Mask high bits
  var mask = len & 0x7;
  if (mask !== 0)
    buf[buf.length - 1] >>= 7 - mask;

  return new bn(buf);
}

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._rand(n2);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._rand(n2);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":297,"brorand":299}],299:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],300:[function(require,module,exports){
(function (Buffer){
var createHmac = require('create-hmac')
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

exports.pbkdf2 = pbkdf2
function pbkdf2 (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  if (typeof callback !== 'function') {
    throw new Error('No callback provided to pbkdf2')
  }

  var result = pbkdf2Sync(password, salt, iterations, keylen, digest)
  setTimeout(function () {
    callback(undefined, result)
  })
}

exports.pbkdf2Sync = pbkdf2Sync
function pbkdf2Sync (password, salt, iterations, keylen, digest) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC) {
    throw new TypeError('Bad key length')
  }

  digest = digest || 'sha1'

  if (!Buffer.isBuffer(password)) password = new Buffer(password, 'binary')
  if (!Buffer.isBuffer(salt)) salt = new Buffer(salt, 'binary')

  var hLen
  var l = 1
  var DK = new Buffer(keylen)
  var block1 = new Buffer(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var r
  var T

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)
    var U = createHmac(digest, password).update(block1).digest()

    if (!hLen) {
      hLen = U.length
      T = new Buffer(hLen)
      l = Math.ceil(keylen / hLen)
      r = keylen - (l - 1) * hLen
    }

    U.copy(T, 0, 0, hLen)

    for (var j = 1; j < iterations; j++) {
      U = createHmac(digest, password).update(U).digest()

      for (var k = 0; k < hLen; k++) {
        T[k] ^= U[k]
      }
    }

    var destPos = (i - 1) * hLen
    var len = (i === l ? r : hLen)
    T.copy(DK, destPos, 0, len)
  }

  return DK
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hmac":292}],301:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":342,"./publicEncrypt":343}],302:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hash":279}],303:[function(require,module,exports){
arguments[4][6][0].apply(exports,arguments)
},{"dup":6}],304:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)

},{"bn.js":303,"buffer":151,"randombytes":346}],305:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],306:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"asn1.js":309,"dup":215}],307:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m
var startRegex = /^-----BEGIN (.*) KEY-----\r?\n/m
var fullRegex = /^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1] + ' KEY'
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)

},{"browserify-aes":326,"buffer":151,"evp_bytestokey":341}],308:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'PUBLIC KEY':
      ndata = asn1.PublicKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)

},{"./aesid.json":305,"./asn1":306,"./fixProc":307,"browserify-aes":326,"buffer":151,"pbkdf2":300}],309:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"./asn1/api":310,"./asn1/base":312,"./asn1/constants":316,"./asn1/decoders":318,"./asn1/encoders":321,"bn.js":303,"dup":218}],310:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"../asn1":309,"dup":219,"inherits":348,"vm":371}],311:[function(require,module,exports){
arguments[4][220][0].apply(exports,arguments)
},{"../base":312,"buffer":151,"dup":220,"inherits":348}],312:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"./buffer":311,"./node":313,"./reporter":314,"dup":221}],313:[function(require,module,exports){
arguments[4][222][0].apply(exports,arguments)
},{"../base":312,"dup":222,"minimalistic-assert":323}],314:[function(require,module,exports){
arguments[4][223][0].apply(exports,arguments)
},{"dup":223,"inherits":348}],315:[function(require,module,exports){
arguments[4][224][0].apply(exports,arguments)
},{"../constants":316,"dup":224}],316:[function(require,module,exports){
arguments[4][225][0].apply(exports,arguments)
},{"./der":315,"dup":225}],317:[function(require,module,exports){
arguments[4][226][0].apply(exports,arguments)
},{"../../asn1":309,"dup":226,"inherits":348}],318:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./der":317,"./pem":319,"dup":227}],319:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"./der":317,"buffer":151,"dup":228,"inherits":348}],320:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"../../asn1":309,"buffer":151,"dup":229,"inherits":348}],321:[function(require,module,exports){
arguments[4][230][0].apply(exports,arguments)
},{"./der":320,"./pem":322,"dup":230}],322:[function(require,module,exports){
arguments[4][231][0].apply(exports,arguments)
},{"./der":320,"dup":231,"inherits":348}],323:[function(require,module,exports){
arguments[4][183][0].apply(exports,arguments)
},{"dup":183}],324:[function(require,module,exports){
(function (Buffer){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec

// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function scrub_vec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
  return false
}

function Global () {
  this.SBOX = []
  this.INV_SBOX = []
  this.SUB_MIX = [[], [], [], []]
  this.INV_SUB_MIX = [[], [], [], []]
  this.init()
  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
}

Global.prototype.init = function () {
  var d, i, sx, t, x, x2, x4, x8, xi, _i
  d = (function () {
    var _i, _results
    _results = []
    for (i = _i = 0; _i < 256; i = ++_i) {
      if (i < 128) {
        _results.push(i << 1)
      } else {
        _results.push((i << 1) ^ 0x11b)
      }
    }
    return _results
  })()
  x = 0
  xi = 0
  for (i = _i = 0; _i < 256; i = ++_i) {
    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    this.SBOX[x] = sx
    this.INV_SBOX[sx] = x
    x2 = d[x]
    x4 = d[x2]
    x8 = d[x4]
    t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    this.SUB_MIX[3][x] = t
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    this.INV_SUB_MIX[3][sx] = t
    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }
  return true
}

var G = new Global()

AES.blockSize = 4 * 4

AES.prototype.blockSize = AES.blockSize

AES.keySize = 256 / 8

AES.prototype.keySize = AES.keySize

function bufferToArray (buf) {
  var len = buf.length / 4
  var out = new Array(len)
  var i = -1
  while (++i < len) {
    out[i] = buf.readUInt32BE(i * 4)
  }
  return out
}
function AES (key) {
  this._key = bufferToArray(key)
  this._doReset()
}

AES.prototype._doReset = function () {
  var invKsRow, keySize, keyWords, ksRow, ksRows, t
  keyWords = this._key
  keySize = keyWords.length
  this._nRounds = keySize + 6
  ksRows = (this._nRounds + 1) * 4
  this._keySchedule = []
  for (ksRow = 0; ksRow < ksRows; ksRow++) {
    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)
  }
  this._invKeySchedule = []
  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
    ksRow = ksRows - invKsRow
    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]
    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]
  }
  return true
}

AES.prototype.encryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var temp = [M[3], M[1]]
  M[1] = temp[0]
  M[3] = temp[1]
  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrub_vec(this._keySchedule)
  scrub_vec(this._invKeySchedule)
  scrub_vec(this._key)
}

AES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {
  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3

  s0 = M[0] ^ keySchedule[0]
  s1 = M[1] ^ keySchedule[1]
  s2 = M[2] ^ keySchedule[2]
  s3 = M[3] ^ keySchedule[3]
  ksRow = 4
  for (var round = 1; round < this._nRounds; round++) {
    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }
  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  return [
    fixup_uint32(t0),
    fixup_uint32(t1),
    fixup_uint32(t2),
    fixup_uint32(t3)
  ]
}

exports.AES = AES

}).call(this,require("buffer").Buffer)

},{"buffer":151}],325:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
inherits(StreamCipher, Transform)
module.exports = StreamCipher

function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])
  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  iv.copy(this._prev)
  this._mode = mode
  var h = new Buffer(4)
  h.fill(0)
  this._ghash = new GHASH(this._cipher.encryptBlock(h))
  this._authTag = null
  this._called = false
}
StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = new Buffer(rump)
      rump.fill(0)
      this._ghash.update(rump)
    }
  }
  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}
StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) {
    throw new Error('Unsupported state or unable to authenticate data')
  }
  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt) {
    if (xorTest(tag, this._authTag)) {
      throw new Error('Unsupported state or unable to authenticate data')
    }
  } else {
    this._authTag = tag
  }
  this._cipher.scrub()
}
StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
    return this._authTag
  } else {
    throw new Error('Attempting to get auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (this._decrypt) {
    this._authTag = tag
  } else {
    throw new Error('Attempting to set auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (!this._called) {
    this._ghash.update(buf)
    this._alen += buf.length
  } else {
    throw new Error('Attempting to set AAD in unsupported state')
  }
}
function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) {
    out++
  }
  var len = Math.min(a.length, b.length)
  var i = -1
  while (++i < len) {
    out += (a[i] ^ b[i])
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"./aes":324,"./ghash":329,"buffer":151,"buffer-xor":338,"cipher-base":339,"inherits":348}],326:[function(require,module,exports){
arguments[4][159][0].apply(exports,arguments)
},{"./decrypter":327,"./encrypter":328,"./modes":330,"dup":159}],327:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
var ebtk = require('evp_bytestokey')

inherits(Decipher, Transform)
function Decipher (mode, key, iv) {
  if (!(this instanceof Decipher)) {
    return new Decipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}
Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}
function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }
  return null
}
Splitter.prototype.flush = function () {
  if (this.cache.length) {
    return this.cache
  }
}
function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) {
    return
  }
  return last.slice(0, 16 - padded)
}

var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createDecipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv, true)
  }
  return new Decipher(modelist[config.mode], password, iv)
}

function createDecipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}
exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

}).call(this,require("buffer").Buffer)

},{"./aes":324,"./authCipher":325,"./modes":330,"./modes/cbc":331,"./modes/cfb":332,"./modes/cfb1":333,"./modes/cfb8":334,"./modes/ctr":335,"./modes/ecb":336,"./modes/ofb":337,"./streamCipher":340,"buffer":151,"cipher-base":339,"evp_bytestokey":341,"inherits":348}],328:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var ebtk = require('evp_bytestokey')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
inherits(Cipher, Transform)
function Cipher (mode, key, iv) {
  if (!(this instanceof Cipher)) {
    return new Cipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}
Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}
Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = new Buffer(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }
  var out = Buffer.concat([this.cache, padBuff])
  return out
}
var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createCipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv)
  }
  return new Cipher(modelist[config.mode], password, iv)
}
function createCipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

}).call(this,require("buffer").Buffer)

},{"./aes":324,"./authCipher":325,"./modes":330,"./modes/cbc":331,"./modes/cfb":332,"./modes/cfb1":333,"./modes/cfb8":334,"./modes/ctr":335,"./modes/ecb":336,"./modes/ofb":337,"./streamCipher":340,"buffer":151,"cipher-base":339,"evp_bytestokey":341,"inherits":348}],329:[function(require,module,exports){
(function (Buffer){
var zeros = new Buffer(16)
zeros.fill(0)
module.exports = GHASH
function GHASH (key) {
  this.h = key
  this.state = new Buffer(16)
  this.state.fill(0)
  this.cache = new Buffer('')
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsb_Vi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi = xor(Zi, Vi)
    }

    // Store the value of LSB(V_i)
    lsb_Vi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsb_Vi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}
GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}
GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, zeros], 16))
  }
  this.ghash(fromArray([
    0, abl,
    0, bl
  ]))
  return this.state
}

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}
function fromArray (out) {
  out = out.map(fixup_uint32)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}
var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function xor (a, b) {
  return [
    a[0] ^ b[0],
    a[1] ^ b[1],
    a[2] ^ b[2],
    a[3] ^ b[3]
  ]
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],330:[function(require,module,exports){
arguments[4][163][0].apply(exports,arguments)
},{"dup":163}],331:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"buffer-xor":338,"dup":164}],332:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

exports.encrypt = function (self, data, decrypt) {
  var out = new Buffer('')
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = new Buffer('')
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}
function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":338}],333:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}
function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = new Buffer(buffer.length)
  buffer = Buffer.concat([buffer, new Buffer([value])])
  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],334:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam
  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],335:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}

function getBlock (self) {
  var out = self._cipher.encryptBlock(self._prev)
  incr32(self._prev)
  return out
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":338}],336:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],337:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"buffer-xor":338}],338:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)

},{"buffer":151}],339:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"inherits":348,"stream":367,"string_decoder":368}],340:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')

inherits(StreamCipher, Transform)
module.exports = StreamCipher
function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  iv.copy(this._prev)
  this._mode = mode
}
StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}
StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

}).call(this,require("buffer").Buffer)

},{"./aes":324,"buffer":151,"cipher-base":339,"inherits":348}],341:[function(require,module,exports){
(function (Buffer){
var md5 = require('create-hash/md5')
module.exports = EVP_BytesToKey
function EVP_BytesToKey (password, salt, keyLen, ivLen) {
  if (!Buffer.isBuffer(password)) {
    password = new Buffer(password, 'binary')
  }
  if (salt && !Buffer.isBuffer(salt)) {
    salt = new Buffer(salt, 'binary')
  }
  keyLen = keyLen / 8
  ivLen = ivLen || 0
  var ki = 0
  var ii = 0
  var key = new Buffer(keyLen)
  var iv = new Buffer(ivLen)
  var addmd = 0
  var md_buf
  var i
  var bufs = []
  while (true) {
    if (addmd++ > 0) {
      bufs.push(md_buf)
    }
    bufs.push(password)
    if (salt) {
      bufs.push(salt)
    }
    md_buf = md5(Buffer.concat(bufs))
    bufs = []
    i = 0
    if (keyLen > 0) {
      while (true) {
        if (keyLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        key[ki++] = md_buf[i]
        keyLen--
        i++
      }
    }
    if (ivLen > 0 && i !== md_buf.length) {
      while (true) {
        if (ivLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        iv[ii++] = md_buf[i]
        ivLen--
        i++
      }
    }
    if (keyLen === 0 && ivLen === 0) {
      break
    }
  }
  for (i = 0; i < md_buf.length; i++) {
    md_buf[i] = 0
  }
  return {
    key: key,
    iv: iv
  }
}

}).call(this,require("buffer").Buffer)

},{"buffer":151,"create-hash/md5":281}],342:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)

},{"./mgf":302,"./withPublic":344,"./xor":345,"bn.js":303,"browserify-rsa":304,"buffer":151,"create-hash":279,"parse-asn1":308}],343:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)

},{"./mgf":302,"./withPublic":344,"./xor":345,"bn.js":303,"browserify-rsa":304,"buffer":151,"create-hash":279,"parse-asn1":308,"randombytes":346}],344:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)

},{"bn.js":303,"buffer":151}],345:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],346:[function(require,module,exports){
(function (process,global,Buffer){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}

var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }
  // phantomjs doesn't like a buffer being passed here
  var bytes = new Buffer(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)

},{"_process":351,"buffer":151}],347:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],348:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"dup":35}],349:[function(require,module,exports){
/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */

module.exports = function (obj) {
  return !!(obj != null &&
    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
      (obj.constructor &&
      typeof obj.constructor.isBuffer === 'function' &&
      obj.constructor.isBuffer(obj))
    ))
}

},{}],350:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))

},{"_process":351}],351:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

(function () {
  try {
    cachedSetTimeout = setTimeout;
  } catch (e) {
    cachedSetTimeout = function () {
      throw new Error('setTimeout is not defined');
    }
  }
  try {
    cachedClearTimeout = clearTimeout;
  } catch (e) {
    cachedClearTimeout = function () {
      throw new Error('clearTimeout is not defined');
    }
  }
} ())
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = cachedSetTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    cachedClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        cachedSetTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],352:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":353}],353:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":355,"./_stream_writable":357,"core-util-is":359,"inherits":348,"process-nextick-args":361}],354:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":356,"core-util-is":359,"inherits":348}],355:[function(require,module,exports){
(function (process){
'use strict';

module.exports = Readable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

var hasPrependListener = typeof EE.prototype.prependListener === 'function';

function prependListener(emitter, event, fn) {
  if (hasPrependListener) return emitter.prependListener(event, fn);

  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS. This is here
  // only because this code needs to continue to work with older versions
  // of Node.js that do not include the prependListener() method. The goal
  // is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

var Duplex;
function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

var Duplex;
function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = bufferShim.from(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var _e = new Error('stream.unshift() after end event');
      stream.emit('error', _e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended) return 0;

  if (state.objectMode) return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length) return state.buffer[0].length;else return state.length;
  }

  if (n <= 0) return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else {
      return state.length;
    }
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading) n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended) state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0) endReadable(this);

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var _i = 0; _i < len; _i++) {
      dests[_i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1) return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && !this._readableState.endEmitted) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function (ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0) return null;

  if (length === 0) ret = null;else if (objectMode) ret = list.shift();else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode) ret = list.join('');else if (list.length === 1) ret = list[0];else ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode) ret = '';else ret = bufferShim.allocUnsafe(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var _buf = list[0];
        var cpy = Math.min(n - c, _buf.length);

        if (stringMode) ret += _buf.slice(0, cpy);else _buf.copy(ret, c, 0, cpy);

        if (cpy < _buf.length) list[0] = _buf.slice(cpy);else list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'))

},{"./_stream_duplex":353,"_process":351,"buffer":151,"buffer-shims":358,"core-util-is":359,"events":347,"inherits":348,"isarray":360,"process-nextick-args":361,"string_decoder/":368,"util":150}],356:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er) {
      done(stream, er);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('Not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er) {
  if (er) return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":353,"core-util-is":359,"inherits":348}],357:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;
/*<replacement>*/
var bufferShim = require('buffer-shims');
/*</replacement>*/

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

var Duplex;
function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function writableStateGetBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

var Duplex;
function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;
  // Always throw error if a null is written
  // if we are not in object mode then throw
  // if it is not a buffer, string, or undefined.
  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = bufferShim.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
        afterWrite(stream, state, finished, cb);
      }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}
}).call(this,require('_process'))

},{"./_stream_duplex":353,"_process":351,"buffer":151,"buffer-shims":358,"core-util-is":359,"events":347,"inherits":348,"process-nextick-args":361,"util-deprecate":362}],358:[function(require,module,exports){
(function (global){
'use strict';

var buffer = require('buffer');
var Buffer = buffer.Buffer;
var SlowBuffer = buffer.SlowBuffer;
var MAX_LEN = buffer.kMaxLength || 2147483647;
exports.alloc = function alloc(size, fill, encoding) {
  if (typeof Buffer.alloc === 'function') {
    return Buffer.alloc(size, fill, encoding);
  }
  if (typeof encoding === 'number') {
    throw new TypeError('encoding must not be number');
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  var enc = encoding;
  var _fill = fill;
  if (_fill === undefined) {
    enc = undefined;
    _fill = 0;
  }
  var buf = new Buffer(size);
  if (typeof _fill === 'string') {
    var fillBuf = new Buffer(_fill, enc);
    var flen = fillBuf.length;
    var i = -1;
    while (++i < size) {
      buf[i] = fillBuf[i % flen];
    }
  } else {
    buf.fill(_fill);
  }
  return buf;
}
exports.allocUnsafe = function allocUnsafe(size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    return Buffer.allocUnsafe(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size > MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new Buffer(size);
}
exports.from = function from(value, encodingOrOffset, length) {
  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
    return Buffer.from(value, encodingOrOffset, length);
  }
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number');
  }
  if (typeof value === 'string') {
    return new Buffer(value, encodingOrOffset);
  }
  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    var offset = encodingOrOffset;
    if (arguments.length === 1) {
      return new Buffer(value);
    }
    if (typeof offset === 'undefined') {
      offset = 0;
    }
    var len = length;
    if (typeof len === 'undefined') {
      len = value.byteLength - offset;
    }
    if (offset >= value.byteLength) {
      throw new RangeError('\'offset\' is out of bounds');
    }
    if (len > value.byteLength - offset) {
      throw new RangeError('\'length\' is out of bounds');
    }
    return new Buffer(value.slice(offset, offset + len));
  }
  if (Buffer.isBuffer(value)) {
    var out = new Buffer(value.length);
    value.copy(out, 0, 0, value.length);
    return out;
  }
  if (value) {
    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
      return new Buffer(value);
    }
    if (value.type === 'Buffer' && Array.isArray(value.data)) {
      return new Buffer(value.data);
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
}
exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
  if (typeof Buffer.allocUnsafeSlow === 'function') {
    return Buffer.allocUnsafeSlow(size);
  }
  if (typeof size !== 'number') {
    throw new TypeError('size must be a number');
  }
  if (size >= MAX_LEN) {
    throw new RangeError('size is too large');
  }
  return new SlowBuffer(size);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"buffer":151}],359:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../../../insert-module-globals/node_modules/is-buffer/index.js")})

},{"../../../../insert-module-globals/node_modules/is-buffer/index.js":349}],360:[function(require,module,exports){
arguments[4][154][0].apply(exports,arguments)
},{"dup":154}],361:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

}).call(this,require('_process'))

},{"_process":351}],362:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],363:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":354}],364:[function(require,module,exports){
(function (process){
var Stream = (function (){
  try {
    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
  } catch(_){}
}());
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
}

}).call(this,require('_process'))

},{"./lib/_stream_duplex.js":353,"./lib/_stream_passthrough.js":354,"./lib/_stream_readable.js":355,"./lib/_stream_transform.js":356,"./lib/_stream_writable.js":357,"_process":351}],365:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":356}],366:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":357}],367:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":347,"inherits":348,"readable-stream/duplex.js":352,"readable-stream/passthrough.js":363,"readable-stream/readable.js":364,"readable-stream/transform.js":365,"readable-stream/writable.js":366}],368:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":151}],369:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],370:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./support/isBuffer":369,"_process":351,"inherits":348}],371:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":372}],372:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],373:[function(require,module,exports){
(function (process){
if (typeof Map !== 'function' || (process && process.env && process.env.TEST_MAPORSIMILAR === 'true')) {
	module.exports = require('./similar');
}
else {
	module.exports = Map;
}
}).call(this,require('_process'))

},{"./similar":374,"_process":351}],374:[function(require,module,exports){
function Similar() {
	this.list = [];
	this.lastItem = undefined;
	this.size = 0;

	return this;
}

Similar.prototype.get = function(key) {
	var index;

	if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
		return this.lastItem.val;
	}

	index = this.indexOf(key);
	if (index >= 0) {
		this.lastItem = this.list[index];
		return this.list[index].val;
	}

	return undefined;
};

Similar.prototype.set = function(key, val) {
	var index;

	if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
		this.lastItem.val = val;
		return this;
	}

	index = this.indexOf(key);
	if (index >= 0) {
		this.lastItem = this.list[index];
		this.list[index].val = val;
		return this;
	}

	this.lastItem = { key: key, val: val };
	this.list.push(this.lastItem);
	this.size++;

	return this;
};

Similar.prototype.delete = function(key) {
	var index;

	if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
		this.lastItem = undefined;
	}

	index = this.indexOf(key);
	if (index >= 0) {
		this.size--;
		return this.list.splice(index, 1)[0];
	}

	return undefined;
};


// important that has() doesn't use get() in case an existing key has a falsy value, in which case has() would return false
Similar.prototype.has = function(key) {
	var index;

	if (this.lastItem && this.isEqual(this.lastItem.key, key)) {
		return true;
	}

	index = this.indexOf(key);
	if (index >= 0) {
		this.lastItem = this.list[index];
		return true;
	}

	return false;
};

Similar.prototype.forEach = function(callback, thisArg) {
	var i;
	for (i = 0; i < this.size; i++) {
		callback.call(thisArg || this, this.list[i].val, this.list[i].key, this);
	}
};

Similar.prototype.indexOf = function(key) {
	var i;
	for (i = 0; i < this.size; i++) {
		if (this.isEqual(this.list[i].key, key)) {
			return i;
		}
	}
	return -1;
};

// check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)
Similar.prototype.isEqual = function(val1, val2) {
	return val1 === val2 || (val1 !== val1 && val2 !== val2);
};

module.exports = Similar;
},{}],375:[function(require,module,exports){
var MapOrSimilar = require('map-or-similar');

module.exports = function (limit) {
	var cache = new MapOrSimilar(),
		lru = [];

	return function (fn) {
		var memoizerific = function () {
			var currentCache = cache,
				newMap,
				fnResult,
				argsLengthMinusOne = arguments.length - 1,
				lruPath = Array(argsLengthMinusOne + 1),
				isMemoized = true,
				i;

			if ((memoizerific.numArgs || memoizerific.numArgs === 0) && memoizerific.numArgs !== argsLengthMinusOne + 1) {
				throw new Error('Memoizerific functions should always be called with the same number of arguments');
			}

			// loop through each argument to traverse the map tree
			for (i = 0; i < argsLengthMinusOne; i++) {
				lruPath[i] = {
					cacheItem: currentCache,
					arg: arguments[i]
				};

				// climb through the hierarchical map tree until the second-last argument has been found, or an argument is missing.
				// if all arguments up to the second-last have been found, this will potentially be a cache hit (determined below)
				if (currentCache.has(arguments[i])) {
					currentCache = currentCache.get(arguments[i]);
					continue;
				}

				isMemoized = false;

				// make maps until last value
				newMap = new MapOrSimilar();
				currentCache.set(arguments[i], newMap);
				currentCache = newMap;
			}

			// we are at the last arg, check if it is really memoized
			if (isMemoized) {
				if (currentCache.has(arguments[argsLengthMinusOne])) {
					fnResult = currentCache.get(arguments[argsLengthMinusOne]);
				}
				else {
					isMemoized = false;
				}
			}

			if (!isMemoized) {
				fnResult = fn.apply(null, arguments);
				currentCache.set(arguments[argsLengthMinusOne], fnResult);
			}

			if (limit > 0) {
				lruPath[argsLengthMinusOne] = {
					cacheItem: currentCache,
					arg: arguments[argsLengthMinusOne]
				};

				if (isMemoized) {
					moveToMostRecentLru(lru, lruPath);
				}
				else {
					lru.push(lruPath);
				}

				if (lru.length > limit) {
					removeCachedResult(lru.shift());
				}
			}

			memoizerific.wasMemoized = isMemoized;
			memoizerific.numArgs = argsLengthMinusOne + 1;

			return fnResult;
		};

		memoizerific.limit = limit;
		memoizerific.wasMemoized = false;
		memoizerific.cache = cache;
		memoizerific.lru = lru;

		return memoizerific;
	};
};

// move current args to most recent position
function moveToMostRecentLru(lru, lruPath) {
	var lruLen = lru.length,
		lruPathLen = lruPath.length,
		isMatch,
		i, ii;

	for (i = 0; i < lruLen; i++) {
		isMatch = true;
		for (ii = 0; ii < lruPathLen; ii++) {
			if (!isEqual(lru[i][ii].arg, lruPath[ii].arg)) {
				isMatch = false;
				break;
			}
		}
		if (isMatch) {
			break;
		}
	}

	lru.push(lru.splice(i, 1)[0]);
}

// remove least recently used cache item and all dead branches
function removeCachedResult(removedLru) {
	var removedLruLen = removedLru.length,
		currentLru = removedLru[removedLruLen - 1],
		tmp,
		i;

	currentLru.cacheItem.delete(currentLru.arg);

	// walk down the tree removing dead branches (size 0) along the way
	for (i = removedLruLen - 2; i >= 0; i--) {
		currentLru = removedLru[i];
		tmp = currentLru.cacheItem.get(currentLru.arg);

		if (!tmp || !tmp.size) {
			currentLru.cacheItem.delete(currentLru.arg);
		} else {
			break;
		}
	}
}

// check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)
function isEqual(val1, val2) {
	return val1 === val2 || (val1 !== val1 && val2 !== val2);
}
},{"map-or-similar":373}],376:[function(require,module,exports){
'use strict';

exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch;
    var getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;
},{}],377:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports["default"] = applyMiddleware;

var _compose = require('./compose');

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, initialState, enhancer) {
      var store = createStore(reducer, initialState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
},{"./compose":380}],378:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports["default"] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
},{}],379:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports["default"] = combineReducers;

var _createStore = require('./createStore');

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require('./utils/warning');

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2["default"])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key);
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerSanity(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
    }
  });
}

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */
function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];
    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var sanityError;
  try {
    assertReducerSanity(finalReducers);
  } catch (e) {
    sanityError = e;
  }

  return function combination() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var action = arguments[1];

    if (sanityError) {
      throw sanityError;
    }

    if ("development" !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
      if (warningMessage) {
        (0, _warning2["default"])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var i = 0; i < finalReducerKeys.length; i++) {
      var key = finalReducerKeys[i];
      var reducer = finalReducers[key];
      var previousStateForKey = state[key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(key, action);
        throw new Error(errorMessage);
      }
      nextState[key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
},{"./createStore":381,"./utils/warning":383,"lodash/isPlainObject":387}],380:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = compose;
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  } else {
    var _ret = function () {
      var last = funcs[funcs.length - 1];
      var rest = funcs.slice(0, -1);
      return {
        v: function v() {
          return rest.reduceRight(function (composed, f) {
            return f(composed);
          }, last.apply(undefined, arguments));
        }
      };
    }();

    if (typeof _ret === "object") return _ret.v;
  }
}
},{}],381:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.ActionTypes = undefined;
exports["default"] = createStore;

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require('symbol-observable');

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'
};

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [initialState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} enhancer The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */
function createStore(reducer, initialState, enhancer) {
  var _ref2;

  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
    enhancer = initialState;
    initialState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, initialState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = initialState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */
  function getState() {
    return currentState;
  }

  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */
  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */
  function dispatch(action) {
    if (!(0, _isPlainObject2["default"])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      listeners[i]();
    }

    return action;
  }

  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/zenparsing/es-observable
   */
  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */

      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2["default"]] = function () {
      return this;
    }, _ref;
  }

  // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.
  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
}
},{"lodash/isPlainObject":387,"symbol-observable":388}],382:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = require('./createStore');

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = require('./combineReducers');

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = require('./bindActionCreators');

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = require('./applyMiddleware');

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = require('./compose');

var _compose2 = _interopRequireDefault(_compose);

var _warning = require('./utils/warning');

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
function isCrushed() {}

if ("development" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2["default"];
exports.combineReducers = _combineReducers2["default"];
exports.bindActionCreators = _bindActionCreators2["default"];
exports.applyMiddleware = _applyMiddleware2["default"];
exports.compose = _compose2["default"];
},{"./applyMiddleware":377,"./bindActionCreators":378,"./combineReducers":379,"./compose":380,"./createStore":381,"./utils/warning":383}],383:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports["default"] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}
},{}],384:[function(require,module,exports){
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetPrototype = Object.getPrototypeOf;

/**
 * Gets the `[[Prototype]]` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {null|Object} Returns the `[[Prototype]]`.
 */
function getPrototype(value) {
  return nativeGetPrototype(Object(value));
}

module.exports = getPrototype;

},{}],385:[function(require,module,exports){
/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

module.exports = isHostObject;

},{}],386:[function(require,module,exports){
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],387:[function(require,module,exports){
var getPrototype = require('./_getPrototype'),
    isHostObject = require('./_isHostObject'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object,
 *  else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) ||
      objectToString.call(value) != objectTag || isHostObject(value)) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return (typeof Ctor == 'function' &&
    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
}

module.exports = isPlainObject;

},{"./_getPrototype":384,"./_isHostObject":385,"./isObjectLike":386}],388:[function(require,module,exports){
(function (global){
/* global window */
'use strict';

module.exports = require('./ponyfill')(global || window || this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./ponyfill":389}],389:[function(require,module,exports){
'use strict';

module.exports = function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};

},{}],390:[function(require,module,exports){
(function (process,Buffer){
!function(globals){
'use strict'

//*** UMD BEGIN
if (typeof define !== 'undefined' && define.amd) { //require.js / AMD
  define([], function() {
    return secureRandom
  })
} else if (typeof module !== 'undefined' && module.exports) { //CommonJS
  module.exports = secureRandom
} else { //script / browser
  globals.secureRandom = secureRandom
}
//*** UMD END

//options.type is the only valid option
function secureRandom(count, options) {
  options = options || {type: 'Array'}
  //we check for process.pid to prevent browserify from tricking us
  if (typeof process != 'undefined' && typeof process.pid == 'number') {
    return nodeRandom(count, options)
  } else {
    var crypto = window.crypto || window.msCrypto
    if (!crypto) throw new Error("Your browser does not support window.crypto.")
    return browserRandom(count, options)
  }
}

function nodeRandom(count, options) {
  var crypto = require('crypto')
  var buf = crypto.randomBytes(count)

  switch (options.type) {
    case 'Array':
      return [].slice.call(buf)
    case 'Buffer':
      return buf
    case 'Uint8Array':
      var arr = new Uint8Array(count)
      for (var i = 0; i < count; ++i) { arr[i] = buf.readUInt8(i) }
      return arr
    default:
      throw new Error(options.type + " is unsupported.")
  }
}

function browserRandom(count, options) {
  var nativeArr = new Uint8Array(count)
  var crypto = window.crypto || window.msCrypto
  crypto.getRandomValues(nativeArr)

  switch (options.type) {
    case 'Array':
      return [].slice.call(nativeArr)
    case 'Buffer':
      try { var b = new Buffer(1) } catch(e) { throw new Error('Buffer not supported in this environment. Use Node.js or Browserify for browser support.')}
      return new Buffer(nativeArr)
    case 'Uint8Array':
      return nativeArr
    default:
      throw new Error(options.type + " is unsupported.")
  }
}

secureRandom.randomArray = function(byteCount) {
  return secureRandom(byteCount, {type: 'Array'})
}

secureRandom.randomUint8Array = function(byteCount) {
  return secureRandom(byteCount, {type: 'Uint8Array'})
}

secureRandom.randomBuffer = function(byteCount) {
  return secureRandom(byteCount, {type: 'Buffer'})
}


}(this);

}).call(this,require('_process'),require("buffer").Buffer)

},{"_process":351,"buffer":151,"crypto":150}],391:[function(require,module,exports){
'use strict';

var _augurUiReactComponents = require('augur-ui-react-components');

var _selectors = require('./selectors');

var _selectors2 = _interopRequireDefault(_selectors);

var _initAugur = require('./modules/app/actions/init-augur');

var _showLink = require('./modules/link/actions/show-link');

var _store = require('./store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var appElement = document.getElementById('app');
// import * as selectors from './selectors';

if ("development" === 'development') {
  Object.defineProperty(window, 'state', { get: _store2.default.getState, enumerable: true });
  window.selectors = _selectors2.default;
  window.App = _augurUiReactComponents.App;
  console.log('*********************************************\n DEVELOPMENT MODE\n window.selectors\n window.state\n window.augurjs\n *********************************************\n');
}

_store2.default.dispatch((0, _showLink.showLink)(window.location.pathname + window.location.search));
_store2.default.dispatch((0, _initAugur.initAugur)());

// store.dispatch(MarketsActions.listenToMarkets());

_store2.default.subscribe(function () {
  return (0, _augurUiReactComponents.App)(appElement, _selectors2.default);
}); // eslint-disable-line new-cap

window.onpopstate = function (e) {
  _store2.default.dispatch((0, _showLink.showLink)(window.location.pathname + window.location.search));
};

},{"./modules/app/actions/init-augur":392,"./modules/link/actions/show-link":446,"./selectors":531,"./store":533,"augur-ui-react-components":1}],392:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initAugur = initAugur;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _updateConnection = require('../../app/actions/update-connection');

var _updateBranch = require('../../app/actions/update-branch');

var _updateBlockchain = require('../../app/actions/update-blockchain');

var _listenToUpdates = require('../../app/actions/listen-to-updates');

var _loadLoginAccount = require('../../auth/actions/load-login-account');

var _loadMarkets = require('../../markets/actions/load-markets');

var _loadFullMarket = require('../../market/actions/load-full-market');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function initAugur() {
	return function (dispatch, getState) {
		AugurJS.connect(function (err, connected) {
			if (err) {
				return console.error('connect failure:', err);
			}

			dispatch((0, _updateConnection.updateConnectionStatus)(connected));
			dispatch((0, _loadLoginAccount.loadLoginAccount)());

			AugurJS.loadBranch(_network.BRANCH_ID, function (error, branch) {
				if (error) {
					return console.log('ERROR loadBranch', error);
				}

				dispatch((0, _updateBranch.updateBranch)(branch));

				dispatch((0, _loadMarkets.loadMarkets)());

				var _getState = getState();

				var selectedMarketID = _getState.selectedMarketID;

				if (selectedMarketID !== null) {
					dispatch((0, _loadFullMarket.loadFullMarket)(selectedMarketID));
				}

				dispatch((0, _updateBlockchain.updateBlockchain)(function () {
					dispatch((0, _listenToUpdates.listenToUpdates)());
				}));
			});
		});
	};
}

},{"../../../services/augurjs":532,"../../app/actions/listen-to-updates":393,"../../app/actions/update-blockchain":394,"../../app/actions/update-branch":395,"../../app/actions/update-connection":396,"../../app/constants/network":397,"../../auth/actions/load-login-account":405,"../../market/actions/load-full-market":450,"../../markets/actions/load-markets":457}],393:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.listenToUpdates = listenToUpdates;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateAssets = require('../../auth/actions/update-assets');

var _updateBlockchain = require('../../app/actions/update-blockchain');

var _loadMarket = require('../../market/actions/load-market');

var _updateOutcomePrice = require('../../markets/actions/update-outcome-price');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function listenToUpdates() {
	return function (dispatch, getState) {
		AugurJS.listenToUpdates(

		// new block
		function () {
			dispatch((0, _updateAssets.updateAssets)());
			dispatch((0, _updateBlockchain.updateBlockchain)());
		},

		// transactions involving augur contracts
		function () {
			// console.log('augur contracts:', filtrate)
		},

		// outcome price update, { marketId, outcome (id), price }
		function (errNone, outcomePriceChange) {
			if (!outcomePriceChange || !outcomePriceChange.marketId || !outcomePriceChange.outcome || !outcomePriceChange.price) {
				return;
			}
			dispatch((0, _updateOutcomePrice.updateOutcomePrice)(outcomePriceChange.marketId, outcomePriceChange.outcome, parseFloat(outcomePriceChange.price)));
		},

		// new market, result = { blockNumber, marketId }
		function (errNone, result) {
			if (!result.marketId) {
				return;
			}
			dispatch((0, _loadMarket.loadMarket)(result.marketId));
		});
	};
}

},{"../../../services/augurjs":532,"../../app/actions/update-blockchain":394,"../../auth/actions/update-assets":409,"../../market/actions/load-market":451,"../../markets/actions/update-outcome-price":463}],394:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.UPDATE_BLOCKCHAIN = undefined;
exports.incrementReportPeriod = incrementReportPeriod;
exports.updateBlockchain = updateBlockchain;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _collectFees = require('../../reports/actions/collect-fees');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var UPDATE_BLOCKCHAIN = exports.UPDATE_BLOCKCHAIN = 'UPDATE_BLOCKCHAIN';

// import { commitReports } from '../../reports/actions/commit-reports';


var isAlreadyUpdatingBlockchain = false;

function incrementReportPeriod(cb) {
	return function (dispatch, getState) {
		var _getState = getState();

		var blockchain = _getState.blockchain;

		var expectedReportPeriod = blockchain.currentPeriod - 1;

		// if the report period is as expected, exit
		if (blockchain.reportPeriod === expectedReportPeriod) {
			return cb && cb();
		}

		// load report period from chain to see if that one is as expected
		AugurJS.getReportPeriod(_network.BRANCH_ID, function (error, chainReportPeriod) {
			if (error) {
				console.log('ERROR getReportPeriod1', _network.BRANCH_ID, error);
				return cb && cb();
			}

			var parsedChainReportPeriod = parseInt(chainReportPeriod, 10);

			// if the report period on chain is up-to-date, update ours to match and exit
			if (parsedChainReportPeriod === expectedReportPeriod) {
				dispatch({ type: UPDATE_BLOCKCHAIN, data: { reportPeriod: expectedReportPeriod } });
				return cb && cb();
			}

			// if we are the first to encounter the new period, we get the
			// honor of incrementing it on chain for everyone
			AugurJS.incrementPeriodAfterReporting(_network.BRANCH_ID, function (err, res) {
				if (err) {
					console.error('ERROR incrementPeriodAfterReporting()', err);
					return cb && cb();
				}

				// check if it worked out
				AugurJS.getReportPeriod(_network.BRANCH_ID, function (er, verifyReportPeriod) {
					if (er) {
						console.log('ERROR getReportPeriod2', er);
						return cb && cb();
					}
					if (parseInt(verifyReportPeriod, 10) !== expectedReportPeriod) {
						console.warn('Report period not as expected after being incremented, actual:', verifyReportPeriod, 'expected:', expectedReportPeriod);
						return cb && cb();
					}
					dispatch({ type: UPDATE_BLOCKCHAIN, data: { reportPeriod: expectedReportPeriod } });
					return cb && cb();
				});
			});
		});
	};
}

function updateBlockchain(cb) {
	return function (dispatch, getState) {
		if (isAlreadyUpdatingBlockchain) {
			return; // don't trigger cb on this failure
		}

		isAlreadyUpdatingBlockchain = true;

		// load latest block number
		AugurJS.loadCurrentBlock(function (currentBlockNumber) {
			var _getState2 = getState();

			var branch = _getState2.branch;
			var blockchain = _getState2.blockchain;

			var currentPeriod = Math.floor(currentBlockNumber / branch.periodLength);
			var isChangedCurrentPeriod = currentPeriod !== blockchain.currentPeriod;
			var isReportConfirmationPhase = currentBlockNumber % branch.periodLength > branch.periodLength / 2;
			var isChangedReportPhase = isReportConfirmationPhase !== blockchain.isReportConfirmationPhase;

			if (!currentBlockNumber || currentBlockNumber !== parseInt(currentBlockNumber, 10)) {
				return; // don't trigger cb on this failure
			}

			// update blockchain state
			dispatch({
				type: UPDATE_BLOCKCHAIN,
				data: {
					currentBlockNumber: currentBlockNumber,
					currentBlockMillisSinceEpoch: Date.now(),
					currentPeriod: currentPeriod,
					isReportConfirmationPhase: isReportConfirmationPhase
				}
			});

			// if the report *period* changed this block, do some extra stuff (also triggers the first time blockchain is being set)
			if (isChangedCurrentPeriod) {
				dispatch(incrementReportPeriod(function () {
					// if the report *phase* changed this block, do some extra stuff
					if (isChangedReportPhase) {
						// dispatch(commitReports());
						dispatch((0, _collectFees.collectFees)());
					}

					isAlreadyUpdatingBlockchain = false;
					return cb && cb();
				}));
			} else {
				isAlreadyUpdatingBlockchain = false;
				return cb && cb();
			}
		});
	};
}

},{"../../../services/augurjs":532,"../../app/constants/network":397,"../../reports/actions/collect-fees":504}],395:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateBranch = updateBranch;
var UPDATE_BRANCH = exports.UPDATE_BRANCH = 'UPDATE_BRANCH';

function updateBranch(branch) {
	return { type: UPDATE_BRANCH, branch: branch };
}

},{}],396:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateConnectionStatus = updateConnectionStatus;
var UPDATE_CONNECTION_STATUS = exports.UPDATE_CONNECTION_STATUS = 'UPDATE_CONNECTION_STATUS';

/**
 * @param {Boolean} isConnected
 * @return {{type: string, isConnected: *}} returns action
 */
function updateConnectionStatus(isConnected) {
	return {
		type: UPDATE_CONNECTION_STATUS,
		isConnected: isConnected
	};
}

},{}],397:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var MILLIS_PER_BLOCK = exports.MILLIS_PER_BLOCK = 12000;
var BRANCH_ID = exports.BRANCH_ID = 1010101;

},{}],398:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var MARKETS = exports.MARKETS = 'markets';
var MAKE = exports.MAKE = 'make';
var POSITIONS = exports.POSITIONS = 'positions';
var TRANSACTIONS = exports.TRANSACTIONS = 'transactions';
var M = exports.M = 'm';

var DEFAULT_PAGE = exports.DEFAULT_PAGE = MARKETS;

},{}],399:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var activePage = arguments.length <= 0 || arguments[0] === undefined ? _pages.DEFAULT_PAGE : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _showLink.SHOW_LINK:
			return _paths.PATHS_PAGES[action.parsedURL.pathArray[0]] || _pages.DEFAULT_PAGE;

		default:
			return activePage;
	}
};

var _showLink = require('../../link/actions/show-link');

var _pages = require('../../app/constants/pages');

var _paths = require('../../link/constants/paths');

},{"../../app/constants/pages":398,"../../link/actions/show-link":446,"../../link/constants/paths":448}],400:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var blockchain = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateBlockchain.UPDATE_BLOCKCHAIN:
			return _extends({}, blockchain, action.data);

		default:
			return blockchain;
	}
};

var _updateBlockchain = require('../../app/actions/update-blockchain');

},{"../../app/actions/update-blockchain":394}],401:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var branch = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateBranch.UPDATE_BRANCH:
			return _extends({}, branch, action.branch);

		default:
			return branch;}
};

var _updateBranch = require('../../app/actions/update-branch');

},{"../../app/actions/update-branch":395}],402:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * Author: priecint
                                                                                                                                                                                                                                                                   */

exports.default = function () {
	var connection = arguments.length <= 0 || arguments[0] === undefined ? { isConnected: false } : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateConnection.UPDATE_CONNECTION_STATUS:
			return _extends({}, connection, {
				isConnected: action.isConnected
			});

		default:
			return connection;
	}
};

var _updateConnection = require('../../app/actions/update-connection');

},{"../../app/actions/update-connection":396}],403:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var activePage = _store$getState.activePage;

	return activePage;
};

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

},{"../../../store":533}],404:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.authError = authError;
var AUTH_ERROR = exports.AUTH_ERROR = 'AUTH_ERROR';

function authError(err) {
	return { type: AUTH_ERROR, err: err };
}

},{}],405:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadLoginAccountDependents = loadLoginAccountDependents;
exports.loadLoginAccountLocalStorage = loadLoginAccountLocalStorage;
exports.loadLoginAccount = loadLoginAccount;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _statuses = require('../../transactions/constants/statuses');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

var _updateAssets = require('../../auth/actions/update-assets');

var _loadAccountTrades = require('../../positions/actions/load-account-trades');

var _loadReports = require('../../reports/actions/load-reports');

var _updateReports = require('../../reports/actions/update-reports');

var _updateFavorites = require('../../markets/actions/update-favorites');

var _updateAccountTradesData = require('../../positions/actions/update-account-trades-data');

var _updateTransactionsData = require('../../transactions/actions/update-transactions-data');

var _penalizeWrongReports = require('../../reports/actions/penalize-wrong-reports');

var _collectFees = require('../../reports/actions/collect-fees');

var _closeMarkets = require('../../reports/actions/close-markets');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadLoginAccountDependents() {
	return function (dispatch, getState) {
		var _getState = getState();

		var marketsData = _getState.marketsData;

		// dispatch(loadMeanTradePrices());

		dispatch((0, _updateAssets.updateAssets)());
		dispatch((0, _loadAccountTrades.loadAccountTrades)());

		// clear and load reports for any markets that have been loaded
		// (partly to handle signing out of one account and into another)
		dispatch((0, _updateReports.clearReports)());
		dispatch((0, _loadReports.loadReports)(marketsData));

		// dispatch(commitReports());
		dispatch((0, _collectFees.collectFees)());
		dispatch((0, _penalizeWrongReports.penalizeWrongReports)(marketsData));
		dispatch((0, _closeMarkets.closeMarkets)(marketsData));
	};
}

// import { commitReports } from '../../reports/actions/commit-reports';


function loadLoginAccountLocalStorage(accountID) {
	return function (dispatch, getState) {
		var localStorageRef = typeof window !== 'undefined' && window.localStorage;

		if (!localStorageRef || !localStorageRef.getItem || !accountID) {
			return;
		}

		var localState = JSON.parse(localStorageRef.getItem(accountID));

		if (!localState) {
			return;
		}

		if (localState.favorites) {
			dispatch((0, _updateFavorites.updateFavorites)(localState.favorites));
		}
		if (localState.accountTrades) {
			dispatch((0, _updateAccountTradesData.updateAccountTradesData)(localState.accountTrades));
		}
		if (localState.transactionsData) {
			Object.keys(localState.transactionsData).forEach(function (key) {
				if ([_statuses.SUCCESS, _statuses.FAILED, _statuses.PENDING, _statuses.INTERRUPTED].indexOf(localState.transactionsData[key].status) < 0) {
					localState.transactionsData[key].status = _statuses.INTERRUPTED;
					localState.transactionsData[key].message = 'unknown if completed';
				}
			});
			dispatch((0, _updateTransactionsData.updateTransactionsData)(localState.transactionsData));
		}
	};
}

function loadLoginAccount() {
	return function (dispatch) {
		AugurJS.loadLoginAccount(function (err, loginAccount) {
			if (err) {
				return console.error('ERR loadLoginAccount():', err);
			}
			if (!loginAccount || !loginAccount.id) {
				return;
			}

			dispatch(loadLoginAccountLocalStorage(loginAccount.id));
			dispatch((0, _updateLoginAccount.updateLoginAccount)(loginAccount));
			dispatch(loadLoginAccountDependents());
			return;
		});
	};
}

},{"../../../services/augurjs":532,"../../auth/actions/update-assets":409,"../../auth/actions/update-login-account":410,"../../markets/actions/update-favorites":460,"../../positions/actions/load-account-trades":498,"../../positions/actions/update-account-trades-data":499,"../../reports/actions/close-markets":503,"../../reports/actions/collect-fees":504,"../../reports/actions/load-reports":505,"../../reports/actions/penalize-wrong-reports":506,"../../reports/actions/update-reports":508,"../../transactions/actions/update-transactions-data":523,"../../transactions/constants/statuses":524}],406:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.login = login;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _loadLoginAccount = require('../../auth/actions/load-login-account');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

var _authError = require('../../auth/actions/auth-error');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function login(username, password) {
	return function (dispatch, getState) {
		var _require = require('../../../selectors');

		var links = _require.links;

		AugurJS.login(username, password, true, function (err, loginAccount) {
			if (err) {
				return dispatch((0, _authError.authError)(err));
			}
			if (!loginAccount || !loginAccount.id) {
				return;
			}

			dispatch((0, _loadLoginAccount.loadLoginAccountLocalStorage)(loginAccount.id));
			dispatch((0, _updateLoginAccount.updateLoginAccount)(loginAccount));
			dispatch((0, _loadLoginAccount.loadLoginAccountDependents)());
			links.marketsLink.onClick();
			return;
		});
	};
}

},{"../../../selectors":531,"../../../services/augurjs":532,"../../auth/actions/auth-error":404,"../../auth/actions/load-login-account":405,"../../auth/actions/update-login-account":410}],407:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.logout = logout;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateLoginAccount = require('../../auth/actions/update-login-account');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function logout() {
	return function (dispatch, getState) {
		AugurJS.logout();
		dispatch((0, _updateLoginAccount.clearLoginAccount)());
	};
}

},{"../../../services/augurjs":532,"../../auth/actions/update-login-account":410}],408:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.register = register;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _authTypes = require('../../auth/constants/auth-types');

var _formErrors = require('../../auth/constants/form-errors');

var _statuses = require('../../transactions/constants/statuses');

var _updateAssets = require('../../auth/actions/update-assets');

var _authError = require('../../auth/actions/auth-error');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

var _updateTransactionsData = require('../../transactions/actions/update-transactions-data');

var _updateExistingTransaction = require('../../transactions/actions/update-existing-transaction');

var _addTransactions = require('../../transactions/actions/add-transactions');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function register(username, password, password2) {
	return function (dispatch, getState) {
		var _require = require('../../../selectors');

		var links = _require.links;

		var transactionID = (0, _addTransactions.makeTransactionID)();
		var numAssetsLoaded = -1;

		if (!username || !username.length) {
			return dispatch((0, _authError.authError)({ code: _formErrors.USERNAME_REQUIRED }));
		}

		if (password !== password2) {
			return dispatch((0, _authError.authError)({ code: _formErrors.PASSWORDS_DO_NOT_MATCH }));
		}

		function makeTransactionUpdate() {
			var transactionObj = {};

			transactionObj.type = _authTypes.REGISTER;

			if (numAssetsLoaded < 3) {
				transactionObj.status = 'loading ether & rep...';
			} else {
				transactionObj.status = _statuses.SUCCESS;
			}

			return transactionObj;
		}

		AugurJS.register(username, password, true, function (err, loginAccount) {
			if (err) {
				if (numAssetsLoaded === -1) {
					dispatch((0, _authError.authError)(err));
				} else {
					dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED, message: err.message }));
				}
				return;
			}
			numAssetsLoaded++;
			links.marketsLink.onClick();
			dispatch((0, _updateTransactionsData.updateTransactionsData)(_defineProperty({}, transactionID, makeTransactionUpdate())));
			dispatch((0, _updateLoginAccount.updateLoginAccount)(loginAccount));
		}, function () {
			numAssetsLoaded++;
			dispatch((0, _updateAssets.updateAssets)());
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, makeTransactionUpdate()));
		});
	};
}

},{"../../../selectors":531,"../../../services/augurjs":532,"../../auth/actions/auth-error":404,"../../auth/actions/update-assets":409,"../../auth/actions/update-login-account":410,"../../auth/constants/auth-types":411,"../../auth/constants/form-errors":412,"../../transactions/actions/add-transactions":520,"../../transactions/actions/update-existing-transaction":522,"../../transactions/actions/update-transactions-data":523,"../../transactions/constants/statuses":524}],409:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateAssets = updateAssets;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function updateAssets() {
	return function (dispatch, getState) {
		var _getState = getState();

		var loginAccount = _getState.loginAccount;

		if (!loginAccount.id) {
			return dispatch((0, _updateLoginAccount.updateLoginAccount)({
				ether: undefined,
				realEther: undefined,
				rep: undefined }));
		}
		AugurJS.loadAssets(_network.BRANCH_ID, loginAccount.id, function (err, ether) {
			// const { loginAccount } = getState();
			if (err) {
				console.info('!! ERROR updateAssets() ether', err);
				return;
			}

			if (!loginAccount.ether || loginAccount.ether !== ether) {
				return dispatch((0, _updateLoginAccount.updateLoginAccount)({ ether: ether }));
			}
		}, function (err, rep) {
			if (err) {
				console.info('!! ERROR updateAssets() rep', err);
				return;
			}
			if (!loginAccount.rep || loginAccount.rep !== rep) {
				return dispatch((0, _updateLoginAccount.updateLoginAccount)({ rep: rep }));
			}
		}, function (err, realEther) {
			if (err) {
				console.info('!! ERROR updateAssets() real-ether', realEther);
				return;
			}

			if (!loginAccount.realEther || loginAccount.realEther !== realEther) {
				return dispatch((0, _updateLoginAccount.updateLoginAccount)({ realEther: realEther }));
			}
		});
	};
}

},{"../../../services/augurjs":532,"../../app/constants/network":397,"../../auth/actions/update-login-account":410}],410:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateLoginAccount = updateLoginAccount;
exports.clearLoginAccount = clearLoginAccount;
var UPDATE_LOGIN_ACCOUNT = exports.UPDATE_LOGIN_ACCOUNT = 'UPDATE_LOGIN_ACCOUNT';
var CLEAR_LOGIN_ACCOUNT = exports.CLEAR_LOGIN_ACCOUNT = 'CLEAR_LOGIN_ACCOUNT';

function updateLoginAccount(loginAccount) {
	return { type: UPDATE_LOGIN_ACCOUNT, data: loginAccount };
}

function clearLoginAccount() {
	return { type: CLEAR_LOGIN_ACCOUNT };
}

},{}],411:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _AUTH_TYPES;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var REGISTER = exports.REGISTER = 'register';
var LOGIN = exports.LOGIN = 'login';

var AUTH_TYPES = exports.AUTH_TYPES = (_AUTH_TYPES = {}, _defineProperty(_AUTH_TYPES, REGISTER, REGISTER), _defineProperty(_AUTH_TYPES, LOGIN, LOGIN), _AUTH_TYPES);

var DEFAULT_AUTH_TYPE = exports.DEFAULT_AUTH_TYPE = REGISTER;

},{}],412:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var INVALID_USERNAME_OR_PASSWORD = exports.INVALID_USERNAME_OR_PASSWORD = 403;
var PASSWORD_TOO_SHORT = exports.PASSWORD_TOO_SHORT = 405;
var USERNAME_TAKEN = exports.USERNAME_TAKEN = 422;
var USERNAME_REQUIRED = exports.USERNAME_REQUIRED = 'USERNAME_REQUIRED';
var PASSWORDS_DO_NOT_MATCH = exports.PASSWORDS_DO_NOT_MATCH = 'PASSWORDS_DO_NOT_MATCH';

var INVALID_USERNAME = exports.INVALID_USERNAME = 'INVALID_USERNAME';
var INVALID_USER = exports.INVALID_USER = 'INVALID_USER';

},{}],413:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var auth = arguments.length <= 0 || arguments[0] === undefined ? { selectedAuthType: _authTypes.DEFAULT_AUTH_TYPE, err: null } : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _showLink.SHOW_LINK:
			return _extends({}, auth, {
				selectedAuthType: _paths.PATHS_AUTH[action.parsedURL.pathArray[0]] || _authTypes.DEFAULT_AUTH_TYPE,
				err: null
			});

		case _authError.AUTH_ERROR:
			return _extends({}, auth, {
				err: action.err
			});

		default:
			return auth;
	}
};

var _authTypes = require('../../auth/constants/auth-types');

var _paths = require('../../link/constants/paths');

var _showLink = require('../../link/actions/show-link');

var _authError = require('../../auth/actions/auth-error');

},{"../../auth/actions/auth-error":404,"../../auth/constants/auth-types":411,"../../link/actions/show-link":446,"../../link/constants/paths":448}],414:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var loginAccount = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateLoginAccount.UPDATE_LOGIN_ACCOUNT:
			return _extends({}, loginAccount, action.data || {});

		case _updateLoginAccount.CLEAR_LOGIN_ACCOUNT:
			return {};

		default:
			return loginAccount;
	}
};

var _updateLoginAccount = require('../../auth/actions/update-login-account');

},{"../../auth/actions/update-login-account":410}],415:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectAuthForm = exports.selectAuthType = exports.selectLogin = exports.selectRegister = exports.selectErrMsg = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var auth = _store$getState.auth;

	var _require = require('../../../selectors');

	var links = _require.links;

	return selectAuthForm(auth, links, _store2.default.dispatch);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _authTypes = require('../../auth/constants/auth-types');

var _formErrors = require('../../auth/constants/form-errors');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _register = require('../../auth/actions/register');

var _login = require('../../auth/actions/login');

var _links = require('../../link/selectors/links');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectErrMsg = exports.selectErrMsg = function selectErrMsg(err) {
	if (!err) {
		return null;
	}

	switch (err.code) {
		case _formErrors.INVALID_USERNAME_OR_PASSWORD:
			return 'invalid username or password';
		case _formErrors.USERNAME_REQUIRED:
			return 'username is required';
		case _formErrors.PASSWORDS_DO_NOT_MATCH:
			return 'passwords do not match';
		case _formErrors.PASSWORD_TOO_SHORT:
			return err.message; // use message so we dont have to update length requiremenets here
		case _formErrors.USERNAME_TAKEN:
			return 'username already registered';
		default:
			return err.message;
	}
};

var selectRegister = exports.selectRegister = function selectRegister(auth, dispatch) {
	var errMsg = selectErrMsg(auth.err);
	return {
		title: 'Sign Up',

		isVisibleUsername: true,
		isVisiblePassword: true,
		isVisiblePassword2: true,

		topLinkText: 'Login',
		topLink: (0, _links.selectAuthLink)(_authTypes.LOGIN, false, dispatch),

		msg: errMsg,
		msgClass: errMsg ? 'error' : 'success',

		submitButtonText: 'Sign Up',
		submitButtonClass: 'register-button',

		onSubmit: function onSubmit(username, password, password2) {
			return dispatch((0, _register.register)(username, password, password2));
		}
	};
};

var selectLogin = exports.selectLogin = function selectLogin(auth, dispatch) {
	var errMsg = selectErrMsg(auth.err);
	return {
		title: 'Login',

		isVisibleUsername: true,
		isVisiblePassword: true,
		isVisiblePassword2: false,

		topLinkText: 'Sign Up',
		topLink: (0, _links.selectAuthLink)(_authTypes.REGISTER, false, dispatch),

		msg: errMsg,
		msgClass: errMsg ? 'error' : 'success',

		submitButtonText: 'Login',
		submitButtonClass: 'login-button',

		onSubmit: function onSubmit(username, password) {
			return dispatch((0, _login.login)(username, password));
		}
	};
};

var selectAuthType = exports.selectAuthType = function selectAuthType(auth, dispatch) {
	switch (auth.selectedAuthType) {
		case _authTypes.REGISTER:
			return selectRegister(auth, dispatch);
		case _authTypes.LOGIN:
			return selectLogin(auth, dispatch);
		default:
			return;
	}
};

var selectAuthForm = exports.selectAuthForm = (0, _memoizerific2.default)(1)(function (auth, link, dispatch) {
	var obj = _extends({}, selectAuthType(auth, dispatch), {
		closeLink: link.previousLink
	});
	return obj;
});

},{"../../../selectors":531,"../../../store":533,"../../auth/actions/login":406,"../../auth/actions/register":408,"../../auth/constants/auth-types":411,"../../auth/constants/form-errors":412,"../../link/selectors/links":449,"memoizerific":375}],416:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var loginAccount = _store$getState.loginAccount;

	return _extends({}, loginAccount, {
		rep: (0, _formatNumber.formatRep)(loginAccount.rep, { zeroStyled: false, decimalsRounded: 0 }),
		ether: (0, _formatNumber.formatEther)(loginAccount.ether, { zeroStyled: false, decimalsRounded: 0 }),
		realEther: (0, _formatNumber.formatEther)(loginAccount.realEther, { zeroStyled: false, decimalsRounded: 0 })
	});
};

var _formatNumber = require('../../../utils/format-number');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

},{"../../../store":533,"../../../utils/format-number":539}],417:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadBidsAsks = loadBidsAsks;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateMarketOrderBook = require('./update-market-order-book');

var _market = require('../../market/selectors/market');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadBidsAsks(marketID) {
	return function (dispatch, getState) {
		var market = (0, _market.selectMarket)(marketID);
		var scalarMinMax = {};
		if (market.type === "scalar") {
			scalarMinMax.minValue = market.minValue;
			scalarMinMax.maxValue = market.maxValue;
		}
		AugurJS.getOrderBook(marketID, scalarMinMax, function (marketOrderBook) {
			if (marketOrderBook == null || marketOrderBook.error != null) {
				return console.error('load-bids-asks.js: getOrderBook(' + marketID + ') error: %o', marketOrderBook);
				// todo: how do we handle failures in UI? retry ???
			}
			dispatch((0, _updateMarketOrderBook.updateMarketOrderBook)(marketID, marketOrderBook));
		});
	};
}

// export function xxxloadBidsAsks(marketID) {
// 	return (dispatch, getState) => {
// 		const s = getState();
// 		const outcomeKeys = Object.keys(s.outcomes[marketID]);
//
// 		function randomInt(min, max) {
// 			return Math.floor(Math.random() * (max - min + 1)) + min;
// 		}
//
// 		function makeBidAsk() {
// 			return {
// 				id: Math.random(),
// 				marketID,
// 				outcomeID: outcomeKeys[randomInt(0, outcomeKeys.length - 1)],
// 				accountID: Math.random(),
// 				action: Math.random() >= 0.7 && 'placed' || 'canceled',
// 				bidOrAsk: Math.random() >= 0.7 && BID || ASK,
// 				numShares: Math.round(Math.random() * 10000) / 100,
// 				limitPrice: Math.round(Math.random() * 100) / 100,
// 			};
// 		}
//
// 		function makeBunch(num) {
// 			const o = {};
// 			for (let i = 0; i < num; i++) {
// 				o[Math.random()] = makeBidAsk();
// 			}
// 			return o;
// 		}
//
// 		function makeTimedBunch(num = randomInt(1, 10), millis = randomInt(500, 10000)) {
// 			// num = num || ;
// 			// millis = millis || ;
//
// 			setTimeout(() => {
// 				dispatch(updateBidsAsks(makeBunch(num)));
// 				// makeTimedBunch();
// 			}, millis);
// 		}
//
// 		if (!s.bidsAsks[marketID]) {
// 			makeTimedBunch(15, 1000);
// 			makeTimedBunch(5, 5000);
// 			makeTimedBunch(5, 10000);
// 			makeTimedBunch(5, 15000);
// 			makeTimedBunch(5, 20000);
// 		}
// 	};
// }

},{"../../../services/augurjs":532,"../../market/selectors/market":454,"./update-market-order-book":418}],418:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateMarketOrderBook = updateMarketOrderBook;
var UPDATE_MARKET_ORDER_BOOK = exports.UPDATE_MARKET_ORDER_BOOK = 'UPDATE_MARKET_ORDER_BOOK';

function updateMarketOrderBook(marketId, marketOrderBook) {
	return { type: UPDATE_MARKET_ORDER_BOOK, marketId: marketId, marketOrderBook: marketOrderBook };
}

},{}],419:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var BID = exports.BID = 'bid';
var ASK = exports.ASK = 'ask';

},{}],420:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * Author: priecint
                                                                                                                                                                                                                                                                   */


/**
 * @param {Object} marketOrderBooks
 * @param {Object} action
 * @return {{}} key: marketId, value: {buy: [], sell: []}
 */


exports.default = function () {
	var marketOrderBooks = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateMarketOrderBook.UPDATE_MARKET_ORDER_BOOK:
			return _extends({}, marketOrderBooks, _defineProperty({}, action.marketId, action.marketOrderBook));
		default:
			return marketOrderBooks;
	}
};

var _updateMarketOrderBook = require('../actions/update-market-order-book');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

},{"../actions/update-market-order-book":418}],421:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectTopAskPrice = exports.selectTopBidPrice = exports.selectAggregateOrderBook = undefined;

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _formatNumber = require('../../../utils/format-number');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {String} outcomeId
 * @param {Object} marketOrderBook
 */
var selectAggregateOrderBook = exports.selectAggregateOrderBook = (0, _memoizerific2.default)(100)(function (outcomeId, marketOrderBook) {
	if (marketOrderBook == null) {
		return {
			bids: [],
			asks: []
		};
	}

	return {
		bids: selectAggregatePricePoints(outcomeId, marketOrderBook.buy).sort(sortPricePointsByPriceDesc),
		asks: selectAggregatePricePoints(outcomeId, marketOrderBook.sell).sort(sortPricePointsByPriceAsc)
	};
});

var selectTopBidPrice = exports.selectTopBidPrice = (0, _memoizerific2.default)(10)(function (marketOrderBook) {
	var topBid = marketOrderBook.bids[0];
	return topBid != null ? topBid.price : null;
});

var selectTopAskPrice = exports.selectTopAskPrice = (0, _memoizerific2.default)(10)(function (marketOrderBook) {
	var topAsk = marketOrderBook.asks[0];
	return topAsk != null ? topAsk.price : null;
});

/**
 * Selects price points with aggregated amount of shares
 *
 * @param {String} outcomeId
 * @param {Array} orders
 */
var selectAggregatePricePoints = (0, _memoizerific2.default)(100)(function (outcomeId, orders) {
	if (orders == null) {
		return [];
	}
	var shareCountPerPrice = orders.filter(function (order) {
		return order.outcome === outcomeId;
	}).reduce(reduceSharesCountByPrice, {});

	return Object.keys(shareCountPerPrice).map(function (price) {
		var obj = {
			shares: (0, _formatNumber.formatShares)(shareCountPerPrice[price]),
			price: (0, _formatNumber.formatEther)(parseFloat(price))
		};
		return obj;
	});
});

/**
 *
 *
 * @param {Object} aggregateOrdersPerPrice
 * @param order
 * @return {Object} aggregateOrdersPerPrice
 */
function reduceSharesCountByPrice(aggregateOrdersPerPrice, order) {
	var key = parseFloat(order.price).toString(); // parseFloat("0.10000000000000000002").toString() => "0.1"
	if (aggregateOrdersPerPrice[key] == null) {
		aggregateOrdersPerPrice[key] = 0;
	}

	aggregateOrdersPerPrice[key] += parseFloat(order.amount);
	return aggregateOrdersPerPrice;
}

function sortPricePointsByPriceAsc(pricePoint1, pricePoint2) {
	return pricePoint1.price.value - pricePoint2.price.value;
}

function sortPricePointsByPriceDesc(pricePoint1, pricePoint2) {
	return pricePoint2.price.value - pricePoint1.price.value;
}

},{"../../../utils/format-number":539,"memoizerific":375}],422:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.submitGenerateOrderBook = submitGenerateOrderBook;
exports.createOrderBook = createOrderBook;
exports.handleGenerateOrderBookResponse = handleGenerateOrderBookResponse;

var _statuses = require('../../transactions/constants/statuses');

var _updateExistingTransaction = require('../../transactions/actions/update-existing-transaction');

var _addGenerateOrderBookTransaction = require('../../transactions/actions/add-generate-order-book-transaction');

var _augurjs = require('../../../services/augurjs');

var _augurjs2 = _interopRequireDefault(_augurjs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function submitGenerateOrderBook(marketData) {
	return function (dispatch) {
		return dispatch((0, _addGenerateOrderBookTransaction.addGenerateOrderBookTransaction)(marketData));
	};
}

function createOrderBook(transactionID, marketData) {
	return function (dispatch) {
		dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.GENERATING_ORDER_BOOK }));

		_augurjs2.default.generateOrderBook(marketData, function (err, res) {
			dispatch(handleGenerateOrderBookResponse(err, res, transactionID, marketData));
		});
	};
}

function handleGenerateOrderBookResponse(err, res, transactionID, marketData) {
	return function (dispatch) {
		if (err) {
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED, message: err.message }));

			return;
		}

		var p = res.payload;
		var message = null;

		switch (res.status) {
			case _statuses.COMPLETE_SET_BOUGHT:
				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, {
					status: _statuses.COMPLETE_SET_BOUGHT,
					message: message
				}));

				break;
			case _statuses.ORDER_BOOK_ORDER_COMPLETE:
				message = (!!p.buyPrice ? 'Bid' : 'Ask') + ' for ' + p.amount + ' share' + (p.amount > 1 ? 's' : '') + ' of outcome \'' + marketData.outcomes[p.outcome - 1].name + '\' at ' + (p.buyPrice || p.sellPrice) + ' ETH created.';

				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, {
					status: _statuses.ORDER_BOOK_ORDER_COMPLETE,
					message: message
				}));

				break;
			case _statuses.ORDER_BOOK_OUTCOME_COMPLETE:
				message = 'Order book creation for outcome \'' + marketData.outcomes[p.outcome - 1].name + '\' completed.';

				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, {
					status: _statuses.ORDER_BOOK_OUTCOME_COMPLETE,
					message: message
				}));

				break;
			case _statuses.SUCCESS:
				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, {
					status: _statuses.SUCCESS,
					message: message
				}));

				break;
			default:
				break;
		}
	};
}

},{"../../../services/augurjs":532,"../../transactions/actions/add-generate-order-book-transaction":517,"../../transactions/actions/update-existing-transaction":522,"../../transactions/constants/statuses":524}],423:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // import { makeDescriptionFromCategoricalOutcomeNames } from '../../../utils/parse-market-data';


exports.submitNewMarket = submitNewMarket;
exports.createMarket = createMarket;

var _network = require('../../app/constants/network');

var _marketTypes = require('../../markets/constants/market-types');

var _statuses = require('../../transactions/constants/statuses');

var _augurjs = require('../../../services/augurjs');

var _augurjs2 = _interopRequireDefault(_augurjs);

var _loadMarket = require('../../market/actions/load-market');

var _updateExistingTransaction = require('../../transactions/actions/update-existing-transaction');

var _addCreateMarketTransaction = require('../../transactions/actions/add-create-market-transaction');

var _links = require('../../link/selectors/links');

var _generateOrderBook = require('../../create-market/actions/generate-order-book');

var _updateMakeInProgress = require('../../create-market/actions/update-make-in-progress');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function submitNewMarket(newMarket) {
	return function (dispatch) {
		(0, _links.selectTransactionsLink)(dispatch).onClick();
		dispatch((0, _addCreateMarketTransaction.addCreateMarketTransaction)(newMarket));
	};
}

function createMarket(transactionID, newMarket) {
	return function (dispatch) {
		if (newMarket.type === _marketTypes.BINARY) {
			newMarket.minValue = 1;
			newMarket.maxValue = 2;
			newMarket.numOutcomes = 2;
		} else if (newMarket.type === _marketTypes.SCALAR) {
			newMarket.minValue = newMarket.scalarSmallNum;
			newMarket.maxValue = newMarket.scalarBigNum;
			newMarket.numOutcomes = 2;
		} else if (newMarket.type === _marketTypes.CATEGORICAL) {
			newMarket.minValue = 1;
			newMarket.maxValue = 2;
			newMarket.numOutcomes = newMarket.outcomes.length;
			// newMarket.description = makeDescriptionFromCategoricalOutcomeNames(newMarket);
		} else {
			console.warn('createMarket unsupported type:', newMarket.type);
			return;
		}

		dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'sending...' }));

		_augurjs2.default.createMarket(_network.BRANCH_ID, newMarket, function (err, res) {
			if (err) {
				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED, message: err.message }));
				return;
			}
			if (res.status === _statuses.CREATING_MARKET) {
				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.CREATING_MARKET }));
			} else {
				dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: res.status }));

				if (res.status === _statuses.SUCCESS) {
					dispatch((0, _updateMakeInProgress.clearMakeInProgress)());
					setTimeout(function () {
						return dispatch((0, _loadMarket.loadMarket)(res.marketID));
					}, 5000);

					var updatedNewMarket = _extends({}, newMarket, {
						id: res.marketID,
						tx: res.tx
					});

					dispatch((0, _generateOrderBook.submitGenerateOrderBook)(updatedNewMarket));
				}
			}
		});
	};
}

},{"../../../services/augurjs":532,"../../app/constants/network":397,"../../create-market/actions/generate-order-book":422,"../../create-market/actions/update-make-in-progress":424,"../../link/selectors/links":449,"../../market/actions/load-market":451,"../../markets/constants/market-types":469,"../../transactions/actions/add-create-market-transaction":516,"../../transactions/actions/update-existing-transaction":522,"../../transactions/constants/statuses":524}],424:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateMakeInProgress = updateMakeInProgress;
exports.clearMakeInProgress = clearMakeInProgress;
var UPDATE_MAKE_IN_PROGRESS = exports.UPDATE_MAKE_IN_PROGRESS = 'UPDATE_MAKE_IN_PROGRESS';
var CLEAR_MAKE_IN_PROGRESS = exports.CLEAR_MAKE_IN_PROGRESS = 'CLEAR_MAKE_IN_PROGRESS';

function updateMakeInProgress(data) {
	return { type: UPDATE_MAKE_IN_PROGRESS, data: data };
}

function clearMakeInProgress() {
	return { type: CLEAR_MAKE_IN_PROGRESS };
}

},{}],425:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var DESCRIPTION_MIN_LENGTH = exports.DESCRIPTION_MIN_LENGTH = 1;
var DESCRIPTION_MAX_LENGTH = exports.DESCRIPTION_MAX_LENGTH = 256;

var CATEGORICAL_OUTCOMES_MIN_NUM = exports.CATEGORICAL_OUTCOMES_MIN_NUM = 2;
var CATEGORICAL_OUTCOMES_MAX_NUM = exports.CATEGORICAL_OUTCOMES_MAX_NUM = 8;
var CATEGORICAL_OUTCOME_MAX_LENGTH = exports.CATEGORICAL_OUTCOME_MAX_LENGTH = 250;

var TAGS_MAX_NUM = exports.TAGS_MAX_NUM = 3;
var TAGS_MAX_LENGTH = exports.TAGS_MAX_LENGTH = 25;

var RESOURCES_MAX_NUM = exports.RESOURCES_MAX_NUM = 5;
var RESOURCES_MAX_LENGTH = exports.RESOURCES_MAX_LENGTH = 1250;

var EXPIRY_SOURCE_GENERIC = exports.EXPIRY_SOURCE_GENERIC = 'generic';
var EXPIRY_SOURCE_SPECIFIC = exports.EXPIRY_SOURCE_SPECIFIC = 'specific';

var INITIAL_LIQUIDITY_DEFAULT = exports.INITIAL_LIQUIDITY_DEFAULT = 500;
var INITIAL_LIQUIDITY_MIN = exports.INITIAL_LIQUIDITY_MIN = 50;

var TAKER_FEE_DEFAULT = exports.TAKER_FEE_DEFAULT = 2;
var TAKER_FEE_MIN = exports.TAKER_FEE_MIN = 1;
var TAKER_FEE_MAX = exports.TAKER_FEE_MAX = 12.5;

var MAKER_FEE_DEFAULT = exports.MAKER_FEE_DEFAULT = 1;
var MAKER_FEE_MIN = exports.MAKER_FEE_MIN = 0;

// Advanced Market Creation Defaults
var STARTING_QUANTITY_DEFAULT = exports.STARTING_QUANTITY_DEFAULT = 10;
var STARTING_QUANTITY_MIN = exports.STARTING_QUANTITY_MIN = 0.1;

var BEST_STARTING_QUANTITY_DEFAULT = exports.BEST_STARTING_QUANTITY_DEFAULT = 20;
var BEST_STARTING_QUANTITY_MIN = exports.BEST_STARTING_QUANTITY_MIN = 0.1;

var PRICE_WIDTH_DEFAULT = exports.PRICE_WIDTH_DEFAULT = 0.1;
var PRICE_WIDTH_MIN = exports.PRICE_WIDTH_MIN = 0.01;

var PRICE_DEPTH_DEFAULT = exports.PRICE_DEPTH_DEFAULT = 0.1; // Not used yet

var IS_SIMULATION = exports.IS_SIMULATION = false; // Not used yet

},{}],426:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var createMarketInProgress = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateMakeInProgress.UPDATE_MAKE_IN_PROGRESS:
			return _extends({}, createMarketInProgress, action.data);

		case _updateMakeInProgress.CLEAR_MAKE_IN_PROGRESS:
			return {};

		default:
			return createMarketInProgress;
	}
};

var _updateMakeInProgress = require('../actions/update-make-in-progress');

},{"../actions/update-make-in-progress":424}],427:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectCreateMarketForm = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var createMarketInProgress = _store$getState.createMarketInProgress;
	var blockchain = _store$getState.blockchain;

	return selectCreateMarketForm(createMarketInProgress, blockchain.currentBlockNumber, blockchain.currentBlockMillisSinceEpoch, _store2.default.dispatch);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _marketTypes = require('../../markets/constants/market-types');

var _updateMakeInProgress = require('../../create-market/actions/update-make-in-progress');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _step = require('../../create-market/selectors/form-steps/step-2');

var Step2 = _interopRequireWildcard(_step);

var _step2 = require('../../create-market/selectors/form-steps/step-3');

var Step3 = _interopRequireWildcard(_step2);

var _step3 = require('../../create-market/selectors/form-steps/step-4');

var Step4 = _interopRequireWildcard(_step3);

var _step4 = require('../../create-market/selectors/form-steps/step-5');

var Step5 = _interopRequireWildcard(_step4);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectCreateMarketForm = exports.selectCreateMarketForm = (0, _memoizerific2.default)(1)(function (createMarketInProgress, currentBlockNumber, currentBlockMillisSinceEpoch, dispatch) {
	var formState = _extends({}, createMarketInProgress, {
		creatingMarket: true,
		errors: {}
	});

	// next step handler
	formState.onValuesUpdated = function (newValues) {
		return dispatch((0, _updateMakeInProgress.updateMakeInProgress)(newValues));
	};

	// init
	if (!formState.step || !(formState.step >= 1)) {
		formState.step = 1;
		return formState;
	}

	// step 1
	if (!(formState.step > 1) || !_marketTypes.MARKET_TYPES[formState.type]) {
		formState.step = 1;
		return formState;
	}

	// step 2
	formState = _extends({}, formState, Step2.initialFairPrices(formState), Step2.select(formState));
	formState.isValid = Step2.isValid(formState);
	if (!(formState.step > 2) || !formState.isValid) {
		formState.step = 2;
		formState.errors = _extends({}, formState.errors, Step2.errors(formState));
		return formState;
	}

	// step 3
	formState = _extends({}, formState, Step3.select(formState));
	formState.isValid = Step3.isValid(formState);
	if (!(formState.step > 3) || !formState.isValid) {
		formState.step = 3;
		formState.errors = _extends({}, formState.errors, Step3.errors(formState));
		return formState;
	}

	// step 4
	formState = _extends({}, formState, Step4.select(formState));
	formState.isValid = Step4.isValid(formState);
	if (!(formState.step > 4) || !formState.isValid) {
		formState.step = 4;
		formState.errors = _extends({}, formState.errors, Step4.errors(formState));
		return formState;
	}

	// step 5
	return _extends({}, formState, Step5.select(formState, currentBlockNumber, currentBlockMillisSinceEpoch, dispatch), {
		step: 5
	});
});

},{"../../../store":533,"../../create-market/actions/update-make-in-progress":424,"../../create-market/selectors/form-steps/step-2":428,"../../create-market/selectors/form-steps/step-3":429,"../../create-market/selectors/form-steps/step-4":430,"../../create-market/selectors/form-steps/step-5":431,"../../markets/constants/market-types":469,"memoizerific":375}],428:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.errors = exports.isValid = exports.initialFairPrices = exports.selectCombinatorial = exports.selectScalar = exports.selectCategorical = exports.selectBinary = exports.select = undefined;

var _marketTypes = require('../../../markets/constants/market-types');

var _marketValuesConstraints = require('../../../create-market/constants/market-values-constraints');

var _validateDescription = require('../../../create-market/validators/validate-description');

var _validateDescription2 = _interopRequireDefault(_validateDescription);

var _validateEndDate = require('../../../create-market/validators/validate-end-date');

var _validateEndDate2 = _interopRequireDefault(_validateEndDate);

var _validateScalarSmallNum = require('../../../create-market/validators/validate-scalar-small-num');

var _validateScalarSmallNum2 = _interopRequireDefault(_validateScalarSmallNum);

var _validateScalarBigNum = require('../../../create-market/validators/validate-scalar-big-num');

var _validateScalarBigNum2 = _interopRequireDefault(_validateScalarBigNum);

var _validateCategoricalOutcomes = require('../../../create-market/validators/validate-categorical-outcomes');

var _validateCategoricalOutcomes2 = _interopRequireDefault(_validateCategoricalOutcomes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var select = exports.select = function select(formState) {
	switch (formState.type) {
		case _marketTypes.BINARY:
			return selectBinary(formState);
		case _marketTypes.CATEGORICAL:
			return selectCategorical(formState);
		case _marketTypes.SCALAR:
			return selectScalar(formState);
		case _marketTypes.COMBINATORIAL:
			return selectCombinatorial(formState);
		default:
			break;
	}
};

var selectBinary = exports.selectBinary = function selectBinary(formState) {
	var obj = {
		descriptionPlaceholder: 'Will "Batman v Superman: Dawn of Justice" take more' + ' than $150 million box in office receipts opening weekend?',
		descriptionMinLength: _marketValuesConstraints.DESCRIPTION_MIN_LENGTH,
		descriptionMaxLength: _marketValuesConstraints.DESCRIPTION_MAX_LENGTH
	};
	return obj;
};

var selectCategorical = exports.selectCategorical = function selectCategorical(formState) {
	var obj = {
		descriptionPlaceholder: 'Who will win the Four Nations Rugby Championship in 2016?',
		descriptionMinLength: _marketValuesConstraints.DESCRIPTION_MIN_LENGTH,
		descriptionMaxLength: _marketValuesConstraints.DESCRIPTION_MAX_LENGTH,
		categoricalOutcomesMinNum: _marketValuesConstraints.CATEGORICAL_OUTCOMES_MIN_NUM,
		categoricalOutcomesMaxNum: _marketValuesConstraints.CATEGORICAL_OUTCOMES_MAX_NUM,
		categoricalOutcomeMaxLength: _marketValuesConstraints.CATEGORICAL_OUTCOME_MAX_LENGTH
	};
	return obj;
};

var selectScalar = exports.selectScalar = function selectScalar(formState) {
	var obj = {
		descriptionPlaceholder: 'What will the temperature (in degrees Fahrenheit)' + ' be in San Francisco, California, on July 1, 2016?',
		descriptionMinLength: _marketValuesConstraints.DESCRIPTION_MIN_LENGTH,
		descriptionMaxLength: _marketValuesConstraints.DESCRIPTION_MAX_LENGTH,
		scalarSmallNum: formState.scalarSmallNum,
		scalarBigNum: formState.scalarBigNum
	};
	return obj;
};

var selectCombinatorial = exports.selectCombinatorial = function selectCombinatorial(formState) {
	var obj = {
		descriptionPlaceholder: 'Combinatorial',
		descriptionMinLength: _marketValuesConstraints.DESCRIPTION_MIN_LENGTH,
		descriptionMaxLength: _marketValuesConstraints.DESCRIPTION_MAX_LENGTH
	};
	return obj;
};

var initialFairPrices = exports.initialFairPrices = function initialFairPrices(formState) {
	if (!!!formState.initialFairPrices || formState.type !== formState.initialFairPrices.type) {
		return {
			initialFairPrices: {
				type: formState.type,
				values: [],
				raw: []
			}
		};
	}
};

var isValid = exports.isValid = function isValid(formState) {
	if ((0, _validateDescription2.default)(formState.description)) {
		return false;
	}

	if ((0, _validateEndDate2.default)(formState.endDate)) {
		return false;
	}

	switch (formState.type) {
		case _marketTypes.CATEGORICAL:
			if ((0, _validateCategoricalOutcomes2.default)(formState.categoricalOutcomes).some(function (errors) {
				return !!errors;
			})) {
				return false;
			}
			break;
		case _marketTypes.SCALAR:
			if ((0, _validateScalarSmallNum2.default)(formState.scalarSmallNum, formState.scalarBigNum)) {
				return false;
			}
			if ((0, _validateScalarBigNum2.default)(formState.scalarSmallNum, formState.scalarBigNum)) {
				return false;
			}
			break;
		case _marketTypes.COMBINATORIAL:
			break;
		default:
			break;
	}

	return true;
};

var errors = exports.errors = function errors(formState) {
	var errs = {};

	if (formState.description !== undefined) {
		errs.description = (0, _validateDescription2.default)(formState.description);
	}

	if (formState.endDate !== undefined) {
		errs.endDate = (0, _validateEndDate2.default)(formState.endDate);
	}

	switch (formState.type) {
		case _marketTypes.CATEGORICAL:
			if (formState.hasOwnProperty('categoricalOutcomes')) {
				errs.categoricalOutcomes = (0, _validateCategoricalOutcomes2.default)(formState.categoricalOutcomes);
			}
			break;
		case _marketTypes.SCALAR:
			if (formState.scalarSmallNum !== undefined) {
				errs.scalarSmallNum = (0, _validateScalarSmallNum2.default)(formState.scalarSmallNum, formState.scalarBigNum);
			}
			if (formState.scalarBigNum !== undefined) {
				errs.scalarBigNum = (0, _validateScalarBigNum2.default)(formState.scalarSmallNum, formState.scalarBigNum);
			}
			break;
		case _marketTypes.COMBINATORIAL:
			break;
		default:
			break;
	}

	return errs;
};

},{"../../../create-market/constants/market-values-constraints":425,"../../../create-market/validators/validate-categorical-outcomes":433,"../../../create-market/validators/validate-description":434,"../../../create-market/validators/validate-end-date":435,"../../../create-market/validators/validate-scalar-big-num":442,"../../../create-market/validators/validate-scalar-small-num":443,"../../../markets/constants/market-types":469}],429:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.errors = exports.isValid = exports.select = undefined;

var _marketValuesConstraints = require('../../../create-market/constants/market-values-constraints');

var _validateExpirySource = require('../../../create-market/validators/validate-expiry-source');

var _validateExpirySource2 = _interopRequireDefault(_validateExpirySource);

var _validateExpirySourceUrl = require('../../../create-market/validators/validate-expiry-source-url');

var _validateExpirySourceUrl2 = _interopRequireDefault(_validateExpirySourceUrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var select = exports.select = function select(formState) {
	var obj = {
		tagsMaxNum: _marketValuesConstraints.TAGS_MAX_NUM,
		tagMaxLength: _marketValuesConstraints.TAGS_MAX_LENGTH,
		resourcesMaxNum: _marketValuesConstraints.RESOURCES_MAX_NUM,
		resourceMaxLength: _marketValuesConstraints.RESOURCES_MAX_LENGTH
	};
	return obj;
};

var isValid = exports.isValid = function isValid(formState) {
	if ((0, _validateExpirySource2.default)(formState.expirySource)) {
		return false;
	}

	if ((0, _validateExpirySourceUrl2.default)(formState.expirySourceUrl, formState.expirySource)) {
		return false;
	}

	return true;
};

var errors = exports.errors = function errors(formState) {
	var errs = {};

	if (formState.expirySource !== undefined) {
		errs.expirySource = (0, _validateExpirySource2.default)(formState.expirySource);
	}

	if (formState.endDate !== undefined) {
		errs.expirySourceUrl = (0, _validateExpirySourceUrl2.default)(formState.expirySourceUrl, formState.expirySource);
	}

	return errs;
};

},{"../../../create-market/constants/market-values-constraints":425,"../../../create-market/validators/validate-expiry-source":437,"../../../create-market/validators/validate-expiry-source-url":436}],430:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.errors = exports.isValid = exports.initialFairPrices = exports.select = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _marketTypes = require('../../../markets/constants/market-types');

var _marketValuesConstraints = require('../../../create-market/constants/market-values-constraints');

var _validateTakerFee = require('../../validators/validate-taker-fee');

var _validateTakerFee2 = _interopRequireDefault(_validateTakerFee);

var _validateMakerFee = require('../../validators/validate-maker-fee');

var _validateMakerFee2 = _interopRequireDefault(_validateMakerFee);

var _validateInitialLiquidity = require('../../validators/validate-initial-liquidity');

var _validateInitialLiquidity2 = _interopRequireDefault(_validateInitialLiquidity);

var _validateInitialFairPrices = require('../../validators/validate-initial-fair-prices');

var _validateInitialFairPrices2 = _interopRequireDefault(_validateInitialFairPrices);

var _validateBestStartingQuantity = require('../../validators/validate-best-starting-quantity');

var _validateBestStartingQuantity2 = _interopRequireDefault(_validateBestStartingQuantity);

var _validateStartingQuantity = require('../../validators/validate-starting-quantity');

var _validateStartingQuantity2 = _interopRequireDefault(_validateStartingQuantity);

var _validatePriceWidth = require('../../validators/validate-price-width');

var _validatePriceWidth2 = _interopRequireDefault(_validatePriceWidth);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var select = exports.select = function select(formState) {
	var obj = {
		takerFee: formState.takerFee || _marketValuesConstraints.TAKER_FEE_DEFAULT,
		makerFee: formState.makerFee || _marketValuesConstraints.MAKER_FEE_DEFAULT,
		initialLiquidity: formState.initialLiquidity || _marketValuesConstraints.INITIAL_LIQUIDITY_DEFAULT,
		initialFairPrices: !!formState.initialFairPrices.raw.length ? formState.initialFairPrices : _extends({}, formState.initialFairPrices, initialFairPrices(formState)),
		startingQuantity: formState.startingQuantity || _marketValuesConstraints.STARTING_QUANTITY_DEFAULT,
		bestStartingQuantity: formState.bestStartingQuantity || _marketValuesConstraints.BEST_STARTING_QUANTITY_DEFAULT,
		priceWidth: formState.priceWidth || _marketValuesConstraints.PRICE_WIDTH_DEFAULT,
		halfPriceWidth: !!formState.priceWidth ? parseFloat(formState.priceWidth) / 2 : _marketValuesConstraints.PRICE_WIDTH_DEFAULT / 2,
		priceDepth: _marketValuesConstraints.PRICE_DEPTH_DEFAULT,
		isSimulation: formState.isSimulation || _marketValuesConstraints.IS_SIMULATION
	};

	return obj;
};

var initialFairPrices = exports.initialFairPrices = function initialFairPrices(formState) {
	var setInitialFairPrices = function setInitialFairPrices(labels) {
		var halfPriceWidth = _marketValuesConstraints.PRICE_WIDTH_DEFAULT / 2;
		var defaultValue = formState.type === _marketTypes.SCALAR ? // Sets the initialFairPrices to midpoint of min/max
		(parseFloat(formState.scalarBigNum) + halfPriceWidth + (parseFloat(formState.scalarSmallNum) - halfPriceWidth)) / 2 : (1 - halfPriceWidth + halfPriceWidth) / 2;

		var values = [];
		var raw = [];

		labels.map(function (cV, i) {
			values[i] = {
				label: cV,
				value: defaultValue
			};
			raw[i] = defaultValue;
			return cV;
		});

		return { values: values, raw: raw };
	};
	var labels = [];
	switch (formState.type) {
		case _marketTypes.BINARY:
			return setInitialFairPrices(['Yes', 'No']);
		case _marketTypes.SCALAR:
			return setInitialFairPrices(['⇧', '⇩']);
		case _marketTypes.CATEGORICAL:

			formState.categoricalOutcomes.map(function (val, i) {
				labels[i] = val;
				return val;
			});

			return setInitialFairPrices(labels);

		default:
			break;
	}
};

var isValid = exports.isValid = function isValid(formState) {
	if ((0, _validateTakerFee2.default)(formState.takerFee) || (0, _validateMakerFee2.default)(formState.makerFee, formState.takerFee) || (0, _validateInitialLiquidity2.default)(formState.type, formState.initialLiquidity, formState.startingQuantity, formState.bestStartingQuantity, formState.halfPriceWidth, formState.scalarSmallNum, formState.scalarBigNum) || (0, _validateInitialFairPrices2.default)(formState.type, formState.initialFairPrices.raw, formState.priceWidth, formState.halfPriceWidth, formState.scalarSmallNum, formState.scalarBigNum) || (0, _validateBestStartingQuantity2.default)(formState.bestStartingQuantity) || (0, _validateStartingQuantity2.default)(formState.startingQuantity) || (0, _validatePriceWidth2.default)(formState.priceWidth)) {
		return false;
	}
	return true;
};

var errors = exports.errors = function errors(formState) {
	var errs = {};

	if (formState.hasOwnProperty('takerFee')) {
		errs.takerFee = (0, _validateTakerFee2.default)(formState.takerFee);
	}
	if (formState.hasOwnProperty('makerFee')) {
		errs.makerFee = (0, _validateMakerFee2.default)(formState.makerFee, formState.takerFee);
	}
	if (formState.hasOwnProperty('initialLiquidity')) {
		errs.initialLiquidity = (0, _validateInitialLiquidity2.default)(formState.type, formState.initialLiquidity, formState.startingQuantity, formState.bestStartingQuantity, formState.halfPriceWidth, formState.scalarSmallNum, formState.scalarBigNum);
	}
	if (formState.hasOwnProperty('initialFairPrices')) {
		errs.initialFairPrice = (0, _validateInitialFairPrices2.default)(formState.type, formState.initialFairPrices.raw, formState.priceWidth, formState.halfPriceWidth, formState.scalarSmallNum, formState.scalarBigNum);
	}
	if (formState.hasOwnProperty('bestStartingQuantity')) {
		errs.bestStartingQuantity = (0, _validateBestStartingQuantity2.default)(formState.bestStartingQuantity);
	}
	if (formState.hasOwnProperty('startingQuantity')) {
		errs.startingQuantity = (0, _validateStartingQuantity2.default)(formState.startingQuantity);
	}
	if (formState.hasOwnProperty('priceWidth')) {
		errs.priceWidth = (0, _validatePriceWidth2.default)(formState.priceWidth);
	}
	return errs;
};

},{"../../../create-market/constants/market-values-constraints":425,"../../../markets/constants/market-types":469,"../../validators/validate-best-starting-quantity":432,"../../validators/validate-initial-fair-prices":438,"../../validators/validate-initial-liquidity":439,"../../validators/validate-maker-fee":440,"../../validators/validate-price-width":441,"../../validators/validate-starting-quantity":444,"../../validators/validate-taker-fee":445}],431:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectOutcomesFromForm = exports.selectEndBlockFromEndDate = exports.select = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _formatNumber = require('../../../../utils/format-number');

var _formatDate = require('../../../../utils/format-date');

var _network = require('../../../app/constants/network');

var _marketTypes = require('../../../markets/constants/market-types');

var _marketValuesConstraints = require('../../../create-market/constants/market-values-constraints');

var _submitNewMarket = require('../../../create-market/actions/submit-new-market');

var select = exports.select = function select(formState, currentBlockNumber, currentBlockMillisSinceEpoch, dispatch) {
	var o = _extends({}, formState);

	o.type = formState.type;
	o.endDate = (0, _formatDate.formatDate)(formState.endDate);
	o.endBlock = selectEndBlockFromEndDate(formState.endDate.getTime(), currentBlockNumber, currentBlockMillisSinceEpoch);

	// o.tradingFee = formState.tradingFeePercent / 100;
	o.takerFeePercent = (0, _formatNumber.formatPercent)(formState.takerFee);
	o.makerFeePercent = (0, _formatNumber.formatPercent)(formState.makerFee);
	o.volume = (0, _formatNumber.formatNumber)(0);
	o.expirySource = formState.expirySource === _marketValuesConstraints.EXPIRY_SOURCE_SPECIFIC ? formState.expirySourceUrl : formState.expirySource;

	o.outcomes = selectOutcomesFromForm(formState.type, formState.categoricalOutcomes, formState.scalarSmallNum, formState.scalarBigNum);
	o.isFavorite = false;

	var formattedFairPrices = [];

	o.initialFairPrices.values.map(function (cV, i) {
		formattedFairPrices[i] = (0, _formatNumber.formatNumber)(cV.value, { decimals: 2, minimized: true, denomination: 'ETH | ' + cV.label });
		return formattedFairPrices;
	});

	o.initialFairPrices = _extends({}, o.initialFairPrices, {
		formatted: formattedFairPrices
	});

	o.bestStartingQuantityFormatted = (0, _formatNumber.formatNumber)(o.bestStartingQuantity, { denomination: 'Shares' });
	o.startingQuantityFormatted = (0, _formatNumber.formatNumber)(o.startingQuantity, { denomination: 'Shares' });
	o.priceWidthFormatted = (0, _formatNumber.formatNumber)(o.priceWidth, { decimals: 2, minimized: true, denomination: 'ETH' });

	o.onSubmit = function () {
		return dispatch((0, _submitNewMarket.submitNewMarket)(o));
	};

	return o;
};

var selectEndBlockFromEndDate = exports.selectEndBlockFromEndDate = function selectEndBlockFromEndDate(endDateMillisSinceEpoch, currentBlockNumber, currentBlockMillisSinceEpoch) {
	return currentBlockNumber + Math.ceil((endDateMillisSinceEpoch - currentBlockMillisSinceEpoch) / _network.MILLIS_PER_BLOCK);
};

var selectOutcomesFromForm = exports.selectOutcomesFromForm = function selectOutcomesFromForm(type, categoricalOutcomes, scalarSmallNum, scalarBigNum) {
	switch (type) {
		case _marketTypes.BINARY:
			return [{ id: 1, name: 'No' }, { id: 2, name: 'Yes' }];
		case _marketTypes.CATEGORICAL:
			return categoricalOutcomes.map(function (outcome, i) {
				var obj = { id: i, name: outcome };
				return obj;
			});
		case _marketTypes.SCALAR:
			return [{ id: 1, name: scalarSmallNum }, { id: 2, name: scalarBigNum }];
		default:
			break;
	}
};

},{"../../../../utils/format-date":538,"../../../../utils/format-number":539,"../../../app/constants/network":397,"../../../create-market/actions/submit-new-market":423,"../../../create-market/constants/market-values-constraints":425,"../../../markets/constants/market-types":469}],432:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = validateBestStartingQuantity;

var _formatNumber = require('../../../utils/format-number');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

function validateBestStartingQuantity(bestStartingQuantity) {
	var parsed = parseFloat(bestStartingQuantity);

	if (!bestStartingQuantity) {
		return 'Please provide a best starting quantity';
	}
	if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
		return 'Best starting quantity must be numeric';
	}
	if (parsed < _marketValuesConstraints.BEST_STARTING_QUANTITY_MIN) {
		return 'Starting quantity must be at least ' + (0, _formatNumber.formatShares)(_marketValuesConstraints.BEST_STARTING_QUANTITY_MIN).full;
	}
}

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425}],433:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (categoricalOutcomes) {
	var errors = null;

	if (!categoricalOutcomes || !categoricalOutcomes.length) {
		return [];
	}

	errors = Array(categoricalOutcomes.length);
	errors.fill('');

	categoricalOutcomes.forEach(function (outcome, currentIndex) {
		if (!outcome.length) {
			errors[currentIndex] = 'Answer cannot be blank';
		} else {
			categoricalOutcomes.forEach(function (cV, i) {
				if (cV === outcome && i !== currentIndex) {
					errors[currentIndex] = 'Category must be unique';
				}
			});
		}
	});

	return errors;
};

},{}],434:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (description) {
	if (!description || !description.length) {
		return 'Please enter your question';
	}

	if (description.length < _marketValuesConstraints.DESCRIPTION_MIN_LENGTH) {
		return 'Text must be a minimum length of ' + _marketValuesConstraints.DESCRIPTION_MIN_LENGTH;
	}

	if (description.length > _marketValuesConstraints.DESCRIPTION_MAX_LENGTH) {
		return 'Text exceeds the maximum length of ' + _marketValuesConstraints.DESCRIPTION_MAX_LENGTH;
	}

	return null;
};

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

},{"../../create-market/constants/market-values-constraints":425}],435:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (endDate) {
	if (!endDate) {
		return 'Please choose an end date';
	}
	return null;
};

},{}],436:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (expirySourceUrl, expirySource) {
	if (expirySource === _marketValuesConstraints.EXPIRY_SOURCE_SPECIFIC && (!expirySourceUrl || !expirySourceUrl.length)) {
		return 'Please enter the full URL of the website';
	}
};

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

},{"../../create-market/constants/market-values-constraints":425}],437:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (expirySource) {
	if (!expirySource || [_marketValuesConstraints.EXPIRY_SOURCE_GENERIC, _marketValuesConstraints.EXPIRY_SOURCE_SPECIFIC].indexOf(expirySource) < 0) {
		return 'Please choose an expiry source';
	}
};

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

},{"../../create-market/constants/market-values-constraints":425}],438:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = validateInitialFairPrices;

var _marketTypes = require('../../markets/constants/market-types');

function validateInitialFairPrices(type, initialFairPrices, width, halfWidth, scalarMin, scalarMax) {
	// -- Constraints --
	// 	Binary + Categorical:
	//		min: priceWidth / 2
	//  	max: 1 - (priceWidth / 2)
	// 	Scalar:
	// 		min: scalarMin + (priceWidth / 2)
	// 		max: scalarMax - (priceWidth / 2)

	var max = type === _marketTypes.SCALAR ? parseFloat(scalarMax) - halfWidth : 1 - halfWidth;
	var min = type === _marketTypes.SCALAR ? parseFloat(scalarMin) + halfWidth : halfWidth;
	var fairPriceErrors = {};

	initialFairPrices.map(function (cV, i) {
		var parsed = parseFloat(cV);

		if (!cV) {
			fairPriceErrors['' + i] = 'Please provide some initial liquidity';
			return null;
		}
		if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
			fairPriceErrors['' + i] = 'Initial liquidity must be numeric';
			return null;
		}
		if (cV < min || cV > max) {
			fairPriceErrors['' + i] = 'Initial prices must be between ' + min + ' - ' + max + ' based on the price width of ' + width;
			return null;
		}
		return null;
	});

	if (!!Object.keys(fairPriceErrors).length) {
		return fairPriceErrors;
	}
}

},{"../../markets/constants/market-types":469}],439:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = validateInitialLiquidity;

var _formatNumber = require('../../../utils/format-number');

var _marketTypes = require('../../markets/constants/market-types');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

function validateInitialLiquidity(type, liquidity, start, best, halfWidth, scalarMin, scalarMax) {
	var parsed = parseFloat(liquidity);
	var priceDepth = type === _marketTypes.SCALAR ? parseFloat(start) * (parseFloat(scalarMin) + parseFloat(scalarMax) - halfWidth) / (parseFloat(liquidity) - 2 * parseFloat(best)) : parseFloat(start) * (1 - halfWidth) / (parseFloat(liquidity) - 2 * parseFloat(best));

	if (!liquidity) {
		return 'Please provide some initial liquidity';
	}
	if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
		return 'Initial liquidity must be numeric';
	}
	if (priceDepth < 0 || !Number.isFinite(priceDepth)) {
		return 'Insufficient liquidity based on advanced parameters';
	}
	if (parsed < _marketValuesConstraints.INITIAL_LIQUIDITY_MIN) {
		return 'Initial liquidity must be at least ' + (0, _formatNumber.formatEther)(_marketValuesConstraints.INITIAL_LIQUIDITY_MIN).full;
	}
}

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425,"../../markets/constants/market-types":469}],440:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (makerFee, takerFee) {
	var parsedMakerFee = parseFloat(makerFee);
	var parsedHalfTakerFee = parseFloat(takerFee / 2);

	if (!makerFee) {
		return 'Please specify a maker fee %';
	}
	if (Number.isNaN(parsedMakerFee) && !Number.isFinite(parsedMakerFee)) {
		return 'Maker fee must be a number';
	}
	if (parsedMakerFee < _marketValuesConstraints.MAKER_FEE_MIN || parsedMakerFee > parsedHalfTakerFee) {
		return 'Maker fee must be between ' + (0, _formatNumber.formatPercent)(_marketValuesConstraints.MAKER_FEE_MIN, true).full + ' and ' + (0, _formatNumber.formatPercent)(parsedHalfTakerFee, true).full;
	}
};

var _formatNumber = require('../../../utils/format-number');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425}],441:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = validatePriceWidth;

var _formatNumber = require('../../../utils/format-number');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

function validatePriceWidth(priceWidth) {
	var parsed = parseFloat(priceWidth);

	if (!priceWidth) {
		return 'Please provide a price width';
	}
	if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
		return 'Price width must be numeric';
	}
	if (parsed < _marketValuesConstraints.PRICE_WIDTH_MIN) {
		return 'Price width must be at least ' + (0, _formatNumber.formatEther)(_marketValuesConstraints.PRICE_WIDTH_MIN).full;
	}
}

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425}],442:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (scalarSmallNum, scalarBigNum) {
	var parsedBig = parseFloat(scalarBigNum);

	if (!scalarBigNum) {
		return 'Please provide a maximum value';
	}
	if (Number.isNaN(parsedBig) && !Number.isFinite(parsedBig)) {
		return 'Maximum value must be a number';
	}
	if (parseFloat(scalarSmallNum) === scalarSmallNum && parsedBig <= parseFloat(scalarSmallNum)) {
		return 'Maximum must be greater than minimum';
	}
	return null;
};

},{}],443:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (scalarSmallNum, scalarBigNum) {
	var parsedSmall = parseFloat(scalarSmallNum);
	if (!scalarSmallNum) {
		return 'Please provide a minimum value';
	}
	if (Number.isNaN(parsedSmall) && !Number.isFinite(parsedSmall)) {
		return 'Minimum value must be a number';
	}
	if (parseFloat(scalarBigNum) === scalarBigNum && parsedSmall >= parseFloat(scalarBigNum)) {
		return 'Minimum must be less than maximum';
	}
	return null;
};

},{}],444:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = validateStartingQuantity;

var _formatNumber = require('../../../utils/format-number');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

function validateStartingQuantity(startingQuantity) {
	var parsed = parseFloat(startingQuantity);

	if (!startingQuantity) {
		return 'Please provide a starting quantity';
	}
	if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
		return 'Starting quantity must be numeric';
	}
	if (parsed < _marketValuesConstraints.STARTING_QUANTITY_MIN) {
		return 'Starting quantity must be at least ' + (0, _formatNumber.formatShares)(_marketValuesConstraints.STARTING_QUANTITY_MIN).full;
	}
}

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425}],445:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (takerFee) {
	var parsed = parseFloat(takerFee);

	if (!takerFee) {
		return 'Please specify a taker fee %';
	}
	if (Number.isNaN(parsed) && !Number.isFinite(parsed)) {
		return 'Trading fee must be a number';
	}
	if (parsed < _marketValuesConstraints.TAKER_FEE_MIN || parsed > _marketValuesConstraints.TAKER_FEE_MAX) {
		return 'Trading fee must be between ' + (0, _formatNumber.formatPercent)(_marketValuesConstraints.TAKER_FEE_MIN, true).full + ' and ' + (0, _formatNumber.formatPercent)(_marketValuesConstraints.TAKER_FEE_MAX, true).full;
	}
};

var _formatNumber = require('../../../utils/format-number');

var _marketValuesConstraints = require('../../create-market/constants/market-values-constraints');

},{"../../../utils/format-number":539,"../../create-market/constants/market-values-constraints":425}],446:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.SHOW_LINK = undefined;
exports.showLink = showLink;
exports.showPreviousLink = showPreviousLink;

var _parseUrl = require('../../../utils/parse-url');

var _loadFullMarket = require('../../market/actions/load-full-market');

var SHOW_LINK = exports.SHOW_LINK = 'SHOW_LINK';

/**
 * @param {String} url URL to display in address bar
 * @param {=Object} options
 * @return {Function}
 */
function showLink(url) {
	var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	return function (dispatch, getState) {
		dispatch({ type: SHOW_LINK, parsedURL: (0, _parseUrl.parseURL)(url) });

		var _getState = getState();

		var selectedMarketID = _getState.selectedMarketID;
		var connection = _getState.connection;

		if (selectedMarketID != null && connection.isConnected) {
			dispatch((0, _loadFullMarket.loadFullMarket)(selectedMarketID));
		}

		if (url !== window.location.pathname + window.location.search) {
			window.history.pushState(null, null, url);
		}
		if (!options.preventScrollTop) {
			window.scrollTo(0, 0);
		}
	};
}

function showPreviousLink(url) {
	return function (dispatch) {
		dispatch({ type: SHOW_LINK, parsedURL: (0, _parseUrl.parseURL)(url) });
		window.scrollTo(0, 0);
	};
}

},{"../../../utils/parse-url":542,"../../market/actions/load-full-market":450}],447:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Author: priecint
 */
var SEARCH_PARAM_NAME = exports.SEARCH_PARAM_NAME = 'search';
var SORT_PARAM_NAME = exports.SORT_PARAM_NAME = 'sort';
var PAGE_PARAM_NAME = exports.PAGE_PARAM_NAME = 'page';
var TAGS_PARAM_NAME = exports.TAGS_PARAM_NAME = 'tags';
var FILTERS_PARAM_NAME = exports.FILTERS_PARAM_NAME = 'filters';

},{}],448:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.AUTH_PATHS = exports.PATHS_AUTH = exports.PAGES_PATHS = exports.PATHS_PAGES = undefined;

var _pages = require('../../app/constants/pages');

var _authTypes = require('../../auth/constants/auth-types');

var PATHS_PAGES = exports.PATHS_PAGES = {
	'/': _pages.MARKETS,
	'/make': _pages.MAKE,
	'/positions': _pages.POSITIONS,
	'/transactions': _pages.TRANSACTIONS,
	'/register': _authTypes.REGISTER,
	'/login': _authTypes.LOGIN,
	'/m': _pages.M
};

var PAGES_PATHS = exports.PAGES_PATHS = Object.keys(PATHS_PAGES).reduce(function (finalObj, key) {
	finalObj[PATHS_PAGES[key]] = key;
	return finalObj;
}, {});

var PATHS_AUTH = exports.PATHS_AUTH = {
	'/register': _authTypes.REGISTER,
	'/login': _authTypes.LOGIN
};

var AUTH_PATHS = exports.AUTH_PATHS = Object.keys(PATHS_AUTH).reduce(function (finalObj, key) {
	finalObj[PATHS_AUTH[key]] = key;
	return finalObj;
}, {});

},{"../../app/constants/pages":398,"../../auth/constants/auth-types":411}],449:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectCreateMarketLink = exports.selectTransactionsLink = exports.selectPositionsLink = exports.selectMarketLink = exports.selectMarketsLink = exports.selectAuthLink = exports.selectPreviousLink = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var keywords = _store$getState.keywords;
	var selectedFilters = _store$getState.selectedFilters;
	var selectedSort = _store$getState.selectedSort;
	var selectedTags = _store$getState.selectedTags;
	var pagination = _store$getState.pagination;
	var loginAccount = _store$getState.loginAccount;

	var _require = require('../../../selectors');

	var market = _require.market;


	return {
		authLink: selectAuthLink(loginAccount.id ? _authTypes.LOGIN : _authTypes.REGISTER, !!loginAccount.id, _store2.default.dispatch),
		createMarketLink: selectCreateMarketLink(_store2.default.dispatch),
		marketsLink: selectMarketsLink(keywords, selectedFilters, selectedSort, selectedTags, pagination.selectedPageNum, _store2.default.dispatch),
		positionsLink: selectPositionsLink(_store2.default.dispatch),
		transactionsLink: selectTransactionsLink(_store2.default.dispatch),
		marketLink: selectMarketLink(market, _store2.default.dispatch),
		previousLink: selectPreviousLink(_store2.default.dispatch)
	};
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _listWordsUnderLength = require('../../../utils/list-words-under-length');

var _parseUrl = require('../../../utils/parse-url');

var _paths = require('../../link/constants/paths');

var _pages = require('../../app/constants/pages');

var _authTypes = require('../../auth/constants/auth-types');

var _paramNames = require('../../link/constants/param-names');

var _sort = require('../../markets/constants/sort');

var _showLink = require('../../link/actions/show-link');

var _logout = require('../../auth/actions/logout');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectPreviousLink = exports.selectPreviousLink = (0, _memoizerific2.default)(1)(function (dispatch) {
	var obj = {
		href: _paths.PAGES_PATHS[_pages.MARKETS],
		onClick: function onClick(href) {
			return dispatch((0, _showLink.showPreviousLink)(href));
		}
	};
	return obj;
});
// import * as selectors from '../../../selectors';

var selectAuthLink = exports.selectAuthLink = (0, _memoizerific2.default)(1)(function (authType, alsoLogout, dispatch) {
	var href = _paths.PAGES_PATHS[authType];
	return {
		href: href,
		onClick: function onClick() {
			if (!!alsoLogout) {
				dispatch((0, _logout.logout)());
			}
			dispatch((0, _showLink.showLink)(href));
		}
	};
});

var selectMarketsLink = exports.selectMarketsLink = (0, _memoizerific2.default)(1)(function (keywords, selectedFilters, selectedSort, selectedTags, selectedPageNum, dispatch) {
	var params = {};

	// search
	if (keywords != null && keywords.length > 0) {
		params[_paramNames.SEARCH_PARAM_NAME] = keywords;
	}

	// sort
	if (selectedSort.prop !== _sort.DEFAULT_SORT_PROP || selectedSort.isDesc !== _sort.DEFAULT_IS_SORT_DESC) {
		params[_paramNames.SORT_PARAM_NAME] = selectedSort.prop + '|' + selectedSort.isDesc;
	}

	// pagination
	if (selectedPageNum > 1) {
		params[_paramNames.PAGE_PARAM_NAME] = selectedPageNum;
	}

	// status and type filters
	var filtersParams = Object.keys(selectedFilters).filter(function (filter) {
		return !!selectedFilters[filter];
	}).join(',');
	if (filtersParams.length) {
		params[_paramNames.FILTERS_PARAM_NAME] = filtersParams;
	}

	// tags
	var tagsParams = Object.keys(selectedTags).filter(function (tag) {
		return !!selectedTags[tag];
	}).join(',');
	if (tagsParams.length) {
		params[_paramNames.TAGS_PARAM_NAME] = tagsParams;
	}

	var href = (0, _parseUrl.makeLocation)([_paths.PAGES_PATHS[_pages.MARKETS]], params).url;

	return {
		href: href,
		onClick: function onClick() {
			return dispatch((0, _showLink.showLink)(href));
		}
	};
});

var selectMarketLink = exports.selectMarketLink = (0, _memoizerific2.default)(1)(function (market, dispatch) {
	var words = (0, _listWordsUnderLength.listWordsUnderLength)(market.description, 300).map(function (word) {
		return encodeURIComponent(word);
	}).join('_');
	var href = _paths.PAGES_PATHS[_pages.M] + '/' + words + '_' + market.id;
	var link = {
		href: href,
		onClick: function onClick() {
			return dispatch((0, _showLink.showLink)(href));
		}
	};

	if (market.isReported) {
		link.text = 'Reported';
		link.className = 'reported';
	} else if (market.isMissedReport) {
		link.text = 'Missed Report';
		link.className = 'missed-report';
	} else if (market.isPendingReport) {
		link.text = 'Report';
		link.className = 'report';
	} else if (!market.isOpen) {
		link.text = 'View';
		link.className = 'view';
	} else {
		link.text = 'Trade';
		link.className = 'trade';
	}

	return link;
});

var selectPositionsLink = exports.selectPositionsLink = (0, _memoizerific2.default)(1)(function (dispatch) {
	var href = _paths.PAGES_PATHS[_pages.POSITIONS];
	return {
		href: href,
		onClick: function onClick() {
			return dispatch((0, _showLink.showLink)(href));
		}
	};
});

var selectTransactionsLink = exports.selectTransactionsLink = (0, _memoizerific2.default)(1)(function (dispatch) {
	var href = _paths.PAGES_PATHS[_pages.TRANSACTIONS];
	return {
		href: href,
		onClick: function onClick() {
			return dispatch((0, _showLink.showLink)(href));
		}
	};
});

var selectCreateMarketLink = exports.selectCreateMarketLink = (0, _memoizerific2.default)(1)(function (dispatch) {
	var href = _paths.PAGES_PATHS[_pages.MAKE];
	return {
		href: href,
		onClick: function onClick() {
			return dispatch((0, _showLink.showLink)(href));
		}
	};
});

},{"../../../selectors":531,"../../../store":533,"../../../utils/list-words-under-length":541,"../../../utils/parse-url":542,"../../app/constants/pages":398,"../../auth/actions/logout":407,"../../auth/constants/auth-types":411,"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../link/constants/paths":448,"../../markets/constants/sort":472,"memoizerific":375}],450:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadFullMarket = loadFullMarket;

var _loadMarket = require('../../market/actions/load-market');

var _loadPriceHistory = require('../../market/actions/load-price-history');

var _loadBidsAsks = require('../../bids-asks/actions/load-bids-asks');

function loadFullMarket(marketId) {
	return function (dispatch, getState) {
		var _getState = getState();

		var marketsData = _getState.marketsData;
		// load price history, and other non-basic market details here, dispatching
		// the necessary actions to save each part in relevant state

		var loadDetails = function loadDetails() {
			dispatch((0, _loadPriceHistory.loadPriceHistory)(marketId));
			dispatch((0, _loadBidsAsks.loadBidsAsks)(marketId));
		};

		// if the basic data hasn't loaded yet, load it first
		if (!marketsData[marketId]) {
			dispatch((0, _loadMarket.loadMarket)(marketId, loadDetails));
		} else {
			// if the basic data is already loaded, just load the details
			loadDetails();
		}
	};
}

},{"../../bids-asks/actions/load-bids-asks":417,"../../market/actions/load-market":451,"../../market/actions/load-price-history":452}],451:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadMarket = loadMarket;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateMarketsData2 = require('../../markets/actions/update-markets-data');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function loadMarket(marketID, cb) {
	return function (dispatch, getState) {
		AugurJS.loadMarket(marketID, function (err, marketData) {
			if (err) {
				console.info('ERROR: loadMarket()', err);
				return cb && cb();
			}
			if (marketData) {
				dispatch((0, _updateMarketsData2.updateMarketsData)(_defineProperty({}, marketID, marketData)));
			}
			return cb && cb();
		});
	};
}

},{"../../../services/augurjs":532,"../../markets/actions/update-markets-data":462}],452:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadPriceHistory = loadPriceHistory;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateMarketPriceHistory = require('../../market/actions/update-market-price-history');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadPriceHistory(marketID) {
	return function (dispatch, getState) {
		AugurJS.loadPriceHistory(marketID, function (err, priceHistory) {
			if (err) {
				return console.info('ERROR: loadPriceHistory()', err);
			}
			dispatch((0, _updateMarketPriceHistory.updateMarketPriceHistory)(marketID, priceHistory));
		});
	};
}

},{"../../../services/augurjs":532,"../../market/actions/update-market-price-history":453}],453:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateMarketPriceHistory = updateMarketPriceHistory;
/*
 * Author: priecint
 */

var UPDATE_MARKET_PRICE_HISTORY = exports.UPDATE_MARKET_PRICE_HISTORY = 'UPDATE_MARKET_PRICE_HISTORY';

function updateMarketPriceHistory(marketID, priceHistory) {
  return { type: UPDATE_MARKET_PRICE_HISTORY, marketID: marketID, priceHistory: priceHistory };
}

},{}],454:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.assembleMarket = exports.selectMarketFromEventID = exports.selectMarket = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                  This is one of the most important and sensitive selectors in the app.
                                                                                                                                                                                                                                                                  It builds the fat, heavy, rigid, hierarchical market objects,
                                                                                                                                                                                                                                                                  that are used to render and display many parts of the ui.
                                                                                                                                                                                                                                                                  This is the point where the shallow, light, loose, flexible, independent
                                                                                                                                                                                                                                                                  pieces of state come together to make each market.
                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                  IMPORTANT
                                                                                                                                                                                                                                                                  The assembleMarket() function (where all the action happens) is heavily memoized, and performance sensitive.
                                                                                                                                                                                                                                                                  Doing things sub-optimally here will cause noticeable performance degradation in the app.
                                                                                                                                                                                                                                                                  The "trick" is to maximize memoization cache hits as much a spossible, and not have assembleMarket()
                                                                                                                                                                                                                                                                  run any more than it has to.
                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                  To achieve that, we pass in the minimum number of the shallowest arguments possible.
                                                                                                                                                                                                                                                                  For example, instead of passing in the entire `favorites` collection and letting the
                                                                                                                                                                                                                                                                  function find the one it needs for the market, we instead find the specific fvorite
                                                                                                                                                                                                                                                                  for that market in advance, and only pass in a boolean: `!!favorites[marketID]`
                                                                                                                                                                                                                                                                  That way the market only gets re-assembled when that specific favorite changes.
                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                  This is true for all selectors, but especially important for this one.
                                                                                                                                                                                                                                                                  */

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var selectedMarketID = _store$getState.selectedMarketID;

	return selectMarket(selectedMarketID);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _formatNumber = require('../../../utils/format-number');

var _formatDate = require('../../../utils/format-date');

var _isMarketDataOpen = require('../../../utils/is-market-data-open');

var _marketTypes = require('../../markets/constants/market-types');

var _marketOutcomes = require('../../markets/constants/market-outcomes');

var _bidsAsksTypes = require('../../bids-asks/constants/bids-asks-types');

var _updateFavorites = require('../../markets/actions/update-favorites');

var _placeTrade = require('../../trade/actions/place-trade');

var _updateTradesInProgress = require('../../trade/actions/update-trades-in-progress');

var _submitReport = require('../../reports/actions/submit-report');

var _toggleTag = require('../../markets/actions/toggle-tag');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _links = require('../../link/selectors/links');

var _tradeOrders = require('../../trade/selectors/trade-orders');

var _tradeSummary = require('../../trade/selectors/trade-summary');

var _positionsSummary = require('../../positions/selectors/positions-summary');

var _priceTimeSeries = require('../../market/selectors/price-time-series');

var _position = require('../../positions/selectors/position');

var _selectOrderBook = require('../../bids-asks/selectors/select-order-book');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectMarket = exports.selectMarket = function selectMarket(marketID) {
	var _store$getState2 = _store2.default.getState();

	var marketsData = _store$getState2.marketsData;
	var favorites = _store$getState2.favorites;
	var reports = _store$getState2.reports;
	var outcomes = _store$getState2.outcomes;
	var accountTrades = _store$getState2.accountTrades;
	var tradesInProgress = _store$getState2.tradesInProgress;
	var blockchain = _store$getState2.blockchain;
	var priceHistory = _store$getState2.priceHistory;
	var marketOrderBooks = _store$getState2.marketOrderBooks;


	if (!marketID || !marketsData || !marketsData[marketID]) {
		return {};
	}

	var endDate = new Date(marketsData[marketID].endDate * 1000 || 0);

	return assembleMarket(marketID, marketsData[marketID], priceHistory[marketID], (0, _isMarketDataOpen.isMarketDataOpen)(marketsData[marketID], blockchain && blockchain.currentBlockNumber), !!favorites[marketID], outcomes[marketID], reports[marketsData[marketID].eventID], accountTrades[marketID], tradesInProgress[marketID],

	// the reason we pass in the date parts broken up like this, is because date objects are never equal, thereby always triggering re-assembly, and never hitting the memoization cache
	endDate.getFullYear(), endDate.getMonth(), endDate.getDate(), blockchain && blockchain.isReportConfirmationPhase, marketOrderBooks[marketID], _store2.default.dispatch);
};

var selectMarketFromEventID = exports.selectMarketFromEventID = function selectMarketFromEventID(eventID) {
	var _store$getState3 = _store2.default.getState();

	var marketsData = _store$getState3.marketsData;

	return selectMarket(Object.keys(marketsData).find(function (marketID) {
		return marketsData[marketID].eventID === eventID;
	}));
};

var assembleMarket = exports.assembleMarket = (0, _memoizerific2.default)(1000)(function (marketID, marketData, marketPriceHistory, isOpen, isFavorite, marketOutcomes, marketReport, marketAccountTrades, marketTradeInProgress, endDateYear, endDateMonth, endDateDay, isReportConfirmationPhase, marketOrderBooks, dispatch) {
	// console.log('>>assembleMarket<<');

	var market = _extends({}, marketData, {
		description: marketData.description || '',
		id: marketID
	});

	market.type = marketData.type;
	switch (market.type) {
		case _marketTypes.BINARY:
			market.isBinary = true;
			market.isCategorical = false;
			market.isScalar = false;
			break;
		case _marketTypes.CATEGORICAL:
			market.isBinary = false;
			market.isCategorical = true;
			market.isScalar = false;
			break;
		case _marketTypes.SCALAR:
			market.isBinary = false;
			market.isCategorical = false;
			market.isScalar = true;
			break;
		default:
			break;
	}

	market.endDate = endDateYear >= 0 && endDateMonth >= 0 && endDateDay >= 0 && (0, _formatDate.formatDate)(new Date(endDateYear, endDateMonth, endDateDay)) || null;
	market.endDateLabel = market.endDate < new Date() ? 'ended' : 'ends';

	market.isOpen = isOpen;
	market.isExpired = !isOpen;
	market.isFavorite = isFavorite;

	market.takerFeePercent = (0, _formatNumber.formatPercent)(marketData.takerFee * 100, { positiveSign: false });
	market.makerFeePercent = (0, _formatNumber.formatPercent)(marketData.makerFee * 100, { positiveSign: false });
	market.volume = (0, _formatNumber.formatShares)(marketData.volume, { positiveSign: false });

	market.isRequiredToReportByAccount = !!marketReport; // was the user chosen to report on this market
	market.isPendingReport = market.isRequiredToReportByAccount && !marketReport.reportHash && !isReportConfirmationPhase; // account is required to report on this unreported market during reporting phase
	market.isReportSubmitted = market.isRequiredToReportByAccount && !!marketReport.reportHash; // the user submitted a report that is not yet confirmed (reportHash === true)
	market.isReported = market.isReportSubmitted && !!marketReport.reportHash.length; // the user fully reported on this market (reportHash === [string])
	market.isMissedReport = market.isRequiredToReportByAccount && !market.isReported && !market.isReportSubmitted && isReportConfirmationPhase; // the user submitted a report that is not yet confirmed
	market.isMissedOrReported = market.isMissedReport || market.isReported;

	market.marketLink = (0, _links.selectMarketLink)(market, dispatch);
	market.onClickToggleFavorite = function () {
		return dispatch((0, _updateFavorites.toggleFavorite)(marketID));
	};
	market.onSubmitPlaceTrade = function () {
		return dispatch((0, _placeTrade.placeTrade)(marketID));
	};

	market.report = _extends({}, marketReport, {
		onSubmitReport: function onSubmitReport(reportedOutcomeID, isUnethical) {
			return dispatch((0, _submitReport.submitReport)(market, reportedOutcomeID, isUnethical));
		}
	});

	market.outcomes = [];

	var tradeOrders = [];
	var positions = { qtyShares: 0, totalValue: 0, totalCost: 0, list: [] };

	market.outcomes = Object.keys(marketOutcomes || {}).map(function (outcomeID) {
		var outcomeData = marketOutcomes[outcomeID];
		var outcomeTradeInProgress = marketTradeInProgress && marketTradeInProgress[outcomeID];

		var outcome = _extends({}, outcomeData, {
			id: outcomeID,
			marketID: marketID,
			lastPrice: (0, _formatNumber.formatEther)(outcomeData.price || 0, { positiveSign: false }),
			lastPricePercent: (0, _formatNumber.formatPercent)((outcomeData.price || 0) * 100, { positiveSign: false })
		});

		var outcomeTradeOrders = (0, _tradeOrders.selectOutcomeTradeOrders)(market, outcome, outcomeTradeInProgress, dispatch);

		outcome.trade = {
			side: outcomeTradeInProgress && outcomeTradeInProgress.side || _bidsAsksTypes.BID,
			numShares: outcomeTradeInProgress && outcomeTradeInProgress.numShares || 0,
			limitPrice: outcomeTradeInProgress && outcomeTradeInProgress.limitPrice || 0,
			tradeSummary: (0, _tradeSummary.selectTradeSummary)(outcomeTradeOrders),
			updateTradeOrder: function updateTradeOrder(outcomeId, shares, limitPrice, side) {
				return dispatch((0, _updateTradesInProgress.updateTradesInProgress)(marketID, outcome.id, shares, limitPrice, side));
			}
		};

		if (marketAccountTrades && marketAccountTrades[outcomeID]) {
			outcome.position = (0, _position.selectPositionFromOutcomeAccountTrades)(marketAccountTrades[outcomeID], outcome.price);
			if (outcome.position && outcome.position.qtyShares && outcome.position.qtyShares.value) {
				positions.qtyShares += outcome.position.qtyShares.value;
				positions.totalValue += outcome.position.totalValue.value || 0;
				positions.totalCost += outcome.position.totalCost.value || 0;
				positions.list.push(outcome);
			}
		}

		var orderBook = (0, _selectOrderBook.selectAggregateOrderBook)(outcome.id, marketOrderBooks);
		outcome.orderBook = orderBook;
		outcome.topBid = (0, _selectOrderBook.selectTopBidPrice)(orderBook);
		outcome.topAsk = (0, _selectOrderBook.selectTopAskPrice)(orderBook);

		tradeOrders = tradeOrders.concat(outcomeTradeOrders);

		return outcome;
	}).sort(function (a, b) {
		return b.lastPrice.value - a.lastPrice.value || (a.name < b.name ? -1 : 1);
	});

	market.tags = (market.tags || []).map(function (tag) {
		var obj = {
			name: tag && tag.toString().toLowerCase().trim(),
			onClick: function onClick() {
				return dispatch((0, _toggleTag.toggleTag)(tag));
			}
		};
		return obj;
	}).filter(function (tag) {
		return !!tag.name;
	});

	market.priceTimeSeries = (0, _priceTimeSeries.selectPriceTimeSeries)(market.outcomes, marketPriceHistory);

	market.reportableOutcomes = market.outcomes.slice();
	market.reportableOutcomes.push({ id: _marketOutcomes.INDETERMINATE_OUTCOME_ID, name: _marketOutcomes.INDETERMINATE_OUTCOME_NAME });

	market.tradeSummary = (0, _tradeSummary.selectTradeSummary)(tradeOrders);
	market.positionsSummary = (0, _positionsSummary.selectPositionsSummary)(positions.list.length, positions.qtyShares, positions.totalValue, positions.totalCost);
	market.positionOutcomes = positions.list;

	return market;
});

},{"../../../store":533,"../../../utils/format-date":538,"../../../utils/format-number":539,"../../../utils/is-market-data-open":540,"../../bids-asks/constants/bids-asks-types":419,"../../bids-asks/selectors/select-order-book":421,"../../link/selectors/links":449,"../../market/selectors/price-time-series":455,"../../markets/actions/toggle-tag":459,"../../markets/actions/update-favorites":460,"../../markets/constants/market-outcomes":468,"../../markets/constants/market-types":469,"../../positions/selectors/position":501,"../../positions/selectors/positions-summary":502,"../../reports/actions/submit-report":507,"../../trade/actions/place-trade":510,"../../trade/actions/update-trades-in-progress":511,"../../trade/selectors/trade-orders":514,"../../trade/selectors/trade-summary":515,"memoizerific":375}],455:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectPriceTimeSeries = undefined;

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _dateToBlockToDate = require('../../../utils/date-to-block-to-date');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Prepares data structure for Highcharts
 *
 * @param {Array} outcomes List of outcomes for market
 * @param {Object} marketPriceHistory
 * @return {Array}
 */
var selectPriceTimeSeries = exports.selectPriceTimeSeries = (0, _memoizerific2.default)(1)(function (outcomes, marketPriceHistory) {
	var _store$getState = _store2.default.getState();

	var blockchain = _store$getState.blockchain;


	if (marketPriceHistory == null) {
		return [];
	}

	return outcomes.map(function (outcome) {
		var outcomePriceHistory = marketPriceHistory[outcome.id] || [];

		return {
			name: outcome.name,
			data: outcomePriceHistory.map(function (priceTimePoint) {
				return [(0, _dateToBlockToDate.blockToDate)(priceTimePoint.blockNumber, blockchain.currentBlockNumber), Number(priceTimePoint.price)];
			})
		};
	});
});

},{"../../../store":533,"../../../utils/date-to-block-to-date":537,"memoizerific":375}],456:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadMarketsInfo = loadMarketsInfo;
exports.loadMarketsInfoForDisplayedMarkets = loadMarketsInfoForDisplayedMarkets;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _marketTypes = require('../../markets/constants/market-types');

var _marketOutcomes = require('../../markets/constants/market-outcomes');

var _updateMarketsData = require('../../markets/actions/update-markets-data');

var _updateOutcomesData = require('../../markets/actions/update-outcomes-data');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// import { BRANCH_ID } from '../../app/constants/network';
function loadMarketsInfo(marketIDs) {
	return function (dispatch, getState) {
		if (!marketIDs || !marketIDs.length) {
			return;
		}
		AugurJS.batchGetMarketInfo(marketIDs, function (err, marketsData) {
			if (err) {
				console.error('ERROR loadMarketsInfo()', err);
				// we purposely don't return here so that the loop below runs and sets isLoadedMarketInfo
			}

			var finalMarketsData = {};
			var finalOutcomesData = {};

			var marketData = void 0;

			// it's important to loop through the original marketIDs so that unloaded markets can still be marked as isLoadedMarketInfo and avoid infinite recursion later on
			marketIDs.forEach(function (marketID) {

				marketData = marketsData[marketID] || {};

				// parse out event, currently we only support single event markets, no combinatorial
				parseEvent(marketData, marketID);

				// transform array of outcomes into an object and add their names
				finalOutcomesData[marketID] = parseOutcomes(marketData);

				// mark that details have been loaded
				marketData.isLoadedMarketInfo = true;

				// save market (without outcomes)
				finalMarketsData[marketID] = marketData;
			});

			dispatch((0, _updateMarketsData.updateMarketsData)(finalMarketsData));
			dispatch((0, _updateOutcomesData.updateOutcomesData)(finalOutcomesData));
		});
	};

	function parseEvent(marketData, marketID) {
		if (!marketData.events || marketData.events.length !== 1) {
			console.warn('Market does not have correct number of events:', marketID, marketData);
			delete marketData.events;
			return;
		}

		var event = marketData.events[0];
		marketData.eventID = event.id;
		marketData.minValue = event.minValue;
		marketData.maxValue = event.maxValue;
		marketData.numOutcomes = event.numOutcomes;
		marketData.reportedOutcome = event.outcome;
		delete marketData.events;
	}

	function parseOutcomes(marketData, marketID) {
		if (!marketData.outcomes || !marketData.outcomes.length) {
			console.warn('Market does not have outcomes:', marketID, marketData);
			return undefined;
		}

		var outcomes = void 0;
		var splitDescription = void 0;
		var categoricalOutcomeNames = void 0;

		switch (marketData.type) {
			case _marketTypes.BINARY:
				outcomes = marketData.outcomes.map(function (outcome) {
					if (outcome.id === _marketOutcomes.BINARY_NO_ID) {
						outcome.name = 'No';
					} else if (outcome.id === _marketOutcomes.BINARY_YES_ID) {
						outcome.name = 'Yes';
					} else {
						console.warn('Invalid outcome ID for binary market:', outcome, marketID, marketData);
					}
					return outcome;
				});
				break;

			case _marketTypes.CATEGORICAL:
				// parse outcome names from description
				splitDescription = marketData.description.split(_marketOutcomes.CATEGORICAL_OUTCOMES_SEPARATOR);
				if (splitDescription.length < 2) {
					console.warn('Missing outcome names in description for categorical market:', marketID, marketData);
					break;
				}

				// parse individual outcomes from outcomes string
				categoricalOutcomeNames = splitDescription.pop().split(_marketOutcomes.CATEGORICAL_OUTCOME_SEPARATOR);
				if (categoricalOutcomeNames.length !== marketData.outcomes.length) {
					console.warn('Number of outcomes parsed from description do not match number of outcomes in market for for categorical market:', marketID, marketData);
					break;
				}

				// add names to outcomes
				outcomes = marketData.outcomes.map(function (outcome, i) {
					outcome.name = categoricalOutcomeNames[i].toString().trim();
					return outcome;
				});

				// update market description to exclude outcome names
				marketData.description = splitDescription.join();
				break;

			case _marketTypes.SCALAR:
				outcomes = marketData.outcomes.map(function (outcome) {
					if (outcome.id === _marketOutcomes.SCALAR_DOWN_ID) {
						outcome.name = '⇩';
					} else if (outcome.id === _marketOutcomes.SCALAR_UP_ID) {
						outcome.name = '⇧';
					} else {
						console.warn('Invalid outcome ID for scalar market:', marketID, outcome, marketData);
					}
					return outcome;
				});
				break;

			default:
				console.warn('Unknown market type:', marketID, marketData.type, marketData);
				outcomes = undefined;
				break;
		}

		delete marketData.outcomes;

		return outcomes.reduce(function (p, outcome) {
			p[outcome.id] = outcome;
			delete outcome.id;
			return p;
		}, {});
	}
}

function loadMarketsInfoForDisplayedMarkets() {
	return function (dispatch, getState) {
		var _require = require('../../../selectors');

		var markets = _require.markets;

		var marketIDsMissingInfo = markets.filter(function (market) {
			return !market.isLoadedMarketInfo;
		}).map(function (market) {
			return market.id;
		});

		if (marketIDsMissingInfo.length) {
			dispatch(loadMarketsInfo(marketIDsMissingInfo));
		}
	};
}

},{"../../../selectors":531,"../../../services/augurjs":532,"../../markets/actions/update-markets-data":462,"../../markets/actions/update-outcomes-data":464,"../../markets/constants/market-outcomes":468,"../../markets/constants/market-types":469}],457:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadMarkets = loadMarkets;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _updateMarketsData = require('../../markets/actions/update-markets-data');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/*
import { loadReports } from '../../reports/actions/load-reports';
import { penalizeWrongReports } from '../../reports/actions/penalize-wrong-reports';
import { closeMarkets } from '../../reports/actions/close-markets';
*/

function loadMarkets() {
	var chunkSize = 10;

	return function (dispatch, getState) {
		AugurJS.loadMarkets(_network.BRANCH_ID, chunkSize, true, function (err, marketsData) {
			if (err) {
				console.log('ERROR loadMarkets()', err);
				return;
			}
			if (!marketsData) {
				console.log('WARN loadMarkets()', 'no markets data returned');
				return;
			}

			dispatch((0, _updateMarketsData.updateMarketsData)(marketsData));

			/*
   dispatch(loadReports(marketsData));
   dispatch(penalizeWrongReports(marketsData));
   dispatch(closeMarkets(marketsData));
   */
		});
	};
}

},{"../../../services/augurjs":532,"../../app/constants/network":397,"../../markets/actions/update-markets-data":462}],458:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.TOGGLE_FILTER = undefined;
exports.toggleFilter = toggleFilter;

var _showLink = require('../../link/actions/show-link');

var TOGGLE_FILTER = exports.TOGGLE_FILTER = 'TOGGLE_FILTER';

function toggleFilter(filterID) {
	return function (dispatch, getState) {
		dispatch({ type: TOGGLE_FILTER, filterID: filterID });

		var _require = require('../../../selectors');

		var links = _require.links;

		dispatch((0, _showLink.showLink)(links.marketsLink.href, { preventScrollTop: true }));
	};
}

},{"../../../selectors":531,"../../link/actions/show-link":446}],459:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.TOGGLE_TAG = undefined;
exports.toggleTag = toggleTag;

var _showLink = require('../../link/actions/show-link');

var TOGGLE_TAG = exports.TOGGLE_TAG = 'TOGGLE_TAG';

function toggleTag(filterID) {
	return function (dispatch, getState) {
		dispatch({ type: TOGGLE_TAG, filterID: filterID });

		var _require = require('../../../selectors');

		var links = _require.links; // this has to be after the dispatch to get the new state

		dispatch((0, _showLink.showLink)(links.marketsLink.href));
	};
}

},{"../../../selectors":531,"../../link/actions/show-link":446}],460:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateFavorites = updateFavorites;
exports.toggleFavorite = toggleFavorite;
var UPDATE_FAVORITES = exports.UPDATE_FAVORITES = 'UPDATE_FAVORITES';
var TOGGLE_FAVORITE = exports.TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';

function updateFavorites(favorites) {
	return { type: UPDATE_FAVORITES, favorites: favorites };
}

function toggleFavorite(marketID) {
	return { type: TOGGLE_FAVORITE, marketID: marketID };
}

},{}],461:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.UPDATE_KEYWORDS = undefined;
exports.updateKeywords = updateKeywords;

var _showLink = require('../../link/actions/show-link');

var UPDATE_KEYWORDS = exports.UPDATE_KEYWORDS = 'UPDATE_KEYWORDS';

function updateKeywords(keywords) {
	return function (dispatch, getState) {
		dispatch({ type: UPDATE_KEYWORDS, keywords: keywords });

		var _require = require('../../../selectors');

		var links = _require.links;

		dispatch((0, _showLink.showLink)(links.marketsLink.href, { preventScrollTop: true }));
	};
}

},{"../../../selectors":531,"../../link/actions/show-link":446}],462:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateMarketsData = updateMarketsData;
exports.updateMarketData = updateMarketData;
var UPDATE_MARKETS_DATA = exports.UPDATE_MARKETS_DATA = 'UPDATE_MARKETS_DATA';
var UPDATE_MARKET_DATA = exports.UPDATE_MARKET_DATA = 'UPDATE_MARKET_DATA';

function updateMarketsData(marketsData) {
	return { type: UPDATE_MARKETS_DATA, marketsData: marketsData };
}

function updateMarketData(marketData) {
	return { type: UPDATE_MARKET_DATA, marketData: marketData };
}

},{}],463:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateOutcomePrice = updateOutcomePrice;
var UPDATE_OUTCOME_PRICE = exports.UPDATE_OUTCOME_PRICE = 'UPDATE_OUTCOME_PRICE';

function updateOutcomePrice(marketID, outcomeID, price) {
	return { type: UPDATE_OUTCOME_PRICE, marketID: marketID, outcomeID: outcomeID, price: price };
}

},{}],464:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateOutcomesData = updateOutcomesData;
var UPDATE_OUTCOMES_DATA = exports.UPDATE_OUTCOMES_DATA = 'UPDATE_OUTCOMES_DATA';

function updateOutcomesData(outcomesData) {
	return { type: UPDATE_OUTCOMES_DATA, outcomesData: outcomesData };
}

},{}],465:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateSelectedMarketsHeader = updateSelectedMarketsHeader;
var UPDATED_SELECTED_MARKETS_HEADER = exports.UPDATED_SELECTED_MARKETS_HEADER = 'UPDATED_SELECTED_MARKETS_HEADER';

function updateSelectedMarketsHeader(selectedMarketsHeader) {
	return { type: UPDATED_SELECTED_MARKETS_HEADER, selectedMarketsHeader: selectedMarketsHeader };
}

},{}],466:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.UPDATE_SELECTED_PAGE_NUM = undefined;
exports.updateSelectedPageNum = updateSelectedPageNum;

var _showLink = require('../../link/actions/show-link');

var UPDATE_SELECTED_PAGE_NUM = exports.UPDATE_SELECTED_PAGE_NUM = 'UPDATE_SELECTED_PAGE_NUM';

function updateSelectedPageNum(selectedPageNum) {
	return function (dispatch, getState) {
		dispatch({ type: UPDATE_SELECTED_PAGE_NUM, selectedPageNum: selectedPageNum });

		var _require = require('../../../selectors');

		var links = _require.links;

		dispatch((0, _showLink.showLink)(links.marketsLink.href));
	};
}

},{"../../../selectors":531,"../../link/actions/show-link":446}],467:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.UPDATE_SELECTED_SORT = undefined;
exports.updateSelectedSort = updateSelectedSort;

var _showLink = require('../../link/actions/show-link');

var UPDATE_SELECTED_SORT = exports.UPDATE_SELECTED_SORT = 'UPDATE_SELECTED_SORT';

function updateSelectedSort(selectedSort) {
	return function (dispatch, getState) {
		dispatch({ type: UPDATE_SELECTED_SORT, selectedSort: selectedSort });

		var _require = require('../../../selectors');

		var links = _require.links;

		dispatch((0, _showLink.showLink)(links.marketsLink.href, { preventScrollTop: true }));
	};
}

},{"../../../selectors":531,"../../link/actions/show-link":446}],468:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var BINARY_NO_ID = exports.BINARY_NO_ID = 1;
var BINARY_YES_ID = exports.BINARY_YES_ID = 2;

var CATEGORICAL_OUTCOMES_SEPARATOR = exports.CATEGORICAL_OUTCOMES_SEPARATOR = '~|>';
var CATEGORICAL_OUTCOME_SEPARATOR = exports.CATEGORICAL_OUTCOME_SEPARATOR = '|';

var SCALAR_DOWN_ID = exports.SCALAR_DOWN_ID = 1;
var SCALAR_UP_ID = exports.SCALAR_UP_ID = 2;

var INDETERMINATE_OUTCOME_ID = exports.INDETERMINATE_OUTCOME_ID = '1.5';
var INDETERMINATE_OUTCOME_NAME = exports.INDETERMINATE_OUTCOME_NAME = 'Indeterminate';

},{}],469:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _MARKET_TYPES;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var BINARY = exports.BINARY = 'binary';
var CATEGORICAL = exports.CATEGORICAL = 'categorical';
var SCALAR = exports.SCALAR = 'scalar';
var COMBINATORIAL = exports.COMBINATORIAL = 'combinatorial';

var MARKET_TYPES = exports.MARKET_TYPES = (_MARKET_TYPES = {}, _defineProperty(_MARKET_TYPES, BINARY, BINARY), _defineProperty(_MARKET_TYPES, CATEGORICAL, CATEGORICAL), _defineProperty(_MARKET_TYPES, SCALAR, SCALAR), _defineProperty(_MARKET_TYPES, COMBINATORIAL, COMBINATORIAL), _MARKET_TYPES);

},{}],470:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var FAVORITES = exports.FAVORITES = 'favorites';
var PENDING_REPORTS = exports.PENDING_REPORTS = 'pending reports';

},{}],471:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Author: priecint
 */
var DEFAULT_PAGE = exports.DEFAULT_PAGE = 1;

},{}],472:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Author: priecint
 */
var DEFAULT_SORT_PROP = exports.DEFAULT_SORT_PROP = 'volume';
var DEFAULT_IS_SORT_DESC = exports.DEFAULT_IS_SORT_DESC = true;

},{}],473:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var favorites = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	var newFavorites = void 0;

	switch (action.type) {
		case _updateFavorites.UPDATE_FAVORITES:
			return _extends({}, favorites, action.favorites);

		case _updateFavorites.TOGGLE_FAVORITE:
			newFavorites = _extends({}, favorites);
			if (newFavorites[action.marketID]) {
				delete newFavorites[action.marketID];
			} else {
				newFavorites[action.marketID] = Date.now();
			}
			return newFavorites;

		default:
			return favorites;
	}
};

var _updateFavorites = require('../../markets/actions/update-favorites');

},{"../../markets/actions/update-favorites":460}],474:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var keywords = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	var action = arguments[1];

	var params = void 0;
	switch (action.type) {
		case _updateKeywords.UPDATE_KEYWORDS:
			return action.keywords;

		case _showLink.SHOW_LINK:
			params = action.parsedURL.searchParams;
			if (params[_paramNames.SEARCH_PARAM_NAME] != null && params[_paramNames.SEARCH_PARAM_NAME] !== '') {
				return params[_paramNames.SEARCH_PARAM_NAME];
			}
			return '';

		default:
			return keywords;
	}
};

var _updateKeywords = require('../../markets/actions/update-keywords');

var _showLink = require('../../link/actions/show-link');

var _paramNames = require('../../link/constants/param-names');

},{"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../markets/actions/update-keywords":461}],475:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var marketsData = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateMarketsData.UPDATE_MARKETS_DATA:
			return _extends({}, marketsData, action.marketsData);

		case _updateMarketsData.UPDATE_MARKET_DATA:
			return _extends({}, marketsData, _defineProperty({}, action.marketData.id, _extends({}, marketsData[action.marketData.id], action.marketData)));

		default:
			return marketsData;
	}
};

var _updateMarketsData = require('../../markets/actions/update-markets-data');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

},{"../../markets/actions/update-markets-data":462}],476:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var outcomes = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateOutcomesData.UPDATE_OUTCOMES_DATA:
			return _extends({}, outcomes, action.outcomesData);

		case _updateOutcomePrice.UPDATE_OUTCOME_PRICE:
			if (!outcomes || !outcomes[action.marketID] || !outcomes[action.marketID][action.outcomeID]) {
				return outcomes;
			}
			return _extends({}, outcomes, _defineProperty({}, action.marketID, _extends({}, outcomes[action.marketID], _defineProperty({}, action.outcomeID, _extends({}, outcomes[action.marketID][action.outcomeID], {
				price: action.price
			})))));

		default:
			return outcomes;
	}
};

var _updateOutcomesData = require('../../markets/actions/update-outcomes-data');

var _updateOutcomePrice = require('../../markets/actions/update-outcome-price');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

},{"../../markets/actions/update-outcome-price":463,"../../markets/actions/update-outcomes-data":464}],477:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var pagination = arguments.length <= 0 || arguments[0] === undefined ? { selectedPageNum: _pagination.DEFAULT_PAGE, numPerPage: 10 } : arguments[0];
	var action = arguments[1];

	var params = void 0;
	var newPageNum = void 0;
	switch (action.type) {
		case _updateSelectedPageNum.UPDATE_SELECTED_PAGE_NUM:
			return _extends({}, pagination, {
				selectedPageNum: action.selectedPageNum
			});

		case _updateSelectedSort.UPDATE_SELECTED_SORT:
		case _updateKeywords.UPDATE_KEYWORDS:
		case _toggleFilter.TOGGLE_FILTER:
		case _toggleTag.TOGGLE_TAG:
		case _updateSelectedMarketsHeader.UPDATED_SELECTED_MARKETS_HEADER:
			return _extends({}, pagination, {
				selectedPageNum: _pagination.DEFAULT_PAGE
			});

		case _showLink.SHOW_LINK:
			params = action.parsedURL.searchParams;
			newPageNum = params[_paramNames.PAGE_PARAM_NAME];
			if (newPageNum != null && newPageNum !== '' && parseInt(newPageNum, 10) !== _pagination.DEFAULT_PAGE) {
				return _extends({}, pagination, {
					selectedPageNum: parseInt(newPageNum, 10)
				});
			}

			return pagination;

		default:
			return pagination;
	}
};

var _updateSelectedPageNum = require('../../markets/actions/update-selected-page-num');

var _updateSelectedSort = require('../../markets/actions/update-selected-sort');

var _updateKeywords = require('../../markets/actions/update-keywords');

var _toggleFilter = require('../../markets/actions/toggle-filter');

var _toggleTag = require('../../markets/actions/toggle-tag');

var _updateSelectedMarketsHeader = require('../../markets/actions/update-selected-markets-header');

var _paramNames = require('../../link/constants/param-names');

var _pagination = require('../../markets/constants/pagination');

var _showLink = require('../../link/actions/show-link');

},{"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../markets/actions/toggle-filter":458,"../../markets/actions/toggle-tag":459,"../../markets/actions/update-keywords":461,"../../markets/actions/update-selected-markets-header":465,"../../markets/actions/update-selected-page-num":466,"../../markets/actions/update-selected-sort":467,"../../markets/constants/pagination":471}],478:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var priceHistory = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateMarketPriceHistory.UPDATE_MARKET_PRICE_HISTORY:
			return _extends({}, priceHistory, _defineProperty({}, action.marketID, action.priceHistory));

		default:
			return priceHistory;
	}
};

var _updateMarketPriceHistory = require('../../market/actions/update-market-price-history');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

},{"../../market/actions/update-market-price-history":453}],479:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var selectedFilters = arguments.length <= 0 || arguments[0] === undefined ? { isOpen: true } : arguments[0];
	var action = arguments[1];

	var newSelectedFilters = void 0;

	switch (action.type) {
		case _toggleFilter.TOGGLE_FILTER:
			newSelectedFilters = _extends({}, selectedFilters);
			if (newSelectedFilters[action.filterID]) {
				delete newSelectedFilters[action.filterID];
			} else {
				newSelectedFilters[action.filterID] = true;
			}
			return newSelectedFilters;

		case _showLink.SHOW_LINK:
			if (!action.parsedURL.searchParams[_paramNames.FILTERS_PARAM_NAME]) {
				return {};
			}
			return action.parsedURL.searchParams[_paramNames.FILTERS_PARAM_NAME].split(',').reduce(function (p, param) {
				p[param] = true;
				return p;
			}, _extends({}, selectedFilters));

		default:
			return selectedFilters;
	}
};

var _showLink = require('../../link/actions/show-link');

var _toggleFilter = require('../../markets/actions/toggle-filter');

var _paramNames = require('../../link/constants/param-names');

},{"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../markets/actions/toggle-filter":458}],480:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var selectedMarketID = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _showLink.SHOW_LINK:
			if ([_pages.M].indexOf(_paths.PATHS_PAGES[action.parsedURL.pathArray[0]]) >= 0 && action.parsedURL.pathArray[1]) {
				return action.parsedURL.pathArray[1].substring(1).split('_').pop();
			}
			return null;

		default:
			return selectedMarketID;
	}
};

var _showLink = require('../../link/actions/show-link');

var _pages = require('../../app/constants/pages');

var _paths = require('../../link/constants/paths');

},{"../../app/constants/pages":398,"../../link/actions/show-link":446,"../../link/constants/paths":448}],481:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var selectedMarketsHeader = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateSelectedMarketsHeader.UPDATED_SELECTED_MARKETS_HEADER:
			return action.selectedMarketsHeader;

		default:
			return selectedMarketsHeader;
	}
};

var _updateSelectedMarketsHeader = require('../../markets/actions/update-selected-markets-header');

},{"../../markets/actions/update-selected-markets-header":465}],482:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var selectedSort = arguments.length <= 0 || arguments[0] === undefined ? {
		prop: _sort.DEFAULT_SORT_PROP,
		isDesc: _sort.DEFAULT_IS_SORT_DESC
	} : arguments[0];
	var action = arguments[1];

	var params = void 0;
	switch (action.type) {
		case _updateSelectedSort.UPDATE_SELECTED_SORT:
			return _extends({}, selectedSort, action.selectedSort);

		case _showLink.SHOW_LINK:
			params = action.parsedURL.searchParams;
			if (params[_paramNames.SORT_PARAM_NAME] != null && params[_paramNames.SORT_PARAM_NAME] !== '') {
				var sortSplit = params[_paramNames.SORT_PARAM_NAME].split('|');
				return _extends({}, selectedSort, {
					prop: sortSplit[0],
					isDesc: sortSplit[1] === 'true'
				});
			}

			return selectedSort;

		default:
			return selectedSort;
	}
};

var _showLink = require('../../link/actions/show-link');

var _paramNames = require('../../link/constants/param-names');

var _sort = require('../../markets/constants/sort');

var _updateSelectedSort = require('../../markets/actions/update-selected-sort');

},{"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../markets/actions/update-selected-sort":467,"../../markets/constants/sort":472}],483:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var selectedTags = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	var newSelectedTags = void 0;
	switch (action.type) {
		case _toggleTag.TOGGLE_TAG:
			newSelectedTags = _extends({}, selectedTags);
			if (newSelectedTags[action.filterID]) {
				delete newSelectedTags[action.filterID];
			} else {
				newSelectedTags[action.filterID] = true;
			}
			return newSelectedTags;

		case _showLink.SHOW_LINK:
			if (!action.parsedURL.searchParams[_paramNames.TAGS_PARAM_NAME]) {
				return {};
			}
			return action.parsedURL.searchParams[_paramNames.TAGS_PARAM_NAME].split(',').reduce(function (p, param) {
				p[param] = true;
				return p;
			}, _extends({}, selectedTags));

		default:
			return selectedTags;
	}
};

var _showLink = require('../../link/actions/show-link');

var _toggleTag = require('../../markets/actions/toggle-tag');

var _paramNames = require('../../link/constants/param-names');

},{"../../link/actions/show-link":446,"../../link/constants/param-names":447,"../../markets/actions/toggle-tag":459}],484:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectFilters = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var selectedTags = _store$getState.selectedTags;

	var _require = require('../../../selectors');

	var filteredMarkets = _require.filteredMarkets;


	return selectFilters(filteredMarkets, selectedTags, _store2.default.dispatch);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _toggleTag = require('../../markets/actions/toggle-tag');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectFilters = exports.selectFilters = (0, _memoizerific2.default)(1)(function (markets, selectedTags, dispatch) {
	var tagCounts = {};

	// count matches for each filter and tag
	markets.forEach(function (market) {
		market.tags.forEach(function (tag) {
			tagCounts[tag.name] = tagCounts[tag.name] || 0;
			tagCounts[tag.name]++;
		});
	});

	// make sure all selected tags are displayed, even if markets haven't loaded yet
	Object.keys(selectedTags).forEach(function (selectedTag) {
		if (!tagCounts[selectedTag]) {
			tagCounts[selectedTag] = 0;
		}
	});

	var filters = [];

	var tagOptions = Object.keys(tagCounts).filter(function (tag) {
		return tagCounts[tag] > 0 || !!selectedTags[tag];
	}).sort(function (a, b) {
		return tagCounts[b] - tagCounts[a] || (a < b ? -1 : 1);
	}).slice(0, 50).map(function (tag) {
		var obj = {
			name: tag,
			value: tag,
			numMatched: tagCounts[tag],
			isSelected: !!selectedTags[tag],
			onClick: function onClick() {
				return dispatch((0, _toggleTag.toggleTag)(tag));
			}
		};
		return obj;
	});

	if (tagOptions.length) {
		filters.push({
			title: 'Tags',
			className: 'tags',
			options: tagOptions
		});
	}

	return filters;
});

},{"../../../selectors":531,"../../../store":533,"../../markets/actions/toggle-tag":459,"memoizerific":375}],485:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectOnChangeKeywords = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var keywords = _store$getState.keywords;

	return {
		value: keywords,
		onChangeKeywords: selectOnChangeKeywords(_store2.default.dispatch)
	};
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _updateKeywords = require('../../markets/actions/update-keywords');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Author: priecint
 */
var selectOnChangeKeywords = exports.selectOnChangeKeywords = (0, _memoizerific2.default)(1)(function (dispatch) {
	return function (keywords) {
		return dispatch((0, _updateKeywords.updateKeywords)(keywords));
	};
});

},{"../../../store":533,"../../markets/actions/update-keywords":461,"memoizerific":375}],486:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectMarkets = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var marketsData = _store$getState.marketsData;
	var favorites = _store$getState.favorites;
	var reports = _store$getState.reports;
	var outcomes = _store$getState.outcomes;
	var accountTrades = _store$getState.accountTrades;
	var tradesInProgress = _store$getState.tradesInProgress;
	var blockchain = _store$getState.blockchain;
	var selectedSort = _store$getState.selectedSort;
	var priceHistory = _store$getState.priceHistory;
	var marketOrderBooks = _store$getState.marketOrderBooks;


	return selectMarkets(marketsData, favorites, reports, outcomes, accountTrades, tradesInProgress, blockchain, selectedSort, priceHistory, marketOrderBooks, _store2.default.dispatch);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _isMarketDataOpen = require('../../../utils/is-market-data-open');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _market = require('../../market/selectors/market');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectMarkets = exports.selectMarkets = (0, _memoizerific2.default)(1)(function (marketsData, favorites, reports, outcomes, accountTrades, tradesInProgress, blockchain, selectedSort, priceHistory, marketOrderBooks, dispatch) {
	if (!marketsData) {
		return [];
	}

	return Object.keys(marketsData).map(function (marketID) {
		if (!marketID || !marketsData[marketID]) {
			return {};
		}

		var endDate = new Date(marketsData[marketID].endDate * 1000 || 0);

		return (0, _market.assembleMarket)(marketID, marketsData[marketID], priceHistory[marketID], (0, _isMarketDataOpen.isMarketDataOpen)(marketsData[marketID], blockchain && blockchain.currentBlockNumber), !!favorites[marketID], outcomes[marketID], reports[marketsData[marketID].eventID], accountTrades[marketID], tradesInProgress[marketID],

		// the reason we pass in the date parts broken up like this, is because date objects are never equal, thereby always triggering re-assembly, and never hitting the memoization cache
		endDate.getFullYear(), endDate.getMonth(), endDate.getDate(), blockchain && blockchain.isReportConfirmationPhase, marketOrderBooks[marketID], dispatch);
	}).sort(function (a, b) {
		var aVal = cleanSortVal(a[selectedSort.prop]);
		var bVal = cleanSortVal(b[selectedSort.prop]);

		if (bVal < aVal) {
			return selectedSort.isDesc ? -1 : 1;
		} else if (bVal > aVal) {
			return selectedSort.isDesc ? 1 : -1;
		}
		return a.id < b.id ? -1 : 1;
	});
});
// import { makeDateFromBlock } from '../../../utils/format-number';

function cleanSortVal(val) {
	// if a falsy simple value return it to sort as-is
	if (!val) {
		return val;
	}

	// if this is a formatted number object, with a `value` prop, use that for sorting
	if (val.value || val.value === 0) {
		return val.value;
	}

	// if the val is a string, lowercase it
	if (val.toLowerCase) {
		return val.toLowerCase();
	}

	// otherwise the val is probably a number, either way return it as-is
	return val;
}

},{"../../../store":533,"../../../utils/is-market-data-open":540,"../../market/selectors/market":454,"memoizerific":375}],487:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectFavoriteMarkets = undefined;

exports.default = function () {
	var _require = require('../../../selectors');

	var filteredMarkets = _require.filteredMarkets;

	return selectFavoriteMarkets(filteredMarkets);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectFavoriteMarkets = exports.selectFavoriteMarkets = (0, _memoizerific2.default)(1)(function (markets) {
	return markets.filter(function (market) {
		return !!market.isFavorite;
	});
});

},{"../../../selectors":531,"memoizerific":375}],488:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.isMarketFiltersMatch = exports.selectFilteredMarkets = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var keywords = _store$getState.keywords;
	var selectedFilters = _store$getState.selectedFilters;
	var selectedTags = _store$getState.selectedTags;

	var _require = require('../../../selectors');

	var allMarkets = _require.allMarkets;

	return selectFilteredMarkets(allMarkets, keywords, selectedFilters, selectedTags);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _cleanKeywords = require('../../../utils/clean-keywords');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectFilteredMarkets = exports.selectFilteredMarkets = (0, _memoizerific2.default)(3)(function (markets, keywords, selectedFilters, selectedTags) {
	return markets.filter(function (market) {
		return isMarketFiltersMatch(market, keywords, selectedFilters, selectedTags);
	});
});

var isMarketFiltersMatch = exports.isMarketFiltersMatch = (0, _memoizerific2.default)(3)(function (market, keywords, selectedFilters, selectedTags) {
	var selectedTagsList = Object.keys(selectedTags);
	return isMatchKeywords(market, keywords) && isMatchTags(market, selectedTagsList);

	function isMatchKeywords(market, keys) {
		var keywordsArray = (0, _cleanKeywords.cleanKeywordsArray)(keys);
		if (!keywordsArray.length) {
			return true;
		}
		return keywordsArray.every(function (keyword) {
			return market.description.toLowerCase().indexOf(keyword) >= 0 || market.outcomes.some(function (outcome) {
				return outcome.name.indexOf(keyword) >= 0;
			}) || market.tags.some(function (tag) {
				return tag.name.indexOf(keyword) >= 0;
			});
		});
	}

	function isMatchTags(market, selectedTagsList) {
		if (!selectedTagsList.length) {
			return true;
		}
		return selectedTagsList.every(function (tag) {
			return market.tags.some(function (marketTag) {
				return marketTag.name === tag;
			});
		});
	}
});

},{"../../../selectors":531,"../../../store":533,"../../../utils/clean-keywords":536,"memoizerific":375}],489:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectMarketsHeader = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var selectedMarketsHeader = _store$getState.selectedMarketsHeader;

	var _require = require('../../../selectors');

	var marketsTotals = _require.marketsTotals;

	return selectMarketsHeader(selectedMarketsHeader, marketsTotals.numFiltered, marketsTotals.numFavorites, marketsTotals.numPendingReports, _store2.default.dispatch);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _marketsHeaders = require('../../markets/constants/markets-headers');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _updateSelectedMarketsHeader = require('../../markets/actions/update-selected-markets-header');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectMarketsHeader = exports.selectMarketsHeader = (0, _memoizerific2.default)(1)(function (selectedMarketsHeader, numFiltered, numFavorites, numPendingReports, dispatch) {
	var obj = {
		selectedMarketsHeader: selectedMarketsHeader,
		numMarkets: numFiltered,
		numFavorites: numFavorites,
		numPendingReports: numPendingReports,
		onClickAllMarkets: function onClickAllMarkets() {
			return dispatch((0, _updateSelectedMarketsHeader.updateSelectedMarketsHeader)(null));
		},
		onClickFavorites: function onClickFavorites() {
			return dispatch((0, _updateSelectedMarketsHeader.updateSelectedMarketsHeader)(_marketsHeaders.FAVORITES));
		},
		onClickPendingReports: function onClickPendingReports() {
			return dispatch((0, _updateSelectedMarketsHeader.updateSelectedMarketsHeader)(_marketsHeaders.PENDING_REPORTS));
		}
	};
	return obj;
});

},{"../../../selectors":531,"../../../store":533,"../../markets/actions/update-selected-markets-header":465,"../../markets/constants/markets-headers":470,"memoizerific":375}],490:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectMarketsTotals = undefined;

exports.default = function () {
	var _require = require('../../../selectors');

	var allMarkets = _require.allMarkets;
	var filteredMarkets = _require.filteredMarkets;
	var unpaginatedMarkets = _require.unpaginatedMarkets;
	var favoriteMarkets = _require.favoriteMarkets;


	return selectMarketsTotals(allMarkets, filteredMarkets.length, unpaginatedMarkets.length, favoriteMarkets.length);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _positionsSummary = require('../../positions/selectors/positions-summary');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectMarketsTotals = exports.selectMarketsTotals = (0, _memoizerific2.default)(1)(function (allMarkets, filteredMarketsLength, unpaginatedMarketsLength, favoriteMarketsLength) {
	var positions = { numPositions: 0, qtyShares: 0, totalValue: 0, totalCost: 0 };

	var totals = allMarkets.reduce(function (p, market) {
		p.numAll++;

		if (market.isPendingReport) {
			p.numPendingReports++;
		}

		if (market.positionsSummary && market.positionsSummary.qtyShares && market.positionsSummary.qtyShares.value) {
			positions.numPositions += market.positionsSummary.numPositions.value;
			positions.qtyShares += market.positionsSummary.qtyShares.value;
			positions.totalValue += market.positionsSummary.totalValue.value || 0;
			positions.totalCost += market.positionsSummary.totalCost.value || 0;
		}

		return p;
	}, {
		numAll: 0,
		numFavorites: 0,
		numPendingReports: 0,
		numUnpaginated: 0,
		numFiltered: 0
	});

	totals.numUnpaginated = unpaginatedMarketsLength;
	totals.numFiltered = filteredMarketsLength;
	totals.numFavorites = favoriteMarketsLength;
	totals.positionsSummary = (0, _positionsSummary.selectPositionsSummary)(positions.numPositions, positions.qtyShares, positions.totalValue, positions.totalCost);

	return totals;
});

},{"../../../selectors":531,"../../positions/selectors/positions-summary":502,"memoizerific":375}],491:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectUnpaginatedMarkets = exports.selectPositions = exports.selectPendingReports = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var activePage = _store$getState.activePage;
	var selectedMarketsHeader = _store$getState.selectedMarketsHeader;

	var _require = require('../../../selectors');

	var allMarkets = _require.allMarkets;
	var filteredMarkets = _require.filteredMarkets;
	var favoriteMarkets = _require.favoriteMarkets;


	return selectUnpaginatedMarkets(allMarkets, filteredMarkets, favoriteMarkets, activePage, selectedMarketsHeader);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _pages = require('../../app/constants/pages');

var _marketsHeaders = require('../../markets/constants/markets-headers');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectPendingReports = exports.selectPendingReports = (0, _memoizerific2.default)(1)(function (markets) {
	return markets.filter(function (market) {
		return !!market.isPendingReport;
	});
});

var selectPositions = exports.selectPositions = (0, _memoizerific2.default)(1)(function (markets) {
	return markets.filter(function (market) {
		return market.positionsSummary && market.positionsSummary.qtyShares.value;
	});
});

var selectUnpaginatedMarkets = exports.selectUnpaginatedMarkets = (0, _memoizerific2.default)(1)(function (allMarkets, filteredMarkets, favoriteMarkets, activePage, selectedMarketsHeader) {
	if (activePage === _pages.POSITIONS) {
		return selectPositions(allMarkets);
	}

	if (selectedMarketsHeader === _marketsHeaders.PENDING_REPORTS) {
		return selectPendingReports(allMarkets);
	}

	if (selectedMarketsHeader === _marketsHeaders.FAVORITES) {
		return favoriteMarkets;
	}

	return filteredMarkets;
});

},{"../../../selectors":531,"../../../store":533,"../../app/constants/pages":398,"../../markets/constants/markets-headers":470,"memoizerific":375}],492:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectPaginated = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var activePage = _store$getState.activePage;
	var selectedMarketsHeader = _store$getState.selectedMarketsHeader;
	var pagination = _store$getState.pagination;

	var _require = require('../../../selectors');

	var unpaginatedMarkets = _require.unpaginatedMarkets;


	var markets = void 0;

	if (activePage !== _pages.POSITIONS && selectedMarketsHeader !== _marketsHeaders.PENDING_REPORTS) {
		markets = selectPaginated(unpaginatedMarkets, pagination.selectedPageNum, pagination.numPerPage);
	} else {
		markets = unpaginatedMarkets;
	}

	var marketIDsMissingInfo = markets.filter(function (market) {
		return !market.isLoadedMarketInfo;
	}).map(function (market) {
		return market.id;
	});

	if (marketIDsMissingInfo.length) {
		_store2.default.dispatch((0, _loadMarketsInfo.loadMarketsInfo)(marketIDsMissingInfo));
	}

	return markets;
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _pages = require('../../app/constants/pages');

var _marketsHeaders = require('../../markets/constants/markets-headers');

var _loadMarketsInfo = require('../../markets/actions/load-markets-info');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectPaginated = exports.selectPaginated = (0, _memoizerific2.default)(1)(function (markets, pageNum, numPerPage) {
	return markets.slice((pageNum - 1) * numPerPage, pageNum * numPerPage);
});

},{"../../../selectors":531,"../../../store":533,"../../app/constants/pages":398,"../../markets/actions/load-markets-info":456,"../../markets/constants/markets-headers":470,"memoizerific":375}],493:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var pagination = _store$getState.pagination;

	var _require = require('../../../selectors');

	var marketsTotals = _require.marketsTotals;


	if (!pagination || !marketsTotals.numUnpaginated) {
		return {};
	}

	var o = {
		numUnpaginated: marketsTotals.numUnpaginated,
		selectedPageNum: pagination.selectedPageNum,
		numPerPage: pagination.numPerPage,
		numPages: Math.ceil(marketsTotals.numUnpaginated / pagination.numPerPage),
		startItemNum: (pagination.selectedPageNum - 1) * pagination.numPerPage + 1,
		endItemNum: Math.min(pagination.selectedPageNum * pagination.numPerPage, marketsTotals.numUnpaginated),
		onUpdateSelectedPageNum: function onUpdateSelectedPageNum(pageNum) {
			return _store2.default.dispatch((0, _updateSelectedPageNum.updateSelectedPageNum)(pageNum));
		}
	};

	if (marketsTotals.numUnpaginated > o.numPerPage) {
		o.nextPageNum = o.selectedPageNum < o.numPages ? o.selectedPageNum + 1 : undefined;
		o.previousPageNum = o.selectedPageNum >= 2 ? o.selectedPageNum - 1 : undefined;

		o.nextItemNum = o.selectedPageNum < o.numPages ? o.endItemNum + 1 : undefined;
		o.previousItemNum = o.selectedPageNum >= 2 ? o.startItemNum - o.numPerPage : undefined;
	}

	return o;
};

var _updateSelectedPageNum = require('../../markets/actions/update-selected-page-num');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

},{"../../../selectors":531,"../../../store":533,"../../markets/actions/update-selected-page-num":466}],494:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectOnChangeSort = exports.selectSortOptions = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var selectedSort = _store$getState.selectedSort;

	return {
		selectedSort: selectedSort,
		sortOptions: selectSortOptions(selectedSort),
		onChangeSort: selectOnChangeSort(_store2.default.dispatch)
	};
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _updateSelectedSort = require('../../markets/actions/update-selected-sort');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectSortOptions = exports.selectSortOptions = (0, _memoizerific2.default)(10)(function () {
	var selectedSort = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	var creationTime = { label: 'Newest Market', value: 'creationTime', isDesc: true };
	var endDate = { label: 'Soonest Expiry', value: 'endDate', isDesc: false };
	var volume = { label: 'Most Volume', value: 'volume', isDesc: true };
	var takerFeePercent = { label: 'Lowest Taker Fee', value: 'takerFeePercent', isDesc: false };
	var makerFeePercent = { label: 'Lowest Maker Fee', value: 'makerFeePercent', isDesc: false };

	switch (selectedSort.prop) {
		case creationTime.value:
			creationTime.label = selectedSort.isDesc ? 'Newest Market' : 'Oldest Market';
			creationTime.isDesc = selectedSort.isDesc;
			break;
		case endDate.value:
			endDate.label = selectedSort.isDesc ? 'Furthest Expiry' : 'Soonest Expiry';
			endDate.isDesc = selectedSort.isDesc;
			break;
		case volume.value:
			volume.label = selectedSort.isDesc ? 'Most Volume' : 'Least Volume';
			volume.isDesc = selectedSort.isDesc;
			break;
		case takerFeePercent.value:
			takerFeePercent.label = selectedSort.isDesc ? 'Highest Taker Fee' : 'Lowest Taker Fee';
			takerFeePercent.isDesc = selectedSort.isDesc;
			break;
		case makerFeePercent.value:
			makerFeePercent.label = selectedSort.isDesc ? 'Highest Maker Fee' : 'Lowest Maker Fee';
			makerFeePercent.isDesc = selectedSort.isDesc;
			break;
		default:
			break;
	}

	return [creationTime, endDate, volume, takerFeePercent, makerFeePercent];
});

var selectOnChangeSort = exports.selectOnChangeSort = (0, _memoizerific2.default)(1)(function (dispatch) {
	return function (prop, isDesc) {
		var o = {};

		if (prop) {
			o.prop = prop;
		}
		if (isDesc || isDesc === false) {
			o.isDesc = isDesc;
		}

		dispatch((0, _updateSelectedSort.updateSelectedSort)(o));
	};
});

},{"../../../store":533,"../../markets/actions/update-selected-sort":467,"memoizerific":375}],495:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
/*
 * Author: priecint
 */
var UPDATE_SELECTED_OUTCOME = exports.UPDATE_SELECTED_OUTCOME = 'UPDATE_SELECTED_OUTCOME';

exports.default = function (selectedOutcomeID) {
	return {
		type: UPDATE_SELECTED_OUTCOME,
		selectedOutcomeID: selectedOutcomeID
	};
};

},{}],496:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _updateSelectedOutcome = require('../../outcome/actions/update-selected-outcome');

exports.default = function () {
	var selectedOutcomeID = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateSelectedOutcome.UPDATE_SELECTED_OUTCOME:
			return action.selectedOutcomeID;
		default:
			return selectedOutcomeID;
	}
}; /*
    * Author: priecint
    */

},{"../../outcome/actions/update-selected-outcome":495}],497:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

var _updateSelectedOutcome = require('../../outcome/actions/update-selected-outcome');

var _updateSelectedOutcome2 = _interopRequireDefault(_updateSelectedOutcome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
	return {
		selectedOutcomeID: _store2.default.getState().selectedOutcomeID,
		updateSelectedOutcome: selectUpdateSelectedOutcome(_store2.default.dispatch)
	};
}; /*
    * Author: priecint
    */


var selectUpdateSelectedOutcome = (0, _memoizerific2.default)(1)(function (dispatch) {
	return function (selectedOutcomeID) {
		return dispatch((0, _updateSelectedOutcome2.default)(selectedOutcomeID));
	};
});

},{"../../../store":533,"../../outcome/actions/update-selected-outcome":495,"memoizerific":375}],498:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadAccountTrades = loadAccountTrades;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _updateAccountTradesData = require('../../positions/actions/update-account-trades-data');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadAccountTrades() {
	return function (dispatch, getState) {
		AugurJS.loadAccountTrades(getState().loginAccount.id, function (err, accountTrades) {
			if (err) {
				console.log('ERROR loadAccountTrades', err);
				return;
			}
			if (!accountTrades) {
				return;
			}

			var trades = Object.keys(accountTrades).reduce(function (p, accountTradeID) {
				Object.keys(accountTrades[accountTradeID]).forEach(function (outcomeID) {
					accountTrades[accountTradeID][outcomeID].forEach(function (trade) {
						if (!p[trade.market]) {
							p[trade.market] = {};
						}
						if (!p[trade.market][outcomeID]) {
							p[trade.market][outcomeID] = [];
						}

						p[trade.market][outcomeID].push({
							qtyShares: parseFloat(trade.shares),
							purchasePrice: Math.abs(trade.cost)
						});
					});
				});
				return p;
			}, {});

			dispatch((0, _updateAccountTradesData.updateAccountTradesData)(trades));
		});
	};
}

/*
export function loadMeanTradePrices() {
    return (dispatch, getState) => {
        var { loginAccount } = getState();
        AugurJS.loadMeanTradePrices(loginAccount.id, (err, meanTradePrices) => {
console.log('========loadMeanTradePrices>>>>', err, meanTradePrices);
            if (err) {
                return console.info('ERR loadMeanTradePrices():', err);
            }

            if (meanTradePrices) {
                dispatch(updatePositionsData(meanTradePrices));
            }
        });
    };
}
*/

},{"../../../services/augurjs":532,"../../positions/actions/update-account-trades-data":499}],499:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateAccountTradesData = updateAccountTradesData;
var UPDATE_ACCOUNT_TRADES_DATA = exports.UPDATE_ACCOUNT_TRADES_DATA = 'UPDATE_ACCOUNT_TRADES_DATA';

function updateAccountTradesData(data) {
	return { type: UPDATE_ACCOUNT_TRADES_DATA, data: data };
}

},{}],500:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var accountTrades = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateAccountTradesData.UPDATE_ACCOUNT_TRADES_DATA:
			return _extends({}, accountTrades, action.data);

		case _updateLoginAccount.CLEAR_LOGIN_ACCOUNT:
			return {};

		default:
			return accountTrades;
	}
};

var _updateAccountTradesData = require('../../positions/actions/update-account-trades-data');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

},{"../../auth/actions/update-login-account":410,"../../positions/actions/update-account-trades-data":499}],501:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectPositionFromOutcomeAccountTrades = undefined;

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _positionsSummary = require('../../positions/selectors/positions-summary');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectPositionFromOutcomeAccountTrades = exports.selectPositionFromOutcomeAccountTrades = (0, _memoizerific2.default)(100)(function (outcomeAccountTrades, lastPrice) {
	var qtyShares = 0;
	var totalValue = 0;
	var totalCost = 0;

	if (!outcomeAccountTrades || !outcomeAccountTrades.length) {
		return null;
	}

	outcomeAccountTrades.forEach(function (outcomeAccountTrade) {
		qtyShares += outcomeAccountTrade.qtyShares;
		totalCost += outcomeAccountTrade.qtyShares * outcomeAccountTrade.purchasePrice;
		totalValue += outcomeAccountTrade.qtyShares * lastPrice;
	});

	var position = (0, _positionsSummary.selectPositionsSummary)(outcomeAccountTrades.length, qtyShares, totalValue, totalCost);

	return position;
});

},{"../../positions/selectors/positions-summary":502,"memoizerific":375}],502:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectPositionsSummary = undefined;

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _formatNumber = require('../../../utils/format-number');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectPositionsSummary = exports.selectPositionsSummary = (0, _memoizerific2.default)(20)(function (numPositions, qtyShares, totalValue, totalCost) {
	var purchasePrice = qtyShares && totalCost / qtyShares || 0;
	var valuePrice = qtyShares && totalValue / qtyShares || 0;
	var shareChange = valuePrice - purchasePrice;
	var gainPercent = totalCost && (totalValue - totalCost) / totalCost * 100 || 0;
	var netChange = totalValue - totalCost;

	return {
		numPositions: (0, _formatNumber.formatNumber)(numPositions, { decimals: 0, decimalsRounded: 0, denomination: 'Positions', positiveSign: false, zeroStyled: false }),
		qtyShares: (0, _formatNumber.formatShares)(qtyShares),
		purchasePrice: (0, _formatNumber.formatEther)(purchasePrice),
		totalValue: (0, _formatNumber.formatEther)(totalValue),
		totalCost: (0, _formatNumber.formatEther)(totalCost),
		shareChange: (0, _formatNumber.formatEther)(shareChange),
		gainPercent: (0, _formatNumber.formatPercent)(gainPercent),
		netChange: (0, _formatNumber.formatEther)(netChange)
	};
});

},{"../../../utils/format-number":539,"memoizerific":375}],503:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.closeMarkets = closeMarkets;

var _isMarketDataOpen = require('../../../utils/is-market-data-open');

// import { updateMarketData } from '../../markets/actions/update-markets-data';

function closeMarkets(marketsData) {
	return function (dispatch, getState) {
		var _getState = getState();

		var loginAccount = _getState.loginAccount;
		var blockchain = _getState.blockchain;
		var branch = _getState.branch;


		if (blockchain.isReportConfirmationPhase || !loginAccount.ether) {
			return;
		}

		var unparsedMarkets = Object.keys(marketsData).filter(function (marketID) {
			return (0, _isMarketDataOpen.isMarketDataPreviousReportPeriod)(marketsData[marketID], blockchain.currentPeriod, branch.periodLength);
		}).map(function (marketID) {
			return marketsData[marketID];
		});

		if (!unparsedMarkets || !unparsedMarkets.length) {
			return;
		}

		/*
  (function process() {
  	function next() {
  		if (unparsedMarkets.length) {
  			setTimeout(process, 2000);
  		}
  	}
  		const unparsedMarket = unparsedMarkets.pop();
  		// check if this market has been determined and closed
  	AugurJS.getOutcome(unparsedMarket.eventID, reportedOutcome => {
  		// if a reported outcome exists, that means market has been determined and closed
  		if (reportedOutcome !== '0') {
  			dispatch(updateMarketData({ id: unparsedMarket._id, isClosed: true }));
  			return next();
  		}
  			AugurJS.closeMarket(BRANCH_ID, unparsedMarket._id, (err, res) => {
  			if (err) {
  				console.log('ERROR closeMarkets()', err);
  				return next();
  			}
  			dispatch(updateMarketData({ id: unparsedMarket._id, isClosed: true }));
  			console.log('------> closed market', res);
  			return next();
  		});
  	});
  }());
  */
	};
} // import * as AugurJS from '../../../services/augurjs';
// import { BRANCH_ID } from '../../app/constants/network';

},{"../../../utils/is-market-data-open":540}],504:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.collectFees = collectFees;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _updateAssets = require('../../auth/actions/update-assets');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function collectFees() {
	return function (dispatch, getState) {
		var _getState = getState();

		var blockchain = _getState.blockchain;

		var branchID = _network.BRANCH_ID;

		if (!blockchain.isReportConfirmationPhase) {
			return;
		}

		AugurJS.collectFees(branchID, function (err, res) {
			console.log('------> collectFees result', err, res);
			dispatch((0, _updateAssets.updateAssets)());
		});
	};
}

},{"../../../services/augurjs":532,"../../app/constants/network":397,"../../auth/actions/update-assets":409}],505:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadReports = loadReports;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _network = require('../../app/constants/network');

var _isMarketDataOpen = require('../../../utils/is-market-data-open');

var _updateReports = require('../../reports/actions/update-reports');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function loadReports(marketsData) {
	return function (dispatch, getState) {
		var _getState = getState();

		var loginAccount = _getState.loginAccount;
		var blockchain = _getState.blockchain;


		if (!loginAccount || !loginAccount.id) {
			return;
		}

		var eventIDs = Object.keys(marketsData).filter(function (marketID) {
			return marketsData[marketID].eventID && !(0, _isMarketDataOpen.isMarketDataOpen)(marketsData[marketID], blockchain.currentBlockNumber);
		}).map(function (marketID) {
			return marketsData[marketID].eventID;
		});

		if (!eventIDs || !eventIDs.length) {
			return;
		}

		AugurJS.loadPendingReportEventIDs(eventIDs, loginAccount.id, blockchain.reportPeriod, _network.BRANCH_ID, function (err, evtIDs) {
			if (err) {
				console.log('ERROR loadReports', err);
				return;
			}
			dispatch((0, _updateReports.updateReports)(evtIDs));
		});
	};
}

},{"../../../services/augurjs":532,"../../../utils/is-market-data-open":540,"../../app/constants/network":397,"../../reports/actions/update-reports":508}],506:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.penalizeWrongReports = penalizeWrongReports;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _isMarketDataOpen = require('../../../utils/is-market-data-open');

var _network = require('../../app/constants/network');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function penalizeWrongReports(marketsData) {
	return function (dispatch, getState) {
		var _getState = getState();

		var blockchain = _getState.blockchain;
		var loginAccount = _getState.loginAccount;

		var branchID = _network.BRANCH_ID;
		var prevPeriod = blockchain.reportPeriod - 1;

		if (blockchain.isReportConfirmationPhase || !loginAccount.rep) {
			return;
		}

		var eventIDs = Object.keys(marketsData).filter(function (marketID) {
			return marketsData[marketID].eventID && !(0, _isMarketDataOpen.isMarketDataPreviousReportPeriod)(marketsData[marketID], blockchain.currentBlockNumber);
		}).map(function (marketID) {
			return marketsData[marketID].eventID;
		});

		(function process() {
			// if there are more event ids, continue
			function next() {
				if (eventIDs.length) {
					setTimeout(process, 1000);
				}
			}
			var eventID = eventIDs.pop();
			AugurJS.penalizeWrong(branchID, prevPeriod, eventID, function (err, res) {
				if (err) {
					console.log('ERROR penalizeWrong()', err);
					return next();
				}
				console.log('------> penalizeWrong', res);
				return next();
			});
		})();
	};
}

},{"../../../services/augurjs":532,"../../../utils/is-market-data-open":540,"../../app/constants/network":397}],507:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.submitReport = submitReport;
exports.processReport = processReport;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _secureRandom = require('secure-random');

var _secureRandom2 = _interopRequireDefault(_secureRandom);

var _bytesToHex = require('../../../utils/bytes-to-hex');

var _network = require('../../app/constants/network');

var _marketOutcomes = require('../../markets/constants/market-outcomes');

var _marketTypes = require('../../markets/constants/market-types');

var _statuses = require('../../transactions/constants/statuses');

var _addReportTransaction = require('../../transactions/actions/add-report-transaction');

var _updateExistingTransaction = require('../../transactions/actions/update-existing-transaction');

var _updateReports4 = require('../../reports/actions/update-reports');

var _market = require('../../market/selectors/market');

var _links = require('../../link/selectors/links');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function submitReport(market, reportedOutcomeID, isUnethical) {
	return function (dispatch, getState) {
		var _getState = getState();

		var marketsData = _getState.marketsData;
		var reports = _getState.reports;

		var currentEventID = marketsData[market.id].eventID;

		dispatch((0, _updateReports4.updateReports)(_defineProperty({}, currentEventID, { reportHash: true })));
		dispatch((0, _addReportTransaction.addReportTransaction)(market, reportedOutcomeID, isUnethical));

		var nextPendingReportEventID = Object.keys(reports).find(function (eventID) {
			return !reports[eventID].reportHash;
		});
		var nextPendingReportMarket = (0, _market.selectMarketFromEventID)(nextPendingReportEventID);

		if (nextPendingReportMarket) {
			(0, _links.selectMarketLink)(nextPendingReportMarket, dispatch).onClick();
		} else {
			(0, _links.selectMarketsLink)(dispatch).onClick();
		}
	};
}

function processReport(transactionID, market, reportedOutcomeID, isUnethical) {
	return function (dispatch, getState) {
		var _getState2 = getState();

		var loginAccount = _getState2.loginAccount;
		var blockchain = _getState2.blockchain;

		var eventID = market.eventID;

		if (!loginAccount || !loginAccount.id || !eventID || !event || !market || !reportedOutcomeID) {
			return dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED, message: 'Missing data' }));
		}

		dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'sending...' }));

		var report = {
			reportPeriod: blockchain.reportPeriod.toString(),
			reportedOutcomeID: reportedOutcomeID,
			isIndeterminate: reportedOutcomeID === _marketOutcomes.INDETERMINATE_OUTCOME_ID,
			isCategorical: market.type === _marketTypes.CATEGORICAL,
			isScalar: market.type === _marketTypes.SCALAR,
			isUnethical: isUnethical,
			salt: (0, _bytesToHex.bytesToHex)((0, _secureRandom2.default)(32)),
			reportHash: true
		};

		dispatch((0, _updateReports4.updateReports)(_defineProperty({}, eventID, report)));

		AugurJS.submitReportHash(_network.BRANCH_ID, loginAccount.id, _extends({}, event, { id: eventID }), report, function (err, res) {
			if (err) {
				console.log('ERROR submitReportHash', err);
				return dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED, message: err.message }));
			}

			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: res.status }));

			if (res.status === _statuses.SUCCESS) {
				dispatch((0, _updateReports4.updateReports)(_defineProperty({}, eventID, { reportHash: res.reportHash })));
			}

			return;
		});
	};
}

},{"../../../services/augurjs":532,"../../../utils/bytes-to-hex":535,"../../app/constants/network":397,"../../link/selectors/links":449,"../../market/selectors/market":454,"../../markets/constants/market-outcomes":468,"../../markets/constants/market-types":469,"../../reports/actions/update-reports":508,"../../transactions/actions/add-report-transaction":518,"../../transactions/actions/update-existing-transaction":522,"../../transactions/constants/statuses":524,"secure-random":390}],508:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateReports = updateReports;
exports.clearReports = clearReports;
var UPDATE_REPORTS = exports.UPDATE_REPORTS = 'UPDATE_REPORTS';
var CLEAR_REPORTS = exports.CLEAR_REPORTS = 'CLEAR_REPORTS';

function updateReports(reports) {
	return { type: UPDATE_REPORTS, reports: reports };
}

function clearReports() {
	return { type: CLEAR_REPORTS };
}

},{}],509:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
Keys are eventID, values can be:
   - { reportHash: null }: user is required to report and has not yet reported
   - { reportHash: true }: report sent, but not yet confirmed
   - { reportHash: xyz... }: report submitted and confirmed
*/


exports.default = function () {
	var reports = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateReports.UPDATE_REPORTS:
			return _extends({}, reports, Object.keys(action.reports).reduce(function (p, eventID) {
				p[eventID] = _extends({}, reports[eventID], action.reports[eventID]);
				return p;
			}, {}));

		case _updateReports.CLEAR_REPORTS:
			return {};

		default:
			return reports;
	}
};

var _updateReports = require('../../reports/actions/update-reports');

},{"../../reports/actions/update-reports":508}],510:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.placeTrade = placeTrade;
exports.multiTrade = multiTrade;

var _augurjs = require('../../../services/augurjs');

var AugurJS = _interopRequireWildcard(_augurjs);

var _types = require('../../transactions/constants/types');

var _statuses = require('../../transactions/constants/statuses');

var _addTransactions = require('../../transactions/actions/add-transactions');

var _addTradeTransaction = require('../../transactions/actions/add-trade-transaction');

var _updateExistingTransaction = require('../../transactions/actions/update-existing-transaction');

var _updateTradesInProgress = require('../../trade/actions/update-trades-in-progress');

var _market = require('../../market/selectors/market');

var _links = require('../../link/selectors/links');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// import { loadAccountTrades } from '../../positions/actions/load-account-trades';
function placeTrade(marketID) {
	return function (dispatch, getState) {
		// const market = selectMarket(marketID);

		dispatch((0, _addTransactions.addTransaction)((0, _addTradeTransaction.makeMultiTradeTransaction)(marketID, dispatch)));

		dispatch((0, _updateTradesInProgress.clearTradeInProgress)(marketID));

		(0, _links.selectTransactionsLink)(dispatch).onClick();
	};
}

/**
 *
 * @param {Number} transactionID
 * @param {String} marketID
 */
function multiTrade(transactionID, marketID) {
	return function (dispatch, getState) {
		var scalarMinMax = void 0;

		var market = (0, _market.selectMarket)(marketID);

		var marketOrderBook = getState().marketOrderBooks[marketID];

		var tradeOrders = market.tradeSummary.tradeOrders.map(function (tradeTransaction) {
			return {
				type: tradeTransaction.type === _types.BUY_SHARES ? 'buy' : 'sell',
				outcomeID: tradeTransaction.data.outcomeID,
				limitPrice: tradeTransaction.limitPrice,
				etherToBuy: tradeTransaction.ether.value,
				sharesToSell: tradeTransaction.shares.value
			};
		});

		var positionPerOutcome = market.positionOutcomes.reduce(function (outcomePositions, outcome) {
			outcomePositions[outcome.id] = outcome.position;
			return outcomePositions;
		}, {});

		dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.PLACE_MULTI_TRADE }));

		if (market.type === 'scalar') {
			scalarMinMax = {
				minValue: market.minValue,
				maxValue: market.maxValue
			};
		}

		AugurJS.multiTrade(transactionID, marketID, marketOrderBook, tradeOrders, positionPerOutcome, scalarMinMax, function (transactionID, res) {
			console.log('onTradeHash %o', res);
			var newTransactionData = void 0;
			if (res.error != null) {
				newTransactionData = {
					status: _statuses.FAILED,
					message: res.message
				};
			} else {
				newTransactionData = {
					message: 'received trade hash'
				};
			}
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, newTransactionData));
		}, function (transactionID, res) {
			console.log('onCommitSent %o', res);

			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'commit sent' }));
		}, function (transactionID, res) {
			console.log('onCommitSuccess %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'CommitSuccess' }));
		}, function (transactionID, res) {
			console.log('onCommitFailed %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED }));
		}, function (transactionID, res) {
			console.log('onNextBlock %o', res);
			// dispatch(updateExistingTransaction(transactionID, { status: res.status });)
		}, function (transactionID, res) {
			console.log('onTradeSent %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'TradeSent' }));
		}, function (transactionID, res) {
			console.log('onTradeSuccess %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.SUCCESS }));
		}, function (transactionID, res) {
			console.log('onTradeFailed %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED }));
		}, function (transactionID, res) {
			console.log('onBuySellSent %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'BuySellSent' }));
		}, function (transactionID, res) {
			console.log('onBuySellSuccess %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.SUCCESS }));
		}, function (transactionID, res) {
			console.log('onBuySellFailed %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED }));
		}, function (transactionID, res) {
			console.log('onShortSellSent %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'ShortSellSent' }));
		}, function (transactionID, res) {
			console.log('onShortSellSuccess %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.SUCCESS }));
		}, function (transactionID, res) {
			console.log('onShortSellFailed %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED }));
		}, function (transactionID, res) {
			console.log('onBuyCompleteSetsSent %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: 'BuyCompleteSetsSent' }));
		}, function (transactionID, res) {
			console.log('onBuyCompleteSetsSuccess %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.SUCCESS }));
		}, function (transactionID, res) {
			console.log('onBuyCompleteSetsFailed %o', res);
			dispatch((0, _updateExistingTransaction.updateExistingTransaction)(transactionID, { status: _statuses.FAILED }));
		});
	};
}

},{"../../../services/augurjs":532,"../../link/selectors/links":449,"../../market/selectors/market":454,"../../trade/actions/update-trades-in-progress":511,"../../transactions/actions/add-trade-transaction":519,"../../transactions/actions/add-transactions":520,"../../transactions/actions/update-existing-transaction":522,"../../transactions/constants/statuses":524,"../../transactions/constants/types":525}],511:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateTradesInProgress = updateTradesInProgress;
exports.clearTradeInProgress = clearTradeInProgress;
var UPDATE_TRADE_IN_PROGRESS = exports.UPDATE_TRADE_IN_PROGRESS = 'UPDATE_TRADE_IN_PROGRESS';
var CLEAR_TRADE_IN_PROGRESS = exports.CLEAR_TRADE_IN_PROGRESS = 'CLEAR_TRADE_IN_PROGRESS';

/**
 * Updates user's trade. Only defined (i.e. !== undefined) parameters are updated
 *
 * @param {String} marketID
 * @param {String} outcomeID
 * @param {Number=} numShares
 * @param {Number=} limitPrice
 * @param {String=} side
 * @return {function()}
 */
function updateTradesInProgress(marketID, outcomeID, numShares, limitPrice, side) {
	return function (dispatch, getState) {
		var tradesInProgress = getState().tradesInProgress;

		var currentTrade = void 0;
		if (tradesInProgress[marketID] != null && tradesInProgress[marketID][outcomeID] != null) {
			currentTrade = tradesInProgress[marketID][outcomeID];
		} else {
			currentTrade = {};
		}

		if (currentTrade.numShares === numShares && currentTrade.limitPrice === limitPrice && currentTrade.side === side) {
			return;
		}

		var newTradeDetails = {
			numShares: numShares !== undefined ? numShares : currentTrade.numShares,
			limitPrice: limitPrice !== undefined ? limitPrice : currentTrade.limitPrice,
			side: side !== undefined ? side : currentTrade.side
		};
		newTradeDetails.totalCost = newTradeDetails.numShares != null && newTradeDetails.limitPrice != null ? newTradeDetails.numShares * newTradeDetails.limitPrice : null;

		dispatch({
			type: UPDATE_TRADE_IN_PROGRESS, data: {
				marketID: marketID,
				outcomeID: outcomeID,
				details: newTradeDetails }
		});
	};
}

function clearTradeInProgress(marketID) {
	return { type: CLEAR_TRADE_IN_PROGRESS, marketID: marketID };
}

},{}],512:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var tradesInProgress = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateTradesInProgress.UPDATE_TRADE_IN_PROGRESS:
			return _extends({}, tradesInProgress, _defineProperty({}, action.data.marketID, _extends({}, tradesInProgress[action.data.marketID], _defineProperty({}, action.data.outcomeID, _extends({}, action.data.details)))));

		case _updateTradesInProgress.CLEAR_TRADE_IN_PROGRESS:
			return _extends({}, tradesInProgress, _defineProperty({}, action.marketID, {}));

		case _updateLoginAccount.CLEAR_LOGIN_ACCOUNT:
			return {};

		default:
			return tradesInProgress;
	}
};

var _updateTradesInProgress = require('../../trade/actions/update-trades-in-progress');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

},{"../../auth/actions/update-login-account":410,"../../trade/actions/update-trades-in-progress":511}],513:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	return [{ value: _bidsAsksTypes.BID, label: 'Buy' }, { value: _bidsAsksTypes.ASK, label: 'Sell' }];
};

var _bidsAsksTypes = require('../../bids-asks/constants/bids-asks-types');

},{"../../bids-asks/constants/bids-asks-types":419}],514:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectTradeOrders = exports.selectOutcomeTradeOrders = undefined;

var _formatNumber = require('../../../utils/format-number');

var _addTradeTransaction = require('../../transactions/actions/add-trade-transaction');

var _bidsAsksTypes = require('../../bids-asks/constants/bids-asks-types');

// import store from '../../../store';
// import {
// 	selectOutcomeBids,
// 	selectOutcomeAsks
// } from '../../bids-asks/selectors/select-bids-asks';
var selectOutcomeTradeOrders = exports.selectOutcomeTradeOrders = function selectOutcomeTradeOrders(market, outcome, outcomeTradeInProgress, dispatch) {
	var orders = [];

	if (!outcomeTradeInProgress || !outcomeTradeInProgress.numShares) {
		return orders;
	}

	var numShares = outcomeTradeInProgress.numShares;
	var totalCost = outcomeTradeInProgress.totalCost;
	var tradeTransaction = (0, _addTradeTransaction.makeTradeTransaction)(outcomeTradeInProgress.side === _bidsAsksTypes.ASK, market, outcome, Math.abs(numShares), outcomeTradeInProgress.limitPrice, totalCost, 0, 0, dispatch);

	tradeTransaction.gas = (0, _formatNumber.formatEther)(tradeTransaction.gas);
	tradeTransaction.ether = (0, _formatNumber.formatEther)(tradeTransaction.ether);
	tradeTransaction.shares = (0, _formatNumber.formatShares)(tradeTransaction.shares);

	orders.push(tradeTransaction);

	return orders;
}; // import memoizerific from 'memoizerific';


var selectTradeOrders = exports.selectTradeOrders = function selectTradeOrders(market, marketTradeInProgress, dispatch) {
	var orders = [];

	if (!market || !marketTradeInProgress || !market.outcomes.length) {
		return orders;
	}

	market.outcomes.forEach(function (outcome) {
		orders.concat(selectOutcomeTradeOrders(market, outcome, marketTradeInProgress[outcome.id], dispatch));
	});

	return orders;

	/* for limit-based system
 	market.outcomes.forEach(outcome => {
 		if (!tradeInProgress[outcome.id] || !tradeInProgress[outcome.id].numShares) {
 			return;
 		}
 
 		orders = orders.concat(selectOutcomeTransactions(
 			market,
 			outcome,
 			tradeInProgress[outcome.id].numShares,
 			tradeInProgress[outcome.id].limitPrice,
 			selectOutcomeBids(marketID, outcome.id, bidsAsks),
 			selectOutcomeAsks(marketID, outcome.id, bidsAsks),
 			dispatch
 		));
 	});
 */
};
/*
export const selectOutcomeTransactions = memoizerific(5)(
function(market, outcome, numShares, limitPrice, outcomeBids, outcomeAsks, dispatch) {
	var isSell = numShares < 0,
		outcomeBidsOrAsks = !isSell ? outcomeAsks : outcomeBids,
		o = {
			shares: 0,
			ether: 0,
			ordersToTrade: [],
			feeToPay: 0,
			sharesRemaining: Math.abs(numShares) || 0
		},
		sharesToTrade = 0,
		orders = [];

	if (!outcomeBidsOrAsks || !outcomeBidsOrAsks.some) {
		return orders;
	}

	outcomeBidsOrAsks.some(outcomeBidOrAsk => {
		if (o.sharesRemaining <= 0) {
			return true;
		}

		sharesToTrade = outcomeBidOrAsk.numShares - Math.max(
			0,
			outcomeBidOrAsk.numShares - o.sharesRemaining);

		if (!isSell) {
			if (!limitPrice || outcomeBidOrAsk.price <= limitPrice) {
				o.shares += sharesToTrade;
				o.feeToPay -= sharesToTrade * outcomeBidOrAsk.price * market.tradingFee;
				o.ether -= sharesToTrade * outcomeBidOrAsk.price;
				o.ordersToTrade.push({ bidAsk: outcomeBidOrAsk, numShares: sharesToTrade });
				o.sharesRemaining -= sharesToTrade;
			}
		}
		else {
			if (!limitPrice || outcomeBidOrAsk.price >= limitPrice) {
				o.shares -= sharesToTrade;
				o.feeToPay -= sharesToTrade * outcomeBidOrAsk.price * market.tradingFee;
				o.ether += sharesToTrade * outcomeBidOrAsk.price;
				o.ordersToTrade.push({ bidAsk: outcomeBidOrAsk, numShares: sharesToTrade });
				o.sharesRemaining -= sharesToTrade;
			}
		}
	});

	if (o.ordersToTrade.length) {
		orders.push(selectNewTransaction(
			!isSell ? BUY_SHARES : SELL_SHARES,
			o.ordersToTrade.length * -0.1,
			o.shares,
			o.ether + o.feeToPay,
			0,
			{
				marketID: market.id,
				outcomeID: outcome.id,
				marketDescription: market.description,
				outcomeName: outcome.name.toUpperCase(),
				avgPrice: formatEther(Math.abs(o.ether / o.shares)),
				feeToPay: formatEther(o.feeToPay)
			},
			(transactionID) => dispatch(trade(
				transactionID, market.id,
				outcome.id, o.shares,
				limitPrice, null))
		));
	}

	if (o.sharesRemaining && limitPrice) {
		o.ether = !isSell ? 0 - (o.sharesRemaining * limitPrice) : o.sharesRemaining * limitPrice;
		o.shares = !isSell ? o.sharesRemaining : 0 - o.sharesRemaining;
		orders.push(selectNewTransaction(
			!isSell ? BID_SHARES : ASK_SHARES,
			-0.1,
			o.shares,
			o.ether,
			0,
			{
				marketID: market.id,
				outcomeID: outcome.id,
				marketDescription: market.description,
				outcomeName: outcome.name.toUpperCase(),
				avgPrice: formatEther(limitPrice),
				feeToPay: formatNumber(0, { zeroStyled: false }) // no fee for market-making
			},
			(transactionID) => dispatch(trade(
				transactionID, market.id, outcome.id,
				o.sharesRemaining, limitPrice, null))
		));
	}

	return orders;
});
*/

},{"../../../utils/format-number":539,"../../bids-asks/constants/bids-asks-types":419,"../../transactions/actions/add-trade-transaction":519}],515:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectTradeSummary = undefined;

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _formatNumber = require('../../../utils/format-number');

var _types = require('../../transactions/constants/types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectTradeSummary = exports.selectTradeSummary = (0, _memoizerific2.default)(5)(function (tradeOrders) {
	var totals = { shares: 0, ether: 0, gas: 0 };
	var len = tradeOrders && tradeOrders.length || 0;
	var shares = void 0;
	var ether = void 0;
	var gas = void 0;
	var tradeOrder = void 0;
	var i = void 0;

	for (i = 0; i < len; i++) {
		tradeOrder = tradeOrders[i];
		shares = tradeOrder.shares && tradeOrder.shares.value || 0;
		ether = tradeOrder.ether && tradeOrder.ether.value || 0;
		gas = tradeOrder.gas && tradeOrder.gas.value || 0;

		totals.shares += tradeOrder.type === _types.BUY_SHARES ? shares : -shares;
		totals.ether += tradeOrder.type === _types.BUY_SHARES ? -ether : ether;
		totals.gas += gas;
	}

	return {
		totalShares: (0, _formatNumber.formatShares)(totals.shares),
		totalEther: (0, _formatNumber.formatEther)(totals.ether),
		totalGas: (0, _formatNumber.formatEther)(totals.gas),
		tradeOrders: tradeOrders
	};
});

},{"../../../utils/format-number":539,"../../transactions/constants/types":525,"memoizerific":375}],516:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addCreateMarketTransaction = exports.makeCreateMarketTransaction = undefined;

var _types = require('../../transactions/constants/types');

var _submitNewMarket = require('../../create-market/actions/submit-new-market');

var _addTransactions = require('../../transactions/actions/add-transactions');

var makeCreateMarketTransaction = exports.makeCreateMarketTransaction = function makeCreateMarketTransaction(marketData, gas, etherWithoutGas, dispatch) {
	var obj = {
		type: _types.CREATE_MARKET,
		gas: gas,
		ether: etherWithoutGas,
		data: marketData,
		action: function action(transactionID) {
			return dispatch((0, _submitNewMarket.createMarket)(transactionID, marketData));
		}
	};
	return obj;
};

var addCreateMarketTransaction = exports.addCreateMarketTransaction = function addCreateMarketTransaction(marketData, gas, etherWithoutGas) {
	return function (dispatch, getState) {
		return dispatch((0, _addTransactions.addTransaction)(makeCreateMarketTransaction(marketData, gas, etherWithoutGas, dispatch)));
	};
};

},{"../../create-market/actions/submit-new-market":423,"../../transactions/actions/add-transactions":520,"../../transactions/constants/types":525}],517:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addGenerateOrderBookTransaction = exports.makeGenerateOrderBookTransaction = undefined;

var _types = require('../../transactions/constants/types');

var _generateOrderBook = require('../../create-market/actions/generate-order-book');

var _addTransactions = require('../../transactions/actions/add-transactions');

var makeGenerateOrderBookTransaction = exports.makeGenerateOrderBookTransaction = function makeGenerateOrderBookTransaction(marketData, dispatch) {
	var obj = {
		type: _types.GENERATE_ORDER_BOOK,
		data: marketData,
		action: function action(transactionID) {
			return dispatch((0, _generateOrderBook.createOrderBook)(transactionID, marketData));
		}
	};
	return obj;
};

var addGenerateOrderBookTransaction = exports.addGenerateOrderBookTransaction = function addGenerateOrderBookTransaction(marketData) {
	return function (dispatch) {
		return dispatch((0, _addTransactions.addTransaction)(makeGenerateOrderBookTransaction(marketData, dispatch)));
	};
};

},{"../../create-market/actions/generate-order-book":422,"../../transactions/actions/add-transactions":520,"../../transactions/constants/types":525}],518:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addReportTransaction = exports.makeReportTransaction = undefined;

var _types = require('../../transactions/constants/types');

var _submitReport = require('../../reports/actions/submit-report');

var _addTransactions = require('../../transactions/actions/add-transactions');

var makeReportTransaction = exports.makeReportTransaction = function makeReportTransaction(market, reportedOutcomeID, isUnethical, gas, etherWithoutGas, dispatch) {
	var obj = {
		type: _types.SUBMIT_REPORT,
		gas: gas,
		ether: etherWithoutGas,
		data: {
			market: market,
			outcome: market.reportableOutcomes.find(function (outcome) {
				return outcome.id === reportedOutcomeID;
			}) || {},
			reportedOutcomeID: reportedOutcomeID,
			isUnethical: isUnethical
		},
		action: function action(transactionID) {
			return dispatch((0, _submitReport.processReport)(transactionID, market, reportedOutcomeID, isUnethical));
		}
	};
	return obj;
};

var addReportTransaction = exports.addReportTransaction = function addReportTransaction(market, reportedOutcomeID, isUnethical, gas, etherWithoutGas) {
	return function (dispatch, getState) {
		return dispatch((0, _addTransactions.addTransaction)(makeReportTransaction(market, reportedOutcomeID, isUnethical, gas, etherWithoutGas, dispatch)));
	};
};

},{"../../reports/actions/submit-report":507,"../../transactions/actions/add-transactions":520,"../../transactions/constants/types":525}],519:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addTradeTransaction = exports.makeTradeTransaction = undefined;
exports.makeMultiTradeTransaction = makeMultiTradeTransaction;

var _formatNumber = require('../../../utils/format-number');

var _types = require('../../transactions/constants/types');

var _placeTrade = require('../../trade/actions/place-trade');

var _addTransactions = require('../../transactions/actions/add-transactions');

// import { updateExistingTransaction } from '../../transactions/actions/update-existing-transaction';
var makeTradeTransaction = exports.makeTradeTransaction = function makeTradeTransaction(isSell, market, outcome, numShares, limitPrice, totalCostWithoutFeeEther, feeEther, gas, dispatch) {
	var totalEther = totalCostWithoutFeeEther + feeEther;
	var obj = {
		type: !isSell ? _types.BUY_SHARES : _types.SELL_SHARES,
		shares: numShares,
		sharesNegative: (0, _formatNumber.formatShares)(-numShares),
		limitPrice: limitPrice,
		ether: totalEther,
		etherNegative: (0, _formatNumber.formatEther)(-totalEther),
		gas: gas,
		data: {
			marketID: market.id,
			outcomeID: outcome.id,
			marketDescription: market.description,
			outcomeName: outcome.name,
			avgPrice: (0, _formatNumber.formatEther)(totalCostWithoutFeeEther / numShares),
			feeToPay: (0, _formatNumber.formatEther)(feeEther)
		},
		action: function action(transactionID) {
			throw new Error('add-trade-transaction.js -> makeTradeTransaction(): action should not be called');
			// todo: I think we don't need tradeTransaction anymore, just the data it contains
		}
	};
	return obj;
};

function makeMultiTradeTransaction(marketId, dispatch) {
	return {
		type: _types.MULTI_TRADE,
		data: {
			marketID: marketId
		},
		action: function action(transactionID) {
			dispatch((0, _placeTrade.multiTrade)(transactionID, marketId));
		}
	};
}

var addTradeTransaction = exports.addTradeTransaction = function addTradeTransaction(isSell, market, outcome, numShares, totalCostWithoutFeeEther, feeEther, gas) {
	return function (dispatch, getState) {
		return dispatch((0, _addTransactions.addTransaction)(makeTradeTransaction(isSell, market, outcome, numShares, totalCostWithoutFeeEther, feeEther, gas, dispatch)));
	};
};

},{"../../../utils/format-number":539,"../../trade/actions/place-trade":510,"../../transactions/actions/add-transactions":520,"../../transactions/constants/types":525}],520:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.makeTransactionID = makeTransactionID;
exports.addTransactions = addTransactions;
exports.addTransaction = addTransaction;

var _statuses = require('../../transactions/constants/statuses');

var _updateTransactionsData = require('../../transactions/actions/update-transactions-data');

function makeTransactionID() {
	return Math.round(Date.now() + window.performance.now() * 100);
}

function addTransactions(transactionsArray) {
	return function (dispatch, getState) {
		dispatch((0, _updateTransactionsData.updateTransactionsData)(transactionsArray.reduce(function (p, transaction) {
			transaction.status = _statuses.PENDING;
			p[makeTransactionID()] = transaction;
			return p;
		}, {})));
	};
}

function addTransaction(transaction) {
	return addTransactions([transaction]);
}

},{"../../transactions/actions/update-transactions-data":523,"../../transactions/constants/statuses":524}],521:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.processTransactions = processTransactions;

var _statuses = require('../../transactions/constants/statuses');

function processTransactions() {
	return function (dispatch, getState) {
		var _require = require('../../../selectors');

		var transactions = _require.transactions;

		transactions.forEach(function (transaction) {
			return transaction.status === _statuses.PENDING && transaction.action(transaction.id);
		});
	};
}

},{"../../../selectors":531,"../../transactions/constants/statuses":524}],522:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.updateExistingTransaction = updateExistingTransaction;

var _updateTransactionsData = require('../../transactions/actions/update-transactions-data');

var _updateAssets = require('../../auth/actions/update-assets');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function updateExistingTransaction(transactionID, newTransactionData) {
	return function (dispatch, getState) {
		var _getState = getState();

		var transactionsData = _getState.transactionsData;

		// if the transaction doesn't already exist, probably/perhaps because user
		// logged out while a transaction was running and it just completed now,
		// do not update, ignore it

		if (!transactionID || !newTransactionData || !transactionsData || !transactionsData[transactionID]) {
			return;
		}

		dispatch((0, _updateTransactionsData.updateTransactionsData)(_defineProperty({}, transactionID, newTransactionData)));
		dispatch((0, _updateAssets.updateAssets)());
	};
}

},{"../../auth/actions/update-assets":409,"../../transactions/actions/update-transactions-data":523}],523:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.UPDATE_TRANSACTIONS_DATA = undefined;
exports.updateTransactionsData = updateTransactionsData;

var _processTransactions = require('../../transactions/actions/process-transactions');

var UPDATE_TRANSACTIONS_DATA = exports.UPDATE_TRANSACTIONS_DATA = 'UPDATE_TRANSACTIONS_DATA';

function updateTransactionsData(transactionsData) {
	return function (dispatch, getState) {
		dispatch({ type: UPDATE_TRANSACTIONS_DATA, transactionsData: transactionsData });
		dispatch((0, _processTransactions.processTransactions)());
	};
}

},{"../../transactions/actions/process-transactions":521}],524:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var PENDING = exports.PENDING = 'pending';
var SUCCESS = exports.SUCCESS = 'success';
var FAILED = exports.FAILED = 'failed';
var INTERRUPTED = exports.INTERRUPTED = 'interrupted';

// Market Creation
var CREATING_MARKET = exports.CREATING_MARKET = 'creating market...';

// Order Book Generation
var GENERATING_ORDER_BOOK = exports.GENERATING_ORDER_BOOK = 'generating order book...';

var SIMULATED_ORDER_BOOK = exports.SIMULATED_ORDER_BOOK = 'order book simulated';

var COMPLETE_SET_BOUGHT = exports.COMPLETE_SET_BOUGHT = 'complete set bought';
var ORDER_BOOK_ORDER_COMPLETE = exports.ORDER_BOOK_ORDER_COMPLETE = 'order creation complete';
var ORDER_BOOK_OUTCOME_COMPLETE = exports.ORDER_BOOK_OUTCOME_COMPLETE = 'outcome creation complete';

// Trading
var PLACE_MULTI_TRADE = exports.PLACE_MULTI_TRADE = 'placing multi-trade';

},{}],525:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var BUY_SHARES = exports.BUY_SHARES = 'buy_shares';
var SELL_SHARES = exports.SELL_SHARES = 'sell_shares';

var BID_SHARES = exports.BID_SHARES = 'bid_shares';
var ASK_SHARES = exports.ASK_SHARES = 'ask_shares';

var CREATE_MARKET = exports.CREATE_MARKET = 'create_market';
var SUBMIT_REPORT = exports.SUBMIT_REPORT = 'submit_report';
var GENERATE_ORDER_BOOK = exports.GENERATE_ORDER_BOOK = 'generate_order_book';

var REGISTER_ACCOUNT = exports.REGISTER_ACCOUNT = 'register_account';

var MULTI_TRADE = exports.MULTI_TRADE = 'multi_trade';

},{}],526:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
	var transactionsData = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	var action = arguments[1];

	switch (action.type) {
		case _updateTransactionsData.UPDATE_TRANSACTIONS_DATA:
			return Object.keys(action.transactionsData).reduce(function (p, transactionID) {
				p[transactionID] = _extends({}, transactionsData[transactionID], action.transactionsData[transactionID], {
					id: transactionID
				});
				return p;
			}, _extends({}, transactionsData));

		case _updateLoginAccount.CLEAR_LOGIN_ACCOUNT:
			return {};

		default:
			return transactionsData;
	}
};

var _updateTransactionsData = require('../../transactions/actions/update-transactions-data');

var _updateLoginAccount = require('../../auth/actions/update-login-account');

},{"../../auth/actions/update-login-account":410,"../../transactions/actions/update-transactions-data":523}],527:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectIsWorking = undefined;

exports.default = function () {
	var _store$getState = _store2.default.getState();

	var transactionsData = _store$getState.transactionsData;

	return selectIsWorking(transactionsData);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _statuses = require('../../transactions/constants/statuses');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectIsWorking = exports.selectIsWorking = (0, _memoizerific2.default)(1)(function (transactionsData) {
	return Object.keys(transactionsData || {}).some(function (id) {
		return [_statuses.PENDING, _statuses.SUCCESS, _statuses.FAILED, _statuses.INTERRUPTED].indexOf(transactionsData[id].status) < 0;
	});
});

},{"../../../store":533,"../../transactions/constants/statuses":524,"memoizerific":375}],528:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectTransactionsTotals = undefined;

exports.default = function () {
	var _require = require('../../../selectors');

	var transactions = _require.transactions;

	return selectTransactionsTotals(transactions);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _statuses = require('../../transactions/constants/statuses');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectTransactionsTotals = exports.selectTransactionsTotals = (0, _memoizerific2.default)(1)(function (transactions) {
	var o = {
		numWorking: 0,
		numPending: 0,
		numComplete: 0,
		numWorkingAndPending: 0,
		numTotal: 0,
		title: ''
	};

	o.transactions = transactions.forEach(function (transaction) {
		o.numTotal++;
		if (transaction.status === _statuses.PENDING) {
			o.numPending++;
		} else if ([_statuses.SUCCESS, _statuses.FAILED, _statuses.INTERRUPTED].indexOf(transaction.status) >= 0) {
			o.numComplete++;
		} else {
			o.numWorking++;
		}
	});

	o.numWorkingAndPending = o.numPending + o.numWorking;

	if (o.numWorkingAndPending) {
		o.title = o.numWorkingAndPending + ' Transaction' + (o.numWorkingAndPending !== 1 ? 's' : '') + ' Working';
		o.shortTitle = o.numPending + ' Working';
	} else {
		o.title = o.numTotal + ' Transaction' + (o.numTotal !== 1 ? 's' : '');
		o.shortTitle = o.numTotal + ' Total';
	}

	return o;
});

},{"../../../selectors":531,"../../transactions/constants/statuses":524,"memoizerific":375}],529:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.selectTransactions = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
// import { PENDING, SUCCESS, FAILED } from '../../transactions/constants/statuses';


exports.default = function () {
	var _store$getState = _store2.default.getState();

	var transactionsData = _store$getState.transactionsData;

	return selectTransactions(transactionsData);
};

var _memoizerific = require('memoizerific');

var _memoizerific2 = _interopRequireDefault(_memoizerific);

var _formatNumber = require('../../../utils/format-number');

var _store = require('../../../store');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectTransactions = exports.selectTransactions = (0, _memoizerific2.default)(1)(function (transactionsData) {
	return Object.keys(transactionsData || {}).sort(function (a, b) {
		return parseFloat(b) - parseFloat(a);
	}).map(function (id) {
		var obj = _extends({}, transactionsData[id], {
			gas: transactionsData[id].gas && (0, _formatNumber.formatEther)(transactionsData[id].gas),
			ether: transactionsData[id].etherWithoutGas && (0, _formatNumber.formatEther)(transactionsData[id].etherWithoutGas),
			shares: transactionsData[id].sharesChange && (0, _formatNumber.formatShares)(transactionsData[id].sharesChange),
			rep: transactionsData[id].repChange && (0, _formatNumber.formatRep)(transactionsData[id].repChange)
		});
		return obj;
	});
});

},{"../../../store":533,"../../../utils/format-number":539,"memoizerific":375}],530:[function(require,module,exports){
'use strict';

var _blockchain = require('./modules/app/reducers/blockchain');

var _blockchain2 = _interopRequireDefault(_blockchain);

var _branch = require('./modules/app/reducers/branch');

var _branch2 = _interopRequireDefault(_branch);

var _connection = require('./modules/app/reducers/connection');

var _connection2 = _interopRequireDefault(_connection);

var _auth = require('./modules/auth/reducers/auth');

var _auth2 = _interopRequireDefault(_auth);

var _loginAccount = require('./modules/auth/reducers/login-account');

var _loginAccount2 = _interopRequireDefault(_loginAccount);

var _activePage = require('./modules/app/reducers/active-page');

var _activePage2 = _interopRequireDefault(_activePage);

var _marketsData = require('./modules/markets/reducers/markets-data');

var _marketsData2 = _interopRequireDefault(_marketsData);

var _favorites = require('./modules/markets/reducers/favorites');

var _favorites2 = _interopRequireDefault(_favorites);

var _pagination = require('./modules/markets/reducers/pagination');

var _pagination2 = _interopRequireDefault(_pagination);

var _reports = require('./modules/reports/reducers/reports');

var _reports2 = _interopRequireDefault(_reports);

var _outcomes = require('./modules/markets/reducers/outcomes');

var _outcomes2 = _interopRequireDefault(_outcomes);

var _marketOrderBooks = require('./modules/bids-asks/reducers/market-order-books');

var _marketOrderBooks2 = _interopRequireDefault(_marketOrderBooks);

var _accountTrades = require('./modules/positions/reducers/account-trades');

var _accountTrades2 = _interopRequireDefault(_accountTrades);

var _transactionsData = require('./modules/transactions/reducers/transactions-data');

var _transactionsData2 = _interopRequireDefault(_transactionsData);

var _selectedMarketsHeader = require('./modules/markets/reducers/selected-markets-header');

var _selectedMarketsHeader2 = _interopRequireDefault(_selectedMarketsHeader);

var _selectedMarketId = require('./modules/markets/reducers/selected-market-id');

var _selectedMarketId2 = _interopRequireDefault(_selectedMarketId);

var _tradesInProgress = require('./modules/trade/reducers/trades-in-progress');

var _tradesInProgress2 = _interopRequireDefault(_tradesInProgress);

var _createMarketInProgress = require('./modules/create-market/reducers/create-market-in-progress');

var _createMarketInProgress2 = _interopRequireDefault(_createMarketInProgress);

var _keywords = require('./modules/markets/reducers/keywords');

var _keywords2 = _interopRequireDefault(_keywords);

var _selectedFilters = require('./modules/markets/reducers/selected-filters');

var _selectedFilters2 = _interopRequireDefault(_selectedFilters);

var _selectedTags = require('./modules/markets/reducers/selected-tags');

var _selectedTags2 = _interopRequireDefault(_selectedTags);

var _selectedSort = require('./modules/markets/reducers/selected-sort');

var _selectedSort2 = _interopRequireDefault(_selectedSort);

var _priceHistory = require('./modules/markets/reducers/price-history');

var _priceHistory2 = _interopRequireDefault(_priceHistory);

var _selectedOutcomeId = require('./modules/outcome/reducers/selected-outcome-id');

var _selectedOutcomeId2 = _interopRequireDefault(_selectedOutcomeId);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
	blockchain: _blockchain2.default,
	branch: _branch2.default,
	connection: _connection2.default,

	auth: _auth2.default,
	loginAccount: _loginAccount2.default,
	activePage: _activePage2.default,

	marketsData: _marketsData2.default,
	favorites: _favorites2.default,
	pagination: _pagination2.default,

	reports: _reports2.default,

	selectedMarketID: _selectedMarketId2.default,
	selectedMarketsHeader: _selectedMarketsHeader2.default,
	keywords: _keywords2.default,
	selectedFilters: _selectedFilters2.default,
	selectedTags: _selectedTags2.default,
	selectedSort: _selectedSort2.default,
	priceHistory: _priceHistory2.default,
	selectedOutcomeID: _selectedOutcomeId2.default,

	tradesInProgress: _tradesInProgress2.default,
	createMarketInProgress: _createMarketInProgress2.default,

	outcomes: _outcomes2.default,
	marketOrderBooks: _marketOrderBooks2.default,
	accountTrades: _accountTrades2.default,
	transactionsData: _transactionsData2.default
};

},{"./modules/app/reducers/active-page":399,"./modules/app/reducers/blockchain":400,"./modules/app/reducers/branch":401,"./modules/app/reducers/connection":402,"./modules/auth/reducers/auth":413,"./modules/auth/reducers/login-account":414,"./modules/bids-asks/reducers/market-order-books":420,"./modules/create-market/reducers/create-market-in-progress":426,"./modules/markets/reducers/favorites":473,"./modules/markets/reducers/keywords":474,"./modules/markets/reducers/markets-data":475,"./modules/markets/reducers/outcomes":476,"./modules/markets/reducers/pagination":477,"./modules/markets/reducers/price-history":478,"./modules/markets/reducers/selected-filters":479,"./modules/markets/reducers/selected-market-id":480,"./modules/markets/reducers/selected-markets-header":481,"./modules/markets/reducers/selected-sort":482,"./modules/markets/reducers/selected-tags":483,"./modules/outcome/reducers/selected-outcome-id":496,"./modules/positions/reducers/account-trades":500,"./modules/reports/reducers/reports":509,"./modules/trade/reducers/trades-in-progress":512,"./modules/transactions/reducers/transactions-data":526}],531:[function(require,module,exports){
'use strict';

var _activePage = require('./modules/app/selectors/active-page');

var _activePage2 = _interopRequireDefault(_activePage);

var _loginAccount = require('./modules/auth/selectors/login-account');

var _loginAccount2 = _interopRequireDefault(_loginAccount);

var _links = require('./modules/link/selectors/links');

var _links2 = _interopRequireDefault(_links);

var _authForm = require('./modules/auth/selectors/auth-form');

var _authForm2 = _interopRequireDefault(_authForm);

var _marketsHeader = require('./modules/markets/selectors/markets-header');

var _marketsHeader2 = _interopRequireDefault(_marketsHeader);

var _markets = require('./modules/markets/selectors/markets');

var _markets2 = _interopRequireDefault(_markets);

var _marketsAll = require('./modules/markets/selectors/markets-all');

var _marketsAll2 = _interopRequireDefault(_marketsAll);

var _marketsFavorite = require('./modules/markets/selectors/markets-favorite');

var _marketsFavorite2 = _interopRequireDefault(_marketsFavorite);

var _marketsFiltered = require('./modules/markets/selectors/markets-filtered');

var _marketsFiltered2 = _interopRequireDefault(_marketsFiltered);

var _marketsUnpaginated = require('./modules/markets/selectors/markets-unpaginated');

var _marketsUnpaginated2 = _interopRequireDefault(_marketsUnpaginated);

var _marketsTotals = require('./modules/markets/selectors/markets-totals');

var _marketsTotals2 = _interopRequireDefault(_marketsTotals);

var _pagination = require('./modules/markets/selectors/pagination');

var _pagination2 = _interopRequireDefault(_pagination);

var _selectedOutcome = require('./modules/outcome/selectors/selected-outcome');

var _selectedOutcome2 = _interopRequireDefault(_selectedOutcome);

var _market = require('./modules/market/selectors/market');

var _market2 = _interopRequireDefault(_market);

var _sideOptions = require('./modules/trade/selectors/side-options');

var _sideOptions2 = _interopRequireDefault(_sideOptions);

var _filters = require('./modules/markets/selectors/filters');

var _filters2 = _interopRequireDefault(_filters);

var _searchSort = require('./modules/markets/selectors/search-sort');

var _searchSort2 = _interopRequireDefault(_searchSort);

var _keywords = require('./modules/markets/selectors/keywords');

var _keywords2 = _interopRequireDefault(_keywords);

var _transactions = require('./modules/transactions/selectors/transactions');

var _transactions2 = _interopRequireDefault(_transactions);

var _transactionsTotals = require('./modules/transactions/selectors/transactions-totals');

var _transactionsTotals2 = _interopRequireDefault(_transactionsTotals);

var _isTransactionsWorking = require('./modules/transactions/selectors/is-transactions-working');

var _isTransactionsWorking2 = _interopRequireDefault(_isTransactionsWorking);

var _createMarketForm = require('./modules/create-market/selectors/create-market-form');

var _createMarketForm2 = _interopRequireDefault(_createMarketForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var selectors = {
	activePage: _activePage2.default,
	loginAccount: _loginAccount2.default,
	links: _links2.default,

	authForm: _authForm2.default,
	createMarketForm: _createMarketForm2.default,

	marketsHeader: _marketsHeader2.default,
	markets: _markets2.default,
	allMarkets: _marketsAll2.default,
	favoriteMarkets: _marketsFavorite2.default,
	filteredMarkets: _marketsFiltered2.default,
	unpaginatedMarkets: _marketsUnpaginated2.default,
	marketsTotals: _marketsTotals2.default,
	pagination: _pagination2.default,
	selectedOutcome: _selectedOutcome2.default,

	market: _market2.default,
	sideOptions: _sideOptions2.default,

	filters: _filters2.default,
	searchSort: _searchSort2.default,
	keywords: _keywords2.default,

	transactions: _transactions2.default,
	transactionsTotals: _transactionsTotals2.default,
	isTransactionsWorking: _isTransactionsWorking2.default
};

module.exports = {};

Object.keys(selectors).forEach(function (selectorKey) {
	return Object.defineProperty(module.exports, selectorKey, { get: selectors[selectorKey], enumerable: true });
});

},{"./modules/app/selectors/active-page":403,"./modules/auth/selectors/auth-form":415,"./modules/auth/selectors/login-account":416,"./modules/create-market/selectors/create-market-form":427,"./modules/link/selectors/links":449,"./modules/market/selectors/market":454,"./modules/markets/selectors/filters":484,"./modules/markets/selectors/keywords":485,"./modules/markets/selectors/markets":492,"./modules/markets/selectors/markets-all":486,"./modules/markets/selectors/markets-favorite":487,"./modules/markets/selectors/markets-filtered":488,"./modules/markets/selectors/markets-header":489,"./modules/markets/selectors/markets-totals":490,"./modules/markets/selectors/markets-unpaginated":491,"./modules/markets/selectors/pagination":493,"./modules/markets/selectors/search-sort":494,"./modules/outcome/selectors/selected-outcome":497,"./modules/trade/selectors/side-options":513,"./modules/transactions/selectors/is-transactions-working":527,"./modules/transactions/selectors/transactions":529,"./modules/transactions/selectors/transactions-totals":528}],532:[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _augur = require('augur.js');

var _augur2 = _interopRequireDefault(_augur);

var _bignumber = require('bignumber.js');

var _bignumber2 = _interopRequireDefault(_bignumber);

var _statuses = require('../modules/transactions/constants/statuses');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TIMEOUT_MILLIS = 50;
var ex = {};

ex.connect = function connect(cb) {
	var options = {
		http: undefined || 'http://127.0.0.1:8545',
		ws: undefined || 'ws://127.0.0.1:8546'
	};
	if (undefined) {
		_augur2.default.rpc.nodes.hosted = [undefined];
	}

	if ("true") {
		if ("{{ $BUILD_AZURE_WSURL }}" && "{{ $BUILD_AZURE_WSURL }}" !== 'null') {
			options.ws = "{{ $BUILD_AZURE_WSURL }}";
		}
		if ("{{ $BUILD_AZURE_LOCALNODE }}" && "{{ $BUILD_AZURE_LOCALNODE }}" !== 'null') {
			options.http = "{{ $BUILD_AZURE_LOCALNODE }}";
		}
		if ("true" && "{{ $BUILD_AZURE_CONTRACTS }}" !== 'null') {
			options.contracts = JSON.parse("{{ $BUILD_AZURE_CONTRACTS }}");
		}
	}
	_augur2.default.connect(options, function (connection) {
		if (!connection) return cb('could not connect to ethereum');
		console.log('connected:', connection);
		cb(null, connection);
	});
};

ex.loadCurrentBlock = function loadCurrentBlock(cb) {
	_augur2.default.rpc.blockNumber(function (blockNumber) {
		return cb(parseInt(blockNumber, 16));
	});
};

ex.loadBranches = function loadBranches(cb) {
	_augur2.default.getBranches(function (branches) {
		if (!branches || branches.error) {
			console.log('ERROR getBranches', branches);
			cb(branches);
		}
		cb(null, branches);
	});
};

ex.loadBranch = function loadBranch(branchID, cb) {
	var branch = {};

	function finish() {
		if (branch.periodLength && branch.description) {
			cb(null, branch);
		}
	}

	_augur2.default.getPeriodLength(branchID, function (periodLength) {
		if (!periodLength || periodLength.error) {
			console.info('ERROR getPeriodLength', periodLength);
			return cb(periodLength);
		}
		branch.periodLength = periodLength;
		finish();
	});

	_augur2.default.getDescription(branchID, function (description) {
		if (!description || description.error) {
			console.info('ERROR getDescription', description);
			return cb(description);
		}
		branch.description = description;
		finish();
	});
};

ex.loadLoginAccount = function loadLoginAccount(cb) {
	// if available, use the client-side account
	if (_augur2.default.web.account.address && _augur2.default.web.account.privateKey) {
		console.log('using client-side account:', _augur2.default.web.account.address);
		return cb(null, _extends({}, _augur2.default.web.account, {
			id: _augur2.default.web.account.address
		}));
	}

	// if the user has a persistent login, use it
	var account = _augur2.default.web.persist();
	if (account && account.privateKey) {
		console.log('using persistent login:', account);
		return cb(null, _extends({}, _augur2.default.web.account, {
			id: _augur2.default.web.account.address
		}));
	}

	// local node: if it's unlocked, use the coinbase account
	// check to make sure the account is unlocked
	_augur2.default.rpc.unlocked(_augur2.default.from, function (unlocked) {
		// use from/coinbase if unlocked
		if (unlocked && !unlocked.error) {
			console.log('using unlocked account:', _augur2.default.from);
			return cb(null, {
				id: _augur2.default.from
			});
		}

		// otherwise, no account available
		console.log('account is locked: ', _augur2.default.from);
		return cb(null);
	});
};

ex.loadAssets = function loadAssets(branchID, accountID, cbEther, cbRep, cbRealEther) {
	_augur2.default.getCashBalance(accountID, function (result) {
		if (!result || result.error) {
			return cbEther(result);
		}
		return cbEther(null, _augur2.default.abi.number(result));
	});

	_augur2.default.getRepBalance(branchID, accountID, function (result) {
		if (!result || result.error) {
			return cbRep(result);
		}
		return cbRep(null, _augur2.default.abi.number(result));
	});

	_augur2.default.rpc.balance(accountID, function (wei) {
		if (!wei || wei.error) {
			return cbRealEther(wei);
		}
		return cbRealEther(null, _augur2.default.abi.bignum(wei).dividedBy(new _bignumber2.default(10).toPower(18)).toNumber());
	});
};

ex.loadMarkets = function loadMarkets(branchID, chunkSize, isDesc, chunkCB) {

	// load the total number of markets
	_augur2.default.getNumMarketsBranch(branchID, function (numMarketsRaw) {
		var numMarkets = parseInt(numMarketsRaw, 10);
		var firstStartIndex = isDesc ? Math.max(numMarkets - chunkSize + 1, 0) : 0;

		// load markets in batches
		getMarketsInfo(branchID, firstStartIndex, chunkSize, numMarkets, isDesc);
	});

	// load each batch of marketdata sequentially and recursively until complete
	function getMarketsInfo(branchID, startIndex, chunkSize, numMarkets, isDesc) {
		_augur2.default.getMarketsInfo({
			branch: branchID,
			offset: startIndex,
			numMarketsToLoad: chunkSize
		}, function (marketsData) {
			if (!marketsData || marketsData.error) {
				chunkCB(marketsData);
			} else {
				chunkCB(null, marketsData);
			}

			if (isDesc && startIndex > 0) {
				setTimeout(function () {
					return getMarketsInfo(branchID, Math.max(startIndex - chunkSize, 0), chunkSize, numMarkets, isDesc);
				}, TIMEOUT_MILLIS);
			} else if (!isDesc && startIndex < numMarkets) {
				setTimeout(function () {
					return getMarketsInfo(branchID, startIndex + chunkSize, chunkSize, numMarkets, isDesc);
				}, TIMEOUT_MILLIS);
			}
		});
	}
};

ex.batchGetMarketInfo = function batchGetMarketInfo(marketIDs, cb) {
	_augur2.default.batchGetMarketInfo(marketIDs, function (res) {
		if (res && res.error) {
			cb(res);
		}
		cb(null, res);
	});
};

ex.loadMarket = function loadMarket(marketID, cb) {
	_augur2.default.getMarketInfo(marketID, function (marketInfo) {
		if (marketInfo && marketInfo.error) {
			return cb(marketInfo);
		}
		cb(null, marketInfo);
	});
};

ex.listenToUpdates = function listenToUpdates(cbBlock, cbContracts, cbPrice, cbCreation) {
	_augur2.default.filters.listen({
		// listen for new blocks
		block: function block(blockHash) {
			return cbBlock(null, blockHash);
		},
		// listen for augur transactions
		contracts: function contracts(filtrate) {
			return cbContracts(null, filtrate);
		},
		// update market when a price change has been detected
		price: function price(result) {
			return cbPrice(null, result);
		},
		// listen for new markets
		marketCreated: function marketCreated(result) {
			return cbCreation(null, result);
		}
	}, function (filters) {
		return console.log('### listen to filters:', filters);
	});
};

ex.loadAccountTrades = function loadAccountTrades(accountID, cb) {
	_augur2.default.getAccountTrades(accountID, null, function (accountTrades) {
		if (!accountTrades) {
			return cb();
		}
		if (accountTrades.error) {
			return cb(accountTrades);
		}
		return cb(null, accountTrades);
	});
};

ex.listenToBidsAsks = function listenToBidsAsks() {};

ex.login = function login(handle, password, persist, cb) {
	_augur2.default.web.login(handle, password, { persist: persist }, function (account) {
		if (!account) {
			return cb({ code: 0, message: 'failed to login' });
		}
		if (account.error) {
			return cb({ code: account.error, message: account.message });
		}
		return cb(null, _extends({}, account, {
			id: account.address
		}));
	});
};

ex.logout = function logout() {
	_augur2.default.web.logout();
};

ex.register = function register(handle, password, persist, cb, cbExtras) {
	_augur2.default.web.register(handle, password, { persist: persist }, {
		onRegistered: function onRegistered(account) {
			if (!account) {
				return cb({ code: 0, message: 'failed to register' });
			}
			if (account.error) {
				return cb({ code: account.error, message: account.message });
			}
			return cb(null, _extends({}, account, {
				id: account.address
			}));
		},
		onSendEther: function onSendEther(res) {
			if (res.error) {
				return cb({ code: res.error, message: res.message });
			}
			cbExtras(res);
		},
		onSent: function onSent(res) {
			if (res.error) {
				return cb({ code: res.error, message: res.message });
			}
			cbExtras(res);
		},
		onSuccess: function onSuccess(res) {
			if (res.error) {
				return cb({ code: res.error, message: res.message });
			}
			cbExtras(res);
		},
		onFailed: function onFailed(err) {
			cb(err);
		}
	});
};

ex.loadMeanTradePrices = function loadMeanTradePrices(accountID, cb) {
	if (!accountID) {
		cb('AccountID required');
	}
	_augur2.default.getAccountMeanTradePrices(accountID, function (meanTradePrices) {
		if (meanTradePrices && meanTradePrices.error) {
			return cb(meanTradePrices);
		}
		cb(null, meanTradePrices);
	});
};

ex.multiTrade = function multiTrade(transactionID, marketId, marketOrderBook, tradeOrders, outcomePositions, scalarMinMax, onTradeHash, onCommitSent, onCommitSuccess, onCommitFailed, onNextBlock, onTradeSent, onTradeSuccess, onTradeFailed, onBuySellSent, onBuySellSuccess, onBuySellFailed, onShortSellSent, onShortSellSuccess, onShortSellFailed, onBuyCompleteSetsSent, onBuyCompleteSetsSuccess, onBuyCompleteSetsFailed) {
	_augur2.default.multiTrade(transactionID, marketId, marketOrderBook, tradeOrders, outcomePositions, scalarMinMax, onTradeHash, onCommitSent, onCommitSuccess, onCommitFailed, onNextBlock, onTradeSent, onTradeSuccess, onTradeFailed, onBuySellSent, onBuySellSuccess, onBuySellFailed, onShortSellSent, onShortSellSuccess, onShortSellFailed, onBuyCompleteSetsSent, onBuyCompleteSetsSuccess, onBuyCompleteSetsFailed);
};

ex.tradeShares = function tradeShares(branchID, marketID, outcomeID, numShares, limit, cap, cb) {
	_augur2.default.trade({
		branch: branchID,
		market: marketID,
		outcome: outcomeID,
		amount: numShares,
		limit: limit,
		stop: false,
		cap: null,
		expiration: 0,
		callbacks: {
			onMarketHash: function onMarketHash(marketHash) {
				return cb(null, { status: 'sending...', data: marketHash });
			},
			onCommitTradeSent: function onCommitTradeSent(res) {
				return cb(null, { status: 'committing...', data: res });
			},
			onCommitTradeSuccess: function onCommitTradeSuccess(res) {
				return cb(null, { status: 'broadcasting...', data: res });
			},
			onCommitTradeFailed: function onCommitTradeFailed(err) {
				return cb(err);
			},
			onTradeSent: function onTradeSent(res) {
				return cb(null, { status: 'confirming...', data: res });
			},
			onTradeSuccess: function onTradeSuccess(res) {
				return cb(null, { status: _statuses.SUCCESS, data: res });
			},
			onTradeFailed: function onTradeFailed(err) {
				return cb(err);
			},
			onOrderCreated: function onOrderCreated(res) {
				return console.log('onOrderCreated', res);
			}
		}
	});
};

ex.getSimulatedBuy = function getSimulatedBuy(marketID, outcomeID, numShares) {
	return _augur2.default.getSimulatedBuy(marketID, outcomeID, numShares);
};

ex.getSimulatedSell = function getSimulatedSell(marketID, outcomeID, numShares) {
	return _augur2.default.getSimulatedSell(marketID, outcomeID, numShares);
};

ex.loadPriceHistory = function loadPriceHistory(marketID, cb) {
	if (!marketID) {
		cb('ERROR: loadPriceHistory() marketID required');
	}
	_augur2.default.getMarketPriceHistory(marketID, function (priceHistory) {
		if (priceHistory && priceHistory.error) {
			return cb(priceHistory.error);
		}
		cb(null, priceHistory);
	});
};

ex.get_trade_ids = function getTradeIds(marketID, cb) {
	_augur2.default.get_trade_ids(marketID, cb);
};

ex.getOrderBook = function getOrderBook(marketID, scalarMinMax, cb) {
	_augur2.default.getOrderBook(marketID, scalarMinMax, cb);
};

ex.get_trade = function getTrade(orderID, cb) {
	_augur2.default.get_trade(orderID, cb);
};

ex.createMarket = function createMarket(branchId, newMarket, cb) {
	_augur2.default.createSingleEventMarket({
		description: newMarket.description,
		expDate: newMarket.endDate.value.getTime() / 1000,
		minValue: newMarket.minValue,
		maxValue: newMarket.maxValue,
		numOutcomes: newMarket.numOutcomes,
		resolution: newMarket.expirySource,
		takerFee: newMarket.takerFee / 100,
		tags: newMarket.tags,
		makerFee: newMarket.makerFee / 100,
		extraInfo: newMarket.extraInfo,
		onSent: function onSent(r) {
			return cb(null, { status: _statuses.CREATING_MARKET, txHash: r.txHash });
		},
		onSuccess: function onSuccess(r) {
			return cb(null, { status: _statuses.SUCCESS, marketID: r.marketID, tx: r });
		},
		onFailed: function onFailed(r) {
			return cb(r);
		},
		branchId: branchId
	});
};

ex.generateOrderBook = function generateOrderBook(marketData, cb) {
	_augur2.default.generateOrderBook({
		market: marketData.id,
		liquidity: marketData.initialLiquidity,
		initialFairPrices: marketData.initialFairPrices.raw,
		startingQuantity: marketData.startingQuantity,
		bestStartingQuantity: marketData.bestStartingQuantity,
		priceWidth: marketData.priceWidth,
		isSimulation: marketData.isSimulation,
		onSimulate: function onSimulate(r) {
			return cb(null, { status: _statuses.SIMULATED_ORDER_BOOK, payload: r });
		},
		onBuyCompleteSets: function onBuyCompleteSets(r) {
			return cb(null, { status: _statuses.COMPLETE_SET_BOUGHT, payload: r });
		},
		onSetupOutcome: function onSetupOutcome(r) {
			return cb(null, { status: _statuses.ORDER_BOOK_OUTCOME_COMPLETE, payload: r });
		},
		onSetupOrder: function onSetupOrder(r) {
			return cb(null, { status: _statuses.ORDER_BOOK_ORDER_COMPLETE, payload: r });
		},
		onSuccess: function onSuccess(r) {
			return cb(null, { status: _statuses.SUCCESS, payload: r });
		},
		onFailed: function onFailed(err) {
			return cb(err);
		}
	});
};

ex.getReport = function getReport(branchID, reportPeriod, eventID) {
	_augur2.default.getReport(branchID, reportPeriod, eventID, function (report) {
		return console.log('*************report', report);
	});
};

ex.loadPendingReportEventIDs = function loadPendingReportEventIDs(eventIDs, accountID, reportPeriod, branchID, cb) {
	var pendingReportEventIDs = {};

	if (!eventIDs || !eventIDs.length) {
		return cb(null, {});
	}

	// load market-ids related to each event-id one at a time
	(function processEventID() {
		var eventID = eventIDs.pop();
		var randomNumber = _augur2.default.abi.hex(_augur2.default.abi.bignum(accountID).plus(_augur2.default.abi.bignum(eventID)));
		var diceroll = _augur2.default.rpc.sha3(randomNumber, true);

		function finish() {
			// if there are more event ids, re-run this function to get their market ids
			if (eventIDs.length) {
				setTimeout(processEventID, TIMEOUT_MILLIS);
			} else {
				// if no more event ids to process, exit this loop and callback
				cb(null, pendingReportEventIDs);
			}
		}

		if (!diceroll) {
			console.log('WARN: couldn\'t get sha3 for', randomNumber, diceroll);
			return finish();
		}

		_augur2.default.calculateReportingThreshold(branchID, eventID, reportPeriod, function (threshold) {
			if (!threshold) {
				console.log('WARN: couldn\'t get reporting threshold for', eventID);
				return finish();
			}
			if (threshold.error) {
				console.log('ERROR: calculateReportingThreshold', threshold);
				return finish();
			}
			if (_augur2.default.abi.bignum(diceroll).lt(_augur2.default.abi.bignum(threshold))) {
				_augur2.default.getReportHash(branchID, reportPeriod, accountID, eventID, function (reportHash) {
					if (reportHash && reportHash !== '0x0') {
						pendingReportEventIDs[eventID] = { reportHash: reportHash };
					} else {
						pendingReportEventIDs[eventID] = { reportHash: null };
					}
					finish();
				});
			} else {
				finish();
			}
		});
	})();
};

ex.submitReportHash = function submitReportHash(branchID, accountID, event, report, cb) {
	var minValue = _augur2.default.abi.bignum(event.minValue);
	var maxValue = _augur2.default.abi.bignum(event.maxValue);
	var numOutcomes = _augur2.default.abi.bignum(event.numOutcomes);
	var rescaledReportedOutcome = void 0;

	// Re-scale scalar/categorical reports so they fall between 0 and 1
	if (report.isIndeterminate) {
		rescaledReportedOutcome = report.reportedOutcomeID;
	} else {
		if (report.isScalar) {
			rescaledReportedOutcome = _augur2.default.abi.bignum(report.reportedOutcomeID).minus(minValue).dividedBy(maxValue.minus(minValue)).toFixed();
		} else if (report.isCategorical) {
			rescaledReportedOutcome = _augur2.default.abi.bignum(report.reportedOutcomeID).minus(_augur2.default.abi.bignum(1)).dividedBy(numOutcomes.minus(_augur2.default.abi.bignum(1))).toFixed();
		} else {
			rescaledReportedOutcome = report.reportedOutcomeID;
		}
	}

	var reportHash = _augur2.default.makeHash(report.salt, rescaledReportedOutcome, event.id, accountID, report.isIndeterminate, report.isScalar);

	_augur2.default.submitReportHash({
		branch: branchID,
		reportHash: reportHash,
		reportPeriod: report.reportPeriod,
		eventID: event.id,
		eventIndex: event.index,
		onSent: function onSent(res) {
			return cb(null, _extends({}, res, { reportHash: reportHash, status: 'processing...' }));
		},
		onSuccess: function onSuccess(res) {
			return cb(null, _extends({}, res, { reportHash: reportHash, status: _statuses.SUCCESS }));
		},
		onFailed: function onFailed(err) {
			return cb(err);
		}
	});
};

ex.penalizationCatchup = function penalizationCatchup(branchID, cb) {
	_augur2.default.penalizationCatchup({
		branch: branchID,
		onSent: function onSent(res) {
			console.log('penalizationCatchup sent:', res);
		},
		onSuccess: function onSuccess(res) {
			console.log('penalizationCatchup success:', res);
			cb(null, res);
		},
		onFailed: function onFailed(err) {
			console.error('penalizationCatchup failed:', err);
			if (err.error === '0') {
				// already caught up
			}
			cb(err);
		}
	});
};

ex.penalizeWrong = function penalizeWrong(branchID, period, event, cb) {
	_augur2.default.getMarkets(event, function (markets) {
		if (!markets || markets.error) return console.error('getMarkets:', markets);

		/*
  augur.getOutcome(event, outcome => {
  	if (outcome !== '0' && !outcome.error) {
  		console.log('Calling penalizeWrong for:', branchID, period, event);
  		augur.penalizeWrong({
  			branch: branchID,
  			event,
  			onSent: res => {
  				console.log(`penalizeWrong sent for event ${event}`, res);
  			},
  			onSuccess: res => {
  				console.log(`penalizeWrong success for event ${event}`, res);
  				cb(null, res);
  			},
  			onFailed: err => {
  				console.error(`penalizeWrong failed for event ${event}`, err);
  				if (err.error === '-3') {
  					augur.penalizeNotEnoughReports(branchID, (error, res) => {
  						self.penalizeWrong(branchID, period, event, cb);
  					});
  				}
  				cb(err);
  			}
  		});
  	} else {
  		self.closeMarket(branchID, markets[0], (err, res) => {
  			if (err) return cb(err);
  			self.penalizeWrong(branchID, period, event, cb);
  		});
  	}
  });
  */
	});
};

ex.closeMarket = function closeMarket(branchID, marketID, cb) {
	_augur2.default.closeMarket({
		branch: branchID,
		market: marketID,
		onSent: function onSent(res) {
			// console.log('closeMarket sent:', res);
		},
		onSuccess: function onSuccess(res) {
			// console.log('closeMarket success:', res);
			cb(null, res);
		},
		onFailed: function onFailed(err) {
			// console.error('closeMarket error:', err);
			cb(err);
		}
	});
};

ex.collectFees = function collectFees(branchID, cb) {
	_augur2.default.collectFees({
		branch: branchID,
		onSent: function onSent(res) {},
		onSuccess: function onSuccess(res) {
			cb(null, res);
		},
		onFailed: function onFailed(err) {
			cb(err);
		}
	});
};

ex.incrementPeriodAfterReporting = function incrementPeriodAfterReporting(branchID, cb) {
	_augur2.default.incrementPeriodAfterReporting({
		branch: branchID,
		onSent: function onSent(result) {},
		onFailed: function onFailed(err) {
			return cb(err);
		},
		onSuccess: function onSuccess(result) {
			return cb(null, result);
		}
	});
};

ex.getReportPeriod = function getReportPeriod(branchID, cb) {
	_augur2.default.getReportPeriod(branchID, function (res) {
		if (res.error) {
			return cb(res);
		}
		return cb(null, res);
	});
};

ex.submitReport = function submitReport() {
	for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		args[_key] = arguments[_key];
	}

	_augur2.default.submitReport.apply(_augur2.default, args);
};
ex.getEvents = function getEvents() {
	for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
		args[_key2] = arguments[_key2];
	}

	_augur2.default.getEvents.apply(_augur2.default, args);
};
ex.rpc = _augur2.default.rpc;
module.exports = ex;

},{"../modules/transactions/constants/statuses":524,"augur.js":126,"bignumber.js":147}],533:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _redux = require('redux');

var _reduxThunk = require('redux-thunk');

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reducers = require('./reducers');

var _reducers2 = _interopRequireDefault(_reducers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var windowRef = typeof window === 'undefined' ? {} : window;
// console log middleware
var consoleLog = function consoleLog(store) {
	return function (next) {
		return function (action) {
			if (typeof action !== 'function') {
				console.log(action);
			}
			return next(action);
		};
	};
};

// local storage middleware
var localStorageMiddleware = function localStorageMiddleware(store) {
	return function (next) {
		return function (action) {
			next(action);
			var state = store.getState();

			if (!state || !state.loginAccount || !state.loginAccount.id) {
				return;
			}

			if (windowRef.localStorage && windowRef.localStorage.setItem) {
				windowRef.localStorage.setItem(state.loginAccount.id, JSON.stringify({
					favorites: state.favorites,
					transactionsData: state.transactionsData,
					accountTrades: state.accountTrades
				}));
			}
		};
	};
};
var middleWare = void 0;
if ("development" !== 'production') {
	middleWare = (0, _redux.applyMiddleware)(consoleLog, _reduxThunk2.default, localStorageMiddleware);
} else {
	middleWare = (0, _redux.applyMiddleware)(_reduxThunk2.default, localStorageMiddleware);
}
// middleware
exports.default = (0, _redux.createStore)((0, _redux.combineReducers)(_reducers2.default), middleWare);

},{"./reducers":530,"redux":382,"redux-thunk":376}],534:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (number) {
	var sides = [];

	sides = number.toString().split('.');
	sides[0] = sides[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');

	return sides.join('.');
};

},{}],535:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.bytesToHex = bytesToHex;
function bytesToHex(byteArray) {
	return '0x' + byteArray.reduce(function (hexString, byte) {
		return hexString + byte.toString(16);
	}, '');
}

},{}],536:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.cleanKeywords = cleanKeywords;
exports.cleanKeywordsArray = cleanKeywordsArray;
function cleanKeywords(keywords) {
	return (keywords || '').replace(/\s+/g, ' ').trim();
}

function cleanKeywordsArray(keywords) {
	var CleanKeywords = cleanKeywords(keywords).toLowerCase();
	return CleanKeywords ? CleanKeywords.split(' ').sort() : [];
}

},{}],537:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blockToDate = blockToDate;
exports.dateToBlock = dateToBlock;

var _network = require('../modules/app/constants/network');

/**
 * @param {Number} block
 * @param {Number} currentBlock
 * @return {Date}
 */
function blockToDate(block, currentBlock) {
  var seconds = (block - currentBlock) * (_network.MILLIS_PER_BLOCK / 1000);
  var now = new Date();
  now.setSeconds(now.getSeconds() + seconds);
  return now;
}

/**
 * @param {Date} date
 * @param {Number} currentBlock
 * @return {Number}
 */
function dateToBlock(date, currentBlock) {
  var now = new Date();
  var secondsDelta = date.getSeconds() - now.getSeconds();
  var blockDelta = parseInt(secondsDelta / (_network.MILLIS_PER_BLOCK / 1000), 10);
  return currentBlock + blockDelta;
}

},{"../modules/app/constants/network":397}],538:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.formatDate = formatDate;
function formatDate(d) {
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
	var date = d instanceof Date ? d : new Date(0);
	return {
		value: date,
		formatted: months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear(),
		full: d.toISOString()
	};
}

},{}],539:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.formatEther = formatEther;
exports.formatPercent = formatPercent;
exports.formatShares = formatShares;
exports.formatRep = formatRep;
exports.formatNone = formatNone;
exports.formatNumber = formatNumber;

var _addCommasToNumber = require('../utils/add-commas-to-number');

var _addCommasToNumber2 = _interopRequireDefault(_addCommasToNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	Produces a formatted number object used for display and calculations
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

The main function is `formatNumber`, however there are top-level functions that wrap for common cases like `formatEther`, `formatShares`, etc.

A formatted number generally has three parts: the sign (+ or -), the stylized number, and a denomination (Eth, Rep, %, etc.)

The formatted number object that is returned looks something like this:
	{
		value: the parsed number in numerical form, 0 if a bad input was passed in, can be used in calculations

		formattedValue: the value in numerical form, possibly rounded, can be used in calculations
		formatted: the value in string form with possibly additional formatting, like comma separator, used for display

		o.roundedValue: the value in numerical form, with extra rounding, can be used in calculations
		o.rounded: the value in string form, with extra rounding and possibly additional formatting, like comma separator, used for display

		o.minimized: the value in string form, with trailing 0 decimals omitted, for example if the `formatted` value is 1.00, this minimized value would be 1
	}

The reason the number object has multiple states of rounding simultaneously,
is because the ui can use it for multiple purposes. For example, when showing ether,
we generally like to show it with 2 decimals, however when used in totals,
maximum precision is not necessary, and we can opt to show the `rounded` display, which is only 1 decimal.
Similar logic applies for `minimized`, sometimes we don't need to be consistent with the decimals
and just show the prettiest, smallest representation of the value.

The options object that is passed into `formatNumber` that enables all of this looks like:
	{
		decimals: the number of decimals for the precise case, can be 0-infinity
		decimalsRounded: the number of decimals for the prettier case, can be 0-infinity
		denomination: the string denomination of the number (ex. Eth, Rep, %), can be blank
		positiveSign: boolean whether to include a plus sign at the beginning of positive numbers
		zeroStyled: boolean, if true, when the value is 0, it formates it as a dash (-) instead
	}

TIP
Sometimes (not always) it is a good idea to use the formatted values in calculations,
rather than the original input number, so that values match up in the ui. For example, if you are
adding the numbers 1.11 and 1.44, but displaying them as 1.1 and 1.4, it may look awkward
if 1.1 + 1.4 = 2.6. If perfect precision isn't necessary, consider adding them using the formatted values.

*/

function formatEther(num, opts) {
	return formatNumber(num, _extends({
		decimals: 2,
		decimalsRounded: 1,
		denomination: 'eth',
		positiveSign: true,
		zeroStyled: false
	}, opts));
}

function formatPercent(num, opts) {
	return formatNumber(num, _extends({
		decimals: 1,
		decimalsRounded: 0,
		denomination: '%',
		positiveSign: true,
		zeroStyled: false
	}, opts));
}

function formatShares(num, opts) {
	return formatNumber(num, _extends({
		decimals: 2,
		decimalsRounded: 0,
		denomination: 'shares',
		minimized: true,
		zeroStyled: false
	}, opts));
}

function formatRep(num, opts) {
	return formatNumber(num, _extends({
		decimals: 0,
		decimalsRounded: 0,
		denomination: 'rep',
		positiveSign: true,
		zeroStyled: false
	}, opts));
}

function formatNone() {
	return {
		value: 0,
		formattedValue: 0,
		formatted: '-',
		roundedValue: 0,
		rounded: '-',
		minimized: '-',
		denomination: '',
		full: '-'
	};
}

function formatNumber(num) {
	var opts = arguments.length <= 1 || arguments[1] === undefined ? { decimals: 0, decimalsRounded: 0, denomination: '', positiveSign: false, zeroStyled: true, minimized: false } : arguments[1];
	var minimized = opts.minimized;

	var o = {};
	var value = opts.value;
	var decimals = opts.decimals;
	var decimalsRounded = opts.decimalsRounded;
	var denomination = opts.denomination;
	var positiveSign = opts.positiveSign;
	var zeroStyled = opts.zeroStyled;


	decimals = decimals || 0;
	decimalsRounded = decimalsRounded || 0;
	denomination = denomination || '';
	positiveSign = !!positiveSign;
	zeroStyled = zeroStyled !== false;
	value = parseFloat(num) || 0;

	if (!value && zeroStyled) {
		return formatNone();
	}

	o.value = value;
	o.formattedValue = Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals);
	o.formatted = (0, _addCommasToNumber2.default)(o.formattedValue.toFixed(decimals));
	o.roundedValue = Math.round(value * Math.pow(10, decimalsRounded)) / Math.pow(10, decimalsRounded);
	o.rounded = (0, _addCommasToNumber2.default)(o.roundedValue.toFixed(decimalsRounded));
	o.minimized = (0, _addCommasToNumber2.default)(parseFloat(o.formattedValue.toFixed(decimals)).toString());

	if (positiveSign) {
		if (o.formattedValue > 0) {
			o.formatted = '+' + o.formatted;
			o.minimized = '+' + o.minimized;
		}
		if (o.roundedValue > 0) {
			o.rounded = '+' + o.rounded;
		}
	}

	if (minimized) {
		o.formatted = o.minimized;
	}

	o.denomination = denomination;
	o.full = o.formatted + o.denomination;

	return o;
}

},{"../utils/add-commas-to-number":534}],540:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.isMarketDataOpen = isMarketDataOpen;
exports.isMarketDataPreviousReportPeriod = isMarketDataPreviousReportPeriod;
function isMarketDataOpen(marketData, currentBlockNumber) {
	return parseInt(marketData.endDate, 10) > currentBlockNumber;
}

function isMarketDataPreviousReportPeriod(marketData, currentPeriod, periodLength) {
	return parseInt(marketData.endDate, 10) <= (currentPeriod - 2) * periodLength;
}

},{}],541:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.listWordsUnderLength = listWordsUnderLength;
function listWordsUnderLength(str, maxLength) {
	var wordsList = [];
	var currentLength = 0;

	if (!str || !str.length) {
		return wordsList;
	}

	str.toString().split(' ').some(function (word) {
		var cleanWord = word.replace(/[^a-zA-Z0-9\-]/ig, '');

		if (!cleanWord || !cleanWord.length) {
			return false;
		}

		currentLength += cleanWord.length;

		if (currentLength <= maxLength) {
			wordsList.push(cleanWord);
			return false;
		}
		return true;
	});

	return wordsList;
}

},{}],542:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.makeLocation = makeLocation;
exports.parseURL = parseURL;
/**
 * @param {Array} pathArray
 * @param {Object} searchParams
 * @return {{pathArray: Array, searchParams: Object, url: String}}
 */
function makeLocation() {
	var pathArray = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	var searchParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	var search = searchParams && Object.keys(searchParams).map(function (key) {
		return encodeURIComponent(key) + '=' + encodeURIComponent(searchParams[key]);
	}).join('&') || '';
	var pathname = pathArray.join('');
	var url = void 0;

	if (!pathname.length) {
		pathname = '/';
	}

	if (search.length) {
		url = pathname + '?' + search;
	} else {
		url = pathname;
	}

	return {
		pathArray: pathArray,
		searchParams: searchParams,
		url: url
	};
}

function parsePath(pathString) {
	if (!pathString || pathString === '/') {
		return ['/'];
	}
	return pathString.split('/').filter(function (pathItem) {
		return pathItem && pathItem.indexOf('.') <= -1;
	}).map(function (pathItem) {
		return '/' + pathItem;
	});
}

function parseSearch(searchString) {
	var pairSplit = void 0;
	return (searchString || '').replace(/^\?/, '').split('&').reduce(function (p, pair) {
		pairSplit = pair.split('=');
		if (pairSplit.length >= 1) {
			if (pairSplit[0].length) {
				if (pairSplit.length >= 2 && pairSplit[1]) {
					p[decodeURIComponent(pairSplit[0])] = decodeURIComponent(pairSplit[1]);
				} else {
					p[decodeURIComponent(pairSplit[0])] = '';
				}
			}
		}
		return p;
	}, {});
}

/**
 * @param {String} url
 * @return {{pathArray: Array, searchParams: Object, url: String}}
 */
function parseURL(url) {
	var splitURL = url.split('?');
	var parsed = {};

	if (splitURL.length >= 1) {
		parsed.pathArray = parsePath(splitURL[0]);
	}
	if (splitURL.length >= 2) {
		parsed.searchParams = parseSearch(splitURL[1]);
	}

	return makeLocation(parsed.pathArray, parsed.searchParams);
}

},{}]},{},[391])
//# sourceMappingURL=build.js.map
