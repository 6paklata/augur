{
  "name": "augur-ui",
  "version": "2.0.0",
  "description": "Augur UI",
  "author": "Augur Project",
  "license": "AAL",
  "engines": {
    "node": ">= 4.2.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/AugurProject/augur"
  },
  "scripts": {
    "watch": "clear; echo '* CLEAN * HTML * ASSETS * CSS * AUGURJS * WATCHIFY *'; NODE_ENV=development npm run -s watch:all",
    "start": "node server.js",
    "build": "clear; echo '* * * *  BUILD  * * * *'; NODE_ENV=production npm run -s build:all",
    "test": "NODE_ENV=test mocha",
    "test:watch": "npm test -- --watch",
    "lint": "echo begin linting... && eslint src/*.js src/services/* src/utils/* src/modules/* && echo linting complete.",
    "coverage": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "_____": "",
    "build:all": "npm run -s clean && (npm run -s build:css & npm run -s build:assets & npm run -s build:augurjs & npm run -s build:js) && npm run -s build:html && npm run -s build:finish",
    "build:assets": "cp -R ./src/assets/. ./build/$npm_package_version && cp -R $npm_package_config_assets_folder ./build/$npm_package_version && echo ---------ASSETS---------`date +%r`",
    "build:augurjs": "cp -R ./node_modules/augur.js/dist/augur.min.js ./build/$npm_package_version/augur.min.js && echo ---------AUGURJS--------`date +%r`",
    "build:augurjs:old": "browserify $npm_package_config_augurjs_entry_folder/index.js --standalone augurjs | derequire | npm run -s partial:uglify > ./build/$npm_package_version/augur.min.js -R && echo ---------AUGURJS--------`date +%r`",
    "build:css": "for file in $npm_package_config_less_entry_files; do lessc $file | cleancss --s0 | npm run -s partial:replaceAssets > ./build/$npm_package_version/$(basename $file | sed -e 's~less~css~') ; done && echo ---------CSS------------`date +%r`",
    "build:js": "npm run -s build:js:browserify | npm run -s partial:replaceAssets | npm run -s partial:uglify -- --mangle > ./build/$npm_package_version/build.js && echo ---------JS-------------`date +%r`",
    "build:js:browserify": "browserify $npm_package_config_js_entry_file --extension=.js --extension=.jsx -x 'augur.js' -t [ babelify --presets [ es2015 stage-0 ] ] -t [envify purge]",
    "build:html": "cat ./src/index.html | npm run -s partial:replaceAssets | npm run -s build:html:inline_sources > $(npm run -s partial:index_filename) && echo ---------HTML-----------`date +%r`",
    "build:html:inline_sources": "inline-source --compress false --root ./build -",
    "build:finish": "echo ---------FINISHED-------`date +%r`",
    "build-azure": "BUILD_AZURE=true BUILD_AZURE_WSURL='{{ $BUILD_AZURE_WSURL }}' BUILD_AZURE_LOCALNODE='{{ $BUILD_AZURE_LOCALNODE }}' BUILD_AZURE_HOSTEDNODE='{{ $BUILD_AZURE_HOSTEDNODE }}' BUILD_AZURE_CONTRACTS='{{ $BUILD_AZURE_CONTRACTS }}' npm run build",
    "______": "",
    "watch:all": "npm run -s clean && (npm run -s watch:css & npm run -s watch:assets & npm run -s watch:augurjs & npm run -s watch:js & npm run -s watch:html)",
    "watch:assets": "onchange './src/assets/**' -i -- npm run -s build:assets",
    "watch:augurjs": "onchange $npm_package_config_augurjs_entry_folder/** -i -- npm run -s build:augurjs",
    "watch:css": "onchange './src/**/*.less' -i -- npm run -s build:css",
    "watch:js": "watchify $npm_package_config_js_entry_file --extension=.js --extension=.jsx -x 'augur.js' -t [ babelify --presets [ es2015 stage-0 ] ] -t [envify purge] --debug -o 'exorcist ./build/$npm_package_version/build.js.map | npm run -s partial:replaceAssets > ./build/$npm_package_version/build.js && echo ---------WATCHIFY--------`date +%r`'",
    "watch:html": "onchange './src/index.html' -i -- npm run -s build:html",
    "_______": "",
    "lint:specific": "eslint",
    "lint:test": "eslint test/*.js test/**/*",
    "________": "",
    "clean": "rimraf ./build/* && mkdir -p ./build/$npm_package_version && mkdir -p ./build/$npm_package_version && touch $(npm run -s partial:index_filename) && echo ---------CLEAN----------`date +%r`",
    "_________": "",
    "partial:replaceAssets": "sed 's~${build_folder}~'$npm_package_version'~g'",
    "partial:uglify": "[ $NODE_ENV != production ] && cat || uglifyjs --compress drop_console,unused=true --screw-ie8",
    "partial:uglify:do": "uglifyjs --compress drop_console,unused=true --screw-ie8",
    "partial:index_filename": "[ $NODE_ENV != production ] && echo './build/index.html' || echo \"./build/index-$npm_package_version.html\""
  },
  "dependencies": {
    "augur-abi": "^0.3.3",
    "augur-ui-react-components": "file:../augur-ui-react-components",
    "augur.js": "^1.1.9",
    "bignumber.js": "^2.3.0",
    "memoizerific": "^1.8.3",
    "redux": "^3.5.2",
    "redux-thunk": "^2.1.0",
    "secure-random": "^1.1.1"
  },
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "babel-plugin-transform-remove-console": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.9.0",
    "babelify": "^7.3.0",
    "browserify": "^13.0.1",
    "browserify-shim": "^3.8.12",
    "chai": "^3.5.0",
    "chalk": "^1.1.3",
    "clean-css": "^3.4.13",
    "coveralls": "^2.11.9",
    "derequire": "^2.0.3",
    "envify": "^3.4.0",
    "eslint": "^2.11.0",
    "eslint-config-airbnb": "^9.0.1",
    "eslint-plugin-import": "^1.8.1",
    "eslint-plugin-jsx-a11y": "^1.2.2",
    "eslint-plugin-react": "^5.1.1",
    "exorcist": "^0.4.0",
    "firebase-tools": "2.x.x",
    "inline-source-cli": "^1.1.1",
    "istanbul": "^1.0.0-alpha.2",
    "less": "^2.7.1",
    "mocha": "^2.5.3",
    "mocha-lcov-reporter": "^1.2.0",
    "node-static": "^0.7.7",
    "npm-check-updates": "^2.6.5",
    "onchange": "^2.4.0",
    "posix-getopt": "^1.2.0",
    "proxyquire": "^1.7.9",
    "redux-mock-store": "^1.0.4",
    "rimraf": "^2.5.2",
    "sinon": "^1.17.4",
    "uglify-js": "^2.6.2",
    "watchify": "^3.7.0"
  },
  "browserify": {
    "transform": [
      "browserify-shim"
    ]
  },
  "browserify-shim": {
    "ga": "global:ga",
    "augur.js": "global:augur"
  },
  "config": {
    "js_entry_file": "./src/index.js",
    "less_entry_files": "./src/less/*.less",
    "assets_folder": "./node_modules/augur-ui-react-components/build/assets/**",
    "augurjs_entry_folder": "./node_modules/augur.js/src"
  }
}
