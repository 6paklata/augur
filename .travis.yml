dist: trusty
sudo: required
language: node_js
services:
- docker
git:
  depth: 5
notifications:
  email: false
branches:
  only:
  - master
  - stable
  - petong/travis-ci
  - "/^v\\d+\\.\\d+\\.\\d+(-\\d+)?$/"
node_js:
- '8'
jobs:
  include:
  - stage: test travis-ci
    if: branch = petong/travis-ci
    script:
    - npm run lint
    - istanbul cover -x "**/seeds/**" -x "**/migrations/**" --include-all-sources --root
      ./build ./node_modules/mocha/bin/_mocha test --report lcovonly && cat ./coverage/lcov.info
      | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage
    deploy:
      provider: script
      script: echo "I love travis yml"
      skip_cleanup: true
      on:
        all_branches: true
  - stage: deploy to dev
    if: branch = master
    script:
    - npm run lint
    - istanbul cover -x "**/seeds/**" -x "**/migrations/**" --include-all-sources --root
      ./build ./node_modules/mocha/bin/_mocha test --report lcovonly && cat ./coverage/lcov.info
      | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage
    deploy:
      provider: script
      script: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"; npm run docker:release -- dev
      skip_cleanup: true
      on:
        all_branches: true
  - stage: deploy to stable
    if: branch = stable
    script:
    - npm run lint
    - istanbul cover -x "**/seeds/**" -x "**/migrations/**" --include-all-sources --root
      ./build ./node_modules/mocha/bin/_mocha test --report lcovonly && cat ./coverage/lcov.info
      | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage
    deploy:
      provider: script
      script: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"; npm run docker:release -- stable
      skip_cleanup: true
      on:
        all_branches: true
env:
  global:
    - DOCKER_USERNAME=augurintegration
    - AWS_REGION=us-east-1
    - secure: "DYHyVuwYd8QmfB4JmqFVCJWUFkdk6rhZADspVW6kG0CwxmF3mjuIUFfbuuHLXolMRDOKbavFKdGykLiuXVCGrj5xsK6CzcHfoTF6nbTJhHQYXqa287pXU48u4Hrf+XgBYUo1BBmhOywMZ+8Zb9qpuUudYJ1caw8daxmOQ7/qS7FKM00YUi/Y4MSQbDxYB1zd6PPBgfUDSXFckx1rDKSRjl35M6FBRmJKVktorEblzDCyZOi7BfiJroc3iCxUHflr/0lPu8JB083gGDPLx4Ai8msmZliKtBoZn7qzhBkqBDgp/VQaquT+2iVj+byMav180MTJZ6pSsLWn9hvyexwM36CG4uV1OHc0oG5bkQU3//If0bV+rJIzfqGsXtYwzBYUr82m2fQufn3FvqJc1pEQz/mPsuqipX8rzrv2JqedSZfv3oa3kvisd3DPg3qjOPjXBc7nrSguTQq3kJMTgSTZhcDfrbayjMQsqlr7Kfm0gz7njKOEIkzx9BVxqU1Sy4pCCsImJVsDia6Abuy9matSiZQF08VQvwHNx0C37v/nAioj/Xj3C6cXIh1YZdUvZpn0zZ6D1EHEri909BPnBkXVx56xC4J0VpNK6XrjQmZDfu0p6fOPf66en4+5vw2vEYpPQueLeMGevDtHjkcc2aCZpwOpfxObU38FQhUhLs6JvfE="
    - secure: "sZH6OhaxuwYXEnfGoPf5ciJ0ZzY7W2qEIrWSuBZpONRkgJWG7YDE5jXNpzdPLAKTT90AjDFhyHks/l4IT1fnX69srB89EYaTDZ0hsLmqnv7poAKjvB0NZpxD2tjV08G2IjmdhQkFDdO5J3rhuLvkBziHt9/FwGa0EqrmOhbaHSx8FJs1hJ1Uwh2aBSV6hFXox/JeU3+w8A58rs5DII8sqDPeGND5H+1b0JR8uTxyXj36FDebZawY060luslwAz5UsotUOxgWTfr1pr+aMBCsS5UJeR3Iy14dCrlZ7U9hYo0gjH9y3G63DR0wAIypgxLBcvJfOoEwHnGxH50Sl6GmJxPX9SuzsWTI7WSwuFeNQ+t9VRcLmnkx399OQgUzbm9BzBKLqPHvJYlPMJcsWq0M35fv3+WIuH3QCrZv0TDWxeVi8PNT7Hs7t8NT+SEObGoH1ed504pQtQwW5XSYk1HQvFA1co5+QO80fvgIiIUGNh/Cqn9f8ZjRWbU1Xp2gkxoVJbojFz37smgcO59HQPetfJgEAZhd0pbOcQxBJ3OqK0ncmDPz6wqkdaPuTn6cbPoI/xjzxgJswWiDN6BYGBLyamTwJp8Nbxo75DmgsaosSMnNRwq2iJlrToSVvWmi+M7nCtPCkLlbgCghdX4XDu52SpX9SDCNtD+/4gkb5RsPH9M="
    - secure: "UWQ7muvGrAHFliPKjwRG3IVPTxStc2psFTftJ93xpC1/blCf1h2QV5AcTjnwMQWiXwoXl+GA5Ut/yU92iFqbu/ZYULgMXTY+69U0Bwfdzs7LUjPB1//gaJOEs1N4mSOv2ECKpX9GCKN4Sj6kZ3oqdi6NANFzuDbvU0LIpyP+aAZ7/HIxwdDWstOnBjc+f/yl1cooayDyiHvE3dWO6/RG8riwD5McTxl+8IV83ukVAI/6b9075dr9D2aXBEcXbb6YzOiDw+EkZWeC/6jrQK93/e0cuw/itq8rlJb0QOj1OXsbJHpqVb7ZZF9N3f9ddAU0vG47iVO5Ok99MOgsM/T2JfQm0/LUMNsi1iYGlDbY1C5EZsqPLfVv7GIo9QiI8Z5kT+1vkzP13r/ogmZIkNaeBYApRA61lZAt/sdqEJdfP2m5CJ6+T+fINUsE6numBFkHawDec/TvERrvbDYO4OYMuzN8D4zCiCovffyKJlW28RDa4mf1j2eAT8uNCG+4faIcapWzW4iZDFq/LFTeTD0m2yyZiiFl5oKKF9KGidAmH2PuTyu0mHKTGqzVQeAJgsUo/EmOntKwIUoX8A2ZkZRZdZni5qdWbIYTQ8ZFMKpKO2E0/6jmoY1ukFwYNLLz5dL7MX1mgphzXRKaIhnmt9TDdXTma+/G2G0Wj84U1jKnlxU="
